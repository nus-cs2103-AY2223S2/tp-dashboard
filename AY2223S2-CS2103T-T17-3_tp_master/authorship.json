[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T17-3/tp/actions)","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/nus-cs2103-AY2223S2/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"* The E-Lister is targeted at salesman who want to improve their sales output.\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"  * Tag and filter selected users by a specified criteria","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"  * Export a csv list of contact details","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"* The project can be used for managing contact details.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"* For the detailed documentation of this project, see the **E-Lister Product Website (coming soon!)**.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"winsonheng":7,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"run {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"jefrai":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"You can reach us at the email `T17-3[at]comp.nus.edu.sg`","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"### Jeffrey Lee","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"\u003cimg src\u003d\"images/jefrai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"[[github](https://github.com/jefrai)]","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"[[portfolio](team/jefrai.md)]","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"* Role: Team Lead, Project Coordinator","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"### Hoang Huu Chinh","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"\u003cimg src\u003d\"images/hhchinh2002.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"[[github](http://github.com/hhchinh2002)]","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"[[portfolio](team/hhchinh2002.md)]","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"* Role: Advisor, Designer","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"* Responsibilities: UI/UX","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"### Winson Heng","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"\u003cimg src\u003d\"images/winsonheng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"[[github](http://github.com/winsonheng)] ","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"[[portfolio](team/winsonheng.md)]","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"* Responsibilities: Data \u0026 Pipelining","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"### Leon Poh","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"\u003cimg src\u003d\"images/leonpoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"[[github](http://github.com/leonpoh)]","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"[[portfolio](team/leonpoh.md)]","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"* Responsibilities: Develop new features + testings","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"0x787af25e"},"content":"### Gong Chen Jun","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"0x787af25e"},"content":"\u003cimg src\u003d\"images/0x787af25e.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"0x787af25e"},"content":"[[github](http://github.com/0x787af25e)]","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"0x787af25e"},"content":"[[portfolio](team/0x787af25e.md)]","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"0x787af25e"},"content":"* Role: Developer, Documenter","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"0x787af25e"},"content":"* Responsibilities: UI, User and Developer Guides","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"winsonheng":19,"0x787af25e":6,"leonpoh":3,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"0x787af25e"},"content":"## **User profile and value proposition**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"0x787af25e"},"content":"The product is intended for insurance agents, advertisers or anyone in adjacent roles to manage their customers\u0027 information efficiently.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"0x787af25e"},"content":"Users will enjoy the advantages of a command-line interface, as managing contacts can be done more quickly by typing, while a graphical user interface allows the user to visualise their contacts intuitively.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"0x787af25e"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"0x787af25e"},"content":"## **Non-functional requirements**","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"0x787af25e"},"content":"This application should be usable on mainstream OSes as long as Java 11 is installed.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"0x787af25e"},"content":"The application should be sufficiently easy to use, that the average owner of a desktop computer should be able to use it efficiently.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"0x787af25e"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T17-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-T17-3/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T17-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-T17-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-T17-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"winsonheng"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T17-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"winsonheng"},"content":"1. When `Logic` is called upon to execute a command, it uses the `EListerParser` class to parse the user command.","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"winsonheng"},"content":"* When called upon to parse a user command, the `EListerParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `EListerParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"winsonheng"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-T17-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"winsonheng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `ELister`, which `Person` references. This allows `ELister` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"winsonheng"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T17-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"winsonheng"},"content":"* inherits from both `EListerStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"winsonheng"},"content":"Classes used by multiple components are in the `seedu.elister.commons` package.","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"jefrai"},"content":"### Undo/Redo","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"jefrai"},"content":"The `undo` command supports:","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"jefrai"},"content":"* Reverting the most recent `Command` that affected the `Model` state (by changing a `Person` within it","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"jefrai"},"content":"or its list of displayed `Persons`).","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"jefrai"},"content":"* Reverting a specified number of such `Commands` at once.","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"jefrai"},"content":"The `redo` command supports:","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"jefrai"},"content":"* Reinstating any undone `Command`, or a specified number of such `Commands`.","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"jefrai"},"content":"#### Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"jefrai"},"content":"Both commands operate using the `StateHistory` class, which is a container","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"jefrai"},"content":"that records - and can ultimately reconstruct - previous `Model` states.","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"jefrai"},"content":"Externally, `StateHistory` listens to the `CommandResult` of each executing command.","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"jefrai"},"content":"It also requires commands to declare two new fields in `CommandResult`:","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"jefrai"},"content":"* `undoable`  —  Whether the `Command` should be reverted upon an `Undo`.","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"jefrai"},"content":"This is to be `true` if the command modifies `Model` by modifying a person or its list of displayed people.","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"jefrai"},"content":"* `deterministic`  —  Whether the modification to `Model` that was just made by `Command`","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"jefrai"},"content":"was the sole possible outcome of its execution.","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"jefrai"},"content":"By default, `StateHistory` points to the latest version of `Model` and offers a copy of its state.","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"jefrai"},"content":"This pointer can be moved backward or forward to retrieve copies of past states, or copies of undone future states:","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"jefrai"},"content":"* `StateHistory#undo(int n)` — Moves the pointer _n_ commands backward.","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"jefrai"},"content":"* `StateHistory#redo(int n)` — Moves the pointer _n_ commands forward.","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"jefrai"},"content":"* `StateHistory#presentModel()` — Retrieves a copy of the pointer\u0027s `Model` state.","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"jefrai"},"content":"The `Model` objects produced by `StateHistory#presentModel()` are state-detached copies of the originals -","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"jefrai"},"content":"fields related to containing or displaying `Persons` are deep copies, whereas fields involving UI preferences","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"jefrai"},"content":"reuse the original objects (thus including any mutations done later).","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"jefrai"},"content":"`StateHistory` listens for `CommandResults` like so:","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"jefrai"},"content":"![StateHistorySequenceDiagram](images/StateHistorySequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"jefrai"},"content":"In turn, the sequence diagram of `UndoCommand` is:","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"jefrai"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"jefrai"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"jefrai"},"content":"Given the [proposed] inclusion of `import` and `export` commands, implementing a specific","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"jefrai"},"content":"reversal for each individual command was deemed impractical. Instead, the approach chosen was","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"jefrai"},"content":"to store previous `Model` states in their entirety.","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"jefrai"},"content":"However, to avoid excessive memory usage, only select seed copies of `Model` are actually stored.","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"jefrai"},"content":"Instead, previous `Commands` are also kept, and most `Model` states","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"jefrai"},"content":"are recreated by applying the relevant commands to seed states.","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"jefrai"},"content":"Seed states are captured","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"jefrai"},"content":"* upon program startup","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"jefrai"},"content":"* after a non-`deterministic` command","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"jefrai"},"content":"* every 10 commands, to avoid rerunning too many commands","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"jefrai"},"content":"These details are handled transparently by `StateHistory`.","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"hhchinh2002"},"content":"### Displaying history of executed commands feature.","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"hhchinh2002"},"content":"This is a new nice-to-have feature, it helps the users to manage their workflow with E-Lister more efficiently by allowing them to see all the commands they keyed in that were successfully executed.","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"hhchinh2002"},"content":"#### Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"hhchinh2002"},"content":"The feature implementation involves in almost all high-level components which are `UI`, `Model`, `Storage` and `Commons`:","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"hhchinh2002"},"content":"* `HistoryDisplay` class in the `UI` encapsulates the visual display of the saved data onto the GUI.","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"hhchinh2002"},"content":"* `History` class in the `Model` represents the list of executed commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"hhchinh2002"},"content":"* `TxtHistoryStorage` and `HistoryStorage` from the `Storage` represents the `.txt` file and the action of reading/writing from/to that file.","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"hhchinh2002"},"content":"1. Initially, when E-Lister is run, a new `TxtHistoryStorage` will be initialized along with other parts of high-level components.","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"hhchinh2002"},"content":"2. Then, the history will be read from the file after the `AddressBook` is read.","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"hhchinh2002"},"content":"3. It will then be passed to `Logic` where the users\u0027 command in `String` type is going to be execute and write the commands into the file if the commands are succesfully executed.","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"hhchinh2002"},"content":"4. After the execution, the new `String` from `.txt` file will be read and display the updated history list to the users.","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"hhchinh2002"},"content":"Below is the diagram showing the process [*To-be-add*]","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"hhchinh2002"},"content":"### Design Consideration:","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"hhchinh2002"},"content":"1. Instead of saving the history of commands in the same `.json` file, I personally believe that it would be better in this case to have a seperate `.txt` file to store the commands, it would be much more convenient and less methods invoking among high-level components because:","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"hhchinh2002"},"content":"    * The expected behaviour is that it displays exactly the commands that user inputted before, so if we use `.txt` file, we only need to check the command is succesfully executed before write the whole `String` command into the `txt` file. ","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"hhchinh2002"},"content":"    * On the other hand, using `.json` file would require a lot of data conversion which is likely to be more error-prone and the `HistoryDisplay` from the `Ui` must trace through `Logic`, `Model`, `Storage` to read the `.json` file and vice versa since the data conversion happens in `Storage` or `Model`. Below is the code snippet in `LogicManager` where the history is read.","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"hhchinh2002"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"hhchinh2002"},"content":"   historyStringOptional \u003d storage.readHistoryString();","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"hhchinh2002"},"content":"   if (!historyStringOptional.isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"hhchinh2002"},"content":"       logger.info(\"History file not found. Will be starting with the default file\");","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"hhchinh2002"},"content":"   }","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"hhchinh2002"},"content":"   initialHistory \u003d new History(historyStringOptional.orElse(\"\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"hhchinh2002"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"hhchinh2002"},"content":"2. Inspired by the `Optional\u003cReadOnlyAdressBook` from the read and write process to the `.json` file, I also implement the read/write process of history such that the content will be encapsulated with an `Optional\u003cString\u003e` instead of `String`. This is useful since `Optional\u003cT\u003e` helps to avoid `NullPointException` and also lead to cleaner codes.","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"hhchinh2002"},"content":"```markdown","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"hhchinh2002"},"content":"     * Returns history string.","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"hhchinh2002"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"hhchinh2002"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"hhchinh2002"},"content":"    Optional\u003cString\u003e readHistoryString() throws IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"hhchinh2002"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"winsonheng"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedELister`. It extends `ELister` with an undo/redo history, stored internally as an `eListerStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"winsonheng"},"content":"* `VersionedELister#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"winsonheng"},"content":"* `VersionedELister#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"winsonheng"},"content":"* `VersionedEListerk#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"winsonheng"},"content":"These operations are exposed in the `Model` interface as `Model#commitELister()`, `Model#undoELister()` and `Model#redoELister()` respectively.","lastModifiedDate":"2023-03-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"winsonheng"},"content":"Step 1. The user launches the application for the first time. The `VersionedELister` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-03-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"winsonheng"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitELister()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `eListerStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-03-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"winsonheng"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitELister()`, causing another modified address book state to be saved into the `eListerStateList`.","lastModifiedDate":"2023-03-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"winsonheng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitELister()`, so the address book state will not be saved into the `eListerStateList`.","lastModifiedDate":"2023-03-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"winsonheng"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoELister()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-03-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"winsonheng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial ELister state, then there are no previous ELister states to restore. The `undo` command uses `Model#canUndoELister()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-03-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"winsonheng"},"content":"The `redo` command does the opposite — it calls `Model#redoELister()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-03-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"winsonheng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `eListerStateList.size() - 1`, pointing to the latest address book state, then there are no undone ELister states to restore. The `redo` command uses `Model#canRedoELister()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-03-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"winsonheng"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitELister()`, `Model#undoELister()` or `Model#redoELister()`. Thus, the `eListerStateList` remains unchanged.","lastModifiedDate":"2023-03-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"winsonheng"},"content":"Step 6. The user executes `clear`, which calls `Model#commitELister()`. Since the `currentStatePointer` is not pointing at the end of the `eListerStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"0x787af25e"},"content":"### Creating shortcuts using the command `shortcut`","lastModifiedDate":"2023-03-24"},{"lineNumber":358,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":359,"author":{"gitId":"0x787af25e"},"content":"`shortcut` can be used to create user-defined shortcuts in order to input commands more quickly. This section will describe the implementation of this command, if the user enters `shortcut edit e` as an example.","lastModifiedDate":"2023-03-24"},{"lineNumber":360,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":361,"author":{"gitId":"0x787af25e"},"content":"Step 1. The user enters the command `shortcut edit e` and presses the Enter key. `AddressBookParser` parses the user\u0027s command and returns a `ShortcutCommandParser`.","lastModifiedDate":"2023-03-24"},{"lineNumber":362,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":363,"author":{"gitId":"0x787af25e"},"content":"Step 2. `ShortcutCommandParser` parses the user\u0027s command, picking out the command that is to be shortened, and the shortcut to be added. A `ShortcutCommand` object is then added.","lastModifiedDate":"2023-03-24"},{"lineNumber":364,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":365,"author":{"gitId":"0x787af25e"},"content":"Step 3. The `ShortcutCommand` object is executed by `MainWindow#executeCommand`, returning a `CommandResult`. This signifies the completion of execution.","lastModifiedDate":"2023-03-24"},{"lineNumber":366,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":367,"author":{"gitId":"0x787af25e"},"content":"The following activity diagram summarizes what happens when a user executes this command:","lastModifiedDate":"2023-03-24"},{"lineNumber":368,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"winsonheng"},"content":"### Importing and Exporting CSV Files","lastModifiedDate":"2023-03-24"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"winsonheng"},"content":"This is a useful feature which allows users to export all contact details in a CSV File of their choice, or import an existing dataset.","lastModifiedDate":"2023-03-24"},{"lineNumber":373,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":374,"author":{"gitId":"winsonheng"},"content":"#### Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":375,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":376,"author":{"gitId":"winsonheng"},"content":"The implementation for `import` and `export` are found in `ImportCommand` and `ExportCommand` respectively. Once the `execute(Model model)` method is invoked, a `JFileChooser` is displayed to the user. This file chooser has a `FileNameExtensionFilter` applied to it, where the file description is \"CSV Files\" and the allowed file extensions is an array containing only the String \"csv\".","lastModifiedDate":"2023-03-24"},{"lineNumber":377,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":378,"author":{"gitId":"winsonheng"},"content":"Only for the `import` command, the system checks that the selected file is a valid CSV file. If it is invalid, a prompt is displayed to inform the user and the `JFileChooser` reappears to allow the user to select a new file. This check is not required for the `export` command since users are allowed to write to a new file that does not yet exist.","lastModifiedDate":"2023-03-24"},{"lineNumber":379,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":380,"author":{"gitId":"winsonheng"},"content":"Beyond the UI level, the commands operate using the `CsvAddressBookStorage` class. This class interacts between the `CsvUtil` and `CsvSerializableAddressBook` classes in order to convert between E-Lister data and CSV-friendly format. This interaction is illustrated in the following sequence diagrams.","lastModifiedDate":"2023-03-24"},{"lineNumber":381,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":382,"author":{"gitId":"winsonheng"},"content":"##### Import","lastModifiedDate":"2023-03-24"},{"lineNumber":383,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":384,"author":{"gitId":"winsonheng"},"content":"##### Export","lastModifiedDate":"2023-03-24"},{"lineNumber":385,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":386,"author":{"gitId":"winsonheng"},"content":"### Design Considerations","lastModifiedDate":"2023-03-24"},{"lineNumber":387,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":388,"author":{"gitId":"winsonheng"},"content":"Given the complexity of the CSV file format, it was deemed impractical to support every single valid expression or notation which CSV allows. Instead, only two expressions were considered: the `,` and `\"` symbols. Since CSV is comma-delimited, the following special considerations were made to handle these characters when converting from E-Lister to CSV-friendly format.","lastModifiedDate":"2023-03-24"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"winsonheng"},"content":"* If any number of `,` appears in a field, the field must be wrapped with quotation marks `\"\"`.","lastModifiedDate":"2023-03-24"},{"lineNumber":391,"author":{"gitId":"winsonheng"},"content":"* If a field is wrapped in quotation marks `\"\"` (such as due to the previous rule), any existing `\"` within the field is converted to `\"\"`.","lastModifiedDate":"2023-03-24"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"winsonheng"},"content":"The `CsvUtil` class provides a method to handle these rules:","lastModifiedDate":"2023-03-24"},{"lineNumber":394,"author":{"gitId":"leonpoh"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":395,"author":{"gitId":"winsonheng"},"content":"```java","lastModifiedDate":"2023-03-24"},{"lineNumber":396,"author":{"gitId":"winsonheng"},"content":"public static String toCsvField(String str) {","lastModifiedDate":"2023-03-24"},{"lineNumber":397,"author":{"gitId":"winsonheng"},"content":"   if (str.contains(\",\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":398,"author":{"gitId":"winsonheng"},"content":"      str \u003d str.replaceAll(\"\\\"\", \"\\\"\\\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":399,"author":{"gitId":"winsonheng"},"content":"      str \u003d \"\\\"\" + str + \"\\\"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":400,"author":{"gitId":"winsonheng"},"content":"   }","lastModifiedDate":"2023-03-24"},{"lineNumber":401,"author":{"gitId":"winsonheng"},"content":"   return str;","lastModifiedDate":"2023-03-24"},{"lineNumber":402,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":403,"author":{"gitId":"winsonheng"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":404,"author":{"gitId":"leonpoh"},"content":"### \\[Proposed\\] Tag feature","lastModifiedDate":"2023-03-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"leonpoh"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":407,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":408,"author":{"gitId":"leonpoh"},"content":"The proposed Tag mechanism is facilitated by `ELister`. It extends `ELister` with an Tag , stored internally as an `Tag` and  Additionally, it implements the following operations:","lastModifiedDate":"2023-03-23"},{"lineNumber":409,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":410,"author":{"gitId":"leonpoh"},"content":"* `ELister#Tag()` — Adds a Tag to the person based on the index in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":411,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":412,"author":{"gitId":"leonpoh"},"content":"These operations are exposed in the `Model` interface as `Model#addTag()`","lastModifiedDate":"2023-03-23"},{"lineNumber":413,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":414,"author":{"gitId":"leonpoh"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":415,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":416,"author":{"gitId":"leonpoh"},"content":"Step 1. The user launches the application for the first time. The `VersionedELister` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-03-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":418,"author":{"gitId":"leonpoh"},"content":"Step 2. The user executes `Tag 5 good` command to Tag the 5th person in the address book with a new Tag `good`. The `Tag` command calls `Model#addTag()`, causing the modified state of the address book after the `Tag 5 good` command executes to be saved in the `eListerStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-03-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"winsonheng"},"content":"**Target user profile**: Insurance salesmen who want to obtain a list of contacts who meet a certain criteria.","lastModifiedDate":"2023-03-09"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"winsonheng"},"content":"**Value proposition**: tag, filter, and obtain contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-03-09"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"winsonheng"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions in case I forget how to use the App              |","lastModifiedDate":"2023-03-09"},{"lineNumber":447,"author":{"gitId":"winsonheng"},"content":"| `* * *`  | user                                       | add a potential customer       |                                                                        |","lastModifiedDate":"2023-03-09"},{"lineNumber":448,"author":{"gitId":"winsonheng"},"content":"| `* * *`  | user                                       | delete a potential customer    | remove entries that I no longer need                                   |","lastModifiedDate":"2023-03-09"},{"lineNumber":449,"author":{"gitId":"winsonheng"},"content":"| `* * *`  | user                                       | find a potential customer by name | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-03-09"},{"lineNumber":450,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"winsonheng"},"content":"| `*`      | salsman with many potential customers in the E-Lister| sort potential customers by name | locate a potential customer easily                         |","lastModifiedDate":"2023-03-09"},{"lineNumber":452,"author":{"gitId":"winsonheng"},"content":"| `* * *`  | Insurance salesman                         | see usage instructions         | Add someone to a category to manage them better                        |","lastModifiedDate":"2023-03-09"},{"lineNumber":453,"author":{"gitId":"winsonheng"},"content":"| `* * *`  | Insurance salesman                         | add the user\u0027s income          | tell whether he\u0027s someone actually worth selling insurance to          |","lastModifiedDate":"2023-03-09"},{"lineNumber":454,"author":{"gitId":"winsonheng"},"content":"| `* * *`  | Insurance salesman                         | delete all tags                | reset all the data                                                     |","lastModifiedDate":"2023-03-09"},{"lineNumber":455,"author":{"gitId":"winsonheng"},"content":"| `* *`    | Insurance salesman                           | add the user\u0027s income          | tell whether he\u0027s someone actually worth selling insurance to            |","lastModifiedDate":"2023-03-09"},{"lineNumber":456,"author":{"gitId":"winsonheng"},"content":"| `* *`    | Insurance salesman                           | filter by traits (e.g. income level) | selectively target certain insurance products to people who are more likely to buy it |","lastModifiedDate":"2023-03-09"},{"lineNumber":457,"author":{"gitId":"winsonheng"},"content":"| `*`      | Insurance salesman                           | undo what I did                  | easily correct unecessary mistakes                                     |","lastModifiedDate":"2023-03-09"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"winsonheng"},"content":"(For all use cases below, the **System** is the `ELister` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-08"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"winsonheng"},"content":"2.  ELister shows a list of persons","lastModifiedDate":"2023-03-08"},{"lineNumber":471,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"winsonheng"},"content":"4.  ELister deletes the person","lastModifiedDate":"2023-03-08"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"winsonheng"},"content":"    * 3a1. ELister shows an error message.","lastModifiedDate":"2023-03-08"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"winsonheng"},"content":"**Use Case UC1: Tag a person**","lastModifiedDate":"2023-03-08"},{"lineNumber":489,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":490,"author":{"gitId":"winsonheng"},"content":"**MSS**","lastModifiedDate":"2023-03-08"},{"lineNumber":491,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":492,"author":{"gitId":"winsonheng"},"content":"1.  User adds a tag with a specified label","lastModifiedDate":"2023-03-08"},{"lineNumber":493,"author":{"gitId":"winsonheng"},"content":"2.  ELister adds the tag to the person.","lastModifiedDate":"2023-03-08"},{"lineNumber":494,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":495,"author":{"gitId":"winsonheng"},"content":"    Use case ends.","lastModifiedDate":"2023-03-08"},{"lineNumber":496,"author":{"gitId":"winsonheng"},"content":" ","lastModifiedDate":"2023-03-08"},{"lineNumber":497,"author":{"gitId":"winsonheng"},"content":"**Extensions**","lastModifiedDate":"2023-03-08"},{"lineNumber":498,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":499,"author":{"gitId":"winsonheng"},"content":"* 1a. The tag already exists for the given person.","lastModifiedDate":"2023-03-08"},{"lineNumber":500,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":501,"author":{"gitId":"winsonheng"},"content":"    * 1a1. ELister shows an info message.","lastModifiedDate":"2023-03-08"},{"lineNumber":502,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":503,"author":{"gitId":"winsonheng"},"content":"      Use case ends.","lastModifiedDate":"2023-03-08"},{"lineNumber":504,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":505,"author":{"gitId":"winsonheng"},"content":"* 1b. The given index is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":506,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":507,"author":{"gitId":"winsonheng"},"content":"    * 1b1. ELister shows an error message.","lastModifiedDate":"2023-03-08"},{"lineNumber":508,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":509,"author":{"gitId":"winsonheng"},"content":"      Use case ends.","lastModifiedDate":"2023-03-08"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":511,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"winsonheng"},"content":"4.  Should not lag much when undoing a previous move.","lastModifiedDate":"2023-03-08"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"winsonheng"},"content":"* **Command-line interface**: any changes to the state of the ELister is done via a text command","lastModifiedDate":"2023-03-08"},{"lineNumber":525,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"winsonheng":97,"0x787af25e":29,"hhchinh2002":41,"leonpoh":14,"-":336,"jefrai":62}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"0x787af25e"},"content":"E-Lister is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, E-Lister can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"0x787af25e"},"content":"1. Download the latest `eLister.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"0x787af25e"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for E-Lister.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"0x787af25e"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar eLister.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"0x787af25e"},"content":"Shows a help message detailing the various commands available in E-Lister. ","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"0x787af25e"},"content":"A link can also bring the user to the online user guide for more detailed help.","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"0x787af25e"},"content":"* Partial words will also be matched. e.g. `Han` will match `Hans`","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"0x787af25e"},"content":"  e.g. `Grub Ya` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"0x787af25e"},"content":"* `find mart On` returns `Martin Henz`, `Ong Wai Kit`","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"0x787af25e"},"content":"### Adding a remark : `remark`","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"0x787af25e"},"content":"Adds a remark to any given person stored in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"0x787af25e"},"content":"Format: `remark INDEX [r/REMARK]`","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"0x787af25e"},"content":"* Adds `REMARK` to the person at the specified `INDEX`.","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"0x787af25e"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"0x787af25e"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"0x787af25e"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"0x787af25e"},"content":"* `list` followed by `remark 2 He is a cheese lover` adds the remark “He is a cheese lover” to the 2nd person.","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"0x787af25e"},"content":"### Adding a tag : `tag`","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"0x787af25e"},"content":"Adds a tag to any given person stored in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"0x787af25e"},"content":"Format: `tag INDEX [t/TAG]`","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"0x787af25e"},"content":"* Adds `TAG` to the person at the specified `INDEX`.","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"0x787af25e"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"0x787af25e"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"0x787af25e"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"0x787af25e"},"content":"* `list` followed by `add_tag 2 banker` adds the tag “banker” to the 2nd person.","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"0x787af25e"},"content":"### Deleting a tag : `delete_tag`","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"0x787af25e"},"content":"Deletes a tag on a person.","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"0x787af25e"},"content":"Format: `delete_tag INDEX [t/TAG]`","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"0x787af25e"},"content":"* Deletes `TAG` on the person at the specified `INDEX`.","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"0x787af25e"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"0x787af25e"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"hhchinh2002"},"content":"* The tag must be existed.","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"0x787af25e"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"hhchinh2002"},"content":"* `list` followed by `delete_tag 3 teacher` deletes the tag “teacher” from the 2nd person.","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"0x787af25e"},"content":"### Filter by tag : `filter`","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"0x787af25e"},"content":"Search for all persons with a corresponding tag.","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"0x787af25e"},"content":"Format: `filter [t/TAG]`","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"0x787af25e"},"content":"* Displays the data of persons with the given `tag` name.","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"0x787af25e"},"content":"Examples:","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"0x787af25e"},"content":"* `filter banker` will list all persons with the tag “banker”.","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"0x787af25e"},"content":"E-Lister data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":217,"author":{"gitId":"0x787af25e"},"content":"E-Lister data is saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"0x787af25e"},"content":"If your changes to the data file makes its format invalid, E-Lister will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"0x787af25e"},"content":"### Import data from CSV : `[coming in v1.3]`","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"0x787af25e"},"content":"Opens a file chooser to select a CSV file containing relevant data and merges with the existing data.","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":227,"author":{"gitId":"0x787af25e"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"0x787af25e"},"content":"### Export data to CSV `export`","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"0x787af25e"},"content":"Opens a file chooser to select a directory where you can save the data to a CSV file.","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":233,"author":{"gitId":"0x787af25e"},"content":"Format: `export`","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"0x787af25e"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous E-Lister home folder.","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"0x787af25e"},"content":"**Export** | `export`","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"0x787af25e"},"content":"**Remark** | `remark INDEX [r/remark]`","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"0x787af25e"},"content":"**Tag** | `tag INDEX [t/TAG]`","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"hhchinh2002"},"content":"**Delete tag** | `delete_tag INDEX` [t/TAG]`","lastModifiedDate":"2023-03-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"0x787af25e":77,"hhchinh2002":3,"-":182}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"winsonheng"},"content":"    content: \"E-Lister\";","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"winsonheng":1,"-":294}},{"path":"docs/diagrams/StateHistorySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"Participant \"cmd:AddCommand\" as cmd LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"Participant \"model:Model\" as model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"Participant \":StateHistory\" as history MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"user -[USER_COLOR]\u003e ui : \"add p\"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"activate ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"add p\")","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"logic -[LOGIC_COLOR]\u003e cmd : execute(p)","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"activate cmd LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"cmd -[LOGIC_COLOR]\u003e model : addPerson(p)","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"model -[MODEL_COLOR]-\u003e cmd","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"deactivate model","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"cmd -[MODEL_COLOR]-\u003e logic : result","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"deactivate cmd","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"logic -[LOGIC_COLOR]\u003e history : addCommand(cmd, result, model)","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"activate history MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"history --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"deactivate history","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"deactivate logic","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"deactivate ui","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"jefrai":40}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"participant \"hist:StateHistory\" as StateHistory MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"participant \"prev:Model\" as PreviousModel MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"[-\u003e LogicManager : execute(undo 5)","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo 5)","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"LogicManager -\u003e UndoCommand : setHistory(hist)","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"LogicManager -\u003e UndoCommand : execute(m)","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"UndoCommand -\u003e StateHistory : undo(5)","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"UndoCommand -\u003e StateHistory : presentModel()","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"activate StateHistory","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"create PreviousModel","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"StateHistory -\u003e PreviousModel","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"activate PreviousModel","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"PreviousModel --\u003e StateHistory","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"deactivate PreviousModel","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"StateHistory --\u003e UndoCommand : prev","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"deactivate StateHistory","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"UndoCommand -\u003e PreviousModel : getAddressBook()","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"activate PreviousModel","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"PreviousModel --\u003e UndoCommand : ab","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"deactivate PreviousModel","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"UndoCommand -\u003e Model : setAddressBook(ab)","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"destroy PreviousModel","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":41,"jefrai":31}},{"path":"docs/team/0x787af25e.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"0x787af25e"},"content":"# Gong Chen Jun\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"0x787af25e"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"0x787af25e"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"0x787af25e"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"0x787af25e"},"content":"-   **New Feature**: to be added soon","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"0x787af25e"},"content":"-   **New Feature**: to be added soon","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"0x787af25e"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"0x787af25e"},"content":"-   **Code contributed**:  to be added soon","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"0x787af25e"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"0x787af25e"},"content":"-   **Project management**: to be added soon","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"0x787af25e"},"content":"-   **Enhancements to existing features**:","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"0x787af25e"},"content":"    -   Expanded the help command","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"0x787af25e"},"content":"  ","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"0x787af25e"},"content":"-   **Documentation**: to be added soon","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"0x787af25e":16}},{"path":"docs/team/hhchinh2002.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"# Hoang Huu Chinh\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"### Project: E-Lister","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"E-Lister is desktop software designed to help insurance sellers to manage their customers\u0027 information. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"-   **New Feature**: to be added soon","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"-   **New Feature**: to be added soon","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"    ","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"-   **Code contributed**:  to be added soon","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"    ","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"-   **Project management**: to be added soon","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"-   **Enhancements to existing features**:","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    -   Expanded the help command","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"  ","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"-   **Documentation**: to be added soon","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"hhchinh2002":16}},{"path":"docs/team/jefrai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"# Jeff\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"* **New Feature**: Added the ability to `filter` for people by a combination of fields.","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"  * What it does: TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"  * Highlights: TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"* **New Feature**: TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"* **Project management**:","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"  * TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"  * TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"  * User Guide:","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    * TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    * TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"* **Community**:","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"  * TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"* **Tools**:","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"  * TBD","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jefrai":40}},{"path":"docs/team/leonpoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"# Leon Poh\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"-   **New Feature**: Tag people with a tag!","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"    ","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"-   **Code contributed**:  to be added soon","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"    ","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"-   **Project management**: to be added soon","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"-   **Enhancements to existing features**:","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    -   Implemented the tag command","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"  ","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"-   **Documentation**: to be added soon","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"leonpoh":15}},{"path":"docs/team/winsonheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"# Winson Heng\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"* **New Feature**: Added the `export` command.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"  * What it does: Exports the data into a csv file at a location selected by the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"  * Justification: This feature provides a convenient way for salesmen to mass extract contact information such as email and phone number.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"  * Highlights: This feature required the implementation of new helper classes to convert Person objects into csv-friendly text outputs.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dwinsonheng\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"  * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"  * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"  * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"  * To be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"winsonheng":32}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":" * Error: JavaFX runtime components are missing, and are required to run this","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":" * application","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"leonpoh":2,"-":24}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.history.History;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.storage.HistoryStorage;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.storage.TxtHistoryStorage;","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 0, true);","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"        History history \u003d new History();","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"        HistoryStorage historyStorage \u003d new TxtHistoryStorage(history.getHistoryStoragePath());","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"        historyStorage.readHistoryString();","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, historyStorage);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"        ui \u003d new UiManager(logic, model);","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"        Optional\u003cString\u003e historyStringOptional;","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"        History initialHistory;","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"hhchinh2002"},"content":"            historyStringOptional \u003d storage.readHistoryString();","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"hhchinh2002"},"content":"            if (!historyStringOptional.isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"hhchinh2002"},"content":"                logger.info(\"History file not found. Will be starting with the default file\");","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"hhchinh2002"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"            initialHistory \u003d new History(historyStringOptional.orElse(\"\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"hhchinh2002"},"content":"            initialHistory \u003d new History();","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"hhchinh2002"},"content":"            initialHistory \u003d new History();","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"hhchinh2002"},"content":"        return new ModelManager(initialData, userPrefs, initialHistory);","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hhchinh2002":22,"-":179}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_NONEXISTENT_TAG \u003d \"That person does not have the provided tag!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":13,"jefrai":1}},{"path":"src/main/java/seedu/address/commons/util/CsvUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.io.StringReader;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":" * Converts a Java object instance to CSV and vice versa.","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"public class CsvUtil {","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CsvUtil.class);","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"     * Returns the csv data from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid csv file.","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    public static Optional\u003cList\u003cList\u003cString\u003e\u003e\u003e readCsvFile(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"            logger.info(\"Csv file \" + filePath + \" not found\");","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        String csvData;","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"            csvData \u003d FileUtil.readFromFile(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"            logger.warning(\"Error reading from csvFile file \" + filePath + \": \" + e);","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        return Optional.of(tokenizeCsv(csvData));","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"     * Saves a csv String representation to the specified file.","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"     * @param csvFile cannot be null","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"     * @param toWrite cannot be null","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"    public static void saveCsvFile(Path csvFile, String toWrite) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(csvFile);","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(toWrite);","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"        FileUtil.writeToFile(csvFile, toWrite);","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"     * Converts a String into a csv-friendly String.","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"     * @param str String to be converted.","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"     * @return The csv-friendly String.","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"    public static String toCsvField(String str) {","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"        if (str.contains(\",\")) {","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"            str \u003d str.replaceAll(\"\\\"\", \"\\\"\\\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"            str \u003d \"\\\"\" + str + \"\\\"\";","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"        return str;","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"     * Tokenizes a csv String.","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"     * Each line will be tokenized into its own list.","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"     * @param str Line to be tokenized.","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"     * @return The list of list of tokens.","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"    public static List\u003cList\u003cString\u003e\u003e tokenizeCsv(String str) {","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"        List\u003cList\u003cString\u003e\u003e listOfTokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new StringReader(str))) {","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"            // Ignore header line","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"                // Append a comma at the end so that the line is easier to tokenize","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"                line +\u003d \",\";","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"                List\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"                int startIdx \u003d 0;","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"                int endIdx \u003d 0;","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"                int trailingQuoteCount \u003d 0;","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"                boolean isStartWithQuote \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"                boolean isBreakpoint \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"                for (int i \u003d 0; i \u003c line.length(); ++i) {","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"                    char c \u003d line.charAt(i);","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"                    if (isBreakpoint) {","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"winsonheng"},"content":"                        isBreakpoint \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"winsonheng"},"content":"                        startIdx \u003d i;","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"winsonheng"},"content":"                        if (c \u003d\u003d \u0027\"\u0027) {","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"winsonheng"},"content":"                            // Token starts with \u0027\"\u0027 so the actual text starts on next character","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"winsonheng"},"content":"                            isStartWithQuote \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"winsonheng"},"content":"                            ++startIdx;","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"winsonheng"},"content":"                        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"winsonheng"},"content":"                            isStartWithQuote \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"winsonheng"},"content":"                        }","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"winsonheng"},"content":"                        continue;","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"winsonheng"},"content":"                    }","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"winsonheng"},"content":"                    if (c \u003d\u003d \u0027,\u0027) {","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"winsonheng"},"content":"                        if (!isStartWithQuote) {","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"winsonheng"},"content":"                            // If it is not a special token that starts with \u0027\"\u0027, then comma must mean end of token","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"winsonheng"},"content":"                            endIdx \u003d i;","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"winsonheng"},"content":"                            tokens.add(line.substring(startIdx, endIdx));","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"winsonheng"},"content":"                            isBreakpoint \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"winsonheng"},"content":"                        } else if (trailingQuoteCount % 2 \u003d\u003d 1) {","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"winsonheng"},"content":"                            // Otherwise, odd number of trailing quotation marks implies it is end of token","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"winsonheng"},"content":"                            endIdx \u003d i - 1;","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"winsonheng"},"content":"                            String token \u003d line.substring(startIdx, endIdx).replaceAll(\"\\\"\\\"\", \"\\\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"winsonheng"},"content":"                            tokens.add(token);","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"winsonheng"},"content":"                            isBreakpoint \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"winsonheng"},"content":"                        }","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"winsonheng"},"content":"                        trailingQuoteCount \u003d 0;","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"winsonheng"},"content":"                    } else if (c \u003d\u003d \u0027\"\u0027) {","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"winsonheng"},"content":"                        ++trailingQuoteCount;","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"winsonheng"},"content":"                    } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"winsonheng"},"content":"                        trailingQuoteCount \u003d 0;","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"winsonheng"},"content":"                    }","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"winsonheng"},"content":"                }","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"winsonheng"},"content":"                listOfTokens.add(tokens);","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"winsonheng"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"winsonheng"},"content":"        return listOfTokens;","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":147}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JFileChooser;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import javax.swing.filechooser.FileFilter;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import javax.swing.filechooser.FileNameExtensionFilter;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"     * Returns the file from a JFileChooser that includes the extension from the file filter.","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"     * @param fileChooser The JFileChoose used.","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"     * @return The file with the given extension.","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"    public static File getSelectedFileWithExtension(JFileChooser fileChooser) {","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"        File file \u003d fileChooser.getSelectedFile();","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"        if (file \u003d\u003d null) {","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"            return null;","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"        FileFilter fileFilter \u003d fileChooser.getFileFilter();","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"        if (fileFilter instanceof FileNameExtensionFilter) {","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"            String[] extensions \u003d ((FileNameExtensionFilter) fileFilter).getExtensions();","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"            String fileName \u003d file.getName().toLowerCase();","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"            for (String ext : extensions) {","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"                if (fileName.endsWith(\u0027.\u0027 + ext.toLowerCase())) {","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"winsonheng"},"content":"                    return file;","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"winsonheng"},"content":"                }","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"winsonheng"},"content":"            file \u003d new File(file.toString() + \u0027.\u0027 + extensions[0]);","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"winsonheng"},"content":"        return file;","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"winsonheng":29,"-":83}},{"path":"src/main/java/seedu/address/commons/util/TxtUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":" * Encapsulates the reading and writing executed user input commands to/from .txt file","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"public class TxtUtil {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TxtUtil.class);","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     * Returns an {@code Optional\u003cString\u003e} after reading the .txt file from the given {@code Path} filePath.","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     * @param filePath The path to .txt file.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"     * @return An {@code Optional\u003cString\u003e} Object reading from the .txt file.","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    public static Optional\u003cString\u003e readTxtFile(Path filePath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"            logger.info(\"Txt file \" + filePath + \" not found\");","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        String historyString \u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"            historyString \u003d FileUtil.readFromFile(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"            logger.warning(\"Error reading from jsonFile \" + filePath + \": \" + e);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        return Optional.of(historyString);","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"     * Saves the argument string to the file identified with the given {@code filePath}.","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"     * @param string The string to replace content in .txt file.","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"     * @param filePath The path to .txt file.","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"     * @throws IOException If the writing process have errors.","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"    public static void saveTxtFile(String string, Path filePath) throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        requireNonNull(string);","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        FileUtil.writeToFile(filePath, string);","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"hhchinh2002":58}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.StateHistory;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.history.History;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    private final StateHistory history;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        history \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"        command.setHistory(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"        history.addCommand(command, model, commandResult);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"            String previousHistoryString \u003d model.getHistory().getHistoryString();","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"            String historyStringAfterExecution \u003d previousHistoryString + commandText + \"\\n\";","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"            model.setHistory(new History(historyStringAfterExecution));","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"            storage.saveHistoryString(historyStringAfterExecution);","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hhchinh2002":6,"-":81,"jefrai":5}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"0x787af25e"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"add\", \"a\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS + \": Adds a person to the address book. \"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"            + PREFIX_INCOME + \"INCOME \"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"            + PREFIX_INCOME + \"108000 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                        \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"0x787af25e":2,"-":63,"jefrai":7}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"0x787af25e"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"clear\", \"c\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(MESSAGE_SUCCESS, true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"0x787af25e":2,"-":20,"jefrai":2}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.StateHistory;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"     * Sets the StateHistory for this command to refer to.","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * @param history StateHistory to use","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public void setHistory(StateHistory history) {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        // Do nothing","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"jefrai":10}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    /** Command is undoable and can be saved to undo \u0026 redo history. */","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    private final boolean undoable;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     * Command only ever produces one resultant Model state, given the initial Model state.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"     * (If false, a snapshot of Model must be taken afterwards to safely redo this Command.)","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    private final boolean deterministic;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    public CommandResult(String feedbackToUser, boolean undoable, boolean deterministic,","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"                         boolean showHelp, boolean exit) {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        this.undoable \u003d undoable;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        this.deterministic \u003d deterministic;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code undoable},","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"     * and {@code deterministic}, with other fields set to their default value.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"    public CommandResult(String feedbackToUser, boolean undoable, boolean deterministic) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        this(feedbackToUser, undoable, deterministic, false, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"    public boolean isUndoable() {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"        return undoable;","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"    public boolean isDeterministic() {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        return deterministic;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"        return feedbackToUser + \"; showHelp: \" + showHelp + \"; exit: \" + exit;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 undoable \u003d\u003d otherCommandResult.undoable","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 deterministic \u003d\u003d otherCommandResult.deterministic","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"        return Objects.hash(feedbackToUser, undoable, deterministic, showHelp, exit);","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":65,"jefrai":33}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"delete\", \"d\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS + \" 1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete), true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":49,"jefrai":4}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":" * The command from user specifying a tag need to delete from storage.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"delete_tag\", \"dt\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"            + \": Delete tag from the person identified by the index used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"            + \"Parameters: Index (must be positive number), Tag Name\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS + \" 1 teacher\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Tag deleted: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"Person does not exist.\";","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    private final Tag tagToDelete;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a DeleteTagCommand to delete the specified tag from the person.","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"     * @param index The index of the person to delete the tag from.","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"     * @param tag The tag to delete.","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    public DeleteTagCommand(Index index, Tag tag) {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"        this.tagToDelete \u003d tag;","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"        Person deleteFromPerson \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"        //check if the tag with the given name exist","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        if (!deleteFromPerson.getTags().contains(tagToDelete)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_TAG);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"        model.deleteTag(deleteFromPerson, tagToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, deleteFromPerson), true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"                || (other instanceof DeleteTagCommand // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTagCommand) other).targetIndex)","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"                    \u0026\u0026 tagToDelete.equals(((DeleteTagCommand) other).tagToDelete));","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"hhchinh2002":62,"jefrai":7}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"edit\", \"ed\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS + \": Edits the details of the person identified \"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS + \" 1 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson), true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"leonpoh"},"content":"        Income updatedIncome \u003d editPersonDescriptor.getIncome().orElse(personToEdit.getIncome());","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"leonpoh"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedIncome, updatedTags);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"leonpoh"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"leonpoh"},"content":"     * replace the","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"leonpoh"},"content":"        private Income income;","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"leonpoh"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"leonpoh"},"content":"            setIncome(toCopy.income);","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"leonpoh"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, income, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"leonpoh"},"content":"        public void setIncome(Income income) {","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"leonpoh"},"content":"            this.income \u003d income;","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"leonpoh"},"content":"        public Optional\u003cIncome\u003e getIncome() {","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"leonpoh"},"content":"            return Optional.ofNullable(income);","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"leonpoh"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"leonpoh"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"leonpoh"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"leonpoh"},"content":"                    \u0026\u0026 getIncome().equals(e.getIncome());","lastModifiedDate":"2023-03-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"leonpoh":22,"-":216,"jefrai":4}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"0x787af25e"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"exit\", \"ex\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, false, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"0x787af25e":2,"-":17,"jefrai":2}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.io.File;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"0x787af25e"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JFileChooser;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JOptionPane;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import javax.swing.filechooser.FileNameExtensionFilter;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"import seedu.address.storage.CsvAddressBookStorage;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":" * Exports to a csv file at a location specified by the user.","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"export\", \"exp\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS + \": Exports data into a csv file at \"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"            + \"a location of your choice.\";","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    public static final String FILE_DESCRIPTION \u003d \"CSV Files\";","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    public static final String[] FILE_EXTENSIONS \u003d new String[]{\"csv\"};","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"        JFrame parentComponent \u003d new JFrame();","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        JFileChooser fileChooser \u003d new JFileChooser();","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"        FileNameExtensionFilter filter \u003d new FileNameExtensionFilter(FILE_DESCRIPTION, FILE_EXTENSIONS);","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        fileChooser.setFileFilter(filter);","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"        int returnVal \u003d fileChooser.showSaveDialog(parentComponent);","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"        if (returnVal !\u003d JFileChooser.APPROVE_OPTION) {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"            return new CommandResult(\"FileChooser closed\", false, false);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        File fileToSave \u003d FileUtil.getSelectedFileWithExtension(fileChooser);","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"            AddressBookStorage addressBookStorage \u003d new CsvAddressBookStorage(fileToSave.toPath());","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"            addressBookStorage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"            JOptionPane.showMessageDialog(null, \"Exported to \" + fileToSave);","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"            JOptionPane.showMessageDialog(null, e);","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(\"Exported to file\", false, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"            return true;","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"        if (!(other instanceof ExportCommand)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"            return false;","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"        ExportCommand e \u003d (ExportCommand) other;","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"        return true;","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":62,"0x787af25e":1,"jefrai":3}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"0x787af25e"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.person.FieldsMatchRegexPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":" * Finds and lists all persons in the address book whose field entries each match at least one of the provided regexes.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"filter\", \"fil\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS + \": Filters all persons whose every field matches \"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"            + \"at least one respective regex filter, and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"            + \"Parameters: [\" + PREFIX_NAME + \"NAME] [\" + PREFIX_NAME + \"MORE_NAMES] [\" + PREFIX_PHONE + \"PHONE]...\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"            + PREFIX_NAME + \"Al \"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"            + PREFIX_ADDRESS + \"[0-9] \"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"            + PREFIX_TAG + \"colleagues\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    private final FieldsMatchRegexPredicate predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"     * Creates a FilterCommand to filter the model for persons satisfying a supplied predicate.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"     * @param predicate The predicate","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    public FilterCommand(FieldsMatchRegexPredicate predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"                true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"0x787af25e":2,"jefrai":55}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"0x787af25e"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"0x787af25e"},"content":"    public static final List\u003cString\u003e COMMAND_WORD \u003d List.of(new String[]{\"find\", \"f\"});","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"                true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"0x787af25e":3,"-":40,"jefrai":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"0x787af25e"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"help\", \"h\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, false, false, true, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"0x787af25e":2,"-":17,"jefrai":4}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.io.File;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JFileChooser;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JFrame;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import javax.swing.JOptionPane;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import javax.swing.filechooser.FileNameExtensionFilter;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"import seedu.address.storage.CsvAddressBookStorage;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":" * Exports to a csv file at a location specified by the user.","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"import\", \"imp\"});","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS + \": Imports customer data from an existing dataset.\";","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    public static final String FILE_DESCRIPTION \u003d \"CSV Files\";","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    public static final String[] FILE_EXTENSIONS \u003d new String[]{\"csv\"};","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"        JFrame parentComponent \u003d new JFrame();","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"        JFileChooser fileChooser \u003d new JFileChooser();","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"        FileNameExtensionFilter filter \u003d new FileNameExtensionFilter(FILE_DESCRIPTION, FILE_EXTENSIONS);","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"        fileChooser.setFileFilter(filter);","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"        boolean isValidFile \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        while (!isValidFile) {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"            int returnVal \u003d fileChooser.showOpenDialog(parentComponent);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"            if (returnVal !\u003d JFileChooser.APPROVE_OPTION) {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"                return new CommandResult(\"FileChooser closed\", false, false);","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"            File fileToImport \u003d FileUtil.getSelectedFileWithExtension(fileChooser);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"            if (!fileToImport.exists()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"                JOptionPane.showMessageDialog(null, \"The file you have chosen does not exist:  \"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"                        + fileToImport);","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"                isValidFile \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"                continue;","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"            isValidFile \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"            try {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"                AddressBookStorage addressBookStorage \u003d new CsvAddressBookStorage(fileToImport.toPath());","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"                Optional\u003cReadOnlyAddressBook\u003e newAddressBook \u003d addressBookStorage.readAddressBook();","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"                if (newAddressBook.isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"                    String errorMsg \u003d \"Error while importing from: \" + fileToImport;","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"                    JOptionPane.showMessageDialog(null, errorMsg);","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"                    return new CommandResult(errorMsg, false, false);","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"                }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"                model.setAddressBook(newAddressBook.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"                JOptionPane.showMessageDialog(null, \"You have imported from:  \" + fileToImport);","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"                JOptionPane.showMessageDialog(null, e);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"        return new CommandResult(\"Imported data from file\", false, false);","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"        if (!(other instanceof ImportCommand)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"        ImportCommand e \u003d (ImportCommand) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"        return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"winsonheng":87}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"0x787af25e"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"list\", \"l\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(MESSAGE_SUCCESS, true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"0x787af25e":4,"-":22,"jefrai":2}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.StateHistory;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" * Redoes a number of the recently undone {@code Command}s.","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"redo\", \"r\", \"heal\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS + \": Redoes the last undone command,\"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"            + \"or a number of the most recently undone commands.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"            + \"Parameters: [NUMBER_OF_COMMANDS]...\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS + \" 5\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redone %1$d / %2$d commands\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    private final int numCommands;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    private StateHistory history \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"     * Creates an RedoCommand to redo a given number of undone Commands.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"     * @param numCommands Number of commands to redo","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    public RedoCommand(int numCommands) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        this.numCommands \u003d numCommands;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    public void setHistory(StateHistory history) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        this.history \u003d history;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        requireNonNull(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        int redoneCommands \u003d history.redo(numCommands);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        Model redoneModel \u003d history.presentModel();","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        model.setAddressBook(redoneModel.getAddressBook());","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        model.updateFilteredPersonList(redoneModel.getPredicate());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"                String.format(MESSAGE_SUCCESS, redoneCommands, numCommands), false, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"                || (other instanceof RedoCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 numCommands \u003d\u003d ((RedoCommand) other).numCommands); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":59}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":" * Changes the remark of an existing person in the e-lister.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"tag\", \"t\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"            + \": Tags the person identified by the index used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"            + \"Parameters: Index (must be positive number) \\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS + \" 1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Tag added: %1$s\";","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"Person does not exist.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"    private final Tag tagToAdd;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"     * Creates a TagCommand to add a specified tag to the person at a supplied index.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"     * @param index The index of the person to add the tag to","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"     * @param tag The tag to add","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"    public TagCommand(Index index, Tag tag) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"        this.tagToAdd \u003d tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"        this.targetIndex \u003d index;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size() || targetIndex.getZeroBased() \u003c 0) {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"        Person personToTag \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"        model.addTag(personToTag, tagToAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToTag), true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"                || (other instanceof TagCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 targetIndex.equals(((TagCommand) other).targetIndex)","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 tagToAdd.equals(((TagCommand) other).tagToAdd));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"winsonheng":1,"leonpoh":51,"jefrai":12}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.StateHistory;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":" * Undoes a number of the most recent prior {@code Command}s.","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    public static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(new String[]{\"undo\", \"u\"});","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORDS + \": Undoes the previous command, or a number of most \"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"            + \"recent commands. Ignores Undo, Redo, and Export commands; affects all other valid commands.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"            + \"Parameters: [NUMBER_OF_COMMANDS]...\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"            + \"Example: \" + COMMAND_WORDS + \" 5\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undone %1$d / %2$d commands\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    private final int numCommands;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    private StateHistory history \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"     * Creates an UndoCommand to undo a given number of previous Commands.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"     * @param numCommands Number of commands to undo","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    public UndoCommand(int numCommands) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        this.numCommands \u003d numCommands;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"    public void setHistory(StateHistory history) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        this.history \u003d history;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        requireNonNull(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        int undoneCommands \u003d history.undo(numCommands);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        Model undoneModel \u003d history.presentModel();","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        model.setAddressBook(undoneModel.getAddressBook());","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        model.updateFilteredPersonList(undoneModel.getPredicate());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"                String.format(MESSAGE_SUCCESS, undoneCommands, numCommands), false, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"                || (other instanceof UndoCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 numCommands \u003d\u003d ((UndoCommand) other).numCommands); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":59}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"     * and returns an","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"     * AddCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_INCOME, PREFIX_TAG);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"                PREFIX_INCOME, PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"        Income income \u003d ParserUtil.parseIncome(argMultimap.getValue(PREFIX_INCOME).get());","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"        Person person \u003d new Person(name, phone, email, address, income, tagList);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"     * in the given","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"leonpoh":15,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"0x787af25e"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"0x787af25e"},"content":"        // if the user\u0027s command fits a keyword for a command, create a parser","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        if (AddCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        } else if (EditCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        } else if (DeleteCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"        } else if (DeleteTagCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"0x787af25e"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"        } else if (ClearCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        } else if (FilterCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"0x787af25e"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        } else if (UndoCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"            return new UndoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        } else if (RedoCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"            return new RedoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"0x787af25e"},"content":"        } else if (FindCommand.COMMAND_WORD.contains(commandWord)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        } else if (ListCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        } else if (ExitCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        } else if (HelpCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        } else if (TagCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"0x787af25e"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        } else if (ExportCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"            return new ExportCommand();","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"        } else if (ImportCommand.COMMAND_WORDS.contains(commandWord)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"            return new ImportCommand();","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"0x787af25e"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"winsonheng":5,"0x787af25e":7,"leonpoh":1,"-":57,"jefrai":18}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":" * commands","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    public static final Prefix PREFIX_INCOME \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"leonpoh":3,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    private static final int INPUT_INDEX \u003d 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    private static final int TAG_INDEX \u003d 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a DeleteTagCommand to parse the argument from user input","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"     * and delete the corresponding tag from the person.","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     * @param args The input from user.","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     * @return DeleteTagCommand with the Person and Tag objects correspond to input.","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"     * @throws ParseException If the command is in invalid format.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"            String[] nameKeywords \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"            Index index \u003d ParserUtil.parseIndex(nameKeywords[INPUT_INDEX]);","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"            Tag tag \u003d ParserUtil.parseTag(nameKeywords[TAG_INDEX]);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"            return new DeleteTagCommand(index, tag);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"hhchinh2002":44}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"                ArgumentTokenizer","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"                    .tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_INCOME, PREFIX_TAG);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"        if (argMultimap.getValue(PREFIX_INCOME).isPresent()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"            editPersonDescriptor.setIncome(ParserUtil.parseIncome(argMultimap.getValue(PREFIX_INCOME).get()));","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"leonpoh":6,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.person.FieldsMatchRegexPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_INVALID_REGEX \u003d \"Invalid regex: %1$s\\n(becomes: %2$s)\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     * Converts each regex in \u003ccode\u003eregexes\u003c/code\u003e from matching a full string to matching a substring.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"     * @param regexes Regexes to convert","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"     * @return Resulting substring-match regexes","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"     * @throws ParseException if any resulting regex is not a valid regular expression","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    private List\u003cString\u003e formSubstring(List\u003cString\u003e regexes) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        List\u003cString\u003e newRegexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        for (String regex : regexes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"                Pattern.compile(\".*\" + regex + \".*\");","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"                newRegexes.add(\".*\" + regex + \".*\");","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            } catch (PatternSyntaxException ex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_REGEX, regex, \".*\" + regex + \".*\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        return newRegexes;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"     * @param args The arguments to the FilterCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"     * @return The parsed FilterCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"     * @throws ParseException if {@code args} does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"        List\u003cString\u003e nameList \u003d formSubstring(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"        List\u003cString\u003e phoneList \u003d formSubstring(argMultimap.getAllValues(PREFIX_PHONE));","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        List\u003cString\u003e emailList \u003d formSubstring(argMultimap.getAllValues(PREFIX_EMAIL));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"        List\u003cString\u003e addressList \u003d formSubstring(argMultimap.getAllValues(PREFIX_ADDRESS));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        List\u003cString\u003e tagList \u003d formSubstring(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        return new FilterCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"                new FieldsMatchRegexPredicate(nameList, phoneList, emailList, addressList, tagList));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jefrai":72}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"     * trimmed.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"    public static int parseCommandCount(String count) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        String trimmedCount \u003d count.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        if (trimmedCount.isBlank()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"            return 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedCount)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"        return Integer.parseInt(trimmedCount);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code Set\u003cName\u003e}.","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"    public static Set\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        for (String nameName : names) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"            nameSet.add(parseName(nameName));","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"        return nameSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"     * Parses {@code Collection\u003cString\u003e phones} into a {@code Set\u003cPhone\u003e}.","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"    public static Set\u003cPhone\u003e parsePhones(Collection\u003cString\u003e phones) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"        requireNonNull(phones);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"        final Set\u003cPhone\u003e phoneSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"        for (String phoneName : phones) {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"            phoneSet.add(parsePhone(phoneName));","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"        return phoneSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"jefrai"},"content":"     * Parses {@code Collection\u003cString\u003e addresses} into a {@code Set\u003cAddress\u003e}.","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"jefrai"},"content":"    public static Set\u003cAddress\u003e parseAddresses(Collection\u003cString\u003e addresses) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"jefrai"},"content":"        requireNonNull(addresses);","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"jefrai"},"content":"        final Set\u003cAddress\u003e addressSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"jefrai"},"content":"        for (String addressName : addresses) {","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"jefrai"},"content":"            addressSet.add(parseAddress(addressName));","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"jefrai"},"content":"        return addressSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"leonpoh"},"content":"     * Parses a {@code String Income} into an {@code Income}.","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"leonpoh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"leonpoh"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"leonpoh"},"content":"     * @throws ParseException if the given {@code Income} is invalid.","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"leonpoh"},"content":"    public static Income parseIncome(String income) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"leonpoh"},"content":"        requireNonNull(income);","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"leonpoh"},"content":"        String trimmedIncome \u003d income.trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"leonpoh"},"content":"        if (!Income.isValidIncome(trimmedIncome)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"leonpoh"},"content":"            throw new ParseException(Income.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"leonpoh"},"content":"        return new Income(trimmedIncome);","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"jefrai"},"content":"     * Parses {@code Collection\u003cString\u003e emails} into a {@code Set\u003cEmail\u003e}.","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"jefrai"},"content":"    public static Set\u003cEmail\u003e parseEmails(Collection\u003cString\u003e emails) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"jefrai"},"content":"        requireNonNull(emails);","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"jefrai"},"content":"        final Set\u003cEmail\u003e emailSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"jefrai"},"content":"        for (String emailName : emails) {","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"jefrai"},"content":"            emailSet.add(parseEmail(emailName));","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"jefrai"},"content":"        return emailSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"leonpoh":16,"-":124,"jefrai":64}},{"path":"src/main/java/seedu/address/logic/parser/RedoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * Parses input arguments and creates a new RedoCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class RedoCommandParser implements Parser\u003cRedoCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"     * Parses the given {@code String} of arguments in the context of the UndoCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * and returns a UndoCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    public RedoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"            int count \u003d ParserUtil.parseCommandCount(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"            return new RedoCommand(count);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":28}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"    private static final int INPUT_INDEX \u003d 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    private static final int TAG_INDEX \u003d 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     * and returns a TagCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     * @param args The arguments to the TagCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"     * @return The parsed TagCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     * @throws ParseException if {@code args} does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"        Index index \u003d ParserUtil.parseIndex(nameKeywords[INPUT_INDEX]);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"        String tagName \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"        for (int i \u003d TAG_INDEX; i \u003c nameKeywords.length; i++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"            tagName +\u003d nameKeywords[i];","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"        Tag tag \u003d ParserUtil.parseTag(tagName);","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"        return new TagCommand(index, tag);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"leonpoh":39,"jefrai":4}},{"path":"src/main/java/seedu/address/logic/parser/UndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * Parses input arguments and creates a new UndoCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class UndoCommandParser implements Parser\u003cUndoCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"     * Parses the given {@code String} of arguments in the context of the UndoCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"     * and returns a UndoCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    public UndoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"            int count \u003d ParserUtil.parseCommandCount(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"            return new UndoCommand(count);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":28}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"public class AddressBook implements ReadOnlyAddressBook, DeepCopyable\u003cAddressBook\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"     * Adds a tag to the person in the address book","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"     * Person must already exist in the address book","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"leonpoh"},"content":"     * @param person the person to add the tag to","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"leonpoh"},"content":"     * @param tag the tag added to the person","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"leonpoh"},"content":"    public void addTag(Person person, Tag tag) {","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"        persons.addTag(person, tag);","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"     * Deletes a tag from the person in the address book","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"     * Person and the tag must already exist in the address book","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"     * @param person the person to delete tag from","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"     * @param tag the tag to be deleted","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"    public void deleteTag(Person person, Tag tag) {","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"        persons.deleteTag(person, tag);","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"jefrai"},"content":"    public AddressBook deepCopy() {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"jefrai"},"content":"        AddressBook copy \u003d new AddressBook();","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"jefrai"},"content":"        for (Person p: persons.asUnmodifiableObservableList()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"jefrai"},"content":"            copy.addPerson(p.deepCopy());","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"jefrai"},"content":"        return copy;","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hhchinh2002":12,"leonpoh":11,"-":119,"jefrai":10}},{"path":"src/main/java/seedu/address/model/DeepCopyable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":" * Represents that an implementing Object can be deep (mutation-independently) copied into a {@code T}.","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":" *","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":" * @param \u003cT\u003e The type to copy into","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"public interface DeepCopyable\u003cT\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"    public T deepCopy();","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":10}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.history.History;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"    void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"    Predicate\u003c? super Person\u003e getPredicate();","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"     * Returns a state-detached copy of this Model.","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"     * The copy (and its composition-descendant Objects) shall not be affected","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"     * by {@code Commands} applied to this Model Object.","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"    Model stateDetachedCopy();","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"     * Adds the given tag to the person.","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"     * {@code person} must already exist in the address book","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"leonpoh"},"content":"    void addTag(Person person, Tag tag);","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"hhchinh2002"},"content":"     * Deletes the tag with the given name from the person","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"hhchinh2002"},"content":"     * specified by input index according to the address book list.","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"hhchinh2002"},"content":"     * @param person The person to delete tag from.","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"hhchinh2002"},"content":"     * @param tag The tag to delete.","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"hhchinh2002"},"content":"    void deleteTag(Person person, Tag tag);","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"hhchinh2002"},"content":"     * Returns the user prefs\u0027 history storage file path.","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"hhchinh2002"},"content":"    Path getHistoryStoragePath();","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"hhchinh2002"},"content":"     * Sets the user prefs\u0027 history storage file path.","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"hhchinh2002"},"content":"    void setHistoryStoragePath(Path filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"hhchinh2002"},"content":"     * Sets new {@code History} object to the model.","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"hhchinh2002"},"content":"    void setHistory(History history);","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"hhchinh2002"},"content":"    /** Returns the {@code History}*/","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"hhchinh2002"},"content":"    History getHistory();","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hhchinh2002":28,"leonpoh":5,"-":86,"jefrai":12}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.history.History;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    private final History history;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, History history) {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        requireAllNonNull(addressBook, userPrefs, history);","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"        this.history \u003d new History(history);","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"        this(addressBook, userPrefs, new History());","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"        this(new AddressBook(), new UserPrefs(), new History());","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"    public ModelManager stateDetachedCopy() {","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"        ModelManager copy \u003d new ModelManager(addressBook.deepCopy(), userPrefs);","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"        copy.updateFilteredPersonList(filteredPersons.getPredicate());","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"        return copy;","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"leonpoh"},"content":"    public void addTag(Person person, Tag tag) {","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"leonpoh"},"content":"        addressBook.addTag(person, tag);","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"hhchinh2002"},"content":"    public void deleteTag(Person person, Tag tag) {","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"hhchinh2002"},"content":"        addressBook.deleteTag(person, tag);","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"hhchinh2002"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d History \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"hhchinh2002"},"content":"    public Path getHistoryStoragePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"hhchinh2002"},"content":"        return history.getHistoryStoragePath();","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"hhchinh2002"},"content":"    public void setHistoryStoragePath(Path newPath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"hhchinh2002"},"content":"        history.setHistoryStoragePath(newPath);","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"hhchinh2002"},"content":"    public History getHistory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"hhchinh2002"},"content":"        return history;","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"hhchinh2002"},"content":"    public void setHistory(History newHistory) {","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"hhchinh2002"},"content":"        history.resetData(newHistory);","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"jefrai"},"content":"    public void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"jefrai"},"content":"    public Predicate\u003c? super Person\u003e getPredicate() {","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"jefrai"},"content":"        return filteredPersons.getPredicate();","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hhchinh2002":42,"leonpoh":6,"-":148,"jefrai":7}},{"path":"src/main/java/seedu/address/model/StateHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static java.lang.Math.max;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static java.lang.Math.min;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import java.util.TreeMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":" * Records past (\u0026 future) {@code Model} states and {@code Command}s, such that the {@code Model} state at any point","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":" * on the timeline can be reconstructed.","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"public class StateHistory {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     * Default number of commands between {@code Model} state snapshots.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     * Snapshots may be taken at smaller intervals to handle non-deterministic {@code Command}s.","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public static final int HISTORY_DEFAULT_INTERVAL \u003d 10;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    private int now;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    private final TreeMap\u003cInteger, Model\u003e modelHistory;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    private final TreeMap\u003cInteger, Command\u003e commandHistory;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"     * Creates a {@code StateHistory} with timeline rooted at the given {@code Model}.","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"     * @param initial {@code Model} to begin timeline with","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"    public StateHistory(Model initial) {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        now \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"        modelHistory \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        modelHistory.put(0, initial.stateDetachedCopy());","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        commandHistory \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"     * Clears all future events after {@code now}, to make way for a split Redo timeline.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"    private void clearFuture() {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        while (modelHistory.ceilingKey(now + 1) !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"            modelHistory.remove(modelHistory.ceilingKey(now + 1));","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        while (commandHistory.ceilingKey(now + 1) !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"            commandHistory.remove(commandHistory.ceilingKey(now + 1));","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"     * Adds {@code command} to the timeline, immediately after the present time.","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"     * Any existing future events will be discarded and can no longer be redone.","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"     * @param command {@code Command} to add to timeline","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"     * @param model {@code Model} after the execution of {@code command}","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"     * @param result {@code CommandResult} of the execution of {@code command}","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"    public void addCommand(Command command, Model model, CommandResult result) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        if (!result.isUndoable()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"            return;","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        clearFuture();","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"        now++;","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        commandHistory.put(now, command);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"        assert !modelHistory.isEmpty() : \"modelHistory should never be empty\";","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        if (result.isDeterministic() || modelHistory.lastKey() \u003c\u003d now - HISTORY_DEFAULT_INTERVAL) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"            modelHistory.put(now, model.stateDetachedCopy());","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"     * Retrieves the state of the Model at the effective present time.","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"     * The returned Model is a deep copy and may be mutated freely.","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"     * @return the Model state at the present time","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"     * */","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"    public Model presentModel() {","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        int time \u003d modelHistory.floorKey(now);","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"        Model model \u003d modelHistory.get(time).stateDetachedCopy();","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        while (time \u003c now) {","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"            time++;","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"                commandHistory.get(time).execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"            } catch (CommandException ex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"                assert false : \"Deterministic command failed on playback\";","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"        return model;","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"     * Undoes {@code steps} commands, moving the effective present time as many commands backwards.","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"     * If fewer than {@code steps} commands can be undone, the maximum possible number smaller than {@code steps}","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"     * will be undone instead.","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"     * @param steps number of commands to undo","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"     * @return number of commands which were successfully undone","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"    public int undo(int steps) {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"        int stop \u003d max(now - steps, modelHistory.firstKey());","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"        int res \u003d now - stop;","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"jefrai"},"content":"        now \u003d stop;","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"     * Redoes {@code steps} commands, moving the effective present time as many commands forwards.","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"jefrai"},"content":"     * If fewer than {@code steps} commands can be redone, the maximum possible number smaller than {@code steps}","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"jefrai"},"content":"     * will be redone instead.","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"jefrai"},"content":"     * @param steps number of commands to redo","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"jefrai"},"content":"     * @return number of commands which were successfully redone","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"jefrai"},"content":"    public int redo(int steps) {","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"jefrai"},"content":"        int stop \u003d min(now + steps, !commandHistory.isEmpty() ? commandHistory.lastKey() : 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"jefrai"},"content":"        int res \u003d stop - now;","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"jefrai"},"content":"        now \u003d stop;","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"jefrai"},"content":"        return res;","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":122}},{"path":"src/main/java/seedu/address/model/history/History.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.model.history;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":" * Encapsulates the executed input command that the user entered.","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"public class History {","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"    private String historyString \u003d \"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"    private Path historyStorageFilePath \u003d Paths.get(\"data\", \"history.txt\");","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"    public History() {}","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    public History(String historyString) {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"        this.historyString \u003d historyString;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a History with the contents from {@code toBeCopied}","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    public History(History toBeCopied) {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"        this();","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    /** Returns the history storage file path */","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    public Path getHistoryStoragePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"        return this.historyStorageFilePath;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"    /** Sets the history storage file path */","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"    public void setHistoryStoragePath(Path newPath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"        this.historyStorageFilePath \u003d newPath;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    /** Sets the history string of previous executed commands */","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"    public void setHistoryString(String historyString) {","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        this.historyString \u003d historyString;","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"    /** Returns the history string of previous executed commands */","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"    public String getHistoryString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"        return this.historyString;","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"     * Resets the existing data of this {@code History} with {@code newHistory}.","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"    public void resetData(History newHistory) {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"        requireNonNull(newHistory);","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        setHistoryStoragePath(newHistory.getHistoryStoragePath());","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"        setHistoryString(newHistory.getHistoryString());","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"        return historyString.hashCode();","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"hhchinh2002":63}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank.\"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"            + \"However, it must not start or end with a quotation mark (\\\").\";","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 !test.startsWith(\"\\\"\") \u0026\u0026 !test.endsWith(\"\\\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"winsonheng":3,"-":55}},{"path":"src/main/java/seedu/address/model/person/FieldsMatchRegexPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":" * Tests that a {@code Person}\u0027s fields all match at least one of the field-respective regexes,","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":" * if any such field-respective regexes were supplied.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class FieldsMatchRegexPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"    private final List\u003cString\u003e names;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    private final List\u003cString\u003e phones;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    private final List\u003cString\u003e emails;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    private final List\u003cString\u003e addresses;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    private final List\u003cString\u003e tags;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"     * Creates a FieldsMatchRegexPredicate requiring that at least one regex of each non-empty field list matches.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"     * @param names     Regexes for the name field","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"     * @param phones    Regexes for the phone field","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"     * @param emails    Regexes for the email field","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"     * @param addresses Regexes for the address field","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"     * @param tags      Regexes for the tags field","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    public FieldsMatchRegexPredicate(List\u003cString\u003e names, List\u003cString\u003e phones, List\u003cString\u003e emails,","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"                                     List\u003cString\u003e addresses, List\u003cString\u003e tags) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        this.phones \u003d phones;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        this.emails \u003d emails;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        this.addresses \u003d addresses;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    private boolean inRegexList(List\u003cString\u003e regexes, String str) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        return regexes.isEmpty() || regexes.stream().anyMatch(str::matches);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        return inRegexList(names, person.getName().fullName)","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 inRegexList(phones, person.getPhone().value)","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 inRegexList(emails, person.getEmail().value)","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 inRegexList(addresses, person.getAddress().value)","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 (tags.isEmpty() || person.getTags().stream().anyMatch(tag -\u003e inRegexList(tags, tag.tagName)));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"                || (other instanceof FieldsMatchRegexPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 Objects.equals(names, ((FieldsMatchRegexPredicate) other).names) // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 Objects.equals(phones, ((FieldsMatchRegexPredicate) other).phones)","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 Objects.equals(emails, ((FieldsMatchRegexPredicate) other).emails)","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 Objects.equals(addresses, ((FieldsMatchRegexPredicate) other).addresses)","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"                \u0026\u0026 Objects.equals(tags, ((FieldsMatchRegexPredicate) other).tags));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jefrai":60}},{"path":"src/main/java/seedu/address/model/person/Income.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":" * Represents a Person\u0027s income in the address book.","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"public class Income {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Incomes can take any integer values, and it should not be blank\";","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"    public final Integer income;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"     * @param income A valid income.","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"    public Income(String income) {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"        requireNonNull(income);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"        checkArgument(isValidIncome(income), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"        this.income \u003d Integer.parseInt(income);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"     * Returns true if a given string is a valid income.","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"    public static boolean isValidIncome(String test) {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"            Integer income \u003d Integer.parseInt(test);","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"            return income \u003e\u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"        return this.income.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"                || (other instanceof Income // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"                \u0026\u0026 income.equals(((Income) other).income)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"        return income.hashCode();","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"leonpoh":51,"jefrai":3}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.DeepCopyable;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":" * immutable.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"public class Person implements DeepCopyable\u003cPerson\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    private final Income income;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    private HashSet\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Income income, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"        this.income \u003d income;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"    public Income getIncome() {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"        return income;","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"     * Adds a tag to the person","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"    public void addTag(Tag toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"        tags.add(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"     * Deletes a tag from the person.","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"     * @param toDelete the tag to deleted from the person.","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"    public void deleteTag(Tag toDelete) {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"        tags.remove(toDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"    public Person deepCopy() {","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"        return new Person(name, phone, email, address, income, tags);","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"leonpoh"},"content":"                \u0026\u0026 otherPerson.getIncome().equals(getIncome())","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"leonpoh"},"content":"        return Objects.hash(name, phone, email, address, income);","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"leonpoh"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"leonpoh"},"content":"                .append(\"; Income: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"leonpoh"},"content":"                .append(getIncome());","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hhchinh2002":8,"leonpoh":20,"-":119,"jefrai":7}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":" * A list of persons that enforces uniqueness between its elements and does not","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":" * allow nulls.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":" * A person is considered unique by comparing using","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":" * {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":" * the person being added or updated is","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":" * a person uses Person#equals(Object) so","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"     * Adds a tag to a person","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"     * The person must already exist in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"    public void addTag(Person toAdd, Tag tagToAdd) {","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"        requireNonNull(tagToAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"        Person target \u003d findPerson(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"        target.addTag(tagToAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"        internalList.set(index, target);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"     * Delete a tag from a person","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"     * The person and the tag must already exist in the list","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"     * @param person The person to delete tag from.","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"     * @param toDelete The tag to delete.","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"    public void deleteTag(Person person, Tag toDelete) {","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"        requireAllNonNull(person, toDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"        int index \u003d internalList.indexOf(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"        Person target \u003d findPerson(person);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"        target.deleteTag(toDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"        internalList.set(index, target);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"leonpoh"},"content":"     * Finds the person","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"leonpoh"},"content":"    public Person findPerson(Person toFind) {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"leonpoh"},"content":"        return internalList.filtered(person -\u003e person.equals(toFind)).get(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"leonpoh"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"leonpoh"},"content":"     * existing person in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hhchinh2002":18,"leonpoh":31,"-":132}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"0x787af25e"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric\";","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"0x787af25e":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Income(\"1000\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Income(\"1000\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Income(\"1000\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Income(\"1000\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Income(\"1000\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Income(\"1000\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"leonpoh":7,"-":54}},{"path":"src/main/java/seedu/address/storage/CsvAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.CsvUtil;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":" * Csv-friendly version of {@link Person}.","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"class CsvAdaptedPerson {","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    private final String name;","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    private final String phone;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    private final String email;","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"    private final String address;","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"    private final String income;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    private final List\u003cCsvAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"     * Constructs a {@code CsvAdaptedPerson} with the given person details.","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"    public CsvAdaptedPerson(List\u003cString\u003e tokens) {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"        this.name \u003d tokens.get(0);","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"        this.phone \u003d tokens.get(1);","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        this.email \u003d tokens.get(2);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        this.address \u003d tokens.get(3);","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"        this.income \u003d tokens.get(4);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        for (int i \u003d 5; i \u003c tokens.size(); ++i) {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"            this.tagged.add(new CsvAdaptedTag(tokens.get(i)));","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"     * Converts a given {@code Person} into this class for csv use.","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"    public CsvAdaptedPerson(Person source) {","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"        name \u003d CsvUtil.toCsvField(source.getName().fullName);","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"        phone \u003d CsvUtil.toCsvField(source.getPhone().value);","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"        email \u003d CsvUtil.toCsvField(source.getEmail().value);","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"        address \u003d CsvUtil.toCsvField(source.getAddress().value);","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"        income \u003d CsvUtil.toCsvField(source.getIncome().income.toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"                .map(CsvAdaptedTag::new)","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"     * Converts this Csv-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"        for (CsvAdaptedTag tag : tagged) {","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"winsonheng"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"winsonheng"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"winsonheng"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"winsonheng"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"winsonheng"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"winsonheng"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"winsonheng"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"winsonheng"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"winsonheng"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"winsonheng"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"winsonheng"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"leonpoh"},"content":"        if (income \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"leonpoh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Income.class.getSimpleName()));","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"leonpoh"},"content":"        if (!Income.isValidIncome(income)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"leonpoh"},"content":"            throw new IllegalValueException(Income.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"leonpoh"},"content":"        final Income modelIncome \u003d new Income(income);","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"winsonheng"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-02-25"},{"lineNumber":113,"author":{"gitId":"leonpoh"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelIncome, modelTags);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"leonpoh"},"content":"        return String.join(\",\", name, phone, email, address, income,","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"winsonheng"},"content":"                String.join(\",\", tagged.stream()","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"winsonheng"},"content":"                        .\u003cString\u003emap(tag -\u003e tag.toString()).collect(Collectors.toList())));","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":109,"leonpoh":14}},{"path":"src/main/java/seedu/address/storage/CsvAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.CsvUtil;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"class CsvAdaptedTag {","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"    private final String tagName;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"     * Constructs a {@code CsvAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"    public CsvAdaptedTag(String tagName) {","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"        this.tagName \u003d CsvUtil.toCsvField(tagName);","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"     * Converts a given {@code Tag} into this class for CSV use.","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    public CsvAdaptedTag(Tag source) {","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    public String getTagName() {","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"        return tagName;","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"     * Converts this CSV-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"        return new Tag(tagName);","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        return getTagName();","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":50}},{"path":"src/main/java/seedu/address/storage/CsvAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.CsvUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":" * A class to access or store AddressBook data stored as a csv file on the hard disk.","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"public class CsvAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CsvAddressBookStorage.class);","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"    private Path filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    public CsvAddressBookStorage(Path filePath) {","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"        return filePath;","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"        Optional\u003cList\u003cList\u003cString\u003e\u003e\u003e csvData \u003d CsvUtil.readCsvFile(","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"                filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        if (!csvData.isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"            List\u003cList\u003cString\u003e\u003e data \u003d csvData.get();","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"            CsvSerializableAddressBook csvAddressBook \u003d new CsvSerializableAddressBook(data);","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"            return Optional.of(csvAddressBook.toModelType());","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"winsonheng"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"winsonheng"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"winsonheng"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"winsonheng"},"content":"        CsvUtil.saveCsvFile(filePath, new CsvSerializableAddressBook(addressBook).toString());","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":74}},{"path":"src/main/java/seedu/address/storage/CsvSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"/**","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":" * An Immutable AddressBook that is serializable to CSV format.","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":" */","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"class CsvSerializableAddressBook {","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    public static final String CSV_HEADERS \u003d \"Name,Phone,Email,Address,Income,Tags\\n\";","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"    private final List\u003cCsvAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"     * Constructs a {@code CsvSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"    public CsvSerializableAddressBook(List\u003cList\u003cString\u003e\u003e listOfTokens) {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"        for (List\u003cString\u003e tokens: listOfTokens) {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"            persons.add(new CsvAdaptedPerson(tokens));","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Csv use.","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"     * @param source future changes to this will not affect the created {@code CsvSerializableAddressBook}.","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"    public CsvSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"        persons.addAll(source.getPersonList().stream().map(CsvAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"     *","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"winsonheng"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"winsonheng"},"content":"        for (CsvAdaptedPerson csvAdaptedPerson : persons) {","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"winsonheng"},"content":"            Person person \u003d csvAdaptedPerson.toModelType();","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"winsonheng"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"winsonheng"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"winsonheng"},"content":"            }","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"winsonheng"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"winsonheng"},"content":"        return addressBook;","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"winsonheng"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"winsonheng"},"content":"    public String toString() {","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"winsonheng"},"content":"        return CSV_HEADERS + String.join(\"\\n\", persons.stream()","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"winsonheng"},"content":"                .\u003cString\u003emap(person -\u003e person.toString()).collect(Collectors.toList()));","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"winsonheng":64}},{"path":"src/main/java/seedu/address/storage/HistoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.history.History;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":" * Represents a storage for {@link seedu.address.model.History}.","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"public interface HistoryStorage {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    Path getHistoryStoragePath();","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"     * Returns history string.","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    Optional\u003cString\u003e readHistoryString() throws IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"     * @see #getHistoryStoragePath()","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    Optional\u003cString\u003e readHistoryString(Path filePath) throws IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"     * Replace the history txt file\u0027s content with the given string to the storage.","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"     * @param historyString cannot be null.","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    void saveHistoryString(String historyString) throws IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"     * @see #saveHistory(History)","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"    void saveHistoryString(String historyString, Path filePath) throws IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"hhchinh2002":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"    private final String income;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"            @JsonProperty(\"income\") String income,","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"        this.income \u003d income;","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"        income \u003d source.getIncome().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"     * {@code Person} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"     *                               the adapted person.","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"leonpoh"},"content":"        if (income \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"leonpoh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Income.class.getSimpleName()));","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"leonpoh"},"content":"        if (!Income.isValidIncome(income)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"leonpoh"},"content":"            throw new IllegalValueException(Income.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"leonpoh"},"content":"        final Income modelIncome \u003d new Income(income);","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"leonpoh"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelIncome, modelTags);","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"leonpoh":18,"-":106}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, HistoryStorage {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hhchinh2002":1,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    private HistoryStorage historyStorage;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a {@code StorageManager} with the given","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"     * {@code AddressBookStorage}, {@code UserPrefStorage} and {@code HistoryStorage}.","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"     * @param addressBookStorage An object represents storage of address book.","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"     * @param userPrefsStorage An object represents storage of user preferences.","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"     * @param historyStorage An object represents storage of executed commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"            UserPrefsStorage userPrefsStorage, HistoryStorage historyStorage) {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"        this.historyStorage \u003d historyStorage;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"     * Creates a {@code StorageManager} with the given arguments.","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"     * This constructors will initialize the {@code StorageManager} historyStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"     * with a {@code TxtHistoryStorage} with default history file Path.","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"     * @param addressBookStorage An object represents storage of address book.","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"     * @param userPrefsStorage An object represents storage of user preferences.","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"        this.historyStorage \u003d new TxtHistoryStorage();","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"hhchinh2002"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d History methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"hhchinh2002"},"content":"    public Path getHistoryStoragePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"hhchinh2002"},"content":"        return historyStorage.getHistoryStoragePath();","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"hhchinh2002"},"content":"    public Optional\u003cString\u003e readHistoryString() throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"hhchinh2002"},"content":"        return readHistoryString(historyStorage.getHistoryStoragePath());","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"hhchinh2002"},"content":"    public Optional\u003cString\u003e readHistoryString(Path filePath) throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"hhchinh2002"},"content":"        logger.fine(\"Reading from history file\" + filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"hhchinh2002"},"content":"        return historyStorage.readHistoryString(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"hhchinh2002"},"content":"    public void saveHistoryString(String historyString) throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"hhchinh2002"},"content":"        saveHistoryString(historyString, historyStorage.getHistoryStoragePath());","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"hhchinh2002"},"content":"    public void saveHistoryString(String historyString, Path filePath) throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"hhchinh2002"},"content":"        logger.fine(\"Saving previous executed command(s) to the history file: \" + filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"hhchinh2002"},"content":"        historyStorage.saveHistoryString(historyString, filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hhchinh2002":49,"-":80}},{"path":"src/main/java/seedu/address/storage/TxtHistoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.commons.util.TxtUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":" * This class implements {@code HistoryStorage}, represent as a","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":" * manager for the .txt file that storing executed commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"public class TxtHistoryStorage implements HistoryStorage {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    private Path filePath \u003d Paths.get(\"data\", \"history.txt\");","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    public TxtHistoryStorage() {}","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    public TxtHistoryStorage(Path filePath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    public Path getHistoryStoragePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        return this.filePath;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    public Optional\u003cString\u003e readHistoryString() throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"        return readHistoryString(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"hhchinh2002"},"content":"    public Optional\u003cString\u003e readHistoryString(Path filePath) throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"        Optional\u003cString\u003e historyString \u003d TxtUtil.readTxtFile(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"        if (!historyString.isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"        return historyString;","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"    public void saveHistoryString(String historyString) throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"        saveHistoryString(historyString, filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"    public void saveHistoryString(String historyString, Path filePath) throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"        TxtUtil.saveTxtFile(historyString, filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"hhchinh2002":61}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"0x787af25e"},"content":"import java.awt.Desktop;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"0x787af25e"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"0x787af25e"},"content":"import java.net.URI;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"0x787af25e"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"0x787af25e"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"0x787af25e"},"content":"    /**","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"0x787af25e"},"content":"     * Text to be displayed when the user gets help.","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"0x787af25e"},"content":"     */","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"0x787af25e"},"content":"    public static final String AB3_NAME \u003d \"AddressBook v1.3 2023\\n\\n\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"0x787af25e"},"content":"    public static final String OPTIONS \u003d \"Usage: \\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"0x787af25e"},"content":"            + \"  add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]              add a new contact\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"0x787af25e"},"content":"            + \"  edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]      edit details of an existing contact\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"0x787af25e"},"content":"            + \"  find KEYWORD [MORE_KEYWORDS]                                     find contact by keyword\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"0x787af25e"},"content":"            + \"  delete INDEX                                                     delete contact by index\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"0x787af25e"},"content":"            + \"  tag INDEX TAG_NAME                                               add tag to a contact\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"0x787af25e"},"content":"            + \"  delete_tag [n/NAME] [t/TAG_NAME]                                 delete tag of a contact\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"0x787af25e"},"content":"            + \"  filter [t/TAG_NAME]                                              show only contacts with tag\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"0x787af25e"},"content":"            + \"  load [f/FILENAME]                                                load from CSV file\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"0x787af25e"},"content":"            + \"  export                                                           export to CSV file\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"0x787af25e"},"content":"            + \"  clear                                                            clear address book\\n\"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"0x787af25e"},"content":"            + \"  exit                                                             exit the program\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"0x787af25e"},"content":"            + \"\\n\";","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"    public static final String EXAMPLE \u003d \"Example:   \"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"            + \"add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01\\n\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"0x787af25e"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\"; // TODO","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"0x787af25e"},"content":"    public static final String HELP_MESSAGE \u003d AB3_NAME + OPTIONS + EXAMPLE","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"0x787af25e"},"content":"        + \"For more information, get more help from the online user guide.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":63,"author":{"gitId":"0x787af25e"},"content":"        helpMessage.setFont(Font.font(java.awt.Font.MONOSPACED));","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"0x787af25e"},"content":"     * Opens the URL in web browser.","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":122,"author":{"gitId":"0x787af25e"},"content":"    private void openUserGuide() {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"0x787af25e"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"0x787af25e"},"content":"            if (Desktop.isDesktopSupported() \u0026\u0026 Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"0x787af25e"},"content":"                Desktop.getDesktop().browse(new URI(USERGUIDE_URL));","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"0x787af25e"},"content":"                logger.fine(\"Opened user guide in web browser.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"0x787af25e"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"0x787af25e"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"0x787af25e"},"content":"            logger.fine(\"Failed to open user guide in web browser.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"0x787af25e"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"0x787af25e":38,"-":92,"jefrai":2}},{"path":"src/main/java/seedu/address/ui/HistoryDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":" * An ui for the history display.","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"public class HistoryDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"    private static final String FXML \u003d \"HistoryDisplay.fxml\";","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"    @FXML","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"    private TextArea historyDisplay;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    public HistoryDisplay() {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"        super(FXML);","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"     * Sets the history string argument to the {@code TextArea} object.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"     * @param history the history string of executed user\u0027s commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    public void displayHistoryToUser(String history) {","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"        requireNonNull(history);","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        historyDisplay.setText(history);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"hhchinh2002":32}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    private Model model;","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    private HistoryDisplay historyDisplay;","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"    @FXML","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"    private StackPane historyDisplayPlaceholder;","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"    public MainWindow(Stage primaryStage, Logic logic, Model model) {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"hhchinh2002"},"content":"        historyDisplay \u003d new HistoryDisplay();","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"hhchinh2002"},"content":"        historyDisplayPlaceholder.getChildren().add(historyDisplay.getRoot());","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"hhchinh2002"},"content":"        String historyString \u003d model.getHistory().getHistoryString();","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"hhchinh2002"},"content":"        historyDisplay.displayHistoryToUser(historyString);","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"hhchinh2002"},"content":"            historyDisplay.displayHistoryToUser(model.getHistory().getHistoryString());","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hhchinh2002":15,"-":193}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"    private Label income;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"        income.setText(person.getIncome().toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"leonpoh":3,"-":77}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    private Model model;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"    public UiManager(Logic logic, Model model) {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic, model);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hhchinh2002":5,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"hhchinh2002"},"content":".result-display, .history-display {","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"hhchinh2002"},"content":".history-display {","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"hhchinh2002"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"hhchinh2002"},"content":".result-display .label, .history-display .label {","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":339,"author":{"gitId":"hhchinh2002"},"content":"#resultDisplay .content, #historyDisplay .content {","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"hhchinh2002":7,"-":349}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"0x787af25e"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"0x787af25e"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUserGuide\" text\u003d\"Get more help\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"0x787af25e":2,"-":42}},{"path":"src/main/resources/view/HistoryDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"  \u003cTextArea fx:id\u003d\"historyDisplay\" VBox.vgrow\u003d\"ALWAYS\" editable\u003d\"false\" styleClass\u003d\"history-display\"/\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"hhchinh2002":10}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"         title\u003d\"Address App\" minWidth\u003d\"700\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"      \u003cHBox minWidth\u003d\"700\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"        \u003cVBox minWidth\u003d\"450\" minHeight\u003d\"600\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"        \u003cStackPane fx:id\u003d\"historyDisplayPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" maxWidth\u003d\"500\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"hhchinh2002":10,"-":59}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"      \u003cLabel fx:id\u003d\"income\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$income\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"leonpoh":1,"-":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORDS.get(0);","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORDS.get(0) + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"0x787af25e"},"content":"                + ADDRESS_DESC_AMY + INCOME_DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"0x787af25e":1,"leonpoh":1,"-":159,"jefrai":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.history.History;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"jefrai"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"jefrai"},"content":"        public Model stateDetachedCopy() {","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"jefrai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"jefrai"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"jefrai"},"content":"        public Predicate\u003c? super Person\u003e getPredicate() {","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"jefrai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"jefrai"},"content":"        public void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"leonpoh"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"leonpoh"},"content":"        public void addTag(Person person, Tag tag) {","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"leonpoh"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"leonpoh"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"hhchinh2002"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"hhchinh2002"},"content":"        public void deleteTag(Person person, Tag tag) {","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"hhchinh2002"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"hhchinh2002"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"hhchinh2002"},"content":"        public Path getHistoryStoragePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"hhchinh2002"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"hhchinh2002"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"hhchinh2002"},"content":"        public void setHistoryStoragePath(Path filePath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"hhchinh2002"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"hhchinh2002"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"hhchinh2002"},"content":"        public void setHistory(History history) {","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"hhchinh2002"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"hhchinh2002"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"hhchinh2002"},"content":"        public History getHistory() {","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"hhchinh2002"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"hhchinh2002"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hhchinh2002":27,"leonpoh":7,"-":193,"jefrai":11}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", true, true)));","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", true, true, false, false)));","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\", true, true)));","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        // different undoable value -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false)));","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        // different deterministic value -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false)));","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, true, true, false)));","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, true, false, true)));","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, true).hashCode());","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\", true, true).hashCode());","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        // different undoable value -\u003e returns different hashcode","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false, false).hashCode());","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"        // different deterministic value -\u003e returns different hashcode","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, false).hashCode());","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, true, true, false).hashCode());","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, true, false, true).hashCode());","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":43,"jefrai":23}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"    public static final String VALID_INCOME_AMY \u003d \"10000\";","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"    public static final String VALID_INCOME_BOB \u003d \"200000\";","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"    public static final String INCOME_DESC_AMY \u003d \" \" + PREFIX_INCOME + VALID_INCOME_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"    public static final String INCOME_DESC_BOB \u003d \" \" + PREFIX_INCOME + VALID_INCOME_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"    public static final String INVALID_INCOME_DESC \u003d \" \" + PREFIX_INCOME + \"-1000\"; //No negative Income allowed","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"                .withIncome(VALID_INCOME_AMY)","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"leonpoh"},"content":"                .withIncome(VALID_INCOME_BOB)","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, true, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"leonpoh":8,"-":127,"jefrai":1}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":" * {@code DeleteTagCommand}.","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"public class DeleteTagCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    private Tag tagToDelete \u003d new Tag(\"friends\");","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"hhchinh2002"},"content":"    /*@Test","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"hhchinh2002"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"        Person personToDeleteFrom \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"hhchinh2002"},"content":"        String expectedMessage \u003d String.format(DeleteTagCommand.MESSAGE_SUCCESS, personToDeleteFrom);","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"hhchinh2002"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"hhchinh2002"},"content":"        expectedModel.deleteTag(personToDeleteFrom, tagToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"hhchinh2002"},"content":"    }*/","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"hhchinh2002"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"hhchinh2002"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, tagToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"hhchinh2002"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"hhchinh2002"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"hhchinh2002"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"hhchinh2002"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"hhchinh2002"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, tagToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"hhchinh2002"},"content":"    public void equals() {","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"hhchinh2002"},"content":"        DeleteTagCommand deleteTagFirstCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"hhchinh2002"},"content":"        DeleteTagCommand deleteTagSecondCommand \u003d new DeleteTagCommand(INDEX_SECOND_PERSON, tagToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"hhchinh2002"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"hhchinh2002"},"content":"        assertTrue(deleteTagFirstCommand.equals(deleteTagFirstCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"hhchinh2002"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"hhchinh2002"},"content":"        DeleteTagCommand deleteTagFirstCommandCopy \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, tagToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"hhchinh2002"},"content":"        assertTrue(deleteTagFirstCommand.equals(deleteTagFirstCommandCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"hhchinh2002"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"hhchinh2002"},"content":"        assertFalse(deleteTagFirstCommand.equals(1));","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"hhchinh2002"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"hhchinh2002"},"content":"        assertFalse(deleteTagFirstCommand.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"hhchinh2002"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"hhchinh2002"},"content":"        assertFalse(deleteTagFirstCommand.equals(deleteTagSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"hhchinh2002"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"hhchinh2002"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"hhchinh2002"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"hhchinh2002"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"hhchinh2002"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"hhchinh2002"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"hhchinh2002":87,"jefrai":6}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"                new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, false, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"jefrai":2}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.person.FieldsMatchRegexPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"public class FilterCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"        FieldsMatchRegexPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"                new FieldsMatchRegexPredicate(Collections.singletonList(\"name\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"                        new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"                        Collections.singletonList(\"email\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"                        new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"                        Collections.singletonList(\"tag\")","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"                );","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        FieldsMatchRegexPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"                new FieldsMatchRegexPredicate(new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"                        Collections.singletonList(\"phone\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"                        new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"                        new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"                        Arrays.asList(\"tag1\", \"tag2\")","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"                );","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        FilterCommand firstCommand \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"        FilterCommand secondCommand \u003d new FilterCommand(secondPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"        assertEquals(firstCommand, firstCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        FilterCommand firstCommandCopy \u003d new FilterCommand(firstPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"        assertEquals(firstCommand, firstCommandCopy);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"        assertNotEquals(1, firstCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"        assertNotEquals(null, firstCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        assertNotEquals(firstCommand, secondCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"    public void execute_zeroRegexes_allFiltered() {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        FieldsMatchRegexPredicate predicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"                new FieldsMatchRegexPredicate(new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"                    new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"                    new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"                    new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"                    new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"    public void execute_regexes_multipleFiltered() {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"        FieldsMatchRegexPredicate predicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"                new FieldsMatchRegexPredicate(Collections.singletonList(\".*l.*\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"                    Arrays.asList(\"87.*\", \"94.*\", \"95.*\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"                    new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"                    new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"                    Collections.singletonList(\".*ends?\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"        FilterCommand command \u003d new FilterCommand(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"        assertEquals(Arrays.asList(ALICE, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jefrai":100}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, false, false, true, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"jefrai":1}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.StateHistory;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"public class RedoCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    public void execute_noCommands_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_SUCCESS, 0, 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        StateHistory history \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        RedoCommand redoCommand \u003d new RedoCommand(1);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        redoCommand.setHistory(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        assertCommandSuccess(redoCommand, model, new CommandResult(expectedMessage, false, false), expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    public void execute_addDeleteCommands_success() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        Command[] commands \u003d new Command[6];","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        commands[0] \u003d new AddCommand(DANIEL);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        commands[1] \u003d new AddCommand(GEORGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        commands[2] \u003d new AddCommand(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        commands[3] \u003d new DeleteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        commands[4] \u003d new AddCommand(CARL);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        commands[5] \u003d new AddCommand(ELLE);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c\u003d commands.length; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"                    String.format(RedoCommand.MESSAGE_SUCCESS, i, i);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"            Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"            StateHistory history \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"            for (Command command : commands) {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"                CommandResult rs \u003d command.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"                history.addCommand(command, model, rs);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"            history.undo(commands.length);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"            RedoCommand redoCommand \u003d new RedoCommand(i);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"            redoCommand.setHistory(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"            assertCommandSuccess(redoCommand, model, new CommandResult(expectedMessage, false, false), expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"            if (i \u003c commands.length) {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"                commands[i].execute(expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"    public void execute_predicateCommands_success() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"        Command[] commands \u003d new Command[9];","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"        commands[0] \u003d new AddCommand(DANIEL);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"        commands[1] \u003d new AddCommand(GEORGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        commands[2] \u003d new FindCommand(new NameContainsKeywordsPredicate(Collections.singletonList(\"GEORGE\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        commands[3] \u003d new AddCommand(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        commands[4] \u003d new DeleteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        commands[5] \u003d new AddCommand(CARL);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        commands[6] \u003d new ListCommand();","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"        commands[7] \u003d new AddCommand(FIONA);","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"        commands[8] \u003d new AddCommand(ELLE);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c\u003d commands.length; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"                    String.format(RedoCommand.MESSAGE_SUCCESS, i, i);","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"            Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"            StateHistory history \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"            for (Command command : commands) {","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"                CommandResult rs \u003d command.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"                history.addCommand(command, model, rs);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"            history.undo(commands.length);","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"            RedoCommand redoCommand \u003d new RedoCommand(i);","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"            redoCommand.setHistory(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"            assertCommandSuccess(redoCommand, model, new CommandResult(expectedMessage, false, false), expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"            if (i \u003c commands.length) {","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"                commands[i].execute(expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":102}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":" * {@code TagCommand}.","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"public class TagCommandTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"    private Tag tagToAdd \u003d new Tag(\"NotGay\");","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"        TagCommand tagCommand \u003d new TagCommand(outOfBoundIndex, tagToAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"leonpoh"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"leonpoh"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"leonpoh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"        TagCommand tagCommand \u003d new TagCommand(outOfBoundIndex, tagToAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"leonpoh"},"content":"        assertCommandFailure(tagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"leonpoh"},"content":"    public void equals() {","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"        TagCommand tagFirstCommand \u003d new TagCommand(INDEX_FIRST_PERSON, tagToAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"        TagCommand tagSecondCommand \u003d new TagCommand(INDEX_SECOND_PERSON, tagToAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"leonpoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"        assertTrue(tagFirstCommand.equals(tagFirstCommand));","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"leonpoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"        TagCommand tagFirstCommandCopy \u003d new TagCommand(INDEX_FIRST_PERSON, tagToAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"        assertTrue(tagFirstCommand.equals(tagFirstCommandCopy));","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"        assertFalse(tagFirstCommand.equals(1));","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"        assertFalse(tagFirstCommand.equals(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"        assertFalse(tagFirstCommand.equals(tagSecondCommand));","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"leonpoh"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"leonpoh"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"leonpoh"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"leonpoh":81}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.StateHistory;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"    public void execute_noCommands_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_SUCCESS, 0, 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        StateHistory history \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"        UndoCommand undoCommand \u003d new UndoCommand(1);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"        undoCommand.setHistory(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"        assertCommandSuccess(undoCommand, model, new CommandResult(expectedMessage, false, false), expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"    public void execute_addDeleteCommands_success() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        Command[] commands \u003d new Command[6];","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"        commands[0] \u003d new AddCommand(DANIEL);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        commands[1] \u003d new AddCommand(GEORGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        commands[2] \u003d new AddCommand(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        commands[3] \u003d new DeleteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"        commands[4] \u003d new AddCommand(CARL);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"        commands[5] \u003d new AddCommand(ELLE);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c\u003d commands.length; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"                    String.format(UndoCommand.MESSAGE_SUCCESS, commands.length - i, commands.length - i);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"            Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"            StateHistory history \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"            for (Command command : commands) {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"                CommandResult rs \u003d command.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"                history.addCommand(command, model, rs);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"            UndoCommand undoCommand \u003d new UndoCommand(commands.length - i);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"            undoCommand.setHistory(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"            assertCommandSuccess(undoCommand, model, new CommandResult(expectedMessage, false, false), expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"            if (i \u003c commands.length) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"                commands[i].execute(expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"    public void execute_predicateCommands_success() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        Command[] commands \u003d new Command[9];","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"        commands[0] \u003d new AddCommand(DANIEL);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"        commands[1] \u003d new AddCommand(GEORGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"        commands[2] \u003d new FindCommand(new NameContainsKeywordsPredicate(Collections.singletonList(\"GEORGE\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        commands[3] \u003d new AddCommand(ALICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        commands[4] \u003d new DeleteCommand(Index.fromZeroBased(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        commands[5] \u003d new AddCommand(CARL);","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        commands[6] \u003d new ListCommand();","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"        commands[7] \u003d new AddCommand(FIONA);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"        commands[8] \u003d new AddCommand(ELLE);","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c\u003d commands.length; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"            String expectedMessage \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"                    String.format(UndoCommand.MESSAGE_SUCCESS, commands.length - i, commands.length - i);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"            Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"            StateHistory history \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"            for (Command command : commands) {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"                CommandResult rs \u003d command.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"                history.addCommand(command, model, rs);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"jefrai"},"content":"            UndoCommand undoCommand \u003d new UndoCommand(commands.length - i);","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"jefrai"},"content":"            undoCommand.setHistory(history);","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"jefrai"},"content":"            assertCommandSuccess(undoCommand, model, new CommandResult(expectedMessage, false, false), expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"jefrai"},"content":"            if (i \u003c commands.length) {","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"jefrai"},"content":"                commands[i].execute(expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"jefrai"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":100}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INCOME_DESC_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INCOME_DESC_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INCOME_DESC;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INCOME_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"leonpoh"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"leonpoh"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"leonpoh"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"leonpoh"},"content":"                + ADDRESS_DESC_BOB + INCOME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":87,"author":{"gitId":"leonpoh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + INCOME_DESC_AMY,","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"leonpoh"},"content":"        // missing income prefix","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"leonpoh"},"content":"                + VALID_INCOME_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"leonpoh"},"content":"                + VALID_INCOME_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"leonpoh"},"content":"                + INCOME_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INCOME_DESC_BOB","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"leonpoh"},"content":"                + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"leonpoh"},"content":"        // invalid income","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"leonpoh"},"content":"                + INVALID_INCOME_DESC + TAG_DESC_HUSBAND + VALID_TAG_FRIEND, Income.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"leonpoh":38,"-":117}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"0x787af25e"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"0x787af25e"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"0x787af25e"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"0x787af25e"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORDS.get(0)) instanceof ClearCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORDS.get(0) + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"                DeleteCommand.COMMAND_WORDS.get(0) + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"0x787af25e"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"0x787af25e"},"content":"    public void parseCommand_deleteTag() throws Exception {","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"0x787af25e"},"content":"        DeleteTagCommand command \u003d (DeleteTagCommand) parser.parseCommand(","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"                DeleteTagCommand.COMMAND_WORDS.get(0) + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"0x787af25e"},"content":"                + \" friend\");","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"0x787af25e"},"content":"        String tagWord \u003d \"friend\";","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"0x787af25e"},"content":"        Tag tag \u003d new Tag(tagWord);","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"0x787af25e"},"content":"        assertEquals(new DeleteTagCommand(INDEX_FIRST_PERSON, tag), command);","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"0x787af25e"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORDS.get(0) + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORDS.get(0)) instanceof ExitCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORDS.get(0) + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"0x787af25e"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"0x787af25e"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"0x787af25e"},"content":"    public void parseCommand_export() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORDS.get(0)) instanceof ExportCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORDS.get(0) + \" 3\") instanceof ExportCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"0x787af25e"},"content":"                FindCommand.COMMAND_WORD.get(0) + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORDS.get(0)) instanceof HelpCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORDS.get(0) + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORDS.get(0)) instanceof ListCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"jefrai"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORDS.get(0) + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"0x787af25e"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"0x787af25e"},"content":"    public void parseCommand_tag() throws Exception {","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"jefrai"},"content":"        TagCommand command \u003d (TagCommand) parser.parseCommand(TagCommand.COMMAND_WORDS.get(0) + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"0x787af25e"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" friend\");","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"0x787af25e"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"0x787af25e"},"content":"        String tagWord \u003d \"friend\";","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"0x787af25e"},"content":"        Tag tag \u003d new Tag(tagWord);","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"0x787af25e"},"content":"        assertEquals(new TagCommand(INDEX_FIRST_PERSON, tag), command);","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"0x787af25e":26,"-":92,"jefrai":14}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hhchinh2002"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"hhchinh2002"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"hhchinh2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"hhchinh2002"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"hhchinh2002"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":" * DeleteTagCommandParserTest is used to provide some test case for basic simple check on","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":" * DeleteTagCommandParser class implementation.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"hhchinh2002"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"hhchinh2002"},"content":"public class DeleteTagCommandParserTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"hhchinh2002"},"content":"    private DeleteTagCommandParser parser \u003d new DeleteTagCommandParser();","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"hhchinh2002"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"hhchinh2002"},"content":"        assertParseSuccess(parser, \"1 teacher\", new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(\"teacher\")));","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"hhchinh2002"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"hhchinh2002"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"hhchinh2002"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        assertParseFailure(parser, \"abei2jfsk\",","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"hhchinh2002"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"hhchinh2002"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"hhchinh2002":27,"jefrai":4}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, \"1 g/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"leonpoh":1,"-":210}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"import seedu.address.model.person.FieldsMatchRegexPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"    private final FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    public void parse_invalidPrefix_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        assertParseFailure(parser, \"zfs/abc\",","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    public void parse_someArgs_returnsFilterCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"                new FilterCommand(new FieldsMatchRegexPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"                        Collections.singletonList(\".*l.*\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"                        Collections.singletonList(\".*95.*\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"                        new ArrayList\u003c\u003e(),","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"                        Collections.singletonList(\".*[0-9].*\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"                        new ArrayList\u003c\u003e()","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"                ));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"        assertParseSuccess(parser, \" n/l p/95 a/[0-9]\", expectedFilterCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        assertParseSuccess(parser, \" \\n n/l \\n \\t p/95 a/[0-9]  \\t\", expectedFilterCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"    public void parse_multiArgs_returnsFilterCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"                new FilterCommand(new FieldsMatchRegexPredicate(","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"                        Arrays.asList(\".*l.*\", \".*Ge.*\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"                        Arrays.asList(\".*95.*\", \".*94.*\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"                        Collections.singletonList(\".*@.*\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"                        Collections.singletonList(\".*[0-9].*\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"                        Arrays.asList(\".*fri.*\", \".*col.*\")","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"                ));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"        assertParseSuccess(parser, \" e/@ n/l p/95 t/fri a/[0-9] p/94 n/Ge t/col\", expectedFilterCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"                \" \\n e/@ n/l \\n\\n p/95\\n \\t t/fri a/[0-9] n/Ge p/94 \\n t/col \\t\", expectedFilterCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jefrai":60}},{"path":"src/test/java/seedu/address/logic/parser/RedoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class RedoCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    private RedoCommandParser parser \u003d new RedoCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"        assertParseFailure(parser, \"teresa\",","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public void parse_noArgs_returnsRedoCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        assertParseSuccess(parser, \"\", new RedoCommand(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    public void parse_validArgs_returnsRedoCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        assertParseSuccess(parser, \"22\", new RedoCommand(22));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":30}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leonpoh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"leonpoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"leonpoh"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"leonpoh"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"leonpoh"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"leonpoh"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"leonpoh"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"leonpoh"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"leonpoh"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"leonpoh"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"leonpoh"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    public void parse_validArgs_returnsTagCommand() {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"leonpoh"},"content":"        assertParseSuccess(parser, \"1 verypoor\", new TagCommand(INDEX_FIRST_PERSON, new Tag(\"verypoor\")));","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"leonpoh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"leonpoh"},"content":"        assertParseFailure(parser, \"a very gay\", String.format(MESSAGE_INVALID_INDEX));","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"leonpoh":34}},{"path":"src/test/java/seedu/address/logic/parser/UndoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"public class UndoCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"    private UndoCommandParser parser \u003d new UndoCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"        assertParseFailure(parser, \"agnes\",","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"    public void parse_noArgs_returnsUndoCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        assertParseSuccess(parser, \"\", new UndoCommand(1));","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"    public void parse_validArgs_returnsUndoCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        assertParseSuccess(parser, \"17\", new UndoCommand(17));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":30}},{"path":"src/test/java/seedu/address/model/StateHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jefrai"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jefrai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"jefrai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jefrai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jefrai"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"jefrai"},"content":"public class StateHistoryTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jefrai"},"content":"    public void undoRedo_boundsExceeded_selfBounded() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"jefrai"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"jefrai"},"content":"        StateHistory stateHistory \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jefrai"},"content":"            AddCommand addCommand \u003d new AddCommand(new PersonBuilder().withName(Integer.toString(i)).build());","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"jefrai"},"content":"            CommandResult result \u003d addCommand.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jefrai"},"content":"            stateHistory.addCommand(addCommand, model, result);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.undo(4), 4);","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.undo(3), 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.redo(5), 5);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.redo(5), 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.undo(6), 5);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.redo(9001), 5);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jefrai"},"content":"    public void undo_addCommand_correctCount() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jefrai"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"jefrai"},"content":"        StateHistory stateHistory \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jefrai"},"content":"            AddCommand addCommand \u003d new AddCommand(new PersonBuilder().withName(Integer.toString(i)).build());","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jefrai"},"content":"            CommandResult result \u003d addCommand.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jefrai"},"content":"            stateHistory.addCommand(addCommand, model, result);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.presentModel().getAddressBook().getPersonList().size(), 5);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c 5; ++i) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jefrai"},"content":"            assertEquals(stateHistory.undo(1), 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jefrai"},"content":"            assertEquals(stateHistory.presentModel().getAddressBook().getPersonList().size(), 5 - i - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"jefrai"},"content":"    public void undo_exceededInterval_correctCount() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jefrai"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"jefrai"},"content":"        StateHistory stateHistory \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"jefrai"},"content":"        int n \u003d StateHistory.HISTORY_DEFAULT_INTERVAL * 2 + 2;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jefrai"},"content":"            AddCommand addCommand \u003d new AddCommand(new PersonBuilder().withName(Integer.toString(i)).build());","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"jefrai"},"content":"            CommandResult result \u003d addCommand.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"jefrai"},"content":"            stateHistory.addCommand(addCommand, model, result);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.presentModel().getAddressBook().getPersonList().size(), n);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c n; ++i) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"jefrai"},"content":"            assertEquals(stateHistory.undo(1), 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"jefrai"},"content":"            assertEquals(stateHistory.presentModel().getAddressBook().getPersonList().size(), n - i - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jefrai"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"jefrai"},"content":"    public void undoRedo_splitFuture_dropOriginal() throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"jefrai"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jefrai"},"content":"        StateHistory stateHistory \u003d new StateHistory(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 0; i \u003c 16; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"jefrai"},"content":"            AddCommand addCommand \u003d new AddCommand(new PersonBuilder().withName(Integer.toString(i)).build());","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"jefrai"},"content":"            CommandResult result \u003d addCommand.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"jefrai"},"content":"            stateHistory.addCommand(addCommand, model, result);","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.undo(8), 8);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"jefrai"},"content":"        model \u003d stateHistory.presentModel();","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"jefrai"},"content":"        for (int i \u003d 8; i \u003c 10; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"jefrai"},"content":"            AddCommand addCommand \u003d new AddCommand(new PersonBuilder().withName(Integer.toString(i)).build());","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"jefrai"},"content":"            CommandResult result \u003d addCommand.execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"jefrai"},"content":"            stateHistory.addCommand(addCommand, model, result);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"jefrai"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.presentModel().getAddressBook().getPersonList().size(), 10);","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.redo(1), 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.undo(20), 10);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.redo(20), 10);","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"jefrai"},"content":"        assertEquals(stateHistory.presentModel().getAddressBook().getPersonList().size(), 10);","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"jefrai"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"jefrai"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"jefrai"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jefrai":87}},{"path":"src/test/java/seedu/address/storage/CsvAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"winsonheng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"winsonheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"winsonheng"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"winsonheng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"winsonheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"winsonheng"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"winsonheng"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"winsonheng"},"content":"public class CsvAddressBookStorageTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"winsonheng"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"CsvAddressBookStorageTest\");","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"winsonheng"},"content":"    @TempDir","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"winsonheng"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"winsonheng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"winsonheng"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"winsonheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.csv\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"winsonheng"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"winsonheng"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"winsonheng"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"winsonheng"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"winsonheng"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"winsonheng"},"content":"            new CsvAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"winsonheng"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"winsonheng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"winsonheng"},"content":"            throw new AssertionError(\"IOException when writing to csv file.\", e);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"winsonheng"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"winsonheng"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"winsonheng"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"winsonheng"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"winsonheng"},"content":"                : null;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"winsonheng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"winsonheng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"winsonheng"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"winsonheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"winsonheng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"winsonheng"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"winsonheng":46}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"leonpoh"},"content":"    private static final String INVALID_INCOME \u003d \"-1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"leonpoh"},"content":"    private static final String VALID_INCOME \u003d BENSON.getIncome().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"                VALID_INCOME, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"leonpoh"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"                VALID_INCOME, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"leonpoh"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"                VALID_INCOME, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_INCOME,","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"leonpoh"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"leonpoh"},"content":"                VALID_INCOME, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_INCOME,","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"leonpoh"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"leonpoh"},"content":"    public void toModelType_invalidIncome_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"leonpoh"},"content":"                INVALID_INCOME, VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"leonpoh"},"content":"        String expectedMessage \u003d Income.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"leonpoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"leonpoh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"leonpoh"},"content":"    public void toModelType_nullIncome_throwsIllegalValueException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null,","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"leonpoh"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"leonpoh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Income.class.getSimpleName());","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"leonpoh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"leonpoh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"leonpoh"},"content":"                VALID_INCOME, invalidTags);","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"leonpoh":37,"-":96}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"        descriptor.setIncome(person.getIncome());","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"leonpoh"},"content":"     * Sets the {@code Income} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"leonpoh"},"content":"    public EditPersonDescriptorBuilder withIncome(String income) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"leonpoh"},"content":"        descriptor.setIncome(new Income(income));","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"leonpoh"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"leonpoh":10,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import seedu.address.model.person.Income;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"leonpoh"},"content":"    public static final String DEFAULT_INCOME \u003d \"696969\";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"    private Income income;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"        income \u003d new Income(DEFAULT_INCOME);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"leonpoh"},"content":"        income \u003d personToCopy.getIncome();","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"leonpoh"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"leonpoh"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"leonpoh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"leonpoh"},"content":"     * Sets the {@code Income} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"leonpoh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"leonpoh"},"content":"    public PersonBuilder withIncome(String income) {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"leonpoh"},"content":"        this.income \u003d new Income(income);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"leonpoh"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"leonpoh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"leonpoh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":107,"author":{"gitId":"leonpoh"},"content":"        return new Person(name, phone, email, address, income, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"leonpoh":16,"-":94}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INCOME;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"jefrai"},"content":"        return AddCommand.COMMAND_WORDS.get(0) + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"        sb.append(PREFIX_INCOME + person.getIncome().toString() + \" \");","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"leonpoh"},"content":"        descriptor.getIncome().ifPresent(income -\u003e sb.append(PREFIX_INCOME).append(income.toString()).append(\" \"));","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"leonpoh":3,"-":61,"jefrai":1}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INCOME_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"leonpoh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INCOME_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"leonpoh"},"content":"            .withPhone(\"94351253\").withIncome(\"1000\")","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"leonpoh"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withIncome(\"1000\")","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"leonpoh"},"content":"            .withEmail(\"heinz@example.com\").withIncome(\"1000\")","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"leonpoh"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"leonpoh"},"content":"            .withEmail(\"cornelia@example.com\").withIncome(\"1000\")","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"leonpoh"},"content":"            .withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"leonpoh"},"content":"            .withEmail(\"werner@example.com\").withIncome(\"1000\")","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"leonpoh"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"leonpoh"},"content":"            .withEmail(\"lydia@example.com\").withIncome(\"1000\")","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"leonpoh"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"leonpoh"},"content":"            .withEmail(\"anna@example.com\").withIncome(\"1000\")","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"leonpoh"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"leonpoh"},"content":"            .withEmail(VALID_EMAIL_AMY).withIncome(VALID_INCOME_AMY)","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"leonpoh"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"leonpoh"},"content":"            .withEmail(VALID_EMAIL_BOB).withIncome(VALID_INCOME_BOB)","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"leonpoh"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"leonpoh":18,"-":67}}]
