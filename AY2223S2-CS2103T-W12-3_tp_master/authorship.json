[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W12-3/tp/actions)","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"# FAid","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"FAid is an app adapted from AddressBook 3 to help Financial Advisors manage their clients and meetings.","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"We aim to tailor this product towards Financial Advisors such as Insurance Agents, Investment Advisors and Real Estate Agents.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"It can be difficult for a busy Financial Advisor to keep track of all their customers and meetings with them, and we hope to make this process fast and efficient.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"* This is a client and meeting management application built for financial advisors\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"  * Add contact details and relevant information about a client","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"  * Schedule meetings with clients","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"  * See overview of meetings for the day","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"* The project simulates an ongoing software project for a desktop application (called _FAid_) used for managing contact details.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"* It is named `FAid` (Full Form: `Financial Advisor Aid`)","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"* For the detailed documentation of this project, see the **[FAid Product Website](https://ay2223s2-cs2103t-w12-3.github.io/tp/)**.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokung":13,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"run {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"FireRadical22"},"content":"    archiveFileName \u003d \u0027faid.jar\u0027","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"FireRadical22":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"### Jane Tan","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"\u003cimg src\u003d\"images/sembcorpp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"[[github](https://github.com/sembcorpp)]","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"[[portfolio](team/sembcorpp.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"* Role: Developer + Testing","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"### Bokun","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"\u003cimg src\u003d\"images/bokung.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"[[github](http://github.com/bokung)]","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"[[portfolio](team/bokung.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"* Responsibilities: Dev Ops + Testing","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"### Muhammad Arshad Shaik","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"\u003cimg src\u003d\"images/fireradical22.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"[[github](http://github.com/FireRadical22)] [[portfolio](team/fireradical22.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"### Tabriz Pahlavi","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"\u003cimg src\u003d\"images/tabrizplv.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"[[github](http://github.com/TabrizPlv)]","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"[[portfolio](team/tabrizplv.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"sembcorpp"},"content":"* Responsibilities: Dev Ops + UI","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"sembcorpp":12,"bokung":1,"-":30,"FireRadical22":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"FireRadical22"},"content":"### 1. Add Meeting Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"FireRadical22"},"content":"#### 1.1 Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"FireRadical22"},"content":"The `MainWindow#executeCommand()` calls `LogicManager#execute()` method, which proceeds to call `AddressBookParser#parseCommand()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"FireRadical22"},"content":"`AddMeetingCommandParser#parse()` is called, which returns an `AddMeetingCommand` object.","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"FireRadical22"},"content":"- Checks that the command contains `AddMeetingCommand.COMMAND_WORD`","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"FireRadical22"},"content":"- `AddMeetingCommand` - Represents add meeting command executed by FAid","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"FireRadical22"},"content":"  - Takes in an `Index` object to assign a meeting to a person at the specified index.","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"FireRadical22"},"content":"  - Takes in a `Meeting` object to assign to the specified person.","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"FireRadical22"},"content":"  - `AddMeetingCommand#execute()` ensures that the index specified is valid and does not add meeting if it clashes with existing meetings scheduled","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"FireRadical22"},"content":"  for the day specified","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"FireRadical22"},"content":"After being parsed, the `AddMeetingCommand#execute()` method is called, scheduling a meeting for the specified person.","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"FireRadical22"},"content":"The following sequence diagram illustrates the description for adding meeting:","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"FireRadical22"},"content":"![AddMeetingSequenceDiagram](images/AddMeetingSequenceDiagram.PNG)","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"FireRadical22"},"content":"### 2. Remove Meeting Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"FireRadical22"},"content":"#### 2.1 Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"FireRadical22"},"content":"The `MainWindow#executeCommand()` calls `LogicManager#execute()` method, which proceeds to call `AddressBookParser#parseCommand()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"FireRadical22"},"content":"`RemoveMeetingCommandParser#parse()` is called, which returns an `RemoveMeetingCommand` object.","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"FireRadical22"},"content":"- Checks that the command contains `RemoveMeetingCommand.COMMAND_WORD`","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"FireRadical22"},"content":"- `RemoveMeetingCommand` - Represents remove meeting command executed by FAid","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"FireRadical22"},"content":"    - Takes in 2 `Index` objects:","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"FireRadical22"},"content":"      - Index of person to find","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"FireRadical22"},"content":"      - Index of meeting to find","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"FireRadical22"},"content":"After being parsed, the `RemoveMeetingCommand#execute()` method is called, remove a meeting at the specified index","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"FireRadical22"},"content":"for the specified person. The following sequence diagram illustrates the description for removing meeting:","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"FireRadical22"},"content":"![RemoveMeetingSequenceDiagram](images/RemoveMeetingSequenceDiagram.PNG)","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"bokung"},"content":"### 3. Region","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"bokung"},"content":"Every `Address` is composed with an additional `Regions` Enumeration, which represents all the 5 regions in Singapore.","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"bokung"},"content":"When an `Address` object is created, the `Region` class processes the address and allocates a `Regions` Enum to the `Address` object.","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"bokung"},"content":"Internally, the `Region` class has a list of all major town names in Singapore, and attempts to match one of them to the actual address string.","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"bokung"},"content":"![RegionSequenceDiagram](images/RegionSequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"FireRadical22"},"content":"### 4. Update Meeting Feature","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"FireRadical22"},"content":"The find meeting feature is handled by the following classes:","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"FireRadical22"},"content":"* `FindMeetingCommandParser` - Checks that the command is in the right format, then","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"FireRadical22"},"content":"  parses the input to extract PersonID, MeetingID and updated Meeting details.","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"FireRadical22"},"content":"    * `FindMeetingCommandParser#parse()` is called and returns an","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"FireRadical22"},"content":"      `FindMeetingCommand` object with the extracted PersonID, MeetingID","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"FireRadical22"},"content":"* `FindMeetingCommand` - The update Meeting command that will be executed by FAid","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"FireRadical22"},"content":"    * The `FindMeetingCommand` extends the `Command` interface and implements the `Command#execute()` method.","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"FireRadical22"},"content":"Just like other commands, the `Command#execute()` method of `FindMeetingCommand` is handled by","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"FireRadical22"},"content":"`Logic` component. Please refer to the \u0027Logic component\u0027 under \u0027Design\u0027 for more","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"FireRadical22"},"content":"information on how the `Logic` component handles a command.","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"FireRadical22"},"content":"The parsing and execution of FindMeeting command can be shown with the following","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"FireRadical22"},"content":"sequence diagram:","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"FireRadical22"},"content":"### 5. Find Meeting Feature","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"sembcorpp"},"content":"### 5.1 Update Meeting Feature","lastModifiedDate":"2023-03-31"},{"lineNumber":223,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":224,"author":{"gitId":"sembcorpp"},"content":"The find meeting feature is handled by the following classes:","lastModifiedDate":"2023-03-31"},{"lineNumber":225,"author":{"gitId":"sembcorpp"},"content":"* `FindMeetingCommandParser` - Checks that the command is in the right format, then","lastModifiedDate":"2023-03-31"},{"lineNumber":226,"author":{"gitId":"sembcorpp"},"content":"  parses the input to extract PersonID, MeetingID and updated Meeting details.","lastModifiedDate":"2023-03-31"},{"lineNumber":227,"author":{"gitId":"sembcorpp"},"content":"    * `FindMeetingCommandParser#parse()` is called and returns an","lastModifiedDate":"2023-03-31"},{"lineNumber":228,"author":{"gitId":"sembcorpp"},"content":"      `FindMeetingCommand` object with the extracted PersonID, MeetingID","lastModifiedDate":"2023-03-31"},{"lineNumber":229,"author":{"gitId":"sembcorpp"},"content":"* `FindMeetingCommand` - The update Meeting command that will be executed by FAid","lastModifiedDate":"2023-03-31"},{"lineNumber":230,"author":{"gitId":"sembcorpp"},"content":"    * The `FindMeetingCommand` extends the `Command` interface and implements the `Command#execute()` method.","lastModifiedDate":"2023-03-31"},{"lineNumber":231,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":232,"author":{"gitId":"sembcorpp"},"content":"Just like other commands, the `Command#execute()` method of `FindMeetingCommand` is handled by","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"sembcorpp"},"content":"`Logic` component. Please refer to the \u0027Logic component\u0027 under \u0027Design\u0027 for more","lastModifiedDate":"2023-03-31"},{"lineNumber":234,"author":{"gitId":"sembcorpp"},"content":"information on how the `Logic` component handles a command.","lastModifiedDate":"2023-03-31"},{"lineNumber":235,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":236,"author":{"gitId":"sembcorpp"},"content":"The parsing and execution of FindMeeting command can be shown with the following","lastModifiedDate":"2023-03-31"},{"lineNumber":237,"author":{"gitId":"sembcorpp"},"content":"sequence diagram:","lastModifiedDate":"2023-03-31"},{"lineNumber":238,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":239,"author":{"gitId":"FireRadical22"},"content":"![FindMeetingSequenceDiagram](images/FindMeetingSequenceDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"FireRadical22"},"content":"### 6. Policy Tag Feature","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"FireRadical22"},"content":"#### 6.1 Implementation","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"FireRadical22"},"content":"Every `Person` contains a `PolicyTag`, which represents financial policies adopted by the user\u0027s clients and prosepctive clients.","lastModifiedDate":"2023-03-29"},{"lineNumber":246,"author":{"gitId":"FireRadical22"},"content":"Every time a new `Person` is created, it contains a list of `PolicyTag` objects, which can be empty or non-empty. A new `PolicyTag` object","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"FireRadical22"},"content":"is created with the use of `add` command when a new `Person` is added or `edit` command when a new policy needs to be added","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"FireRadical22"},"content":"under an existing `Person`.","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"FireRadical22"},"content":"### 7. Find Policy Feature","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"FireRadical22"},"content":"#### 7.1 Implementation","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"FireRadical22"},"content":"The `MainWindow#executeCommand()` calls `LogicManager#execute()` method, which proceeds to call `AddressBookParser#parseCommand()`.","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"FireRadical22"},"content":"`FindPolicyCommandParser#parse()` is called, which returns an `FindPolicyCommand` object.","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"FireRadical22"},"content":"* `FindPolicyCommandParser`:","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"FireRadical22"},"content":"  * checks that the command contains `FindPolicyCommand.COMMAND_WORD`.","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"FireRadical22"},"content":"  * checks that the arguments given are Strings.","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"FireRadical22"},"content":"* `FindPolicyCommand`:","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"FireRadical22"},"content":"  * updates list of `Person` objects with a filtered list of `Person` objects with matching policy names","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"FireRadical22"},"content":"After being parsed, the `FindPolicyCommand#execute()` method is called, a filtered list of `Person` objects with matching","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"FireRadical22"},"content":"policy names are displayed. The following sequence diagram illustrates the description for finding policy:","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"FireRadical22"},"content":"![FindPolicySequenceDiagram](images/FindPolicySequenceDiagram.PNG)","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"FireRadical22"},"content":"* Financial advisors who has to manage a significant number of contacts and meetings","lastModifiedDate":"2023-03-27"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"bokung"},"content":"* has a large number of meetings to keep track of","lastModifiedDate":"2023-03-09"},{"lineNumber":376,"author":{"gitId":"bokung"},"content":"* wants to minimise time spent commuting","lastModifiedDate":"2023-03-09"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"bokung"},"content":"**Value proposition**: manage clients and meetings faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-03-09"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                             | I want to …​                                       | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"FireRadical22"},"content":"|----------|---------------------------------------------------------------------|----------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":386,"author":{"gitId":"bokung"},"content":"| `* * *`  | financial advisor                                                   | see all my meetings for today                      | plan and prepare for my meetings today effectively                        |","lastModifiedDate":"2023-03-09"},{"lineNumber":387,"author":{"gitId":"bokung"},"content":"| `* * *`  | financial advisor                                                   | add a new meeting                                  | keep track of a meeting with a client using this app                      |","lastModifiedDate":"2023-03-09"},{"lineNumber":388,"author":{"gitId":"bokung"},"content":"| `* * *`  | financial advisor                                                   | filter my meetings                                 | find clients based on some condition                                      |","lastModifiedDate":"2023-03-09"},{"lineNumber":389,"author":{"gitId":"bokung"},"content":"| `* * *`  | financial advisor                                                   | remove a meeting from my schedule                  | remove meetings that are no longer relevant                               |","lastModifiedDate":"2023-03-09"},{"lineNumber":390,"author":{"gitId":"FireRadical22"},"content":"| `* * *`  | financial advisor who has to travel to meet their client physically | set which region of singapore my client is in      | keep track of the general location of my client                           |","lastModifiedDate":"2023-03-27"},{"lineNumber":391,"author":{"gitId":"bokung"},"content":"| `* * *`  | financial advisor who prefers physical meetings with clients        | see all meetings in a specific region of singapore | minimize travel time by meeting all clients that live close to each other |","lastModifiedDate":"2023-03-09"},{"lineNumber":392,"author":{"gitId":"bokung"},"content":"| `* *`    | financial advisor                                                   | know when the last meeting with a client was       | avoid losing a client if they find me too annoying                        |","lastModifiedDate":"2023-03-09"},{"lineNumber":393,"author":{"gitId":"FireRadical22"},"content":"| `* *`    | financial advisor                                                   | classify my meetings into different types          | organise my meetings better                                               |","lastModifiedDate":"2023-03-27"},{"lineNumber":394,"author":{"gitId":"bokung"},"content":"| `* `     | financial advisor                                                   | record my meetings                                 | look back to reflect and improve on my skills                             |","lastModifiedDate":"2023-03-09"},{"lineNumber":395,"author":{"gitId":"bokung"},"content":"| `* *`    | financial advisor                                                   | add notes about a client                           | keep track of things that are important to a client                       |","lastModifiedDate":"2023-03-09"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"FireRadical22"},"content":"(For all use cases below, the **System** is the `FAid` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-27"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"FireRadical22"},"content":"**Use case: *UC01 Delete a person***","lastModifiedDate":"2023-03-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":405,"author":{"gitId":"FireRadical22"},"content":"**Actor: User**","lastModifiedDate":"2023-03-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"FireRadical22"},"content":"2.  FAid shows a list of persons","lastModifiedDate":"2023-03-27"},{"lineNumber":411,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"FireRadical22"},"content":"4.  FAid deletes the person","lastModifiedDate":"2023-03-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"FireRadical22"},"content":"**Use case: *UC02 Schedule a meeting with new client***","lastModifiedDate":"2023-03-07"},{"lineNumber":429,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":430,"author":{"gitId":"FireRadical22"},"content":"**Actor: User**","lastModifiedDate":"2023-03-07"},{"lineNumber":431,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":432,"author":{"gitId":"FireRadical22"},"content":"**MSS:**","lastModifiedDate":"2023-03-07"},{"lineNumber":433,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":434,"author":{"gitId":"FireRadical22"},"content":"1. User request to add a new client with relevant information","lastModifiedDate":"2023-03-07"},{"lineNumber":435,"author":{"gitId":"FireRadical22"},"content":"2. FAid adds new client’s information to the list","lastModifiedDate":"2023-03-07"},{"lineNumber":436,"author":{"gitId":"FireRadical22"},"content":"3. User request to add meeting date and time for the same client","lastModifiedDate":"2023-03-07"},{"lineNumber":437,"author":{"gitId":"FireRadical22"},"content":"4. FAid adds meeting date and time for that client","lastModifiedDate":"2023-03-07"},{"lineNumber":438,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":439,"author":{"gitId":"FireRadical22"},"content":"   Use Case Ends","lastModifiedDate":"2023-03-07"},{"lineNumber":440,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":441,"author":{"gitId":"FireRadical22"},"content":"**Extensions:**","lastModifiedDate":"2023-03-07"},{"lineNumber":442,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":443,"author":{"gitId":"FireRadical22"},"content":"* 2a. FAid detects clash in meeting date and time","lastModifiedDate":"2023-03-07"},{"lineNumber":444,"author":{"gitId":"FireRadical22"},"content":"   * 2a1. FAid prompts User again to add a different meeting date and time","lastModifiedDate":"2023-03-07"},{"lineNumber":445,"author":{"gitId":"FireRadical22"},"content":"   * 2a2. User enters a new meeting date and time","lastModifiedDate":"2023-03-07"},{"lineNumber":446,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":447,"author":{"gitId":"FireRadical22"},"content":"     Use Case resumes at step 4.","lastModifiedDate":"2023-03-07"},{"lineNumber":448,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":449,"author":{"gitId":"FireRadical22"},"content":"**Use Case: *UC03 View meetings for current day***","lastModifiedDate":"2023-03-07"},{"lineNumber":450,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":451,"author":{"gitId":"FireRadical22"},"content":"**Actor: User**","lastModifiedDate":"2023-03-07"},{"lineNumber":452,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":453,"author":{"gitId":"FireRadical22"},"content":"**MSS:**","lastModifiedDate":"2023-03-07"},{"lineNumber":454,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":455,"author":{"gitId":"FireRadical22"},"content":"1. User opens FAid","lastModifiedDate":"2023-03-07"},{"lineNumber":456,"author":{"gitId":"FireRadical22"},"content":"2. FAid notifies user of all upcoming meetings for the day","lastModifiedDate":"2023-03-07"},{"lineNumber":457,"author":{"gitId":"FireRadical22"},"content":"3. User chooses to view all meetings for the current day","lastModifiedDate":"2023-03-07"},{"lineNumber":458,"author":{"gitId":"FireRadical22"},"content":"4. FAid shows all meetings that start on the current day","lastModifiedDate":"2023-03-07"},{"lineNumber":459,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":460,"author":{"gitId":"FireRadical22"},"content":"   Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":461,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":462,"author":{"gitId":"FireRadical22"},"content":"**Extensions:**","lastModifiedDate":"2023-03-07"},{"lineNumber":463,"author":{"gitId":"FireRadical22"},"content":"* 2a. There are no meetings for the day","lastModifiedDate":"2023-03-07"},{"lineNumber":464,"author":{"gitId":"FireRadical22"},"content":"  * 2a1. FAid notifies that there are no upcoming meetings for the day","lastModifiedDate":"2023-03-07"},{"lineNumber":465,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":466,"author":{"gitId":"FireRadical22"},"content":"     Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":467,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":468,"author":{"gitId":"FireRadical22"},"content":"**Use Case: *UC04 Find clients residing in a certain region of Singapore***","lastModifiedDate":"2023-03-07"},{"lineNumber":469,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":470,"author":{"gitId":"FireRadical22"},"content":"**Actor: User**","lastModifiedDate":"2023-03-07"},{"lineNumber":471,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":472,"author":{"gitId":"FireRadical22"},"content":"**MSS:**","lastModifiedDate":"2023-03-07"},{"lineNumber":473,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":474,"author":{"gitId":"FireRadical22"},"content":"1. User opens the app","lastModifiedDate":"2023-03-07"},{"lineNumber":475,"author":{"gitId":"FireRadical22"},"content":"2. User requests to find clients in a specific region","lastModifiedDate":"2023-03-07"},{"lineNumber":476,"author":{"gitId":"FireRadical22"},"content":"3. FAid shows all clients residing in a specific region","lastModifiedDate":"2023-03-07"},{"lineNumber":477,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":478,"author":{"gitId":"FireRadical22"},"content":"   Use case ends","lastModifiedDate":"2023-03-07"},{"lineNumber":479,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":480,"author":{"gitId":"FireRadical22"},"content":"**Extensions:**","lastModifiedDate":"2023-03-07"},{"lineNumber":481,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":482,"author":{"gitId":"FireRadical22"},"content":"* 3a.  FAid cannot find the specified region entered","lastModifiedDate":"2023-03-07"},{"lineNumber":483,"author":{"gitId":"FireRadical22"},"content":"  * 3a1. User enters new region name","lastModifiedDate":"2023-03-07"},{"lineNumber":484,"author":{"gitId":"FireRadical22"},"content":"  * 3a2. Steps 3a1 and 3a are repeated until a valid region name is provided","lastModifiedDate":"2023-03-27"},{"lineNumber":485,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":486,"author":{"gitId":"FireRadical22"},"content":"    Use case resumes from step 3","lastModifiedDate":"2023-03-07"},{"lineNumber":487,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":488,"author":{"gitId":"FireRadical22"},"content":"**Use Case: *UC05 Get list of clients based on a tag***","lastModifiedDate":"2023-03-07"},{"lineNumber":489,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":490,"author":{"gitId":"FireRadical22"},"content":"**Actor: User**","lastModifiedDate":"2023-03-07"},{"lineNumber":491,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":492,"author":{"gitId":"FireRadical22"},"content":"**MSS:**","lastModifiedDate":"2023-03-07"},{"lineNumber":493,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":494,"author":{"gitId":"FireRadical22"},"content":"1. User opens the app","lastModifiedDate":"2023-03-07"},{"lineNumber":495,"author":{"gitId":"FireRadical22"},"content":"2. User wants to see all persons with a certain tag","lastModifiedDate":"2023-03-07"},{"lineNumber":496,"author":{"gitId":"FireRadical22"},"content":"3. System requests for the tag","lastModifiedDate":"2023-03-07"},{"lineNumber":497,"author":{"gitId":"FireRadical22"},"content":"4. User enters the tag","lastModifiedDate":"2023-03-07"},{"lineNumber":498,"author":{"gitId":"FireRadical22"},"content":"5. System displays all persons with the given tag","lastModifiedDate":"2023-03-07"},{"lineNumber":499,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":500,"author":{"gitId":"FireRadical22"},"content":"   Use Case Ends","lastModifiedDate":"2023-03-07"},{"lineNumber":501,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":502,"author":{"gitId":"FireRadical22"},"content":"**Extensions:**","lastModifiedDate":"2023-03-07"},{"lineNumber":503,"author":{"gitId":"FireRadical22"},"content":"* 4a. System cannot find the tag supplied by the user","lastModifiedDate":"2023-03-07"},{"lineNumber":504,"author":{"gitId":"FireRadical22"},"content":"  * 4a1. System requests for the correct tag","lastModifiedDate":"2023-03-07"},{"lineNumber":505,"author":{"gitId":"FireRadical22"},"content":"  * 4a2. User enters a new tag","lastModifiedDate":"2023-03-07"},{"lineNumber":506,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":507,"author":{"gitId":"FireRadical22"},"content":"    Steps 4a1-4a2 are repeated until the user provides a correct tag","lastModifiedDate":"2023-03-07"},{"lineNumber":508,"author":{"gitId":"FireRadical22"},"content":"    Use Case resumes from step 5","lastModifiedDate":"2023-03-07"},{"lineNumber":509,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":510,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"FireRadical22"},"content":"4. A new version of FAid is released every month.","lastModifiedDate":"2023-03-07"},{"lineNumber":518,"author":{"gitId":"FireRadical22"},"content":"5. Data stored is not wiped out outside the program\u0027s runtime or in the event of an interrupt.","lastModifiedDate":"2023-03-07"},{"lineNumber":519,"author":{"gitId":"FireRadical22"},"content":"6. All non-helper functions implemented in FAid have JavaDoc documentation.","lastModifiedDate":"2023-03-07"},{"lineNumber":520,"author":{"gitId":"FireRadical22"},"content":"7. All commands and features implemented in FAid should have a visual example in the User Guide.","lastModifiedDate":"2023-03-07"},{"lineNumber":521,"author":{"gitId":"FireRadical22"},"content":"8. No command should require more than 5 arguments/options.","lastModifiedDate":"2023-03-07"},{"lineNumber":522,"author":{"gitId":"FireRadical22"},"content":"9. Every function is deterministic and has a test case with an expected output.","lastModifiedDate":"2023-03-07"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"FireRadical22"},"content":"* **Region** - General Areas in Singapore separated into North, South, East, West, Central","lastModifiedDate":"2023-03-07"},{"lineNumber":531,"author":{"gitId":"FireRadical22"},"content":"* **Town** - An area defined by the National Environment Agency","lastModifiedDate":"2023-03-07"},{"lineNumber":532,"author":{"gitId":"FireRadical22"},"content":"* **Meeting** - An appointment with the user’s client starting and ending at stipulated times","lastModifiedDate":"2023-03-07"},{"lineNumber":533,"author":{"gitId":"FireRadical22"},"content":"* **Day** - Spans from 00:00 to 23:59. Not by conventional office hours.","lastModifiedDate":"2023-03-07"},{"lineNumber":534,"author":{"gitId":"FireRadical22"},"content":"* **Client** - Potential or actual buyers of insurance sold by the use","lastModifiedDate":"2023-03-27"},{"lineNumber":535,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sembcorpp":17,"bokung":19,"-":363,"FireRadical22":189}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"layout: page title: User Guide","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"FAid is a **desktop app for managing clients and meetings built for Financial Advisors, optimized for use via a Command","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FAid","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"can get your client and meeting management tasks done quickly, so you won\u0027t ever worry about missing a meeting or","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"forgetting about a client!","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"1. Download [Java `11`](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) for your","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"   operating system.","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"1. To check if you have Java `11` installed and configured correctly, open a command terminal and type in the","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"   command: `java --version`. \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"   If java is installed successfully, your output should be similar to the following (Note that it may look slightly","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"   different depending on your exact version and operating system): \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"   `openjdk 11.0.17 2022-10-18 LTS` \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"   `OpenJDK Runtime Environment Zulu11.60+19-CA (build 11.0.17+8-LTS)` \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"   `OpenJDK 64-Bit Server VM Zulu11.60+19-CA (build 11.0.17+8-LTS, mixed mode)` \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"   Otherwise, if java is not installed or not configured correctly, you could see an error message like this: \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"   `\u0027java\u0027 is not recognized as an internal or external command, operable program or batch file.` \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"   If you see an error message like this even after installing Java `11`, consider restarting your computer or","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"   reinstalling Java.","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"1. Download the latest `faid.jar` from [here](https://github.com/AY2223S2-CS2103T-W12-3/tp/releases).","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FAid application.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar faid.jar` command to","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"   run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"    * `list` : Lists all clients.","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a client named `John Doe`","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"      to FAid.","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"sembcorpp"},"content":"    * `delete 3` : Deletes the 3rd client shown in the current list.","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"sembcorpp"},"content":"    * `clear` : Deletes all clients.","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"FireRadical22"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"FireRadical22"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":82,"author":{"gitId":"FireRadical22"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"FireRadical22"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"sembcorpp"},"content":"* `CLIENT_INDEX` refers to index number showed in displayed client list","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"sembcorpp"},"content":"* `MEETING_INDEX` refers to index number showed in displayed meeting list","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"sembcorpp"},"content":"* Index must be a positive number","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"sembcorpp"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"sembcorpp"},"content":"### Adding a client : `add`","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"sembcorpp"},"content":"Adds a client to the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"sembcorpp"},"content":"A client can have any number of tags (including 0)","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"sembcorpp"},"content":"### Listing all clients : `listPerson`","lastModifiedDate":"2023-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"sembcorpp"},"content":"Shows a list of all clients in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"sembcorpp"},"content":"### Editing a client : `edit`","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"sembcorpp"},"content":"Edits an existing client in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"FireRadical22"},"content":"* Edits the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2023-03-31"},{"lineNumber":130,"author":{"gitId":"FireRadical22"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"sembcorpp"},"content":"* When editing tags, the existing tags of the client will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"FireRadical22"},"content":"* You can remove all the client’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"FireRadical22"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567`","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"FireRadical22"},"content":"  and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"sembcorpp"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd client to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"sembcorpp"},"content":"### Locating clients by name: `find`","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"sembcorpp"},"content":"Finds clients whose names contain any of the given keywords.","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"FireRadical22"},"content":"* clients matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"FireRadical22"},"content":"  , `Bo Yang`","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"sembcorpp"},"content":"### Deleting a client : `delete`","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"sembcorpp"},"content":"Deletes the specified client from the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"sembcorpp"},"content":"* Deletes the client at the specified `INDEX`.","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"sembcorpp"},"content":"* `list` followed by `delete 2` deletes the 2nd client in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"sembcorpp"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st client in the results of the `find` command.","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"FireRadical22"},"content":"### Add meeting : `meetingAdd`","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"FireRadical22"},"content":"Adds a meeting to the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"sembcorpp"},"content":"Format: `meetingAdd CLIENT_INDEX md/ DESC ms/ START_DATE\u0026TIME me/ END_DATE\u0026TIME`","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"bokung"},"content":"Required Information:","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"sembcorpp"},"content":"* `client_INDEX`: Index of a client in address book","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"FireRadical22"},"content":"* `DESC`: Description of the meeting to add","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"FireRadical22"},"content":"* `START DATE\u0026TIME`: Start date and time (Format: dd-mm-yyyy HH:MM)","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"FireRadical22"},"content":"* `END DATE\u0026TIME`: End date and time (Format: dd-mm-yyyy HH:MM)","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"FireRadical22"},"content":"Example:","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":189,"author":{"gitId":"FireRadical22"},"content":"* `meetingAdd 3 md/Meeting with Charlotte ms/30-03-2020 12:30 me/30-03-2020 13:30` adds a meeting on 30th March 2020","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"FireRadical22"},"content":"  from 12.30pm to 13.30pm, with Charlotte Oliveiro (index 3), with the description \"Meeting with Charlotte\".","lastModifiedDate":"2023-03-31"},{"lineNumber":191,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"FireRadical22"},"content":"![result for \u0027meetingAdd 3 Meeting with Charlotte 30-03-2020 12:30 30-03-2020 13:30`](images/meetingAddCharlotte.PNG)","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"bokung"},"content":"Notes:","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"FireRadical22"},"content":"* Meeting must not conflict in timing with other meetings scheduled for the day.","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"FireRadical22"},"content":"### Remove meeting : `meetingRemove`","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"FireRadical22"},"content":"Removes meeting from the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"sembcorpp"},"content":"Format: `meetingRemove CLIENT_INDEX MEETING_INDEX`","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"bokung"},"content":"Required Information:","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":206,"author":{"gitId":"sembcorpp"},"content":"* `client_INDEX`: Index of a client already in address book","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"sembcorpp"},"content":"* `MEETING_INDEX`: Index of meeting in a client","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"bokung"},"content":"Examples:","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":211,"author":{"gitId":"sembcorpp"},"content":"* `meetingRemove 20 6` Deletes the 6th meeting added from the client with index 20.","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"sembcorpp"},"content":"* `meetingRemove 3 1` Deletes the 1st meeting added from the client with index 3.","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"FireRadical22"},"content":"![result for meetingRemove 3 1](images/meetingRemove31.PNG)","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"TabrizPlv"},"content":"### Updating a meeting : `meetingUpdate`","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"sembcorpp"},"content":"Updates an existing meeting belonging to a client in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"sembcorpp"},"content":"Format: `meetingUpdate CLIENT_INDEX MEETING_INDEX [md/DESCRIPTION] [ms/START] [me/END]`","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"TabrizPlv"},"content":"Required Information:","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":224,"author":{"gitId":"sembcorpp"},"content":"* Index of a client already in address book","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"TabrizPlv"},"content":"* Meeting ID","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"TabrizPlv"},"content":"Examples:","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":229,"author":{"gitId":"FireRadical22"},"content":"* `meetingUpdate 1 1 md/ Policy discussion` Edits the meeting description of the 1st meeting belonging to the 1st client","lastModifiedDate":"2023-03-31"},{"lineNumber":230,"author":{"gitId":"FireRadical22"},"content":"  to `Policy discussion`","lastModifiedDate":"2023-03-31"},{"lineNumber":231,"author":{"gitId":"FireRadical22"},"content":"* `meetingUpdate 2 3 md/ Plan review ms/ 30-03-2020 20:10 me/ 30-03-2020 22:10` Updates the description, start and end","lastModifiedDate":"2023-03-31"},{"lineNumber":232,"author":{"gitId":"FireRadical22"},"content":"  of the 3rd meeting belonging to the 2nd client to `Plan review`, `30-03-2020 20:10` and `30-03-2020 22:10`","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"FireRadical22"},"content":"  respectively","lastModifiedDate":"2023-03-31"},{"lineNumber":234,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"TabrizPlv"},"content":"Notes:","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":237,"author":{"gitId":"sembcorpp"},"content":"* Edits the meetings of client at the specified `client_INDEX`.","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"TabrizPlv"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"TabrizPlv"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"bokung"},"content":"### Find meeting : `meetingFind`","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":243,"author":{"gitId":"bokung"},"content":"Gets meetings from the address book","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"sembcorpp"},"content":"Format: `meetingFind DATE `","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":247,"author":{"gitId":"bokung"},"content":"Required Information:","lastModifiedDate":"2023-03-09"},{"lineNumber":248,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":249,"author":{"gitId":"sembcorpp"},"content":"* Date (dd/mm/yyyy)","lastModifiedDate":"2023-04-01"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-09"},{"lineNumber":252,"author":{"gitId":"sembcorpp"},"content":"* `meetingFind 11/03/2023` Lists out all meetings that start on 9th November 2022 at 11.30","lastModifiedDate":"2023-04-01"},{"lineNumber":253,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":254,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":255,"author":{"gitId":"FireRadical22"},"content":"* `meetingFind 09-11-2022 11:30` Lists out all meetings that start on 9th November 2022 at 11.30","lastModifiedDate":"2023-03-31"},{"lineNumber":256,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":257,"author":{"gitId":"bokung"},"content":"### List meeting : `meetingList`","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":259,"author":{"gitId":"bokung"},"content":"Lists all meetings scheduled for the day from address book","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"bokung"},"content":"### List by region : `listRegion`","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"sembcorpp"},"content":"Lists all clients living in a given region","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"bokung"},"content":"Required information:","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"bokung"},"content":"* Region to search for","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"bokung"},"content":"* Region specified should be a valid region","lastModifiedDate":"2023-03-09"},{"lineNumber":269,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"bokung"},"content":"Examples:","lastModifiedDate":"2023-03-09"},{"lineNumber":271,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":272,"author":{"gitId":"sembcorpp"},"content":"* `listRegion Central` lists all clients from the Central region in the address book","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":274,"author":{"gitId":"sembcorpp"},"content":"### Find clients by policy name : `findPolicy`","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"sembcorpp"},"content":"Lists all clients that are under a given policy","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"FireRadical22"},"content":"Format: `findPolicy POLICY_NAME [MORE_POLICY_NAMES]`","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"FireRadical22"},"content":"Required information:","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":282,"author":{"gitId":"FireRadical22"},"content":"* Name of policy to search for","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":284,"author":{"gitId":"FireRadical22"},"content":"Examples:","lastModifiedDate":"2023-03-29"},{"lineNumber":285,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":286,"author":{"gitId":"sembcorpp"},"content":"* `findPolicy Insurance` Find clients with Insurance Policy as their tag","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":288,"author":{"gitId":"FireRadical22"},"content":"![result for findPolicy Insurance](images/findPolicyInsurance.PNG)","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-03-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":292,"author":{"gitId":"bokung"},"content":"Clears all entries from FAid.","lastModifiedDate":"2023-03-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-03-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-03-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-03-09"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"FireRadical22"},"content":"FAid data are saved in the hard disk automatically after any command that changes the data. There is no need to save","lastModifiedDate":"2023-03-31"},{"lineNumber":305,"author":{"gitId":"FireRadical22"},"content":"manually.","lastModifiedDate":"2023-03-31"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":309,"author":{"gitId":"FireRadical22"},"content":"FAid data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"FireRadical22"},"content":"data directly by editing that data file.","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":313,"author":{"gitId":"bokung"},"content":"If your changes to the data file makes its format invalid, FAid will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"FireRadical22"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2023-03-31"},{"lineNumber":323,"author":{"gitId":"FireRadical22"},"content":"the data of your previous AddressBook home folder.","lastModifiedDate":"2023-03-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"sembcorpp"},"content":"**Q**: How do I key in my client\u0027s region?\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"sembcorpp"},"content":"**A**: FAid automatically detects region based on address keyed in","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":332,"author":{"gitId":"FireRadical22"},"content":"|--- | Action | Format, Examples | |:----------------------:|:","lastModifiedDate":"2023-03-31"},{"lineNumber":333,"author":{"gitId":"FireRadical22"},"content":"------------------------------------------------------------------------------------------------------------------------------------------------------------------:","lastModifiedDate":"2023-03-31"},{"lineNumber":334,"author":{"gitId":"FireRadical22"},"content":"| | **Add**                | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":335,"author":{"gitId":"FireRadical22"},"content":"e.g, `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`  | |--- | **","lastModifiedDate":"2023-03-31"},{"lineNumber":336,"author":{"gitId":"FireRadical22"},"content":"Clear**              | `clear`","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"FireRadical22"},"content":"| |--- | **Delete**             | `delete INDEX` e.g., `delete 3`","lastModifiedDate":"2023-03-31"},{"lineNumber":338,"author":{"gitId":"FireRadical22"},"content":"| |--- | **Edit**               | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":339,"author":{"gitId":"FireRadical22"},"content":"e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                         | |--- | **Find**","lastModifiedDate":"2023-03-31"},{"lineNumber":340,"author":{"gitId":"FireRadical22"},"content":"| `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2023-03-31"},{"lineNumber":341,"author":{"gitId":"FireRadical22"},"content":"| |--- | **List**               | `list`","lastModifiedDate":"2023-03-31"},{"lineNumber":342,"author":{"gitId":"FireRadical22"},"content":"| |--- | **Help**               | `help`","lastModifiedDate":"2023-03-31"},{"lineNumber":343,"author":{"gitId":"FireRadical22"},"content":"| |--- | **Add Meeting**        | `meetingAdd CLIENT_INDEX /md DESC /ms START DATE\u0026TIME /md END DATE\u0026TIME`","lastModifiedDate":"2023-03-31"},{"lineNumber":344,"author":{"gitId":"FireRadical22"},"content":"| |--- | **Remove Meeting**     | `meetingRemove CLIENT_INDEX MEETING_INDEX`","lastModifiedDate":"2023-03-31"},{"lineNumber":345,"author":{"gitId":"FireRadical22"},"content":"| |--- | **Find Meeting**       | `meetingFind DATE[CLIENT_INDEX]`","lastModifiedDate":"2023-03-31"},{"lineNumber":346,"author":{"gitId":"FireRadical22"},"content":"| |--- | **List all meetings**  | `meetingList`","lastModifiedDate":"2023-03-31"},{"lineNumber":347,"author":{"gitId":"FireRadical22"},"content":"| |--- | **List all in Region** | `listRegion REGION`","lastModifiedDate":"2023-03-31"},{"lineNumber":348,"author":{"gitId":"FireRadical22"},"content":"| |---","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"sembcorpp":48,"bokung":40,"TabrizPlv":15,"-":143,"FireRadical22":102}},{"path":"docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"  color:#4B6B94 ;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Bootstrap style alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":".alert {","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  border-radius : $alert-border-radius;","lastModifiedDate":"2022-12-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Headings for larger alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":".alert-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":".alert-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  .alert-#{$color} {","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sembcorpp":1,"-":33}},{"path":"docs/diagrams/AddMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"box Logic #C8C8FA","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"participant \":AddMeetingCommandParser\" as AddMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"participant \":AddMeetingCommand\" as AddMeetingCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"[-\u003e LogicManager : execute(\"meetingAdd 1 \\n 30-03-2020 23:30 23:40\")","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"meetingAdd 1 \\n 30-03-2020 23:30 23:40\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"create AddMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"AddressBookParser -\u003e AddMeetingCommandParser : parse(\"1 30-03-2020 23:30 23:40\")","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"activate AddMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"create AddMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"AddMeetingCommandParser -\u003e AddMeetingCommand : AddMeetingCommand(index, string)","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"activate AddMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"AddMeetingCommand --\u003e AddMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"deactivate AddMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"AddMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"deactivate AddMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"LogicManager -\u003e AddMeetingCommand : execute(model)","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"activate AddMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"AddMeetingCommand -\u003e Model : getMeetings()","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"Model --\u003e AddMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"AddMeetingCommand -\u003e CommandResult : CommandResult()","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"CommandResult --\u003e AddMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"AddMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"deactivate AddMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"FireRadical22"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"FireRadical22":60}},{"path":"docs/diagrams/FindMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"participant \":FindMeetingCommandParser\" as FindMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"participant \"e:FindMeetingCommand\" as FindMeetingCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"[-\u003e LogicManager : execute(\"meeting find 22/01/2023\")","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"meeting find 22/01/2023\")","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"create FindMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"AddressBookParser -\u003e FindMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"activate FindMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"FindMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"deactivate FindMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"AddressBookParser -\u003e FindMeetingCommandParser : parse(meeting find 22/01/2023)","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"activate FindMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"create FindMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"FindMeetingCommandParser -\u003e FindMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"activate FindMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"FindMeetingCommand --\u003e FindMeetingCommandParser : e","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"sembcorpp"},"content":"deactivate FindMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"sembcorpp"},"content":"FindMeetingCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"deactivate FindMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"sembcorpp"},"content":"FindMeetingCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"sembcorpp"},"content":"destroy FindMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"sembcorpp"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"sembcorpp"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"sembcorpp"},"content":"LogicManager -\u003e FindMeetingCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"sembcorpp"},"content":"activate FindMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"sembcorpp"},"content":"FindMeetingCommand -\u003e Model : updateFilteredPositionList()","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"sembcorpp"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"sembcorpp"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"sembcorpp"},"content":"FindMeetingCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"sembcorpp"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"sembcorpp"},"content":"CommandResult --\u003e FindMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"sembcorpp"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"sembcorpp"},"content":"FindMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"sembcorpp"},"content":"deactivate FindMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"sembcorpp"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"sembcorpp"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"sembcorpp"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"sembcorpp":72}},{"path":"docs/diagrams/FindPolicySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"!include style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"box Logic #C8C8FA","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"participant \":FindPolicyCommandParser\" as FindPolicyCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"participant \":FindPolicyCommand\" as FindPolicyCommand LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"participant \":PolicyExistInPersonPredicate\" as PolicyExistInPersonPredicate MODEL_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"[-\u003e LogicManager: execute(\"findPolicy Insurance\")","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"activate LogicManager","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"LogicManager -\u003e AddressBookParser: parseCommand(\"findPolicy Insurance\")","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"create FindPolicyCommandParser","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"AddressBookParser -\u003e FindPolicyCommandParser: parse(\"Insurance\")","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"activate FindPolicyCommandParser","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"create PolicyExistInPersonPredicate","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"FindPolicyCommandParser -\u003e PolicyExistInPersonPredicate: PolicyExistInPersonPredicate(\"Insurance\")","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"activate PolicyExistInPersonPredicate","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"PolicyExistInPersonPredicate --\u003e FindPolicyCommandParser","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"deactivate PolicyExistInPersonPredicate","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"create FindPolicyCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"FindPolicyCommandParser -\u003e FindPolicyCommand: FindPolicyCommand()","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"activate FindPolicyCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"FindPolicyCommand --\u003e FindPolicyCommandParser","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"deactivate FindPolicyCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"FindPolicyCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"deactivate FindPolicyCommandParser","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"LogicManager -\u003e FindPolicyCommand: execute()","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"activate FindPolicyCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"FindPolicyCommand -\u003e Model: updateFilteredPersonList(predicate)","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"activate Model","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"Model --\u003e FindPolicyCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"deactivate Model","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"Create CommandResult","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"FindPolicyCommand -\u003e CommandResult: CommandResult()","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"activate CommandResult","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"FireRadical22"},"content":"CommandResult --\u003e FindPolicyCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"FireRadical22"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"FireRadical22"},"content":"FindPolicyCommand --\u003e LogicManager: CommandResult","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"FireRadical22"},"content":"deactivate FindPolicyCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"FireRadical22"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"FireRadical22"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"FireRadical22"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"FireRadical22":69}},{"path":"docs/diagrams/RegionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"Participant \":Address\" as ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"Participant \":Region\" as logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"-[USER_COLOR]\u003e ui : Address(address)","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"activate ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"ui -[LOGIC_COLOR]\u003e logic : getRegionFromAddress(address)","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"logic -[LOGIC_COLOR]\u003e logic : Detect Region","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"deactivate logic","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"bokung":15}},{"path":"docs/diagrams/RemoveMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"box Logic #C8C8FA","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"participant \":RemoveMeetingCommandParser\" as RemoveMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"participant \":RemoveMeetingCommand\" as RemoveMeetingCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"[-\u003e LogicManager : execute(\"meetingRemove 1 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"meetingRemove 1 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"create RemoveMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"AddressBookParser -\u003e RemoveMeetingCommandParser : parse(\"1 1\")","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"activate RemoveMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"create RemoveMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"RemoveMeetingCommandParser -\u003e RemoveMeetingCommand : RemoveMeetingCommand(index, index)","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"activate RemoveMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"RemoveMeetingCommand --\u003e RemoveMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"deactivate RemoveMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"RemoveMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"deactivate RemoveMeetingCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"LogicManager -\u003e RemoveMeetingCommand : execute(model)","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"activate RemoveMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"RemoveMeetingCommand -\u003e Model : getMeetings()","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"Model --\u003e RemoveMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"RemoveMeetingCommand -\u003e CommandResult : CommandResult()","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"CommandResult --\u003e RemoveMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"RemoveMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"deactivate RemoveMeetingCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"FireRadical22"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"FireRadical22":60}},{"path":"docs/diagrams/UpdateMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"participant \":UpdateMeetingCommandParser\" as UpdateMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"participant \"d:EditMeetingDescriptor\" as EditMeetingDescriptor LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"participant \"e:EditMeetingCommand\" as EditMeetingCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"[-\u003e LogicManager : execute(\"meetingUpdate 1 2 md/ Policy discussion \\n ms/ 30-03-2020 20:10 me/ 22:10\")","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"meetingUpdate 1 2 md/ Policy discussion \\n ms/ 30-03-2020 20:10 me/ 22:10\")","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"create UpdateMeetingCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"AddressBookParser -\u003e UpdateMeetingCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"activate UpdateMeetingCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"UpdateMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"deactivate UpdateMeetingCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"AddressBookParser -\u003e UpdateMeetingCommandParser : parse(1 2 md/ Policy discussion \\n ms/ 30-03-2020 20:10 me/ 22:10)","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"activate UpdateMeetingCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"create EditMeetingDescriptor","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"UpdateMeetingCommandParser -\u003e EditMeetingDescriptor","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"activate EditMeetingDescriptor","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"EditMeetingDescriptor --\u003e UpdateMeetingCommandParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"deactivate EditMeetingDescriptor","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"create EditMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"UpdateMeetingCommandParser -\u003e EditMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"activate EditMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"EditMeetingCommand --\u003e UpdateMeetingCommandParser : e","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"deactivate EditMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"UpdateMeetingCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"deactivate UpdateMeetingCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"UpdateMeetingCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"destroy UpdateMeetingCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"LogicManager -\u003e EditMeetingCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"activate EditMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"EditMeetingCommand -\u003e Model : setMeeting(2, d)","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"EditMeetingCommand -\u003e Model : updateFilteredPositionList()","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"EditMeetingCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"CommandResult --\u003e EditMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"EditMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"deactivate EditMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"@enduml","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"TabrizPlv":78}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"title: FAid","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W12-3/tp/actions)","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W12-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-W12-3/tp)","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"**FAid is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"* If you are interested in using FAid, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"* If you are interested about developing FAid, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokung":6,"-":13}},{"path":"docs/team/bokung.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"hello","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokung":1}},{"path":"docs/team/fireradical22.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"title: FireRadical22\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"### Project: FAid","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"FAid is designed for users who work as financial advisors and provides a platform for them to manage contacts, addresses, financial needs and plans of the clients, as well as meetings with clients.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"**Enhancements implemented**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"**Contributions to the UG:** to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"**Contributions to the DG:** to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"**Contributions to team-based tasks:** to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"**Review/Mentoring Contributions:** to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"**Contributions beyond team project:** to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"FireRadical22":26}},{"path":"docs/team/sembcorpp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"title: sembcorpp\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"### Project: FAid","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"FAid is designed for users who work as financial advisors and provides a platform for them to manage contacts, addresses, financial needs and plans of the clients, as well as meetings with clients.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"**Enhancements implemented**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"**Contributions to the UG:** to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"**Contributions to the DG:** to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"**Contributions to team-based tasks:** to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"**Review/Mentoring Contributions:** to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"**Contributions beyond team project:** to be added soon","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"sembcorpp":26}},{"path":"docs/team/tabrizplv.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"title: TabrizPlv\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"### Project: FAid","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"FAid is designed for users who work as financial advisors and provides a platform for them to manage contacts, addresses, financial needs and plans of the clients, as well as meetings with clients.","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"**Enhancements implemented**: to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"**Contributions to the UG:** to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"**Contributions to the DG:** to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"**Contributions to team-based tasks:** to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"**Review/Mentoring Contributions:** to be added soon","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"**Contributions beyond team project:** to be added soon","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"TabrizPlv":25}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"    public static final String MESSAGE_MEETINGS_LISTED_OVERVIEW \u003d \"%1$d meetings listed!\";","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sembcorpp":1,"-":12,"FireRadical22":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"    ObservableList\u003cMeetingWithPerson\u003e getFilteredMeetingList();","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"sembcorpp"},"content":"    ObservableList\u003cMeetingWithPerson\u003e updateFilteredMeetingList(Predicate\u003cMeetingWithPerson\u003e predicate);","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sembcorpp":3,"bokung":3,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"bokung"},"content":"    public ObservableList\u003cMeetingWithPerson\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"bokung"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"sembcorpp"},"content":"    public ObservableList\u003cMeetingWithPerson\u003e updateFilteredMeetingList(Predicate\u003cMeetingWithPerson\u003e predicate) {","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"sembcorpp"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"sembcorpp"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sembcorpp":6,"bokung":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":" * Adds meeting to a specified person","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"    public static final String COMMAND_WORD \u003d \"meetingAdd\";","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"        + \": Adds a meeting to the person identified\"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"        + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"        + \"A new meeting will not be added if there are clashes with\"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"        + \"other meetings on the day or period specified.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"        + \"Parameters: [INDEX] /md [DESC] /ms [DATE\u0026TIME START] /me [DATE\u0026TIME END]\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 /md Test /ms 30-03-2020 20:10 /me 30-03-2020 22:10\";","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"    public static final String MESSAGE_ADD_MEETING_SUCCESS \u003d \"Added meeting to Person: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"    private final Index index;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"    private final Meeting meeting;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"     * Adds meeting to the specified {@code Person}","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"     * @param index   index of person","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"     * @param meeting meeting to add","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"    public AddMeetingCommand(Index index, Meeting meeting) {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"     * Executes meetingAdd command.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"     * @return CommandResult Object","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"     * @throws CommandException when index specified is invalid or out of range","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"FireRadical22"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"FireRadical22"},"content":"        if (meeting.isCorrectPeriod()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"FireRadical22"},"content":"            String incorrectDateTimeMsg \u003d \"Start date and time should be before end date and time!\";","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"FireRadical22"},"content":"            throw new CommandException(incorrectDateTimeMsg);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"FireRadical22"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"FireRadical22"},"content":"        if (hasClash(meeting, personToEdit)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"FireRadical22"},"content":"            String meetingClashMsg \u003d \"Meeting specified clashes with other meetings!\";","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"FireRadical22"},"content":"            throw new CommandException(meetingClashMsg);","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"        // Adds meeting and returns edited person","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"        Person editedPerson \u003d model.addMeeting(personToEdit, meeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"FireRadical22"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"bokung"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"FireRadical22"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"FireRadical22"},"content":"     * Checks if any 2 AddMeetingCommand are the same. This is done","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"FireRadical22"},"content":"     * by checking if both Meeting objects are assigned to the same person","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"FireRadical22"},"content":"     * and have same day, start and end time.","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"FireRadical22"},"content":"     * @param other Other AddMeetingCommand object to compare to","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"FireRadical22"},"content":"     * @return boolean value on whether both objects are the same or not","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"FireRadical22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"FireRadical22"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"FireRadical22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"FireRadical22"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"FireRadical22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"FireRadical22"},"content":"        if (!(other instanceof AddMeetingCommand)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"FireRadical22"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"FireRadical22"},"content":"        // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"FireRadical22"},"content":"        AddMeetingCommand e \u003d (AddMeetingCommand) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"FireRadical22"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"FireRadical22"},"content":"            \u0026\u0026 meeting.equals(e.meeting);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"FireRadical22"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"FireRadical22"},"content":"     * the meeting is added to","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"FireRadical22"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"FireRadical22"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(personToEdit);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"FireRadical22"},"content":"        return String.format(MESSAGE_ADD_MEETING_SUCCESS, personToEdit.getName());","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"FireRadical22"},"content":"     * Checks if meeting provided clashes with other meetings that the person","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"FireRadical22"},"content":"     * has","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"FireRadical22"},"content":"     * @param meetingToCheck        Meeting object provided","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"FireRadical22"},"content":"     * @param personUnderInspection Person the Meeting object is being assigned to","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"FireRadical22"},"content":"     * @return boolean value","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"FireRadical22"},"content":"    private boolean hasClash(Meeting meetingToCheck, Person personUnderInspection) {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(personUnderInspection);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(meetingToCheck);","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"FireRadical22"},"content":"        ArrayList\u003cMeeting\u003e currentMeetings \u003d personUnderInspection.getMeetings();","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"FireRadical22"},"content":"        for (Meeting meeting : currentMeetings) {","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"FireRadical22"},"content":"            if (meetingToCheck.checkTimeClash(meeting)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"FireRadical22"},"content":"                return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"FireRadical22"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"FireRadical22"},"content":"        return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"bokung":4,"FireRadical22":135}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"FireRadical22"},"content":"        Set\u003cPolicyTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"FireRadical22"},"content":"        ArrayList\u003cMeeting\u003e updatedMeetings \u003d personToEdit.getMeetings();","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"FireRadical22"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedMeetings);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"FireRadical22"},"content":"        private Set\u003cPolicyTag\u003e tags;","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"FireRadical22"},"content":"        public void setTags(Set\u003cPolicyTag\u003e tags) {","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"FireRadical22"},"content":"        public Optional\u003cSet\u003cPolicyTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":220,"FireRadical22":9}},{"path":"src/main/java/seedu/address/logic/commands/FindMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.MeetingStartDatePredicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":" * Finds meetings with matching start date and time","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"public class FindMeetingCommand extends Command {","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"    public static final String COMMAND_WORD \u003d \"meetingFind\";","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all meetings with \"","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"            + \"the specified date (case-insensitive)  and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"            + \"Example: \" + COMMAND_WORD + \"23/03/2023\";","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"    private final LocalDate meetingStart;","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"     * Finds meeting with specified start date and time","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"     * @param meetingStart start date and time","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"    public FindMeetingCommand(LocalDate meetingStart) {","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"        requireNonNull(meetingStart);","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"        this.meetingStart \u003d meetingStart;","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"     * Executes meetingFind command","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"     * @return CommandResult that stores the success message upon successful execution of meetingFind","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"sembcorpp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"sembcorpp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"sembcorpp"},"content":"        model.updateFilteredMeetingList(new MeetingStartDatePredicate(meetingStart));","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"sembcorpp"},"content":"            String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, model.getFilteredMeetingList().size()));","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"sembcorpp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"sembcorpp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"sembcorpp"},"content":"            || (other instanceof FindMeetingCommand // instanceof handles nulls","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"            \u0026\u0026 meetingStart.equals(((FindMeetingCommand) other).meetingStart)); // state check","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"sembcorpp":45,"FireRadical22":13}},{"path":"src/main/java/seedu/address/logic/commands/FindPolicyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.PolicyExistInPersonPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":" * Finds people with specified policy tag","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"public class FindPolicyCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"    public static final String COMMAND_WORD \u003d \"findPolicy\";","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"        + \": finds clients that have the policy specified\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"        + \"If no such policy exists, no clients will appear on the right panel\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"        + \"Parameters: POLICY_NAME [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"        + \"Example: \" + COMMAND_WORD + \" Insurance\";","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Found %s with given policy\";","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"    private PolicyExistInPersonPredicate predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"     * Finds clients with policy specified by user","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"     * @param predicate policy specified by user","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"    public FindPolicyCommand(PolicyExistInPersonPredicate predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"     * Executes findPolicy command.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"     * @return CommandResult Object","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"     * @throws CommandException when index specified is invalid or out of range","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"            String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"            || (other instanceof FindPolicyCommand // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"            \u0026\u0026 predicate.equals(((FindPolicyCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"    private String getSuccessMessage(int size) {","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"        if (size \u003d\u003d 1) {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"            return String.format(MESSAGE_SUCCESS, \"1 person\");","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"            String people \u003d size + \" people\";","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"            return String.format(MESSAGE_SUCCESS, people);","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"FireRadical22":64}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"    public static final String COMMAND_WORD \u003d \"listPerson\";","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sembcorpp":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ListMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"public class ListMeetingCommand extends Command {","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"    public static final String COMMAND_WORD \u003d \"listMeeting\";","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all meetings\";","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"sembcorpp":24}},{"path":"src/main/java/seedu/address/logic/commands/ListRegionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.PersonLivesInRegionPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":" * Lists all persons residing in a region","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"public class ListRegionCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    public static final String COMMAND_WORD \u003d \"listRegion\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons living in given region\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all persons living in given region.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"            + \"Available regions are North, South, East, West, Central, Unknown\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"            + \"Parameters: REGION\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"            + \"Example: \" + COMMAND_WORD + \" north\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"    private final Regions targetRegion;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"    public ListRegionCommand(Regions targetRegion) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"        this.targetRegion \u003d targetRegion;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"        model.updateFilteredPersonList(new PersonLivesInRegionPredicate(targetRegion));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"     * Two commands are considered equal (or equivalent)","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"     * if executing both yields the exact same results for all model states \u003cp\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"     * For the list region command, having the same target region will guarantee the same results.","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"        // Safe typecast. Shortcircuit will disallow type mismatch at runtime","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"                || (other instanceof ListRegionCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"                \u0026\u0026 targetRegion.equals(((ListRegionCommand) other).targetRegion));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bokung":48}},{"path":"src/main/java/seedu/address/logic/commands/RemoveMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":" * Removes a meeting by specified index from specified person","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"public class RemoveMeetingCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"    public static final String COMMAND_WORD \u003d \"meetingRemove\";","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"        + \": Removes a meeting by specified index number from the person identified\"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"        + \"by the index number used in the last person listing.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"        + \"If there no meeting to be removed, nothing will be removed.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"        + \"Parameters: [Index] [Meeting Index]\"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"    public static final String MESSAGE_REMOVE_SUCCESS \u003d \"Removed meeting from person: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"    private Index indexPerson;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"    private Index indexMeeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"     * Removes meeting at specified index from specified {@code Person}","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"     * @param indexPerson  index of Person to look up","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"     * @param indexMeeting index of meeting in Person to remove","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"    public RemoveMeetingCommand(Index indexPerson, Index indexMeeting) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"        this.indexPerson \u003d indexPerson;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"        this.indexMeeting \u003d indexMeeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"     * Executes meetingRemove command","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"     * @return CommandResult Object","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"     * @throws CommandException when index of person or meeting specified is out of range or invalid","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"        if (indexPerson.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"        Person personToEdit \u003d lastShownList.get(indexPerson.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"        if (indexMeeting.getZeroBased() \u003e personToEdit.getMeetings().size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"        //Removes meeting and returns edited Person","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"        Person editedPerson \u003d model.removeMeeting(personToEdit, indexMeeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"FireRadical22"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"FireRadical22"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"FireRadical22"},"content":"     * the meeting is removed","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"FireRadical22"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"FireRadical22"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"FireRadical22"},"content":"        return String.format(MESSAGE_REMOVE_SUCCESS, personToEdit);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"FireRadical22"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"FireRadical22"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"FireRadical22"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"FireRadical22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"FireRadical22"},"content":"        if (!(o instanceof RemoveMeetingCommand)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"FireRadical22"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"FireRadical22"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"FireRadical22"},"content":"        RemoveMeetingCommand e \u003d (RemoveMeetingCommand) o;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"FireRadical22"},"content":"        return this.indexPerson.equals(e.indexPerson)","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"FireRadical22"},"content":"            \u0026\u0026 this.indexMeeting.equals(e.indexMeeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"bokung":1,"FireRadical22":88}},{"path":"src/main/java/seedu/address/logic/commands/UpdateMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":" * Updates an existing Meeting\u0027s start or end, or both","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"public class UpdateMeetingCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"    public static final String COMMAND_WORD \u003d \"meetingUpdate\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates a meeting of a person identified \"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        + \"by the index number of the person and index number of the person\u0027s meeting.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        + \"The meeting will not be updated if there are clashes with\"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        + \"other meetings on the day or period specified, \" + \"or if the end is before the start.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"        + \"Parameters: [INDEX] [MEETINGINDEX] md/[DESCRIPTION] ms/[DATE START] me/[DATE END]\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 2 md/Policy discussion ms/30-03-2020 20:10 me/22:10\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"    public static final String MESSAGE_UPDATE_MEETING_SUCCESS \u003d \"Meeting of Person updated: %1$s\";","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"    private final Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"    private final Index meetingIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"     * Constructor for UpdateMeetingCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"     * @param index                 index of Person","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"     * @param meetingIndex          Index of meeting to be updated","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"     * @param editMeetingDescriptor Object storing edited meeting","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"    public UpdateMeetingCommand(Index index, Index meetingIndex, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        requireNonNull(meetingIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"        this.meetingIndex \u003d meetingIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingToEdit}","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"    private static Meeting createEditedMeeting(Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor)","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"        String updatedDescription \u003d editMeetingDescriptor.getDescription().orElse(meetingToEdit.getDescription());","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime updatedStart \u003d editMeetingDescriptor.getStart().orElse(meetingToEdit.getStart());","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime updatedEnd \u003d editMeetingDescriptor.getEnd().orElse(meetingToEdit.getEnd());","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m \u003d new Meeting(updatedDescription, updatedStart, updatedEnd);","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"        if (m.isCorrectPeriod()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"            String incorrectDateTimeMsg \u003d \"Start date and time should be before end date and time!\";","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"            throw new CommandException(incorrectDateTimeMsg);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"        return m;","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"        if (meetingIndex.getZeroBased() \u003e\u003d personToEdit.getMeetings().size()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"        Meeting meetingToEdit \u003d personToEdit.getMeetings().get(meetingIndex.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"        if (editedMeeting.isCorrectPeriod()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"            String incorrectDateTimeMsg \u003d \"Start date and time should be before end date and time!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"            throw new CommandException(incorrectDateTimeMsg);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"        if (hasClash(editedMeeting, personToEdit)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"            String meetingClashMsg \u003d \"Meeting specified clashes with other meetings!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"            throw new CommandException(meetingClashMsg);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"bokung"},"content":"        model.updateMeeting(personToEdit, meetingIndex, editedMeeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"FireRadical22"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-04-02"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_MEETING_SUCCESS, editedMeeting));","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"     * Checks if meeting provided clashes with other meetings that the person","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"     * has","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"TabrizPlv"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"TabrizPlv"},"content":"     * @param meetingToCheck        Meeting object provided","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"     * @param personUnderInspection Person the Meeting object is being assigned to","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"TabrizPlv"},"content":"     * @return boolean value","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"TabrizPlv"},"content":"    private boolean hasClash(Meeting meetingToCheck, Person personUnderInspection) {","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"TabrizPlv"},"content":"        requireNonNull(personUnderInspection);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"TabrizPlv"},"content":"        requireNonNull(meetingToCheck);","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"TabrizPlv"},"content":"        ArrayList\u003cMeeting\u003e currentMeetings \u003d personUnderInspection.getMeetings();","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"TabrizPlv"},"content":"        for (int i \u003d 0; i \u003c currentMeetings.size(); i++) {","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"TabrizPlv"},"content":"            if (i \u003d\u003d meetingIndex.getZeroBased()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"TabrizPlv"},"content":"                continue;","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"TabrizPlv"},"content":"            Meeting meeting \u003d currentMeetings.get(i);","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"TabrizPlv"},"content":"            if (meetingToCheck.checkTimeClash(meeting)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"TabrizPlv"},"content":"                return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"TabrizPlv"},"content":"        return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"TabrizPlv"},"content":"        return this.index + \" \" + this.meetingIndex + \" \" + this.editMeetingDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"TabrizPlv"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"TabrizPlv"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"TabrizPlv"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"TabrizPlv"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"TabrizPlv"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"TabrizPlv"},"content":"        if (!(other instanceof UpdateMeetingCommand)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"TabrizPlv"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"TabrizPlv"},"content":"        // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand e \u003d (UpdateMeetingCommand) other;","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"TabrizPlv"},"content":"        return index.equals(e.index) \u0026\u0026 meetingIndex.equals(e.meetingIndex)","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"TabrizPlv"},"content":"            \u0026\u0026 editMeetingDescriptor.equals(e.editMeetingDescriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"TabrizPlv"},"content":"     * Stores the details to update the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"TabrizPlv"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"TabrizPlv"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"TabrizPlv"},"content":"        private String description;","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"TabrizPlv"},"content":"        private LocalDateTime start;","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"TabrizPlv"},"content":"        private LocalDateTime end;","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"TabrizPlv"},"content":"        public EditMeetingDescriptor() {","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"TabrizPlv"},"content":"        /**","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"TabrizPlv"},"content":"         * Constructor for EditMeetingDescriptor object","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"TabrizPlv"},"content":"         *","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"TabrizPlv"},"content":"         * @param toCopy Meeting to be edited","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"TabrizPlv"},"content":"         */","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"TabrizPlv"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"TabrizPlv"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"TabrizPlv"},"content":"            setStart(toCopy.start);","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"TabrizPlv"},"content":"            setEnd(toCopy.end);","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"TabrizPlv"},"content":"        /**","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"TabrizPlv"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"TabrizPlv"},"content":"         */","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"TabrizPlv"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"TabrizPlv"},"content":"            return CollectionUtil.isAnyNonNull(description, start, end);","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"TabrizPlv"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"TabrizPlv"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"TabrizPlv"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"TabrizPlv"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"TabrizPlv"},"content":"        public Optional\u003cLocalDateTime\u003e getStart() {","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"TabrizPlv"},"content":"            return Optional.ofNullable(start);","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"TabrizPlv"},"content":"        public void setStart(LocalDateTime start) {","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"TabrizPlv"},"content":"            this.start \u003d start;","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"TabrizPlv"},"content":"        public Optional\u003cLocalDateTime\u003e getEnd() {","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"TabrizPlv"},"content":"            return Optional.ofNullable(end);","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"TabrizPlv"},"content":"        public void setEnd(LocalDateTime end) {","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"TabrizPlv"},"content":"            this.end \u003d end;","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"TabrizPlv"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"TabrizPlv"},"content":"        public String toString() {","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"TabrizPlv"},"content":"            return this.description + \" \" + this.start + \" \" + this.end;","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"TabrizPlv"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"TabrizPlv"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"TabrizPlv"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"TabrizPlv"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"TabrizPlv"},"content":"                return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"TabrizPlv"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"TabrizPlv"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"TabrizPlv"},"content":"                return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"TabrizPlv"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"TabrizPlv"},"content":"            // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"TabrizPlv"},"content":"            EditMeetingDescriptor e \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"TabrizPlv"},"content":"            return getDescription().equals(e.getDescription()) \u0026\u0026 getStart().equals(e.getStart())","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"TabrizPlv"},"content":"                \u0026\u0026 getEnd().equals(e.getEnd());","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"bokung":1,"TabrizPlv":223,"FireRadical22":2}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"        Set\u003cPolicyTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"        ArrayList\u003cMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, meetings);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":57,"FireRadical22":8}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_DESC;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_END;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_START;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":" * Parse input arguments and create a new AddMeetingCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMeetingCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"     * @param args String of arguments to be parsed","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"     * @return AddMeetingCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"            PREFIX_MEETING_DESC, PREFIX_MEETING_START, PREFIX_MEETING_END);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"        Index index;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"                AddMeetingCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"        String description \u003d argMultimap.getValue(PREFIX_MEETING_DESC).get();","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"        String start \u003d argMultimap.getValue(PREFIX_MEETING_START).get();","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"        String end \u003d argMultimap.getValue(PREFIX_MEETING_END).get();","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"        Meeting meeting \u003d ParserUtil.parseMeeting(description, start, end);","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"        return new AddMeetingCommand(index, meeting);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"FireRadical22":47}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.FindPolicyCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.logic.commands.ListMeetingCommand;","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"import seedu.address.logic.commands.ListRegionCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.RemoveMeetingCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.logic.commands.UpdateMeetingCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"sembcorpp"},"content":"        case ListMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-01"},{"lineNumber":73,"author":{"gitId":"sembcorpp"},"content":"            return new ListMeetingCommand();","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"        case ListRegionCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"            return new ListRegionCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"FireRadical22"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"FireRadical22"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"sembcorpp"},"content":"        case FindMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"sembcorpp"},"content":"            return new FindMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"FireRadical22"},"content":"        case RemoveMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"FireRadical22"},"content":"            return new RemoveMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"FireRadical22"},"content":"        case FindPolicyCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"FireRadical22"},"content":"            return new FindPolicyCommandParser().parse(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"        case UpdateMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"            return new UpdateMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sembcorpp":8,"bokung":4,"TabrizPlv":4,"-":76,"FireRadical22":12}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"    public static final Prefix PREFIX_MEETING \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"    public static final Prefix PREFIX_MEETING_DESC \u003d new Prefix(\"md/\");","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"    public static final Prefix PREFIX_MEETING_START \u003d new Prefix(\"ms/\");","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    public static final Prefix PREFIX_MEETING_END \u003d new Prefix(\"me/\");","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TabrizPlv":3,"-":14,"FireRadical22":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"FireRadical22"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cPolicyTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"FireRadical22"},"content":"     * {@code Set\u003cPolicyTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"FireRadical22"},"content":"    private Optional\u003cSet\u003cPolicyTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":78,"FireRadical22":4}},{"path":"src/main/java/seedu/address/logic/parser/FindMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"     * Parses input arguments and creates a new ListRegionCommand object","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"    public class FindMeetingCommandParser implements Parser\u003cFindMeetingCommand\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"        @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"        public FindMeetingCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"            LocalDate meetingStart \u003d ParserUtil.parseDate(userInput);","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"            return new FindMeetingCommand(meetingStart);","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"        /*","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"    public FindMeetingCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"        LocalDateTime meetingStart \u003d ParserUtil.parseDateTime(userInput);","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"        return new FindMeetingCommand(meetingStart);","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"    }*/","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"sembcorpp":24,"FireRadical22":4}},{"path":"src/main/java/seedu/address/logic/parser/FindPolicyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.FindPolicyCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.PolicyExistInPersonPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":" * Parses input arguments and creates a new FindPolicyCommand object","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"public class FindPolicyCommandParser implements Parser\u003cFindPolicyCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"     * and returns a FindPolicyCommand object for execution.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"    public FindPolicyCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPolicyCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"        return new FindPolicyCommand(new PolicyExistInPersonPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"FireRadical22":33}},{"path":"src/main/java/seedu/address/logic/parser/ListRegionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import seedu.address.logic.commands.ListRegionCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":" * Parses input arguments and creates a new ListRegionCommand object","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"public class ListRegionCommandParser implements Parser\u003cListRegionCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"    public ListRegionCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"        Regions inputRegion \u003d ParserUtil.parseRegion(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"        return new ListRegionCommand(inputRegion);","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bokung":18}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":" * classes.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"FireRadical22"},"content":"     * Parses a {@code String tag} into a {@code PolicyTag}.","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"FireRadical22"},"content":"    public static PolicyTag parseTag(String tag) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"FireRadical22"},"content":"        if (!PolicyTag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"FireRadical22"},"content":"            throw new ParseException(PolicyTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"FireRadical22"},"content":"        return new PolicyTag(trimmedTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"FireRadical22"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cPolicyTag\u003e}.","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"FireRadical22"},"content":"    public static Set\u003cPolicyTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":128,"author":{"gitId":"FireRadical22"},"content":"        final Set\u003cPolicyTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"FireRadical22"},"content":"     * Parses {@code String meeting} into a {@code Meeting}.","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"FireRadical22"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"FireRadical22"},"content":"    public static Meeting parseMeeting(String desc, String start, String end) {","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(desc);","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(start);","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(end);","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"FireRadical22"},"content":"        String trimmedDesc \u003d desc.trim();","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime parsedStart \u003d parseDateTime(start.trim());","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime parsedEnd \u003d parseDateTime(end.trim());","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"FireRadical22"},"content":"        return new Meeting(trimmedDesc, parsedStart, parsedEnd);","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"FireRadical22"},"content":"     * Parses a {@code String region} into the correct {@code Regions} enum","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"bokung"},"content":"    public static Regions parseRegion(String region) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"bokung"},"content":"        requireNonNull(region); // Do we need to throw a ParserException here?","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"bokung"},"content":"        String processedInputRegion \u003d region.trim().toUpperCase();","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"bokung"},"content":"        Regions[] allRegions \u003d Regions.values();","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"bokung"},"content":"        for (Regions r : allRegions) {","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"bokung"},"content":"            if (r.toString().equals(processedInputRegion)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"bokung"},"content":"                return r;","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"bokung"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"bokung"},"content":"        throw new ParseException(Region.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"TabrizPlv"},"content":"    public static String parseMeetingDescription(String desc) {","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"TabrizPlv"},"content":"        return desc.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"TabrizPlv"},"content":"     * Parses a {@code String} into a {@code LocalDateTime}","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"TabrizPlv"},"content":"     * @param dateTime String of meeting start or end","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"TabrizPlv"},"content":"     * @return meeting dateTime parsed to LocalDateTime","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"TabrizPlv"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"TabrizPlv"},"content":"        String[] dateTimes \u003d dateTime.split(\" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"TabrizPlv"},"content":"        String[] date \u003d dateTimes[0].split(\"-\");","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"TabrizPlv"},"content":"        String[] time \u003d dateTimes[1].split(\":\");","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"TabrizPlv"},"content":"        int day \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"TabrizPlv"},"content":"        int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"TabrizPlv"},"content":"        int year \u003d Integer.parseInt(date[2]);","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"TabrizPlv"},"content":"        int startHour \u003d Integer.parseInt(time[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"TabrizPlv"},"content":"        int startMinute \u003d Integer.parseInt(time[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"TabrizPlv"},"content":"        return LocalDateTime.of(year, month, day, startHour, startMinute);","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"sembcorpp"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2023-04-01"},{"lineNumber":189,"author":{"gitId":"sembcorpp"},"content":"        String[] input \u003d date.split(\" \");","lastModifiedDate":"2023-04-01"},{"lineNumber":190,"author":{"gitId":"sembcorpp"},"content":"        String[] dates \u003d input[1].split(\"/\");","lastModifiedDate":"2023-04-01"},{"lineNumber":191,"author":{"gitId":"sembcorpp"},"content":"        int day \u003d Integer.parseInt(dates[0]);","lastModifiedDate":"2023-04-01"},{"lineNumber":192,"author":{"gitId":"sembcorpp"},"content":"        int month \u003d Integer.parseInt(dates[1]);","lastModifiedDate":"2023-04-01"},{"lineNumber":193,"author":{"gitId":"sembcorpp"},"content":"        int year\u003d Integer.parseInt(dates[2]);","lastModifiedDate":"2023-04-01"},{"lineNumber":194,"author":{"gitId":"sembcorpp"},"content":"        return LocalDate.of(year, month, day);","lastModifiedDate":"2023-04-01"},{"lineNumber":195,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sembcorpp":10,"bokung":21,"TabrizPlv":23,"-":112,"FireRadical22":30}},{"path":"src/main/java/seedu/address/logic/parser/RemoveMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.RemoveMeetingCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":" * Parse input arguments and create a new RemoveMeetingCommand Object","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"public class RemoveMeetingCommandParser implements Parser\u003cRemoveMeetingCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveMeetingCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"     * @param args String of arguments to be parsed","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"     * @return RemoveMeetingCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"    public RemoveMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"            String[] indexes \u003d args.trim().split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"            Index indexPerson \u003d ParserUtil.parseIndex(indexes[0]);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"            Index indexMeeting \u003d ParserUtil.parseIndex(indexes[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"            return new RemoveMeetingCommand(indexPerson, indexMeeting);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"        } catch (ParseException parseErr) {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveMeetingCommand.MESSAGE_USAGE, parseErr)","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"            );","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"FireRadical22":34}},{"path":"src/main/java/seedu/address/logic/parser/UpdateMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_END;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_START;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.logic.commands.UpdateMeetingCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.logic.commands.UpdateMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":" * Parses input arguments and creates a new UpdateMeetingCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"public class UpdateMeetingCommandParser implements Parser\u003cUpdateMeetingCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateMeetingCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"     * and returns an UpdateMeetingCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    public UpdateMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_MEETING_DESC, PREFIX_MEETING_START, PREFIX_MEETING_END);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"        Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"        Index meetingIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"        String[] allIndexes \u003d argMultimap.getPreamble().split(\" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"        if (allIndexes.length \u003e 2) {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"            index \u003d ParserUtil.parseIndex(allIndexes[0]);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"            meetingIndex \u003d ParserUtil.parseIndex(allIndexes[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateMeetingCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"                pe);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_DESC).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"            editMeetingDescriptor.setDescription(","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"                ParserUtil.parseMeetingDescription(argMultimap.getValue(PREFIX_MEETING_DESC).get()));","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_START).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"            editMeetingDescriptor.setStart(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_MEETING_START).get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"        if (argMultimap.getValue(PREFIX_MEETING_END).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"            editMeetingDescriptor.setEnd(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_MEETING_END).get()));","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"            throw new ParseException(UpdateMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"        return new UpdateMeetingCommand(index, meetingIndex, editMeetingDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"TabrizPlv":63}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"bokung"},"content":"    //// meeting operations","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"bokung"},"content":"     * Adds a meeting to the Person","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"     * @param personToEdit person we want to add meeting to","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"     * @param meeting meeting that is to be added","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"FireRadical22"},"content":"     * @return Person object with a new meeting added","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"bokung"},"content":"    public Person addMeeting(Person personToEdit, Meeting meeting) {","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"bokung"},"content":"        personToEdit.getMeetings().add(meeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"bokung"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"bokung"},"content":"            personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"bokung"},"content":"            personToEdit.getAddress(), personToEdit.getTags(), personToEdit.getMeetings());","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"bokung"},"content":"        this.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"bokung"},"content":"        persons.refreshInternalMeetingList();","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"bokung"},"content":"        return editedPerson;","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"FireRadical22"},"content":"     * Removes a meeting from the {@code Person} list of meetings","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"FireRadical22"},"content":"     * @param personToEdit person we want to remove the meeting from","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"FireRadical22"},"content":"     * @param indexMeeting index in meeting list at which the meeting is to be removed","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"FireRadical22"},"content":"     * @return Person with specified meeting removed","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"bokung"},"content":"    public Person removeMeeting(Person personToEdit, Index indexMeeting) {","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"bokung"},"content":"        personToEdit.getMeetings().remove(indexMeeting.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"bokung"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"bokung"},"content":"            personToEdit.getAddress(), personToEdit.getTags(), personToEdit.getMeetings());","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"FireRadical22"},"content":"        this.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"bokung"},"content":"        persons.refreshInternalMeetingList();","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"bokung"},"content":"        return editedPerson;","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"FireRadical22"},"content":"     * Update {@code Person} list of meetings with updated meeting information","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"FireRadical22"},"content":"     * @param personToEdit person we want to update meeting to","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"FireRadical22"},"content":"     * @param meetingIndex index in meeting list in which we want to update the meeting","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"FireRadical22"},"content":"     * @param editedMeeting the updated meeting","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"FireRadical22"},"content":"     * @return Person with specified meeting updated","lastModifiedDate":"2023-04-02"},{"lineNumber":138,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"FireRadical22"},"content":"    public Person updateMeeting(Person personToEdit, Index meetingIndex, Meeting editedMeeting) {","lastModifiedDate":"2023-04-02"},{"lineNumber":140,"author":{"gitId":"bokung"},"content":"        personToEdit.setMeeting(meetingIndex.getZeroBased(), editedMeeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"FireRadical22"},"content":"        Person editPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-04-02"},{"lineNumber":142,"author":{"gitId":"FireRadical22"},"content":"            personToEdit.getAddress(), personToEdit.getTags(), personToEdit.getMeetings());","lastModifiedDate":"2023-04-02"},{"lineNumber":143,"author":{"gitId":"FireRadical22"},"content":"        this.setPerson(personToEdit, editPerson);","lastModifiedDate":"2023-04-02"},{"lineNumber":144,"author":{"gitId":"bokung"},"content":"        persons.refreshInternalMeetingList();","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"FireRadical22"},"content":"        return editPerson;","lastModifiedDate":"2023-04-02"},{"lineNumber":146,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"bokung"},"content":"    public ObservableList\u003cMeetingWithPerson\u003e getMeetingList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"bokung"},"content":"        return persons.getAllMeetingAsUnmodifiableObservableList();","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokung":37,"-":120,"FireRadical22":20}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    Predicate\u003cMeetingWithPerson\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"bokung"},"content":"    /** Returns an unmodifiable view of the filtered meeting list */","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"bokung"},"content":"    ObservableList\u003cMeetingWithPerson\u003e getFilteredMeetingList();","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"bokung"},"content":"     * Updates the filtered meeting list to filter by input {@code predicate}","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"bokung"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"bokung"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeetingWithPerson\u003e predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"    Person addMeeting(Person personToEdit, Meeting meeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"    Person removeMeeting(Person personToEdit, Index indexMeeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"FireRadical22"},"content":"    Person updateMeeting(Person personToEdit, Index indexMeeting, Meeting editedMeeting);","lastModifiedDate":"2023-04-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bokung":18,"-":87,"FireRadical22":1}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    private final FilteredList\u003cMeetingWithPerson\u003e filteredMeetings;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.addressBook.getMeetingList());","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"bokung"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Meeting List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"bokung"},"content":"    public ObservableList\u003cMeetingWithPerson\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"bokung"},"content":"        return filteredMeetings;","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"bokung"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeetingWithPerson\u003e predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"bokung"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"bokung"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"bokung"},"content":"    public Person addMeeting(Person personToEdit, Meeting meeting) {","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"bokung"},"content":"        Person editedPerson \u003d addressBook.addMeeting(personToEdit, meeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"bokung"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"bokung"},"content":"        return editedPerson;","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"bokung"},"content":"    public Person removeMeeting(Person personToEdit, Index indexMeeting) {","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"bokung"},"content":"        Person editedPerson \u003d addressBook.removeMeeting(personToEdit, indexMeeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"bokung"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"bokung"},"content":"        return editedPerson;","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"FireRadical22"},"content":"    public Person updateMeeting(Person personToEdit, Index meetingIndex, Meeting editedMeeting) {","lastModifiedDate":"2023-04-02"},{"lineNumber":183,"author":{"gitId":"FireRadical22"},"content":"        Person editedPerson \u003d addressBook.updateMeeting(personToEdit, meetingIndex, editedMeeting);","lastModifiedDate":"2023-04-02"},{"lineNumber":184,"author":{"gitId":"bokung"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"FireRadical22"},"content":"        return editedPerson;","lastModifiedDate":"2023-04-02"},{"lineNumber":186,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokung":35,"-":149,"FireRadical22":3}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"     * Returns an unmodifiable view of the meeting list based on the meeting fields in each person.","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e Meetings are very dependent on the list of {@code Person} that {@code AddressBook} contains.","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"     * This method will look through every Person and collect all meetings that each {@code Person} has.","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"     * Current implementation has to look through the whole {@code Person} list each time the complete","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"     * Meeting List is requested, for safety and correctness reasons.","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"     * This should not have significant impact on runtime since the complete Meeting List is only requested","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"     * on initialisation. \u003cstrong\u003eUse this method efficiently and try not to call it too many times.\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"    ObservableList\u003cMeetingWithPerson\u003e getMeetingList();","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokung":12,"-":17}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    private Regions region; // Not final to allow user to edit region directly if detection fails","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"        region \u003d Region.getRegionFromAddress(address);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"    public String getRegionString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"        return region.getDisplayString();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"    public Regions getRegion() {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"        return this.region;","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokung":11,"-":57}},{"path":"src/main/java/seedu/address/model/person/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":" * Represents a Person\u0027s meetings in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"public class Meeting implements Comparable\u003cMeeting\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"    protected String description;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"    private DateTimeFormatter customFormat \u003d DateTimeFormatter.ofPattern(\"eeee MMMM d u HH:mm\");","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"     * Constructor for Meeting","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"     * @param description description of the meeting","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"     * @param start       start date and time of meeting","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"     * @param end         end date and time of meeting","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"    public Meeting(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"     * Default Constructor that generates an empty meeting","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"    public Meeting() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"        this.start \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"        this.end \u003d LocalDateTime.MAX;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"     * Checks if there are timing clashes between this meeting and m","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"     * Returns true if timings do clash, false otherwise","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"     * @param m Meeting to be compared with","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"    public boolean checkTimeClash(Meeting m) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"        //if m starts and end at the same time","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"        if (m.start.isEqual(this.start) \u0026\u0026 m.end.isEqual(this.end)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"        //if m ends at this.start","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"        if (m.end.isEqual(this.start)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"        //if m ends in between","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"        if (m.end.isAfter(this.start) \u0026 m.end.isBefore(this.end)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"        //if m starts at the same time","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"        if (m.start.isEqual(this.start)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"        //if m starts in between","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"        if (m.start.isAfter(this.start) \u0026 m.start.isBefore(this.end)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"        //if m starts at the end","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"FireRadical22"},"content":"        if (m.start.isEqual(this.end)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"        return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"FireRadical22"},"content":"    public int compareTo(Meeting otherMeeting) {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"FireRadical22"},"content":"        if (this.start.isBefore(otherMeeting.start)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"FireRadical22"},"content":"            return -1;","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"FireRadical22"},"content":"        } else if (this.start.equals(otherMeeting.start)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"FireRadical22"},"content":"            return 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"FireRadical22"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"FireRadical22"},"content":"            return 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"        if (!(o instanceof Meeting)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"            return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"        Meeting mt \u003d (Meeting) o;","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"        return mt.start.equals(this.start) \u0026\u0026 mt.end.equals(this.end);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"FireRadical22"},"content":"        if (isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"FireRadical22"},"content":"            return \"No Meeting!\";","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"        String startDnT \u003d start.format(customFormat);","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"        String endDnT \u003d end.format(customFormat);","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"        return \"Meeting: \" + this.description + \", Begins at: \" + startDnT + \", Ends at: \" + endDnT;","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"FireRadical22"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"        return this.start.isEqual(LocalDateTime.MAX) \u0026\u0026 this.end.isEqual(LocalDateTime.MAX);","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"FireRadical22"},"content":"    public boolean isCorrectPeriod() {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"FireRadical22"},"content":"        return end.isBefore(start);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"FireRadical22"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"FireRadical22"},"content":"        return start;","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"TabrizPlv"},"content":"    public void setStart(LocalDateTime start) {","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"TabrizPlv"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"FireRadical22"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"FireRadical22"},"content":"        return end;","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"bokung"},"content":"    public String getStartString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"bokung"},"content":"        return start.format(customFormat);","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"bokung"},"content":"    public String getEndString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"bokung"},"content":"        return end.format(customFormat);","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"TabrizPlv"},"content":"    public void setEnd(LocalDateTime end) {","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"TabrizPlv"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"TabrizPlv"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"TabrizPlv"},"content":"        return description;","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"TabrizPlv"},"content":"    public void setDescription(String desc) {","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"TabrizPlv"},"content":"        this.description \u003d desc;","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"bokung":10,"TabrizPlv":86,"FireRadical22":50}},{"path":"src/main/java/seedu/address/model/person/MeetingStartDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":" * Represents the start date and time to be used to check against","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":" * {@code Person} list of {@code Meetings}","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"public class MeetingStartDatePredicate implements Predicate\u003cMeetingWithPerson\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"     * Tests that a {@code MeetingWithPerson} starts in given day","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"     * Constructs a new predicate that tests for the target region \u003cp\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"     * Returned predicate will evaluate to {@code True} if meeting starts with meetingStart date. False Otherwise.","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"     * @param startDate target region that predicate will return {@code True} for","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"    public MeetingStartDatePredicate(LocalDate startDate) {","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"    public boolean test(MeetingWithPerson m) {","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"        return m.getStart().toLocalDate().equals(startDate);","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"sembcorpp":28,"FireRadical22":5}},{"path":"src/main/java/seedu/address/model/person/MeetingWithPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":" * Slight Variation of a normal {@code Meeting} that also stores data about the person to meet.","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":" * Mostly a helper class for {@code UniquePersonList} to help UI know the name of the person to display","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"public class MeetingWithPerson extends Meeting {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"    private final Person personToMeet;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"     * Assigns a {@code Meeting} to {@code Person}","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"     * @param meeting Meeting to be assigned","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"     * @param personToMeet Person to be assigned to","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"    public MeetingWithPerson(Meeting meeting, Person personToMeet) {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"        super(meeting.description, meeting.start, meeting.end);","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"        this.personToMeet \u003d personToMeet;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"    public Person getPersonToMeet() {","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"        return personToMeet;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"bokung":19,"FireRadical22":5}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"    private final Set\u003cPolicyTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"    private final ArrayList\u003cMeeting\u003e meetings;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cPolicyTag\u003e tags) {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"sembcorpp"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"        this.meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"sembcorpp"},"content":"     * Overloaded constructor to take in meetings as an argument","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cPolicyTag\u003e tags,","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"                  ArrayList\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"sembcorpp"},"content":"        this.meetings \u003d meetings;","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"FireRadical22"},"content":"    public Set\u003cPolicyTag\u003e getTags() {","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"sembcorpp"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"sembcorpp"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"sembcorpp"},"content":"    public ArrayList\u003cMeeting\u003e getMeetings() {","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"sembcorpp"},"content":"        return meetings;","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"sembcorpp"},"content":"    public Meeting getMeeting(int index) {","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"sembcorpp"},"content":"        return this.meetings.get(index);","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"sembcorpp"},"content":"    public void setMeeting(int index, Meeting m) {","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"sembcorpp"},"content":"        this.meetings.set(index, m);","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"sembcorpp"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"sembcorpp"},"content":"     * Gets the most recent meeting that the person has","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"sembcorpp"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"sembcorpp"},"content":"    public Meeting getUpcomingMeeting() {","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"sembcorpp"},"content":"        if (meetings.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"sembcorpp"},"content":"            return new Meeting();","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"sembcorpp"},"content":"        Meeting mostUpcomingMeeting \u003d meetings.get(0);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"sembcorpp"},"content":"        for (Meeting meeting : meetings) {","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"sembcorpp"},"content":"            if (mostUpcomingMeeting.compareTo(meeting) \u003e 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"sembcorpp"},"content":"                mostUpcomingMeeting \u003d meeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"sembcorpp"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"sembcorpp"},"content":"        return mostUpcomingMeeting;","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"sembcorpp"},"content":"            \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"sembcorpp"},"content":"            \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"sembcorpp"},"content":"            \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"sembcorpp"},"content":"            \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"sembcorpp"},"content":"            \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"sembcorpp"},"content":"        return Objects.hash(name, phone, email, address, tags, meetings);","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"sembcorpp"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"sembcorpp"},"content":"            .append(getPhone())","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"sembcorpp"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"sembcorpp"},"content":"            .append(getEmail())","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"sembcorpp"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"sembcorpp"},"content":"            .append(getAddress());","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"FireRadical22"},"content":"        Set\u003cPolicyTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"sembcorpp"},"content":"        List\u003cMeeting\u003e meetings \u003d getMeetings();","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"sembcorpp"},"content":"        String meetingHeader \u003d meetings.size() \u003d\u003d 1","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"sembcorpp"},"content":"            ? \"; Meeting: \"","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"sembcorpp"},"content":"            : \"; Meetings: \";","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"sembcorpp"},"content":"        if (!meetings.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"sembcorpp"},"content":"            builder.append(meetingHeader);","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"sembcorpp"},"content":"            meetings.forEach(builder::append);","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"sembcorpp"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"sembcorpp":75,"-":104,"FireRadical22":10}},{"path":"src/main/java/seedu/address/model/person/PersonLivesInRegionPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":" * Tests that a {@code Person} lives in the given region","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"public class PersonLivesInRegionPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"    private Regions targetRegion;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"     * Constructs a new predicate that tests for the target region \u003cp\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"     * Returned predicate will evaluate to {@code True} if person lives in {@code targetRegions}. False Otherwise.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"     * @param targetRegions target region that predicate will return {@code True} for","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    public PersonLivesInRegionPredicate(Regions targetRegions) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"        this.targetRegion \u003d targetRegions;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"    public boolean test(Person t) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"        return t.getAddress().getRegion().equals(targetRegion);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bokung":27}},{"path":"src/main/java/seedu/address/model/person/PolicyExistInPersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":" * Represents the specified policy name to be used to check against","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":" * {@code Person} list of {@code Meetings} for matching {@code PolicyTag} names","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"public class PolicyExistInPersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"    public PolicyExistInPersonPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"            .anyMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"                .filter(policy -\u003e policy.tagName.contains(keyword)).count() \u003e 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"            || (other instanceof PolicyExistInPersonPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"            \u0026\u0026 keywords.equals(((PolicyExistInPersonPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"FireRadical22":30}},{"path":"src/main/java/seedu/address/model/person/Region.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":" * Represents the region in which a person is located in.","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":" * Regions are immutable upon creation.","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":" * To create a region object, either call the base constructor with a","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":" * specific region selected from the {@code Regions} enum or, with a specific","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":" * town selected from the {@code Towns} enum.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"public class Region {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"            \"Region in Singapore should be either North, South, East, West or Central\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"            + \"No other regions are accepted!\\n\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"     * Enum that represents all regions of Singapore","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"    public enum Regions {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"        NORTH, SOUTH, EAST, WEST, CENTRAL, UNKNOWN;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"        /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"         * Returns a string to be displayed in the UI","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"         * @return string in all lower case with first letter capitalised","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"         */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        public String getDisplayString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"            String allCapsRegion \u003d this.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"            String capitaliseFirstLetter \u003d allCapsRegion.substring(0, 1).toUpperCase()","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"                    + allCapsRegion.substring(1).toLowerCase();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"            return \"Region: \" + capitaliseFirstLetter;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"     * Enum that has all the towns in Singapore and their respective regions.","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"     * Town region is determined using this website:","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"    public enum Towns {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"        ADMIRALTY(Regions.NORTH), KRANJI(Regions.NORTH), WOODLANDS(Regions.NORTH),","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"        SEMBAWANG(Regions.NORTH), YISHUN(Regions.NORTH), YIO_CHU_KANG(Regions.NORTH),","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"        SELETAR(Regions.NORTH), SENGKANG(Regions.NORTH),","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"        HOLLAND_VILLAGE(Regions.SOUTH), QUEENSTOWN(Regions.SOUTH), BUKIT_MERAH(Regions.SOUTH),","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"        TELOK_BLANGAH(Regions.SOUTH), PASIR_PANJANG(Regions.SOUTH), SENTOSA(Regions.SOUTH),","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"        BUKIT_TIMAH(Regions.SOUTH), NEWTON(Regions.SOUTH), ORCHARD(Regions.SOUTH),","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"        CENTRAL_BUSINESS_DISTRICT(Regions.SOUTH), MARINA_SOUTH(Regions.SOUTH),","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"        SERANGOON(Regions.EAST), PUNGGOL(Regions.EAST), HOUGANG(Regions.EAST),","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"        TAMPINES(Regions.EAST), PASIR_RIS(Regions.EAST), LOYANG(Regions.EAST),","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"        SIMEI(Regions.EAST), KALLANG(Regions.EAST), KATONG(Regions.EAST),","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"        EAST_COAST(Regions.EAST), MACPHERSON(Regions.EAST), BEDOK(Regions.EAST),","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"        PULAU_UBIN(Regions.EAST), PULAU_TEKONG(Regions.EAST),","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"        LIM_CHU_KANG(Regions.WEST), CHOA_CHU_KANG(Regions.WEST), BUKIT_PANJANG(Regions.WEST),","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"        TUAS(Regions.WEST), JURONG_EAST(Regions.WEST), JURONG_WEST(Regions.WEST),","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"        JURONG_INDUSTRIAL_ESTATE(Regions.WEST), BUKIT_BATOK(Regions.WEST), HILLVIEW(Regions.WEST),","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"        WEST_COAST(Regions.WEST), CLEMENTI(Regions.WEST),","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"        THOMSON(Regions.CENTRAL), MARYMOUNT(Regions.CENTRAL), SIN_MING(Regions.CENTRAL),","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"        ANG_MO_KIO(Regions.CENTRAL), BISHAN(Regions.CENTRAL), SERANGOON_GARDENS(Regions.CENTRAL),","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"        MACRITCHIE(Regions.CENTRAL), TOA_PAYOH(Regions.CENTRAL), GEYLANG(Regions.CENTRAL),","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"        ALJUNIED(Regions.CENTRAL);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"        private final Regions townRegion;","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"        private Towns(Regions townRegion) {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokung"},"content":"            this.townRegion \u003d townRegion;","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokung"},"content":"        private Regions region() {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokung"},"content":"            return townRegion;","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokung"},"content":"    private final Regions region;","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bokung"},"content":"     * Constructor for a new Region object.","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokung"},"content":"     * Use {@code Regions} enum to select region","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"bokung"},"content":"     * @param region Region of this object","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokung"},"content":"    public Region(Regions region) {","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokung"},"content":"        this.region \u003d region;","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokung"},"content":"     * Factory method that returns the correct region based on the town.","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokung"},"content":"     * Region classification is based on the following URL:","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokung"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokung"},"content":"     * Use {@code Towns} enum to select the town","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokung"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"bokung"},"content":"     * @param town Town selected from {@code Towns} enum","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bokung"},"content":"     * @return the region that the town is in","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokung"},"content":"    public Region(Towns town) {","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokung"},"content":"        this.region \u003d town.region();","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"     * Returns the region of this object","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"bokung"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"bokung"},"content":"     * @return a region defined by the {@code Regions} enum","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"bokung"},"content":"    public Regions getRegion() {","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"bokung"},"content":"        return this.region;","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"bokung"},"content":"     * Returns the detected region based on the address \u003cp\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"bokung"},"content":"     * Goes through all towns and attempts to find a match of a town name in the address.","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"bokung"},"content":"     * If the town name cannot be found, it returns {@code Regions.UNKNOWN}","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"bokung"},"content":"     * @param address address that we find to get the region from","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"bokung"},"content":"     * @return detected region if there is one, {@code Regions.UNKNOWN} if no town is found","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"bokung"},"content":"    public static Regions getRegionFromAddress(String address) {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"bokung"},"content":"        String toUpperCaseAddress \u003d address.toUpperCase();","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"bokung"},"content":"        Towns[] allTowns \u003d Towns.values();","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"bokung"},"content":"        for (Towns t : allTowns) {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"bokung"},"content":"            String spacedTownName \u003d t.toString().replace(\u0027_\u0027, \u0027 \u0027);","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"bokung"},"content":"            if (toUpperCaseAddress.contains(spacedTownName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"bokung"},"content":"                return t.townRegion;","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"bokung"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"bokung"},"content":"        return Regions.UNKNOWN;","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokung":131}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"    private final ObservableList\u003cMeetingWithPerson\u003e internalMeetingList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"    private final ObservableList\u003cMeetingWithPerson\u003e internalUmodifiableMeetingList \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"            FXCollections.unmodifiableObservableList(internalMeetingList);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"bokung"},"content":"     * Returns a list of all the meetings that every person in this list has.","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"bokung"},"content":"     * List returned is unmodifiable","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"bokung"},"content":"     * Internal Meeting list is refreshed before it is returned.","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"bokung"},"content":"    public ObservableList\u003cMeetingWithPerson\u003e getAllMeetingAsUnmodifiableObservableList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"bokung"},"content":"        refreshInternalMeetingList();","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"bokung"},"content":"        return internalUmodifiableMeetingList;","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"bokung"},"content":"     * Refreshes the internal meeting list, should be called when any meetings are modified","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"bokung"},"content":"    public void refreshInternalMeetingList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"bokung"},"content":"        // Converts the internalList into a stream, maps every person inside it to it\u0027s meeting list,","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"bokung"},"content":"        // then every ArrayList of Meetings are combined together to form one giant ArrayList that","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"bokung"},"content":"        // contains all the meetings that every person has","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"bokung"},"content":"        ArrayList\u003cMeetingWithPerson\u003e meeting \u003d internalList.stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"bokung"},"content":"                                           .flatMap(p -\u003e p.getMeetings().stream().map(m -\u003e new MeetingWithPerson(m, p)))","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"bokung"},"content":"                                           .collect(ArrayList::new, ArrayList::add, ArrayList::addAll);","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"bokung"},"content":"        internalMeetingList.clear();","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"bokung"},"content":"        internalMeetingList.addAll(meeting);","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokung":29,"-":137}},{"path":"src/main/java/seedu/address/model/tag/PolicyTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":" * Represents a PolicyTag in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"public class PolicyTag {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"     * Constructs a {@code PolicyTag}.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"    public PolicyTag(String tagName) {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"                || (other instanceof PolicyTag // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"                \u0026\u0026 tagName.equals(((PolicyTag) other).tagName)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":48,"FireRadical22":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"    public static final ArrayList\u003cMeeting\u003e EMPTYMEETINGLIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"                getTagSet(\"Insurance\"), EMPTYMEETINGLIST),","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"                getTagSet(\"Investment\", \"Insurance\"), EMPTYMEETINGLIST),","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"                getTagSet(\"Retirement\"), EMPTYMEETINGLIST),","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"                getTagSet(\"Investment\"), EMPTYMEETINGLIST),","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"                getTagSet(\"DebtManagement\"), EMPTYMEETINGLIST),","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"                getTagSet(\"AssetManagement\", \"Investment\"), EMPTYMEETINGLIST)","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"    public static Set\u003cPolicyTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"FireRadical22"},"content":"                .map(PolicyTag::new)","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":51,"FireRadical22":14}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"    private final String description;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given {@code start @code name}.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"    public JsonAdaptedMeeting(String dateTime) {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"        String[] dateTimeStrings \u003d dateTime.split(\"\\\\?\");","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        this.description \u003d dateTimeStrings[0];","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        this.start \u003d LocalDateTime.parse(dateTimeStrings[1].trim());","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        this.end \u003d LocalDateTime.parse(dateTimeStrings[2].trim());","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        this.description \u003d source.getDescription();","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"        this.start \u003d source.getStart();","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"        this.end \u003d source.getEnd();","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"    @JsonValue","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"    public String getString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"        return this.description + \"?\" + this.start.toString() + \"?\" + this.end.toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"     * Converts this Jackson-friendly adapted Meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"     * @throws IllegalValueException if start is after end","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"        if (this.end.isBefore(this.start)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"            throw new IllegalValueException(\"End time is after start!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"        return new Meeting(this.description, this.start, this.end);","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"TabrizPlv":7,"FireRadical22":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"    private final ArrayList\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"                             @JsonProperty(\"meetings\") ArrayList\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"        if (meetings !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"            this.meetings.addAll(meetings);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"        tagged.addAll(source.getTags().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"        meetings.addAll(source.getMeetings().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"FireRadical22"},"content":"        final List\u003cPolicyTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"        final ArrayList\u003cMeeting\u003e personMeetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"        for (JsonAdaptedMeeting meeting : meetings) {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"            personMeetings.add(meeting.toModelType());","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"FireRadical22"},"content":"        final Set\u003cPolicyTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"FireRadical22"},"content":"        final ArrayList\u003cMeeting\u003e modelMeetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"FireRadical22"},"content":"        //modelMeetings.add(new Meeting());","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"FireRadical22"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelMeetings);","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"TabrizPlv":6,"-":101,"FireRadical22":15}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":" * Jackson-friendly version of {@link PolicyTag}.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"     * Converts a given {@code PolicyTag} into this class for Jackson use.","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"    public JsonAdaptedTag(PolicyTag source) {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code PolicyTag} object.","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"    public PolicyTag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"        if (!PolicyTag.isValidTagName(tagName)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"            throw new IllegalValueException(PolicyTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"        return new PolicyTag(tagName);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":39,"FireRadical22":9}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.person.MeetingStartDatePredicate;","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"    ","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"sembcorpp"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-04-01"},{"lineNumber":129,"author":{"gitId":"sembcorpp"},"content":"        MeetingStartDatePredicate predicate \u003d new MeetingStartDatePredicate(today);","lastModifiedDate":"2023-04-01"},{"lineNumber":130,"author":{"gitId":"sembcorpp"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.updateFilteredMeetingList(predicate));","lastModifiedDate":"2023-04-01"},{"lineNumber":131,"author":{"gitId":"bokung"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sembcorpp":8,"bokung":8,"-":197}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    public final Meeting meeting;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"    private Label meetingTitle;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"    private Label id;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"    private Label person;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"    private Label start;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"    private Label end;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"    private FlowPane tags; // Unused currently","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"     * Creates a {@code MeetingCard} with the given {@code Meeting} and index to display.","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex, Person personToMeet) {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"        super(FXML);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"        meetingTitle.setText(meeting.getDescription());","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"        person.setText(personToMeet.getName().fullName);","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"        start.setText(meeting.getStartString());","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"        end.setText(meeting.getEndString());","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"    // @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"    // public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"    //     // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"    //     if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"    //         return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"    //     }","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"    //     // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"    //     if (!(other instanceof PersonCard)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"    //         return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"    //     }","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"    //     // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"bokung"},"content":"    //     PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"bokung"},"content":"    //     return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"bokung"},"content":"    //             \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"bokung"},"content":"    // }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bokung":73}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"    private ListView\u003cMeetingWithPerson\u003e meetingListView;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    public MeetingListPanel(ObservableList\u003cMeetingWithPerson\u003e meetingList) {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        super(FXML);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"    class MeetingListViewCell extends ListCell\u003cMeetingWithPerson\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"        protected void updateItem(MeetingWithPerson meeting, boolean empty) {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"                setText(null);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1, meeting.getPersonToMeet()).getRoot());","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"sembcorpp":1,"bokung":48}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"    private Label region;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"    private Label meeting;","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"        region.setText(person.getAddress().getRegionString());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"FireRadical22"},"content":"        meeting.setText(person.getUpcomingMeeting().toString());","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bokung":3,"-":77,"FireRadical22":3}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#4B6B94, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"    background-color: #4B6B94; /* Used in the default.html file */","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"    -fx-base: #4B6B94;","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"    -fx-control-inner-background: #4B6B94;","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"    -fx-background-color: #4B6B94;","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#4B6B94, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"bokung"},"content":"    -fx-border-color: transparent transparent transparent #4B6B94;","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#4B6B94, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#4B6B94, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"    -fx-background-color: #7a91af;","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"bokung"},"content":"    -fx-background-color: #849EBF;","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"bokung"},"content":"    -fx-background-color: #4B6B94;","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"bokung"},"content":"    -fx-border-color: #4B6B94;","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"bokung"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"bokung"},"content":"     -fx-background-color: derive(#4B6B94, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"bokung"},"content":"     -fx-background-color: derive(#4B6B94, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"bokung"},"content":"     -fx-border-color: derive(#4B6B94, 10%);","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#4B6B94, 30%);","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"bokung"},"content":"    -fx-text-fill: rgb(90, 90, 90);","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#9cc8d4, 30%);","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"bokung"},"content":"    -fx-border-color: derive(#9cc8d4, 25%);","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#383838, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"bokung"},"content":"    -fx-text-fill: #B4B4B4;","lastModifiedDate":"2023-03-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"bokung"},"content":"    -fx-background-color: #12dae5;","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"bokung"},"content":"    -fx-background-color: #4B6B94;","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#4B6B94, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"bokung"},"content":"    -fx-background-color: derive(#4B6B94, 50%);","lastModifiedDate":"2023-03-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"bokung"},"content":"    -fx-background-color: transparent #4B6B94 transparent #4B6B94;","lastModifiedDate":"2023-03-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"bokung"},"content":"    -fx-background-color: transparent, #849EBF, transparent, #849EBF;","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"bokung":30,"-":322}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":43,"FireRadical22":2}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"         xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"                           styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"                \u003cHBox minWidth\u003d\"340.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"340.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"170.0\" prefWidth\u003d\"170.0\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"                              HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"                        \u003cVBox fx:id\u003d\"meetingList\" minWidth\u003d\"170.0\" prefWidth\u003d\"170.0\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"                              HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"                                \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bokung":17,"-":47,"FireRadical22":8}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"        \u003cLabel fx:id\u003d\"meetingTitle\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$meeting\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"      \u003cLabel fx:id\u003d\"person\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$person\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"      \u003cLabel fx:id\u003d\"start\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$start\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"      \u003cLabel fx:id\u003d\"end\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$end\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bokung":40}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"  \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bokung":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"      \u003cLabel fx:id\u003d\"region\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$region\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"      \u003cLabel fx:id\u003d\"meeting\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$meeting\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokung":9,"-":32,"FireRadical22":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"TabrizPlv"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"TabrizPlv"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"bokung"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"bokung"},"content":"        public ObservableList\u003cMeetingWithPerson\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"bokung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"bokung"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"bokung"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeetingWithPerson\u003e predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"bokung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"bokung"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"bokung"},"content":"        public Person addMeeting(Person personToEdit, Meeting meeting) {","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"bokung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"bokung"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"bokung"},"content":"        public Person removeMeeting(Person personToEdit, Index indexMeeting) {","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"bokung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"bokung"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"FireRadical22"},"content":"        public Person updateMeeting(Person personToEdit, Index indexMeeting, Meeting editedMeeting) {","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"bokung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bokung":27,"TabrizPlv":4,"-":190,"FireRadical22":1}},{"path":"src/test/java/seedu/address/logic/commands/AddMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.commands.AddMeetingCommand.MESSAGE_ADD_MEETING_SUCCESS;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":" * {@code AddMeetingCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"public class AddMeetingCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"    private final AddMeetingCommand standardCommand \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"    public void nullMeetingTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMeetingCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"    public void addMeetingSuccessTest() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"        final Meeting meeting \u003d new Meeting(\"Successo?\",","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 15, 30),","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 16, 30)","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"        Person samplePerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"        AddMeetingCommand sampleAddMeetingCommand \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, meeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"        CommandResult actualSuccessMessage \u003d sampleAddMeetingCommand.execute(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"        assertEquals(String.format(MESSAGE_ADD_MEETING_SUCCESS, samplePerson.getName()),","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"            actualSuccessMessage.getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"    public void outOfRangeIndexTest() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"        final Meeting meeting \u003d new Meeting(\"OutOfRangeMoment\",","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 15, 30),","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 16, 30)","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"FireRadical22"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"FireRadical22"},"content":"        AddMeetingCommand sampleAddMeetingCommand \u003d new AddMeetingCommand(","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"FireRadical22"},"content":"            Index.fromZeroBased(20), meeting","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"FireRadical22"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"FireRadical22"},"content":"        assertThrows(CommandException.class, () -\u003e sampleAddMeetingCommand.execute(model));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"FireRadical22"},"content":"    public void clashInMeetingsTest() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"FireRadical22"},"content":"        Meeting sampleMeeting \u003d new Meeting(\"clashOfMeetings\",","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 16, 00),","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 17, 30)","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"FireRadical22"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"FireRadical22"},"content":"        assertThrows(CommandException.class, () -\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"FireRadical22"},"content":"            new AddMeetingCommand(INDEX_FIRST_PERSON, sampleMeeting)","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"FireRadical22"},"content":"                .execute(model));","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"FireRadical22"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"FireRadical22"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"FireRadical22"},"content":"        AddMeetingCommand commandWithSameValues \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, VALID_MEETING_AMY);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"FireRadical22"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"FireRadical22"},"content":"    public void notEqualsTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"FireRadical22"},"content":"        // null object -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"FireRadical22"},"content":"        // Different command -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"FireRadical22"},"content":"        // Different inputs -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(standardCommand.equals(new AddMeetingCommand(INDEX_SECOND_PERSON, VALID_MEETING_BOB)));","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"FireRadical22":104}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_DESC;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_END;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_START;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"    public static final String VALID_MEETING_DESC_AMY \u003d \"Amy\u0027s Meeting\";","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"    public static final LocalDateTime VALID_MEETING_START_AMY \u003d LocalDateTime.of(2023, 3, 25, 19, 25);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"sembcorpp"},"content":"    public static final LocalDate VALID_MEETING_START_DATE_AMY \u003dLocalDate.of(2023,3, 25);","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"    public static final LocalDateTime VALID_MEETING_END_AMY \u003d LocalDateTime.of(2023, 3, 25, 20, 25);","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"    public static final String VALID_MEETING_START_STRING_AMY \u003d \"25-03-2023 19:25\";","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"    public static final String VALID_MEETING_END_STRING_AMY \u003d \"25-03-2023 20:25\";","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"    public static final String VALID_MEETING_DESC_BOB \u003d \"Bob\u0027s Meeting\";","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"    public static final LocalDateTime VALID_MEETING_START_BOB \u003d LocalDateTime.of(2023, 3, 25, 12, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"    public static final LocalDate VALID_MEETING_START_DATE_BOB \u003dLocalDate.of(2023,3, 25);","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"    public static final LocalDateTime VALID_MEETING_END_BOB \u003d LocalDateTime.of(2023, 3, 25, 15, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"    public static final String VALID_MEETING_START_STRING_BOB \u003d \"25-03-2023 12:00\";","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"    public static final String VALID_MEETING_END_STRING_BOB \u003d \"25-03-2023 15:00\";","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"    public static final Meeting VALID_MEETING_AMY \u003d new Meeting();","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"    public static final Meeting VALID_MEETING_BOB \u003d new Meeting();","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"    public static final String M_DESC_AMY \u003d \" \" + PREFIX_MEETING_DESC + VALID_MEETING_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"    public static final String M_START_AMY \u003d \" \" + PREFIX_MEETING_START + VALID_MEETING_START_STRING_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"    public static final String M_END_AMY \u003d \" \" + PREFIX_MEETING_END + VALID_MEETING_END_STRING_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"    public static final String M_DESC_BOB \u003d \" \" + PREFIX_MEETING_DESC + VALID_MEETING_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"    public static final String M_START_BOB \u003d \" \" + PREFIX_MEETING_START + VALID_MEETING_START_STRING_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"    public static final String M_END_BOB \u003d \" \" + PREFIX_MEETING_END + VALID_MEETING_END_STRING_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"    public static final UpdateMeetingCommand.EditMeetingDescriptor MEETING_DESC_AMY;","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"    public static final UpdateMeetingCommand.EditMeetingDescriptor MEETING_DESC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"            .build();","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"        MEETING_DESC_AMY \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_MEETING_DESC_AMY)","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"            .withStart(VALID_MEETING_START_AMY).withEnd(VALID_MEETING_END_AMY).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"        MEETING_DESC_BOB \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_MEETING_DESC_BOB)","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"            .withStart(VALID_MEETING_START_BOB).withEnd(VALID_MEETING_END_BOB).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(result.getFeedbackToUser());","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"TabrizPlv"},"content":"            System.out.println(expectedCommandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"sembcorpp":3,"TabrizPlv":35,"-":122,"FireRadical22":3}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"        // Original person should retain their old meetings after using edit command.","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"        Person originalPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"        // Expected person can have fields Name, Phone, Email, Address, PolicyTag edited,","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"        // but meeting field should NOT change with edit command.","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"        // Using updated expectedPerson enforces this behaviour by setting expectedPerson\u0027s","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"        // meeting field to the original person\u0027s meeting.","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"        Person expectedPerson \u003d new PersonBuilder(editedPerson).withMeeting(originalPerson.getMeetings()).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"        // System should call toString() on the expectedPerson instead of the editedPerson","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, expectedPerson);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"bokung":10,"-":171,"FireRadical22":1}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_AMY;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_END_AMY;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_START_AMY;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"public class EditMeetingDescriptorTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    public void equals() {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand.EditMeetingDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand.EditMeetingDescriptor(MEETING_DESC_AMY);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(MEETING_DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(MEETING_DESC_AMY.equals(MEETING_DESC_AMY));","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(MEETING_DESC_AMY.equals(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(MEETING_DESC_AMY.equals(5));","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(MEETING_DESC_AMY.equals(MEETING_DESC_BOB));","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand.EditMeetingDescriptor editedAmy \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"            new EditMeetingDescriptorBuilder(MEETING_DESC_AMY).withDescription(VALID_MEETING_DESC_BOB).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(MEETING_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        // different start -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime newStart \u003d VALID_MEETING_START_AMY.minusHours(1);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"        editedAmy \u003d new EditMeetingDescriptorBuilder(MEETING_DESC_AMY).withStart(newStart).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(MEETING_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        // different end -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime newEnd \u003d VALID_MEETING_END_AMY.plusHours(1);","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"        editedAmy \u003d new EditMeetingDescriptorBuilder(MEETING_DESC_AMY).withEnd(newEnd).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(MEETING_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"TabrizPlv":52}},{"path":"src/test/java/seedu/address/logic/commands/FindMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"import static seedu.address.testutil.TypicalPersons.*;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.person.MeetingStartDatePredicate;","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"public class FindMeetingCommandTest {","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"    private static class Hi {","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"    private final FindMeetingCommand standardCommand \u003d new FindMeetingCommand(VALID_MEETING_START_DATE_AMY);","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"    public void equals() {","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"        FindMeetingCommand commandWithSameValues \u003d new FindMeetingCommand(VALID_MEETING_START_DATE_AMY);","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"        FindMeetingCommand diffValue \u003d new FindMeetingCommand(LocalDate.of(2022, 3, 5));","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"        assertTrue(standardCommand.equals(new FindMeetingCommand(VALID_MEETING_START_DATE_BOB)));","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"sembcorpp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"sembcorpp"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"sembcorpp"},"content":"        // null object -\u003e returns false","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"sembcorpp"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"sembcorpp"},"content":"        // Different command -\u003e return false","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(standardCommand.equals(new FindCommand(new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"            Collections.singletonList(\"Test\")))));","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"sembcorpp"},"content":"        // Different inputs -\u003e return false","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"sembcorpp"},"content":"        assertFalse(standardCommand.equals(diffValue));","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"sembcorpp"},"content":"    public void execute_noMeetingFound() {","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"sembcorpp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"sembcorpp"},"content":"        FindMeetingCommand cmd \u003d new FindMeetingCommand(LocalDate.of(2023, 3, 26));","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"sembcorpp"},"content":"        MeetingStartDatePredicate p \u003d new MeetingStartDatePredicate(LocalDate.of(2023, 3, 26));","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"sembcorpp"},"content":"        expectedModel.updateFilteredMeetingList(p);","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"sembcorpp"},"content":"        assertCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"sembcorpp"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMeetingList());","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"sembcorpp"},"content":"    public void execute_multiplePersonFound() throws CommandException {","lastModifiedDate":"2023-04-01"},{"lineNumber":68,"author":{"gitId":"sembcorpp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW,7);","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"sembcorpp"},"content":"        FindMeetingCommand cmd \u003d new FindMeetingCommand(LocalDate.of(2023, 3, 25));","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"sembcorpp"},"content":"        MeetingStartDatePredicate p \u003d new MeetingStartDatePredicate(LocalDate.of(2023, 3, 25));","lastModifiedDate":"2023-04-01"},{"lineNumber":71,"author":{"gitId":"sembcorpp"},"content":"        expectedModel.updateFilteredMeetingList(p);","lastModifiedDate":"2023-04-01"},{"lineNumber":72,"author":{"gitId":"sembcorpp"},"content":"        assertCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-01"},{"lineNumber":73,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"sembcorpp":73,"FireRadical22":3}},{"path":"src/test/java/seedu/address/logic/commands/ListMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sembcorpp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-01"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"public class ListMeetingCommandTest {","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"    private Model model;","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"    public void setUp() {","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"sembcorpp"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"sembcorpp"},"content":"        assertCommandSuccess(new ListMeetingCommand(), model, ListMeetingCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"sembcorpp"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"sembcorpp"},"content":"        showPersonAtIndex(model, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"sembcorpp"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"sembcorpp":40}},{"path":"src/test/java/seedu/address/logic/commands/ListRegionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.PersonLivesInRegionPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"public class ListRegionCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"    private class Bird {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"        ListRegionCommand listNorth \u003d new ListRegionCommand(Regions.NORTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"        ListRegionCommand listSouth \u003d new ListRegionCommand(Regions.SOUTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"        ListRegionCommand listEast \u003d new ListRegionCommand(Regions.EAST);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"        ListRegionCommand listNorthOther \u003d new ListRegionCommand(Regions.NORTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"        assertTrue(listNorth.equals(listNorth));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"        assertTrue(listSouth.equals(listSouth));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"        assertTrue(listNorth.equals(listNorthOther));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"bokung"},"content":"        assertFalse(listNorth.equals(listEast));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"bokung"},"content":"        assertFalse(listEast.equals(listNorthOther));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"        assertFalse(listEast.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"bokung"},"content":"        assertFalse(listNorth.equals(new Bird()));","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"bokung"},"content":"    public void execute_validRegion_noPersonFound() {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"bokung"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"        ListRegionCommand listSouth \u003d new ListRegionCommand(Regions.SOUTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"        PersonLivesInRegionPredicate p \u003d new PersonLivesInRegionPredicate(Regions.SOUTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"        expectedModel.updateFilteredPersonList(p);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"bokung"},"content":"        assertCommandSuccess(listSouth, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"bokung"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"bokung"},"content":"    public void execute_unknownRegion_multiplePersonFound() {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"        ListRegionCommand listUnknown \u003d new ListRegionCommand(Regions.UNKNOWN);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"bokung"},"content":"        PersonLivesInRegionPredicate p \u003d new PersonLivesInRegionPredicate(Regions.UNKNOWN);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"bokung"},"content":"        expectedModel.updateFilteredPersonList(p);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"bokung"},"content":"        assertCommandSuccess(listUnknown, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"bokung"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"    public void execute_validRegion_multiplePersonFound() {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"bokung"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"bokung"},"content":"        ListRegionCommand listWest \u003d new ListRegionCommand(Regions.WEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"bokung"},"content":"        PersonLivesInRegionPredicate p \u003d new PersonLivesInRegionPredicate(Regions.WEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"bokung"},"content":"        expectedModel.updateFilteredPersonList(p);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"bokung"},"content":"        assertCommandSuccess(listWest, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"bokung"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON), model.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bokung":83}},{"path":"src/test/java/seedu/address/logic/commands/RemoveMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.commands.RemoveMeetingCommand.MESSAGE_REMOVE_SUCCESS;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":" * {@code RemoveMeetingCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"public class RemoveMeetingCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"    private final RemoveMeetingCommand standardCommand \u003d new RemoveMeetingCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"        INDEX_FIRST_MEETING);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"    private void populateMeetings() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"        Person samplePerson1 \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"        Person samplePerson2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d new Meeting(\"m1\",","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 15, 30),","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 16, 30)","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d new Meeting(\"m2\",","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 16, 30),","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2023, 03, 14, 17, 30)","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"        samplePerson1.getMeetings().add(m1);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"        samplePerson2.getMeetings().add(m2);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"        samplePerson2.getMeetings().add(m1);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"    public void validMeetingIndexTest() throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"        populateMeetings();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"FireRadical22"},"content":"        Person samplePerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"FireRadical22"},"content":"        RemoveMeetingCommand sampleRemoveMeetingCommand \u003d new RemoveMeetingCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"FireRadical22"},"content":"            INDEX_FIRST_MEETING);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"FireRadical22"},"content":"        CommandResult actualSuccessMessage \u003d sampleRemoveMeetingCommand.execute(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"FireRadical22"},"content":"        assertEquals(String.format(MESSAGE_REMOVE_SUCCESS, samplePerson),","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"FireRadical22"},"content":"            actualSuccessMessage.getFeedbackToUser());","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"FireRadical22"},"content":"    public void invalidPersonIndexTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"FireRadical22"},"content":"        populateMeetings();","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"FireRadical22"},"content":"        int sampleIndex \u003d 20;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"FireRadical22"},"content":"        RemoveMeetingCommand sampleRemoveMeetingCommand \u003d new RemoveMeetingCommand(Index.fromZeroBased(sampleIndex),","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"FireRadical22"},"content":"            INDEX_FIRST_MEETING);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"FireRadical22"},"content":"        assertThrows(CommandException.class, () -\u003e sampleRemoveMeetingCommand.execute(model));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"FireRadical22"},"content":"    public void invalidMeetingIndexTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"FireRadical22"},"content":"        populateMeetings();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"FireRadical22"},"content":"        int sampleIndex \u003d 20;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"FireRadical22"},"content":"        RemoveMeetingCommand sampleRemoveMeetingCommand \u003d new RemoveMeetingCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"FireRadical22"},"content":"            Index.fromZeroBased(sampleIndex));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"FireRadical22"},"content":"        assertThrows(CommandException.class, () -\u003e sampleRemoveMeetingCommand.execute(model));","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"FireRadical22"},"content":"    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"FireRadical22"},"content":"        populateMeetings();","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"FireRadical22"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"FireRadical22"},"content":"        RemoveMeetingCommand commandWithSameValues \u003d new RemoveMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"FireRadical22"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"FireRadical22"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"FireRadical22"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"FireRadical22"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(standardCommand.equals(new RemoveMeetingCommand(INDEX_SECOND_PERSON, INDEX_FIRST_MEETING)));","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"FireRadical22"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(standardCommand.equals(new RemoveMeetingCommand(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON)));","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"TabrizPlv":3,"FireRadical22":108}},{"path":"src/test/java/seedu/address/logic/commands/UpdateMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_AMY;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.UpdateMeetingCommand.MESSAGE_UPDATE_MEETING_SUCCESS;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"public class UpdateMeetingCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"    private final String desc \u003d \"Edited\";","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"    private final LocalDateTime start \u003d LocalDateTime.of(2023, 3, 25, 12, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"    private final LocalDateTime end \u003d LocalDateTime.of(2023, 3, 25, 15, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"    private final Meeting editedMeeting \u003d new Meeting(desc, start, end);","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand.EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(editedMeeting).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand updateMeetingCommand \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING, descriptor);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        Person originalPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        Person expectedPerson \u003d new PersonBuilder(originalPerson).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        expectedPerson.setMeeting(0, editedMeeting);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"        // System should call toString() on the expectedPerson instead of the editedPerson","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UPDATE_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"        assertCommandSuccess(updateMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"        Person editedPerson \u003d new PersonBuilder(lastPerson).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"        editedPerson.getMeeting(0).setDescription(\"ChangeDesc\");","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand.EditMeetingDescriptor descriptor \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"            new EditMeetingDescriptorBuilder().withDescription(\"ChangeDesc\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand updateMeetingCommand \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand(indexLastPerson, INDEX_FIRST_MEETING, descriptor);","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"        Meeting newEditedMeeting \u003d new Meeting(\"ChangeDesc\", start, end);","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"        String expectedMessage \u003d String.format(UpdateMeetingCommand.MESSAGE_UPDATE_MEETING_SUCCESS, newEditedMeeting);","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"        assertCommandSuccess(updateMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand updateMeetingCommand \u003d new UpdateMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING,","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand.EditMeetingDescriptor());","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"        Meeting newEditedMeeting \u003d editedPerson.getMeeting(0);","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"        String expectedMessage \u003d String.format(UpdateMeetingCommand.MESSAGE_UPDATE_MEETING_SUCCESS, newEditedMeeting);","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"        assertCommandSuccess(updateMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime newStart \u003d LocalDateTime.of(2023, 3, 25, 1, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"        editedPerson.getMeeting(0).setStart(newStart);","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand updateMeetingCommand \u003d new UpdateMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING,","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"            new EditMeetingDescriptorBuilder().withStart(newStart).build());","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"        Meeting newEditedMeeting \u003d new Meeting(desc, newStart, end);","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"        String expectedMessage \u003d String.format(UpdateMeetingCommand.MESSAGE_UPDATE_MEETING_SUCCESS, newEditedMeeting);","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"TabrizPlv"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"TabrizPlv"},"content":"        assertCommandSuccess(updateMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"TabrizPlv"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"TabrizPlv"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand.EditMeetingDescriptor descriptor \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"TabrizPlv"},"content":"            new EditMeetingDescriptorBuilder().withDescription(VALID_MEETING_DESC_BOB).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand updateMeetingCommand \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand(outOfBoundIndex, INDEX_FIRST_MEETING, descriptor);","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"TabrizPlv"},"content":"        assertCommandFailure(updateMeetingCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"TabrizPlv"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"TabrizPlv"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"TabrizPlv"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"TabrizPlv"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"TabrizPlv"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"TabrizPlv"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand updateMeetingCommand \u003d new UpdateMeetingCommand(outOfBoundIndex, INDEX_FIRST_MEETING,","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"TabrizPlv"},"content":"            new EditMeetingDescriptorBuilder().withDescription(VALID_MEETING_DESC_BOB).build());","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"TabrizPlv"},"content":"        assertCommandFailure(updateMeetingCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"TabrizPlv"},"content":"    public void equals() {","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"TabrizPlv"},"content":"        final UpdateMeetingCommand standardCommand \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING, MEETING_DESC_AMY);","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"TabrizPlv"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand.EditMeetingDescriptor copyDescriptor \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand.EditMeetingDescriptor(MEETING_DESC_AMY);","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand commandWithSameValues \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING, copyDescriptor);","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"TabrizPlv"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"TabrizPlv"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"TabrizPlv"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"TabrizPlv"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand(INDEX_SECOND_PERSON, INDEX_FIRST_MEETING, MEETING_DESC_AMY)));","lastModifiedDate":"2023-03-25"},{"lineNumber":163,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"TabrizPlv"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"TabrizPlv"},"content":"            new UpdateMeetingCommand(INDEX_FIRST_PERSON, INDEX_FIRST_MEETING, MEETING_DESC_BOB)));","lastModifiedDate":"2023-03-25"},{"lineNumber":167,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"TabrizPlv":168}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"FireRadical22"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, PolicyTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":139,"FireRadical22":2}},{"path":"src/test/java/seedu/address/logic/parser/AddMeetingParserCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_DESC;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_END;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_START;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"public class AddMeetingParserCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"    private AddMeetingCommandParser parser \u003d new AddMeetingCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"    private final String nonEmptyDescription \u003d \"NotEmpty\";","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"    private final String startDateTime \u003d \"09-11-2001 11:30\";","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"    private final String endDateTime \u003d \"09-11-2001 12:30\";","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"        // have MEETING","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"        String userInput \u003d \" 1 \" + PREFIX_MEETING_DESC + nonEmptyDescription","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"            + \" \" + PREFIX_MEETING_START + startDateTime + \" \" + PREFIX_MEETING_END","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"            + endDateTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"        Meeting testMeeting \u003d new Meeting(\"Test\",","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2001, 11, 9, 11, 30),","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2001, 11, 9, 12, 30)","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"        );","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"        AddMeetingCommand expectedCommand \u003d new AddMeetingCommand(INDEX_FIRST_PERSON, testMeeting);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"        // no parameters","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"        assertParseFailure(parser, AddMeetingCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"        // no index","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"        assertParseFailure(parser, AddMeetingCommand.COMMAND_WORD + \" \" + nonEmptyDescription, expectedMessage);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"FireRadical22":50}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_END;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_START;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"FireRadical22"},"content":"    public void parseCommand_addMeeting() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"        final String meetingDesc \u003d \"sample\";","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"        final String meetingStart \u003d \"30-12-2020 15:30\";","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"        final String meetingEnd \u003d \"30-12-2020 16:30\";","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"        final Meeting sampleMeeting \u003d new Meeting(\"sample\",","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2020, 12, 30, 15, 30),","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"FireRadical22"},"content":"            LocalDateTime.of(2020, 12, 30, 16, 30)","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"FireRadical22"},"content":"        );","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"        AddMeetingCommand command \u003d (AddMeetingCommand) parser.parseCommand(AddMeetingCommand.COMMAND_WORD","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"TabrizPlv"},"content":"            + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_MEETING_DESC + meetingDesc","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"TabrizPlv"},"content":"            + \" \" + PREFIX_MEETING_START + meetingStart + \" \" + PREFIX_MEETING_END + meetingEnd);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"FireRadical22"},"content":"        assertEquals(new AddMeetingCommand(INDEX_FIRST_PERSON, sampleMeeting), command);","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"TabrizPlv":7,"-":101,"FireRadical22":14}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"FireRadical22"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, PolicyTag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"FireRadical22"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, PolicyTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"FireRadical22"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, PolicyTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"FireRadical22"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, PolicyTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"-":206,"FireRadical22":5}},{"path":"src/test/java/seedu/address/logic/parser/FindMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"sembcorpp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"sembcorpp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.parser.FindMeetingCommandParser;","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"sembcorpp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"sembcorpp"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"sembcorpp"},"content":"public class FindMeetingCommandParserTest {","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"sembcorpp"},"content":"    private final FindMeetingCommandParser parser \u003d new FindMeetingCommandParser();","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"sembcorpp"},"content":"    private final String startDate \u003d \"09/11/2001\";","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"sembcorpp"},"content":"    private final LocalDate date \u003d LocalDate.of(2001, 11, 9);","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"sembcorpp"},"content":"    @Test","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"sembcorpp"},"content":"    public void parse_returnsCorrectMeeting() throws ParseException {","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"sembcorpp"},"content":"        assertEquals(parser.parse(startDate), new FindMeetingCommand(date));","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"sembcorpp"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"sembcorpp"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"sembcorpp"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"sembcorpp":25,"FireRadical22":3}},{"path":"src/test/java/seedu/address/logic/parser/ListRegionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import seedu.address.logic.commands.ListRegionCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"public class ListRegionCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"    private ListRegionCommandParser parser \u003d new ListRegionCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    public void parse_emptyString_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"        assertParseFailure(parser, \"\", Region.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"        assertParseFailure(parser, \"                                 \", Region.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"        assertParseFailure(parser, \" \", Region.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"    public void parse_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"    public void parse_validRegion_returnsCorrectRegion() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"        assertEquals(parser.parse(\" north \"), new ListRegionCommand(Regions.NORTH));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"        assertEquals(parser.parse(\" WEST     \"), new ListRegionCommand(Regions.WEST));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"        assertEquals(parser.parse(\"east\"), new ListRegionCommand(Regions.EAST));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"        assertEquals(parser.parse(\"sOuTh\"), new ListRegionCommand(Regions.SOUTH));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"        assertEquals(parser.parse(\"South\"), new ListRegionCommand(Regions.SOUTH));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"bokung"},"content":"    public void parse_invalidRegion_throwsParseException() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"bokung"},"content":"        assertParseFailure(parser, \"north south east west\", Region.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"bokung"},"content":"        assertParseFailure(parser, \"Noth\", Region.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"bokung"},"content":"        assertParseFailure(parser, \"wdawsdwadsdawd\", Region.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bokung":45}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.ParserUtil.parseDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"FireRadical22"},"content":"        PolicyTag expectedTag \u003d new PolicyTag(VALID_TAG_1);","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"FireRadical22"},"content":"        PolicyTag expectedTag \u003d new PolicyTag(VALID_TAG_1);","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"FireRadical22"},"content":"        Set\u003cPolicyTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"FireRadical22"},"content":"        Set\u003cPolicyTag\u003e expectedTagSet \u003d new HashSet\u003cPolicyTag\u003e(Arrays.asList(new PolicyTag(VALID_TAG_1),","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"FireRadical22"},"content":"            new PolicyTag(VALID_TAG_2)));","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"bokung"},"content":"    public void parseRegion_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"bokung"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRegion(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"bokung"},"content":"    public void parseRegion_validRegionWithoutWhiteSpace_returnsRegion() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"bokung"},"content":"        String central \u003d \"cEnTrAl\";","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"bokung"},"content":"        assertEquals(Regions.CENTRAL, ParserUtil.parseRegion(central));","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"bokung"},"content":"    public void parseRegion_validRegionWithWhiteSpace_returnsRegion() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"bokung"},"content":"        String central \u003d \"         cEnTrAl   \";","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"bokung"},"content":"        assertEquals(Regions.CENTRAL, ParserUtil.parseRegion(central));","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"bokung"},"content":"    public void parseRegion_invalidRegionWithWhiteSpace_throwsParseException() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"bokung"},"content":"        String rubbish \u003d \"wahdushd         cEnTrAl   bbbbb\";","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"bokung"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRegion(rubbish));","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"bokung"},"content":"    public void parseRegion_invalidRegionWithoutWhiteSpace_throwsParseException() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"bokung"},"content":"        String s \u003d \"blahblashblabhalbhaowqjoqoqkowkeoqowe\";","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"bokung"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRegion(s));","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"TabrizPlv"},"content":"    public void parseDateTime_validLocalDateTime_returnsTrue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2023, 3, 23, 14, 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime parsed \u003d parseDateTime(\"23-03-2023 14:00\");","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"TabrizPlv"},"content":"        assertEquals(expected, parsed);","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"bokung":30,"TabrizPlv":10,"-":191,"FireRadical22":6}},{"path":"src/test/java/seedu/address/logic/parser/RemoveMeetingParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.logic.commands.RemoveMeetingCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"public class RemoveMeetingParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"    private RemoveMeetingCommandParser parser \u003d new RemoveMeetingCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"        String userInput \u003d \" 1 1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"        RemoveMeetingCommand expectedCommand \u003d new RemoveMeetingCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"            INDEX_FIRST_MEETING);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"        // no parameters","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"        assertParseFailure(parser, RemoveMeetingCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"        // no index","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"        assertParseFailure(parser, RemoveMeetingCommand.COMMAND_WORD + \" 1\", expectedMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"FireRadical22":35}},{"path":"src/test/java/seedu/address/logic/parser/UpdateMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.M_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.M_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.M_END_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.M_END_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.M_START_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.M_START_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_DESC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_END_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_END_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_START_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_START_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.logic.commands.UpdateMeetingCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.logic.commands.UpdateMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"public class UpdateMeetingCommandParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"    private UpdateMeetingCommandParser parser \u003d new UpdateMeetingCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_missingIndex_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, VALID_MEETING_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_missingFields_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, \"1 1\", UpdateMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_missingIndexAndFields_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_negativePersonIndex_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, \"-5 1\" + MEETING_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_negativeMeetingIndex_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, \"1 -5\" + MEETING_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_personIndexZero_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, \"0 1\" + MEETING_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_meetingIndexZero_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, \"1 0\" + MEETING_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, \"1 1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_invalidPrefix_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"        assertParseFailure(parser, \"1 1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"        Index meetingIndex \u003d INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"        String userInput \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"            targetIndex.getOneBased() + \" \" + meetingIndex.getOneBased() + M_DESC_BOB + M_START_BOB + M_END_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_MEETING_DESC_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"            .withStart(VALID_MEETING_START_BOB).withEnd(VALID_MEETING_END_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand expectedCommand \u003d new UpdateMeetingCommand(targetIndex, meetingIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"        Index meetingIndex \u003d INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + meetingIndex.getOneBased() + M_DESC_BOB + M_START_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_MEETING_DESC_BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"            .withStart(VALID_MEETING_START_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand expectedCommand \u003d new UpdateMeetingCommand(targetIndex, meetingIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"TabrizPlv"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"TabrizPlv"},"content":"        // description","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"TabrizPlv"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"TabrizPlv"},"content":"        Index meetingIndex \u003d INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"TabrizPlv"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + meetingIndex.getOneBased() + M_DESC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"TabrizPlv"},"content":"        EditMeetingDescriptor descriptor \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"TabrizPlv"},"content":"            new EditMeetingDescriptorBuilder().withDescription(VALID_MEETING_DESC_AMY).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand expectedCommand \u003d new UpdateMeetingCommand(targetIndex, meetingIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"TabrizPlv"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"TabrizPlv"},"content":"        // start","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"TabrizPlv"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + meetingIndex.getOneBased() + M_START_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"TabrizPlv"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withStart(VALID_MEETING_START_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"TabrizPlv"},"content":"        expectedCommand \u003d new UpdateMeetingCommand(targetIndex, meetingIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"TabrizPlv"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"TabrizPlv"},"content":"        // end","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"TabrizPlv"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + meetingIndex.getOneBased() + M_END_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"TabrizPlv"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withEnd(VALID_MEETING_END_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"TabrizPlv"},"content":"        expectedCommand \u003d new UpdateMeetingCommand(targetIndex, meetingIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"TabrizPlv"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"TabrizPlv"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"TabrizPlv"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"TabrizPlv"},"content":"        Index meetingIndex \u003d INDEX_FIRST_MEETING;","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"TabrizPlv"},"content":"        String userInput \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"TabrizPlv"},"content":"            targetIndex.getOneBased() + \" \" + meetingIndex.getOneBased() + M_DESC_AMY + M_START_AMY + M_END_AMY","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"TabrizPlv"},"content":"                + M_DESC_AMY + M_START_AMY + M_END_AMY + M_DESC_AMY + M_START_AMY + M_END_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"TabrizPlv"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_MEETING_DESC_AMY)","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"TabrizPlv"},"content":"            .withStart(VALID_MEETING_START_AMY).withEnd(VALID_MEETING_END_AMY).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"TabrizPlv"},"content":"        UpdateMeetingCommand expectedCommand \u003d new UpdateMeetingCommand(targetIndex, meetingIndex, descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"TabrizPlv"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"TabrizPlv":146}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.MeetingWithPerson;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"bokung"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"        public ObservableList\u003cMeetingWithPerson\u003e getMeetingList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"bokung":6,"-":102}},{"path":"src/test/java/seedu/address/model/person/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"public class MeetingTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"    public Meeting generateMeeting(String desc, int y1, int m1, int dom1, int h1, int min1, int y2, int m2, int dom2,","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"                                   int h2, int min2) throws Exception {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime start \u003d LocalDateTime.of(y1, m1, dom1, h1, min1);","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"        LocalDateTime end \u003d LocalDateTime.of(y2, m2, dom2, h2, min2);","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"        return new Meeting(desc, start, end);","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    public void checkTimeClash_startEndSameTime_returnsTrue() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(m1.checkTimeClash(m2));","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"    public void checkTimeClash_endAtOtherStart_returnsTrue() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 22, 0, 2000, 10, 23, 23, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(m1.checkTimeClash(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"    public void checkTimeClash_endBetweenOtherMeeting_returnsTrue() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 22, 0, 2000, 10, 24, 0, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(m1.checkTimeClash(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"    public void checkTimeClash_startSameTime_returnsTrue() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 30);","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(m1.checkTimeClash(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"    public void checkTimeClash_startBetweenOtherMeeting_returnsTrue() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 23, 30, 2000, 10, 23, 23, 45);","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(m1.checkTimeClash(m2));","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"    public void checkTimeClash_startAtOtherEnd_returnsTrue() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 24, 0, 15, 2000, 10, 24, 0, 45);","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(m1.checkTimeClash(m2));","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"TabrizPlv"},"content":"    public void checkTimeClash_startEndBeforeOtherMeeting_returnsFalse() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 22, 0, 2000, 10, 23, 22, 45);","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(m1.checkTimeClash(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"TabrizPlv"},"content":"    public void checkTimeClash_startEndAfterOtherMeeting_returnsFalse() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 24, 12, 0, 2000, 10, 24, 13, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(m1.checkTimeClash(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"TabrizPlv"},"content":"    public void checkEquals_sameObject_returnsTrue() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d m1;","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(m1.equals(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"TabrizPlv"},"content":"    public void checkEquals_sameStartAndEndDifferentObject_returnsTrue() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"TabrizPlv"},"content":"        assertTrue(m1.equals(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"TabrizPlv"},"content":"    public void checkEquals_sameStartDifferentEnd_returnsFalse() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 23, 0, 2000, 10, 24, 10, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(m1.equals(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"TabrizPlv"},"content":"    public void checkEquals_sameEndDifferentStart_returnsFalse() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 20, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(m1.equals(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"TabrizPlv"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"TabrizPlv"},"content":"    public void checkEquals_differentStartAndEnd_returnsFalse() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m1 \u003d generateMeeting(\"m1\", 2000, 10, 23, 23, 0, 2000, 10, 24, 0, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"TabrizPlv"},"content":"        Meeting m2 \u003d generateMeeting(\"m2\", 2000, 10, 23, 20, 0, 2000, 10, 24, 15, 15);","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"TabrizPlv"},"content":"        assertFalse(m1.equals(m2));","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"TabrizPlv":110}},{"path":"src/test/java/seedu/address/model/person/PersonLivesInRegionPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokung"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bokung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Region.Regions;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bokung"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"public class PersonLivesInRegionPredicateTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bokung"},"content":"    private Person someGuyWhoLivesInTheNorth \u003d new PersonBuilder().withAddress(\"JTC 22 Woodlands Link #02-61\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bokung"},"content":"    private Person anotherGuyWhoLivesInTheNorth \u003d new PersonBuilder().withAddress(\"30 Kranji Way \").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"    private Person someWestGuy \u003d new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bokung"},"content":"            .withAddress(\"Lim Chu Kang Community Centre, Lim Chu Kang Road, 580, Singapore, Lim Chu Kang\")","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bokung"},"content":"            .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bokung"},"content":"    // Clementi is in west of singaproe","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"    private Person clementiGuy \u003d new PersonBuilder().withAddress(\"321 Clementi Ave 3, Singapore 129905\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bokung"},"content":"    public void test_validAddressMatchesRegion_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bokung"},"content":"        PersonLivesInRegionPredicate northPredicate \u003d new PersonLivesInRegionPredicate(Regions.NORTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bokung"},"content":"        assertTrue(northPredicate.test(someGuyWhoLivesInTheNorth));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bokung"},"content":"        assertTrue(northPredicate.test(anotherGuyWhoLivesInTheNorth));","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bokung"},"content":"        PersonLivesInRegionPredicate westPredicate \u003d new PersonLivesInRegionPredicate(Regions.WEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bokung"},"content":"        assertTrue(westPredicate.test(clementiGuy));","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bokung"},"content":"    public void test_validAddressDoesNotMatchRegion_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bokung"},"content":"        PersonLivesInRegionPredicate southPredicate \u003d new PersonLivesInRegionPredicate(Regions.SOUTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"        assertFalse(southPredicate.test(someGuyWhoLivesInTheNorth));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"        assertFalse(southPredicate.test(anotherGuyWhoLivesInTheNorth));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"        assertFalse(southPredicate.test(someWestGuy));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"        assertFalse(southPredicate.test(clementiGuy));","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bokung"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bokung":39}},{"path":"src/test/java/seedu/address/model/person/PolicyExistInPersonPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FireRadical22"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"FireRadical22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"FireRadical22"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"FireRadical22"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"FireRadical22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"public class PolicyExistInPersonPredicateTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"    private final List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"Insurance\");","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"FireRadical22"},"content":"    private final List\u003cString\u003e secondPredicateKeywordList \u003d Collections.singletonList(\"Investment\");","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"FireRadical22"},"content":"    private final Person dudeWithInsurancePolicy \u003d new PersonBuilder().withTags(\"Insurance\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"FireRadical22"},"content":"    private final Person dudeWithInvestmentPolicy \u003d new PersonBuilder().withTags(\"Investment\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"FireRadical22"},"content":"    private final Person dudewithInsuranceAndInvestment \u003d new PersonBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"FireRadical22"},"content":"        .withTags(\"Insurance\", \"Investment\")","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"FireRadical22"},"content":"        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"    private final Person dudeWithInvestmentAndRandomPolicy \u003d new PersonBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"        .withTags(\"Investment\", \"Random\")","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"FireRadical22"},"content":"        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"FireRadical22"},"content":"    public void test_validPolicyNameMatches_returnTrue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"FireRadical22"},"content":"        PolicyExistInPersonPredicate insurancePolicyPredicate \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"FireRadical22"},"content":"            new PolicyExistInPersonPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(insurancePolicyPredicate.test(dudeWithInsurancePolicy));","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(insurancePolicyPredicate.test(dudewithInsuranceAndInvestment));","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"FireRadical22"},"content":"        PolicyExistInPersonPredicate investmentPolicyPredicate \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"            new PolicyExistInPersonPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(investmentPolicyPredicate.test(dudeWithInvestmentPolicy));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(insurancePolicyPredicate.test(dudewithInsuranceAndInvestment));","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"FireRadical22"},"content":"        assertTrue(investmentPolicyPredicate.test(dudeWithInvestmentAndRandomPolicy));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"FireRadical22"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"FireRadical22"},"content":"    public void test_validPolicyNameDoesNotMatch_returnFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"FireRadical22"},"content":"        PolicyExistInPersonPredicate insurancePolicyPredicate \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"FireRadical22"},"content":"            new PolicyExistInPersonPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(insurancePolicyPredicate.test(dudeWithInvestmentPolicy));","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(insurancePolicyPredicate.test(dudeWithInvestmentAndRandomPolicy));","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"FireRadical22"},"content":"        PolicyExistInPersonPredicate investmentPolicyPredicate \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"FireRadical22"},"content":"            new PolicyExistInPersonPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"FireRadical22"},"content":"        assertFalse(investmentPolicyPredicate.test(dudeWithInsurancePolicy));","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"FireRadical22"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"FireRadical22"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"FireRadical22":56}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"bokung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"bokung"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"bokung"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"bokung"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"bokung"},"content":"    private UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":175,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"bokung"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"FireRadical22"},"content":"    public void getAllMeetingAsUnmodifiableObservableList_validList_returnsCorrectList() {","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"FireRadical22"},"content":"        Person p1 \u003d new Person(new Name(\"bobb\"), new Phone(\"12345678\"), new Email(\"sex@sex.com\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"FireRadical22"},"content":"            new Address(\"ass house\"), new HashSet\u003cPolicyTag\u003e());","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"bokung"},"content":"        ArrayList\u003cMeeting\u003e p1Meetings \u003d p1.getMeetings();","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"bokung"},"content":"        p1Meetings.add(new Meeting());","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"bokung"},"content":"        p1Meetings.add(new Meeting());","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"bokung"},"content":"        p1Meetings.add(new Meeting());","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"FireRadical22"},"content":"        Person p2 \u003d new Person(new Name(\"bobby2\"), new Phone(\"12345678\"), new Email(\"sex@sex.com\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"FireRadical22"},"content":"            new Address(\"ass house\"), new HashSet\u003cPolicyTag\u003e());","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"bokung"},"content":"        ArrayList\u003cMeeting\u003e p2Meetings \u003d p2.getMeetings();","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"bokung"},"content":"        p2Meetings.add(new Meeting());","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"bokung"},"content":"        p2Meetings.add(new Meeting());","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"FireRadical22"},"content":"        Person p3 \u003d new Person(new Name(\"bobby333\"), new Phone(\"12345678\"), new Email(\"sex@sex.com\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":192,"author":{"gitId":"FireRadical22"},"content":"            new Address(\"ass house\"), new HashSet\u003cPolicyTag\u003e());","lastModifiedDate":"2023-03-31"},{"lineNumber":193,"author":{"gitId":"bokung"},"content":"        ArrayList\u003cMeeting\u003e p3Meetings \u003d p3.getMeetings();","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"bokung"},"content":"        p3Meetings.add(new Meeting());","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"bokung"},"content":"        MeetingWithPerson meetingWithP1 \u003d new MeetingWithPerson(new Meeting(), p1);","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"bokung"},"content":"        MeetingWithPerson meetingWithP2 \u003d new MeetingWithPerson(new Meeting(), p2);","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"bokung"},"content":"        MeetingWithPerson meetingWithP3 \u003d new MeetingWithPerson(new Meeting(), p3);","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"bokung"},"content":"        ObservableList\u003cMeetingWithPerson\u003e expected \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"bokung"},"content":"                FXCollections.observableArrayList(","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"bokung"},"content":"                    new MeetingWithPerson[]","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"bokung"},"content":"                        {meetingWithP1, meetingWithP1, meetingWithP1, meetingWithP2, meetingWithP2, meetingWithP3});","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"bokung"},"content":"        uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"bokung"},"content":"        uniquePersonList.add(p1);","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"bokung"},"content":"        uniquePersonList.add(p2);","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"bokung"},"content":"        uniquePersonList.add(p3);","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"bokung"},"content":"        assertEquals(uniquePersonList.getAllMeetingAsUnmodifiableObservableList(), expected);","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"bokung":35,"-":169,"FireRadical22":8}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"FireRadical22"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PolicyTag(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"FireRadical22"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PolicyTag(invalidTagName));","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"FireRadical22"},"content":"        assertThrows(NullPointerException.class, () -\u003e PolicyTag.isValidTagName(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":23,"FireRadical22":3}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"bokung"},"content":"    private static final ArrayList\u003cJsonAdaptedMeeting\u003e VALID_MEETINGS \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"        (ArrayList\u003cJsonAdaptedMeeting\u003e) BENSON.getMeetings()","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"bokung"},"content":"            .stream()","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"bokung"},"content":"            .map(JsonAdaptedMeeting::new)","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"bokung"},"content":"            new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"bokung"},"content":"                VALID_TAGS, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"bokung"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"bokung"},"content":"            VALID_TAGS, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"            new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"                VALID_TAGS, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"bokung"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"bokung"},"content":"            VALID_TAGS, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"bokung"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"bokung"},"content":"                VALID_TAGS, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"bokung"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"bokung"},"content":"            VALID_TAGS, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"bokung"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"bokung"},"content":"                VALID_TAGS, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"bokung"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"bokung"},"content":"            VALID_TAGS, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"bokung"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"bokung"},"content":"                invalidTags, VALID_MEETINGS);","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokung":22,"-":101}},{"path":"src/test/java/seedu/address/testutil/EditMeetingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TabrizPlv"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"TabrizPlv"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.logic.commands.UpdateMeetingCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"TabrizPlv"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"TabrizPlv"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"TabrizPlv"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"TabrizPlv"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"TabrizPlv"},"content":"public class EditMeetingDescriptorBuilder {","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"TabrizPlv"},"content":"    private UpdateMeetingCommand.EditMeetingDescriptor descriptor;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"TabrizPlv"},"content":"    public EditMeetingDescriptorBuilder() {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"TabrizPlv"},"content":"        descriptor \u003d new UpdateMeetingCommand.EditMeetingDescriptor();","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"TabrizPlv"},"content":"    public EditMeetingDescriptorBuilder(UpdateMeetingCommand.EditMeetingDescriptor descriptor) {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"TabrizPlv"},"content":"        this.descriptor \u003d new UpdateMeetingCommand.EditMeetingDescriptor(descriptor);","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"TabrizPlv"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code meeting}\u0027s details","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    public EditMeetingDescriptorBuilder(Meeting meeting) {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        descriptor \u003d new UpdateMeetingCommand.EditMeetingDescriptor();","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"        descriptor.setDescription(meeting.getDescription());","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"        descriptor.setStart(meeting.getStart());","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"        descriptor.setEnd(meeting.getEnd());","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"     * Sets the {@code Description} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"    public EditMeetingDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"        descriptor.setDescription(description);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"        return this;","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"     * Sets the {@code Start} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"    public EditMeetingDescriptorBuilder withStart(LocalDateTime start) {","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        descriptor.setStart(start);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"        return this;","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"     * Sets the {@code End} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"    public EditMeetingDescriptorBuilder withEnd(LocalDateTime end) {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"        descriptor.setEnd(end);","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"        return this;","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"TabrizPlv"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"    public UpdateMeetingCommand.EditMeetingDescriptor build() {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"        return descriptor;","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"TabrizPlv":60}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"FireRadical22"},"content":"     * Parses the {@code tags} into a {@code Set\u003cPolicyTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"FireRadical22"},"content":"        Set\u003cPolicyTag\u003e tagSet \u003d Stream.of(tags).map(PolicyTag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":84,"FireRadical22":3}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"bokung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"bokung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"bokung"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"bokung"},"content":"import seedu.address.model.person.Meeting;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"    public static final LocalDateTime DEFAULT_START \u003d LocalDateTime.of(2023, 3, 25, 12, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"    public static final LocalDateTime DEFAULT_END \u003d LocalDateTime.of(2023, 3, 25, 15, 0);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    public static final Meeting DEFAULT_MEETING \u003d new Meeting(\"DEFAULT\", DEFAULT_START, DEFAULT_END);","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"bokung"},"content":"    private ArrayList\u003cMeeting\u003e meetings;","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"FireRadical22"},"content":"    private Set\u003cPolicyTag\u003e tags;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"bokung"},"content":"        meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"TabrizPlv"},"content":"        meetings.add(DEFAULT_MEETING);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"bokung"},"content":"        meetings \u003d personToCopy.getMeetings();","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"FireRadical22"},"content":"     * Parses the {@code tags} into a {@code Set\u003cPolicyTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"bokung"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"bokung"},"content":"     * Sets the {@code Meeting} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"bokung"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"bokung"},"content":"    public PersonBuilder withMeeting(ArrayList\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"bokung"},"content":"        this.meetings \u003d meetings;","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"bokung"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"bokung"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"FireRadical22"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"FireRadical22"},"content":"     * Sets the {@code Meeting} of the {@code Person} that we are building","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"FireRadical22"},"content":"     * using String inputs","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"FireRadical22"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"bokung"},"content":"    public PersonBuilder withMeetings(String dateTime) {","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"bokung"},"content":"        if (dateTime.isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"bokung"},"content":"            this.meetings.add(new Meeting());","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"bokung"},"content":"        } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"FireRadical22"},"content":"            String[] args \u003d dateTime.trim().split(\" \", 1);","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"FireRadical22"},"content":"            String desc \u003d args[0];","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"TabrizPlv"},"content":"            LocalDateTime start \u003d ParserUtil.parseDateTime(args[1]);","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"TabrizPlv"},"content":"            LocalDateTime end \u003d ParserUtil.parseDateTime(args[2]);","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"TabrizPlv"},"content":"            Meeting meetingToAdd \u003d new Meeting(desc, start, end);","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"bokung"},"content":"            this.meetings.add(meetingToAdd);","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"bokung"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"bokung"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"bokung"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":131,"author":{"gitId":"bokung"},"content":"        return new Person(name, phone, email, address, tags, meetings);","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"bokung":24,"TabrizPlv":7,"-":93,"FireRadical22":9}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"FireRadical22"},"content":"import seedu.address.model.tag.PolicyTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"FireRadical22"},"content":"            Set\u003cPolicyTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":60,"FireRadical22":2}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"FireRadical22"},"content":"    public static final Index INDEX_FIRST_MEETING \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":12,"FireRadical22":1}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person ALICE \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"Alice Pauline\").withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"TabrizPlv"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person BENSON \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"Benson Meier\").withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"TabrizPlv"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person CARL \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person DANIEL \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person ELLE \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\").withEmail(\"werner@example.com\")","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person FIONA \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\").withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person GEORGE \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\").withEmail(\"anna@example.com\")","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person HOON \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\").withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person IDA \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\").withEmail(\"hans@example.com\")","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":57,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person AMY \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"TabrizPlv"},"content":"    public static final Person BOB \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"TabrizPlv"},"content":"        new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"TabrizPlv"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"bokung"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"bokung"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"bokung":2,"TabrizPlv":33,"-":48}}]
