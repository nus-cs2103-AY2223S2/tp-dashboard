[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W09-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W09-2/tp/actions)","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W09-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-W09-2/tp/)","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"![UiMockup](docs/images/Ui.png)","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"# FastTrack","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"FastTrack is specifically designed to cater to the needs of tech-savvy NUS computing students who are on a tight budget. ","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"With our expense tracking features, students can easily track their daily expenses and ensure that they are not overspending. ","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"The Command Line Interface (CLI) and batch logging features make it easy to enter expenses quickly and efficiently.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"which is ideal stressed out undergraduates with limited free times.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"### Core Features","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"* Log and delete expenses ","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"* Create and delete expense categories","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"* Filter expenses by categories","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"* Graphical User Interface (GUI) displaying spending statistics to allows students to view their financial situation at a single glance and understand how to improve their spending habits to keep within predefined budgets","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"### Aim","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"By providing an easy-to-use, feature-rich expense tracker which focuses on speed, the user is able to log expenses quickly and view their spending habits, giving them the best of both worlds.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU Initiative](http://se-education.org).","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"nicleejy":21,"shirsho-12":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"gitsac"},"content":"//test {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"gitsac"},"content":"//    useJUnitPlatform()","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"gitsac"},"content":"//    finalizedBy jacocoTestReport","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"gitsac"},"content":"//}","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gitsac":4,"-":68}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Shirshajit Sen Gupta","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"gitsac"},"content":"\u003cimg src\u003d\"images/shirsho-12.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](https://shirsho-12.github.io)]","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/shirsho-12)]","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"gitsac"},"content":"[[portfolio](team/gitsac.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"* Role: Manage the repository, implement features, perform testing","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"* Responsibilities: Project Management, Feature Implementation, Test Management","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"### Shi Wen Hong","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"\u003cimg src\u003d\"images/jinbesan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[github](http://github.com/jinbesan)]","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"gitsac"},"content":"[[portfolio](team/gitsac.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jinbesan"},"content":"* Role: Developer","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"jinbesan"},"content":"* Responsibilities: Feature Implementation","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Randall Ng Hong Rong","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"\u003cimg src\u003d\"images/randallnhr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"[[github](http://github.com/randallnhr)] ","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"[[portfolio](team/randallnhr.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"* Responsibilities: Logic ","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Nicholas Lee Jun Yi","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"gitsac"},"content":"\u003cimg src\u003d\"images/nicleejy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[github](http://github.com/nicleejy)]","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"[[portfolio](team/nicleejy.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"* Role: Developer","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"* Responsibilities: UI","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"### Isaac Chai Han Jie","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"gitsac"},"content":"\u003cimg src\u003d\"images/gitsac.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"[[github](http://github.com/gitsac)]","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"gitsac"},"content":"[[portfolio](team/gitsac.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"gitsac"},"content":"* Role: Deliverables","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"gitsac"},"content":"* Responsibilities: Deliver deliverables","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"randallnhr":2,"gitsac":9,"nicleejy":5,"shirsho-12":2,"jinbesan":2,"-":43}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"nicleejy"},"content":"* NUS undergraduate students from the School of Computing ","lastModifiedDate":"2023-03-07"},{"lineNumber":260,"author":{"gitId":"nicleejy"},"content":"* Tech-savvy and able to type fast","lastModifiedDate":"2023-03-07"},{"lineNumber":261,"author":{"gitId":"nicleejy"},"content":"* Comfortable using CLI apps","lastModifiedDate":"2023-03-07"},{"lineNumber":262,"author":{"gitId":"nicleejy"},"content":"* Has to manage a large number of different general consumption and professional recurring expenses ","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"nicleejy"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-07"},{"lineNumber":265,"author":{"gitId":"nicleejy"},"content":"* Easy-to-use and allows students to log their daily expenses quickly and efficiently via a CLI","lastModifiedDate":"2023-03-07"},{"lineNumber":266,"author":{"gitId":"nicleejy"},"content":"* Students can keep track of their spending habits with informative statistics","lastModifiedDate":"2023-03-07"},{"lineNumber":267,"author":{"gitId":"nicleejy"},"content":"* FastTrack provides visual feedback and suggestions to help NUS students make more informed financial decisions","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​               | I want to …​                                                          | So that I can…​                                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"nicleejy"},"content":"|----------|-----------------------|-----------------------------------------------------------------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-07"},{"lineNumber":275,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | New user              | See usage instructions                                                | Refer to instructions when I forget how to use the app                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":276,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | Add my own expense categories                                         | Categorise my expenses with a high degree of customisation                    |","lastModifiedDate":"2023-03-07"},{"lineNumber":277,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | Delete an expense category                                            | Remove categories that I no longer need                                       |","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | List all categories                                                   | See all my categories at a glance                                             |","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | Log an expense in a single command                                    | Keep track of expenses in the system                                          |","lastModifiedDate":"2023-03-07"},{"lineNumber":280,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | List all expenses in total                                            | Get an overview of my expenses                                                |","lastModifiedDate":"2023-03-13"},{"lineNumber":281,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | List all expenses by category                                         | Analyse my expenses in each category                                          |","lastModifiedDate":"2023-03-07"},{"lineNumber":282,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | Delete an expense                                                     | Remove expenses which I have keyed in incorrectly                             |","lastModifiedDate":"2023-03-07"},{"lineNumber":283,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | See a summary of my expenses                                          | Analyse and correct my spending habits                                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":284,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | Keep track of Software-As-A-Service/application hosting subscriptions | Be prepared when a recurring expense is due soon                              |","lastModifiedDate":"2023-03-07"},{"lineNumber":285,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | Find an expense based on a keyword                                    | Easily filter expenses based on their name                                    |","lastModifiedDate":"2023-03-07"},{"lineNumber":286,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | Edit an expense                                                       | Update the details of an expense without deleting and creating a new one      |","lastModifiedDate":"2023-03-07"},{"lineNumber":287,"author":{"gitId":"nicleejy"},"content":"| `* * *`  | NUS Computing Student | See how much I have spent in total in the list                        | Can see how much I have spent in total for any number of expenses in the list |","lastModifiedDate":"2023-03-07"},{"lineNumber":288,"author":{"gitId":"nicleejy"},"content":"| `* *`    | NUS Computing Student | See my expense to budget statistics                                   | Ensure my expenses are within or have exceeded a predefined budget            |","lastModifiedDate":"2023-03-07"},{"lineNumber":289,"author":{"gitId":"nicleejy"},"content":"| `* *`    | NUS Computing Student | List all expenses for a specified time frame                          | Track my expenses on a timely basis                                           |","lastModifiedDate":"2023-03-07"},{"lineNumber":290,"author":{"gitId":"nicleejy"},"content":"| `* *`    | NUS Computing Student | Add descriptions to my categories containing additional details       | Define my categories distinctly                                               |","lastModifiedDate":"2023-03-07"},{"lineNumber":291,"author":{"gitId":"nicleejy"},"content":"| `* *`    | NUS Computing Student | See a percentage breakdown of my expenses                             | Be aware of what categories I should spend less on                            |","lastModifiedDate":"2023-03-07"},{"lineNumber":292,"author":{"gitId":"nicleejy"},"content":"| `* *`    | NUS Computing Student | Get feedback on how I can change my spending habits                   | Develop good financial habits                                                 |","lastModifiedDate":"2023-03-07"},{"lineNumber":293,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":294,"author":{"gitId":"nicleejy"},"content":"## Use cases","lastModifiedDate":"2023-03-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"gitsac"},"content":"(For all use cases below, the **System** is `FastTrack` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-06"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"nicleejy"},"content":"**Precondition: The user has launched the FastTrack application**","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":300,"author":{"gitId":"nicleejy"},"content":"### Use case: UC1 - Add category","lastModifiedDate":"2023-03-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"nicleejy"},"content":"1. User requests to add a new category to FastTrack.","lastModifiedDate":"2023-03-06"},{"lineNumber":305,"author":{"gitId":"nicleejy"},"content":"2. User enters the add command with the category name.","lastModifiedDate":"2023-03-06"},{"lineNumber":306,"author":{"gitId":"nicleejy"},"content":"3. FastTrack adds the new category.","lastModifiedDate":"2023-03-06"},{"lineNumber":307,"author":{"gitId":"nicleejy"},"content":"4. FastTrack responds with a success message indicating the category has been successfully added.","lastModifiedDate":"2023-03-06"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"nicleejy"},"content":"* 2a. The user does not enter the required category name.","lastModifiedDate":"2023-03-06"},{"lineNumber":313,"author":{"gitId":"nicleejy"},"content":"  * 2a1. FastTrack responds telling the user that a name is required and the command is invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":314,"author":{"gitId":"nicleejy"},"content":"  * 2a2. User enters add command with the category name.","lastModifiedDate":"2023-03-06"},{"lineNumber":315,"author":{"gitId":"nicleejy"},"content":"  * 2a3. Steps 2a1-2a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-03-06"},{"lineNumber":316,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"nicleejy"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2023-03-06"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"nicleejy"},"content":"* 2b. The category name already exists","lastModifiedDate":"2023-03-06"},{"lineNumber":320,"author":{"gitId":"nicleejy"},"content":"  * 2b1. FastTrack informs the user that the category name has already been used and prompts the user for a different category name.","lastModifiedDate":"2023-03-06"},{"lineNumber":321,"author":{"gitId":"nicleejy"},"content":"  * 2b2. User enters add command with the category name.","lastModifiedDate":"2023-03-06"},{"lineNumber":322,"author":{"gitId":"nicleejy"},"content":"  * 2b3. Steps 2b1-2b2 are repeated until the data entered are correct.","lastModifiedDate":"2023-03-06"},{"lineNumber":323,"author":{"gitId":"nicleejy"},"content":"    ","lastModifiedDate":"2023-03-06"},{"lineNumber":324,"author":{"gitId":"nicleejy"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2023-03-06"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"nicleejy"},"content":"### Use case: UC2 - Delete a Category","lastModifiedDate":"2023-03-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"nicleejy"},"content":"1. User lists all categories using UC4.","lastModifiedDate":"2023-03-06"},{"lineNumber":331,"author":{"gitId":"nicleejy"},"content":"2. User requests to delete a category from FastTrack.","lastModifiedDate":"2023-03-06"},{"lineNumber":332,"author":{"gitId":"nicleejy"},"content":"3. User enters the delete command with the index i of the category to be deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":333,"author":{"gitId":"nicleejy"},"content":"4. FastTrack deletes the category at index i.","lastModifiedDate":"2023-03-06"},{"lineNumber":334,"author":{"gitId":"nicleejy"},"content":"5. FastTrack displays a success message to the user indicating the category has been successfully deleted.","lastModifiedDate":"2023-03-06"},{"lineNumber":335,"author":{"gitId":"nicleejy"},"content":"  ","lastModifiedDate":"2023-03-06"},{"lineNumber":336,"author":{"gitId":"nicleejy"},"content":"   Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":337,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":338,"author":{"gitId":"nicleejy"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":339,"author":{"gitId":"nicleejy"},"content":"* 3a. The user selects an invalid category index (the index is out of bounds of the list)","lastModifiedDate":"2023-03-06"},{"lineNumber":340,"author":{"gitId":"nicleejy"},"content":"    * 3a1. FastTrack displays an error message telling the user to key in a valid index.","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"nicleejy"},"content":"    * 3a2. User enters delete command with the category index.","lastModifiedDate":"2023-03-06"},{"lineNumber":342,"author":{"gitId":"nicleejy"},"content":"    * 3a3. Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-03-06"},{"lineNumber":343,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":344,"author":{"gitId":"nicleejy"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-03-06"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"shirsho-12"},"content":"### Use case: UC3 - Edit an Expense","lastModifiedDate":"2023-03-07"},{"lineNumber":347,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":348,"author":{"gitId":"shirsho-12"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":349,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":350,"author":{"gitId":"shirsho-12"},"content":"1. The user lists all expenses using UC7.","lastModifiedDate":"2023-03-07"},{"lineNumber":351,"author":{"gitId":"shirsho-12"},"content":"2. The user selects the expense they want to edit from the list of expenses.","lastModifiedDate":"2023-03-07"},{"lineNumber":352,"author":{"gitId":"shirsho-12"},"content":"3. User keys in the command to edit the expense.","lastModifiedDate":"2023-03-07"},{"lineNumber":353,"author":{"gitId":"shirsho-12"},"content":"4. FastTrack responds with a success message indicating the expense has been successfully edited.","lastModifiedDate":"2023-03-07"},{"lineNumber":354,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":355,"author":{"gitId":"shirsho-12"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":356,"author":{"gitId":"shirsho-12"},"content":"* 2a. The user selects an expense that does not exist. ","lastModifiedDate":"2023-03-07"},{"lineNumber":357,"author":{"gitId":"shirsho-12"},"content":"    * 2a1. FastTrack displays an error message and does not allow the user to edit the expense. ","lastModifiedDate":"2023-03-07"},{"lineNumber":358,"author":{"gitId":"shirsho-12"},"content":"* 2b. The user tries to save an expense with invalid or missing data.","lastModifiedDate":"2023-03-07"},{"lineNumber":359,"author":{"gitId":"shirsho-12"},"content":"    * 2b1. FastTrack displays an error message indicating the fields that need to be corrected.","lastModifiedDate":"2023-03-07"},{"lineNumber":360,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":361,"author":{"gitId":"shirsho-12"},"content":"**Precondition: The user has created at least one expense in the app**","lastModifiedDate":"2023-03-07"},{"lineNumber":362,"author":{"gitId":"shirsho-12"},"content":"### Use case: UC4 - List all Categories","lastModifiedDate":"2023-03-07"},{"lineNumber":363,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":364,"author":{"gitId":"shirsho-12"},"content":"**MSS**","lastModifiedDate":"2023-03-07"},{"lineNumber":365,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":366,"author":{"gitId":"shirsho-12"},"content":"1.  User requests to list all categories. ","lastModifiedDate":"2023-03-07"},{"lineNumber":367,"author":{"gitId":"shirsho-12"},"content":"2.  FastTrack displays all categories.","lastModifiedDate":"2023-03-07"},{"lineNumber":368,"author":{"gitId":"shirsho-12"},"content":"   ","lastModifiedDate":"2023-03-07"},{"lineNumber":369,"author":{"gitId":"shirsho-12"},"content":"   Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":370,"author":{"gitId":"shirsho-12"},"content":"  ","lastModifiedDate":"2023-03-07"},{"lineNumber":371,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":372,"author":{"gitId":"shirsho-12"},"content":"**Extensions**","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"shirsho-12"},"content":"* 2a. The user does not have any categories.","lastModifiedDate":"2023-03-07"},{"lineNumber":374,"author":{"gitId":"shirsho-12"},"content":"    * 2a1. FastTrack only displays the Misc category","lastModifiedDate":"2023-03-07"},{"lineNumber":375,"author":{"gitId":"shirsho-12"},"content":"      ","lastModifiedDate":"2023-03-07"},{"lineNumber":376,"author":{"gitId":"nicleejy"},"content":"### Use case: UC5 - Add an expense","lastModifiedDate":"2023-03-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"gitsac"},"content":"1.  User wants to add an expense to be tracked.","lastModifiedDate":"2023-03-06"},{"lineNumber":381,"author":{"gitId":"gitsac"},"content":"2.  User keys in the command to add an expense to be tracked.","lastModifiedDate":"2023-03-06"},{"lineNumber":382,"author":{"gitId":"gitsac"},"content":"3.  FastTrack responds with a successfully added message.","lastModifiedDate":"2023-03-06"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"gitsac"},"content":"* 2a. User keys in information in wrong format.","lastModifiedDate":"2023-03-06"},{"lineNumber":387,"author":{"gitId":"gitsac"},"content":"  * 2a1. FastTrack returns an error, requesting that the user inputs information in the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":388,"author":{"gitId":"gitsac"},"content":"  * 2a2. User inputs information again.","lastModifiedDate":"2023-03-06"},{"lineNumber":389,"author":{"gitId":"gitsac"},"content":"  * 2a3. Steps 2a1-2a2 are repeated until the information being input is of the correct format.","lastModifiedDate":"2023-03-06"},{"lineNumber":390,"author":{"gitId":"gitsac"},"content":"   ","lastModifiedDate":"2023-03-06"},{"lineNumber":391,"author":{"gitId":"gitsac"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2023-03-06"},{"lineNumber":392,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":393,"author":{"gitId":"nicleejy"},"content":"## Use case: UC6 - Delete an expense","lastModifiedDate":"2023-03-07"},{"lineNumber":394,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":395,"author":{"gitId":"gitsac"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":396,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":397,"author":{"gitId":"gitsac"},"content":"1. User wants to delete an expense that has been tracked.","lastModifiedDate":"2023-03-06"},{"lineNumber":398,"author":{"gitId":"gitsac"},"content":"2. User uses UC7 (to list out all expenses currently added).","lastModifiedDate":"2023-03-06"},{"lineNumber":399,"author":{"gitId":"gitsac"},"content":"3. User keys in the command to delete the expense.","lastModifiedDate":"2023-03-06"},{"lineNumber":400,"author":{"gitId":"gitsac"},"content":"4. FastTrack responds with a successfully deleted message.","lastModifiedDate":"2023-03-06"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":404,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":406,"author":{"gitId":"gitsac"},"content":"* 3a. User keys in an invalid expense index.","lastModifiedDate":"2023-03-06"},{"lineNumber":407,"author":{"gitId":"gitsac"},"content":"    * 3a1. FastTrack returns an error, requesting that the user inputs the correct expense index.","lastModifiedDate":"2023-03-06"},{"lineNumber":408,"author":{"gitId":"gitsac"},"content":"    * 3a2. User inputs information again.","lastModifiedDate":"2023-03-06"},{"lineNumber":409,"author":{"gitId":"gitsac"},"content":"    * 3a3. Steps 3a1-3a2 are repeated until the expense index being input by the user is valid.","lastModifiedDate":"2023-03-06"},{"lineNumber":410,"author":{"gitId":"gitsac"},"content":"  ","lastModifiedDate":"2023-03-06"},{"lineNumber":411,"author":{"gitId":"gitsac"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2023-03-06"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":414,"author":{"gitId":"gitsac"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":416,"author":{"gitId":"nicleejy"},"content":"### Use case: UC7 - List all expense","lastModifiedDate":"2023-03-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"randallnhr"},"content":"1.  User requests to list all expense.","lastModifiedDate":"2023-03-06"},{"lineNumber":421,"author":{"gitId":"randallnhr"},"content":"2.  FastTrack displays all expenses added by user.","lastModifiedDate":"2023-03-06"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":423,"author":{"gitId":"randallnhr"},"content":"    Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":424,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":425,"author":{"gitId":"nicleejy"},"content":"### Use case: UC8 - List all expense in a given category","lastModifiedDate":"2023-03-07"},{"lineNumber":426,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":427,"author":{"gitId":"randallnhr"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":428,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":429,"author":{"gitId":"randallnhr"},"content":"1.  User requests to list all expense in a given category. ","lastModifiedDate":"2023-03-06"},{"lineNumber":430,"author":{"gitId":"randallnhr"},"content":"2.  FastTrack displays all expenses in a given category added by user.","lastModifiedDate":"2023-03-06"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"randallnhr"},"content":"* 1a. User does not enter a category.","lastModifiedDate":"2023-03-06"},{"lineNumber":434,"author":{"gitId":"randallnhr"},"content":"  * 1a1. FastTrack displays error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"nicleejy"},"content":"* 1b. The given category is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":439,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":440,"author":{"gitId":"randallnhr"},"content":"    * 1b1. FastTrack displays an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"randallnhr"},"content":"      Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"nicleejy"},"content":"### Use case: UC9 - List all expense in the past week","lastModifiedDate":"2023-03-07"},{"lineNumber":445,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":446,"author":{"gitId":"randallnhr"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":447,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":448,"author":{"gitId":"randallnhr"},"content":"1.  User requests to list all expense in the past week.","lastModifiedDate":"2023-03-06"},{"lineNumber":449,"author":{"gitId":"randallnhr"},"content":"2.  FastTrack displays all expenses added by user in the past week .","lastModifiedDate":"2023-03-06"},{"lineNumber":450,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":451,"author":{"gitId":"randallnhr"},"content":"    Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":453,"author":{"gitId":"nicleejy"},"content":"### Use case: UC10 - Find an expense","lastModifiedDate":"2023-03-07"},{"lineNumber":454,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":455,"author":{"gitId":"randallnhr"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":456,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":457,"author":{"gitId":"randallnhr"},"content":"1.  User requests to find an expense.","lastModifiedDate":"2023-03-06"},{"lineNumber":458,"author":{"gitId":"randallnhr"},"content":"2.  FastTrack displays all expenses related to the keyword provided.","lastModifiedDate":"2023-03-06"},{"lineNumber":459,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":460,"author":{"gitId":"randallnhr"},"content":"    Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"nicleejy"},"content":"### Use case: UC11 - Clear all expenses from the expense log","lastModifiedDate":"2023-03-07"},{"lineNumber":463,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":464,"author":{"gitId":"gitsac"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":465,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":466,"author":{"gitId":"gitsac"},"content":"1. User wants to wipe all currently-logged expenses.","lastModifiedDate":"2023-03-06"},{"lineNumber":467,"author":{"gitId":"gitsac"},"content":"2. User keys in the command to clear all logged expenses.","lastModifiedDate":"2023-03-06"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"nicleejy"},"content":"### Use case: UC12 - Exit from FastTrack","lastModifiedDate":"2023-03-07"},{"lineNumber":472,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":473,"author":{"gitId":"gitsac"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"gitsac"},"content":"1. User wants to exit the application.","lastModifiedDate":"2023-03-06"},{"lineNumber":476,"author":{"gitId":"gitsac"},"content":"2. User keys in the command to exit the application.","lastModifiedDate":"2023-03-06"},{"lineNumber":477,"author":{"gitId":"gitsac"},"content":"3. FastTrack exits and is closed.","lastModifiedDate":"2023-03-06"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"gitsac"},"content":"    Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"nicleejy"},"content":"2. Should be able to hold up to 1000 expenses without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-06"},{"lineNumber":485,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"nicleejy"},"content":"4. FastTrack should be designed in a modular, scalable manner to enable easy addition of new features in the future.","lastModifiedDate":"2023-03-06"},{"lineNumber":487,"author":{"gitId":"nicleejy"},"content":"5. The code should be well-organized and well-documented to ensure ease of maintenance and debugging.","lastModifiedDate":"2023-03-06"},{"lineNumber":488,"author":{"gitId":"nicleejy"},"content":"6. FastTrack should protect user data from unauthorized access or modification.","lastModifiedDate":"2023-03-06"},{"lineNumber":489,"author":{"gitId":"nicleejy"},"content":"7. Any modification to the data will result in a prompt update to the user interface.","lastModifiedDate":"2023-03-06"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"randallnhr":28,"gitsac":36,"nicleejy":78,"shirsho-12":30,"-":374}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"title: FastTrack User Guide","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"FastTrack is an easy-to-use **financial management desktop application** designed for NUS undergraduate students who are living on a tight budget. ","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"With a combination of a Command Line Interface (CLI) and Graphical User Interface (GUI), our app provides a user-friendly and efficient way to track your expenses and manage your finances.","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"2. Download the latest `fastTrack.jar` from [here](https://github.com/AY2223S2-CS2103T-W09-2/tp/releases).","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for FastTrack.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar fastTrack.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"   * `list -t` : Lists all expenses","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"   * `add c/groceries n/milk p/4.50 d/14/2/23` : Adds an expense named `milk` to the expenses list with a price of $4.50 and a date of 14/02/2023","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"   * `delete 3` : Deletes the 3rd expense shown in the current list","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"   * `exit` : Exits the app","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"  e.g. in `add c/CATEGORY_NAME`, `CATEGORY_NAME` is a parameter which can be used as `add c/groceries`.","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"  e.g `p/PRICE [d/DATE]` can be used as `p/4.50 d/14/2/2023` or as `p/4.50`.","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"  e.g. `[c/CATEGORY_NAME]…​` can be used as ` ` (i.e. 0 times), `c/groceries`, `c/groceries c/food` etc.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"  e.g. if the command specifies `c/CATEGORY_NAME p/PRICE`, `p/PRICE c/CATEGORY_NAME` is also acceptable.","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"  e.g. if you specify `p/4.50 p/5.80`, only `p/5.80` will be taken.","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"## Viewing help : `help`","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"## Adding a category: `cat`","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"Adds a new expense category. If the category already exists, this command will not execute.","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"Format: `cat CATEGORY_NAME`","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"* `cat groceries` creates a new `Groceries` category","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"* `cat entertainment` creates a new `Entertainment` category","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"## Deleting a category: `delcat`","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"Deletes an expense category at the specified `INDEX`.","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"* The index refers to the index number shown in the displayed categories list.","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"* If expenses previously categorised under the specified category will no longer be part of that category and remain uncategorized","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"Format: `delcat INDEX`","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"* `lcat` followed by `delcat 2` deletes the second category in the log","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"* `lcat` followed by `delcat 1` deletes the first category in the log","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"## Adding an expense: `add`","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"Adds an expense to the log.","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"Format: `add c/CATEGORY_NAME n/ITEM_NAME p/PRICE [d/DATE]`","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"Examples:","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"* `add c/groceries n/milk p/4.50 `","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"* `add c/entertainment p/20 n/movie night d/14/2/23`","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"## Listing Categories: `lcat`","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"Shows a list of categories in the log.","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"Format: `lcat`","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"## Listing expenses : `list`","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"Shows a list of expenses in the log.","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"### List all expenses","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"Format: `list -t`","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"nicleejy"},"content":"### List expenses filtered by categories","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"nicleejy"},"content":"Format: `list -c c/CATEGORY_NAME [c/CATEGORY_NAME]…​`","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"`list -c` can have 1 or more categories to filter by","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"nicleejy"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"nicleejy"},"content":"### List expenses from the past week","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"nicleejy"},"content":"Format: `list -w`","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"nicleejy"},"content":"## Editing an expense : `edit`","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"nicleejy"},"content":"- To be implemented in next iteration","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"nicleejy"},"content":"## Search for an expense by name: `find`","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"nicleejy"},"content":"Find expenses whose names contain any of the given keywords.","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"nicleejy"},"content":"* The search is case-insensitive. e.g `dinner` will match `Dinner`","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"nicleejy"},"content":"* The order of the keywords does not matter. e.g. `ramen Dinner` will match `Dinner ramen`","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"nicleejy"},"content":"* Only the name of the expense is searched","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"nicleejy"},"content":"* Only full words will be matched e.g. `dinn` will not match `dinner`","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"nicleejy"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search)","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"nicleejy"},"content":"  e.g. `movie dinner` will return `dinner with Alex`, `movie with friends`","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"nicleejy"},"content":"```","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"nicleejy"},"content":"Suppose you have 3 expenses logged:","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"nicleejy"},"content":"Date: 2023-03-02, Category: Dining, Name: McDonald\u0027s, Price: $7.50","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"nicleejy"},"content":"Date: 2023-03-02, Category: Dining, Name: KFC, Price: $6.00","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"nicleejy"},"content":"Date: 2023-03-03, Category: Groceries, Name: Milk, Price: $4.00","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"nicleejy"},"content":"```","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"nicleejy"},"content":"* `find kfc milk` returns `Milk` and `KFC`","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"nicleejy"},"content":"* `find mcdonald\u0027s` returns `McDonald\u0027s`\u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"nicleejy"},"content":"## Deleting an expense : `del`","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"nicleejy"},"content":"Deletes the specified expense from the log.","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"nicleejy"},"content":"* Deletes the expense at the specified `INDEX`","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"nicleejy"},"content":"* The index refers to the index number shown in the displayed expense list","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"nicleejy"},"content":"* `list` followed by `delete 2` deletes the second expense in the log","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"nicleejy"},"content":"* `find movie` followed by `delete 1` deletes the first expense in the results of the `find` command","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"nicleejy"},"content":"## Clearing all entries : `clear`","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"nicleejy"},"content":"Clears all entries from the expense log.","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"nicleejy"},"content":"## Exiting the program : `exit`","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"nicleejy"},"content":"## Saving the data","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"nicleejy"},"content":"All data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"nicleejy"},"content":"## Editing the data file","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"nicleejy"},"content":"Expenses data are saved as a JSON file `[JAR file location]/data/fastTrack.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":197,"author":{"gitId":"nicleejy"},"content":"If your changes to the data file makes its format invalid, FastTrack will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"nicleejy"},"content":"## Archiving data files `[coming in v2.0]`","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"nicleejy"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FastTrack home folder.","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"nicleejy"},"content":"**Add Expense** | `add c/CATEGORY_NAME n/ITEM_NAME p/PRICE [d/DATE]` \u003cbr\u003e e.g., `add c/entertainment n/movie night p/20 d/14/2/23`","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"nicleejy"},"content":"**Delete Expense** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"nicleejy"},"content":"**List Expenses** | All expenses: `list -t`\u003cbr\u003eFilter by categories:`list -c c/CATEGORY_NAME [c/CATEGORY_NAME]…​`\u003cbr\u003eFrom past week: `list -w`","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"nicleejy"},"content":"**List Categories** | `lcat`","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"nicleejy"},"content":"**Find Expense** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find movie`","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"nicleejy"},"content":"**Add Category** | `cat CATEGORY_NAME`","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"nicleejy"},"content":"**Delete Category** | `delcat CATEGORY_NAME`","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nicleejy":106,"-":118}},{"path":"docs/team/gitsac.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gitsac"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"gitsac"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"gitsac"},"content":"title: Isaac\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"gitsac"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"gitsac"},"content":"### Overview","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"gitsac"},"content":"FastTrack is a desktop application to help you keep track of daily expenses, optimised for use via a command line interface (CLI). With this app, you can easily add expenses by category, view a summary of what has been spent in total, by category or for the week. The user interface is intuitive and easy-to-use. Overall, FastTrack aims to speed up the time taken to log expenses, saving valuable time for the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"gitsac"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"gitsac"},"content":"New Feature: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"gitsac"},"content":"Enhancements implemented: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"gitsac"},"content":"Contributions to the UG: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"gitsac"},"content":"Contributions to the DG: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"gitsac"},"content":"Contributions to team-based tasks: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"gitsac"},"content":"Review/Mentoring Contributions: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"gitsac"},"content":"Contributions beyond team project: to be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"gitsac":24}},{"path":"docs/team/jinbesan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jinbesan"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"jinbesan"},"content":"layout: page","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"jinbesan"},"content":"title: Wen Hong\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jinbesan"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"jinbesan"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"jinbesan"},"content":"FastTrack is a desktop application to help you keep track of daily expenses, optimised for use via a command line interface (CLI). With this app, you can easily add expenses by category, view a summary of what has been spent in total, by category or for the week. The user interface is intuitive and easy-to-use. Overall, FastTrack aims to speed up the time taken to log expenses, saving valuable time for the user.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"jinbesan"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"jinbesan"},"content":"New Feature: to be added soon","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"jinbesan"},"content":"Enhancements implemented: to be added soon","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"jinbesan"},"content":"Contributions to the UG: to be added soon","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"jinbesan"},"content":"Contributions to the DG: to be added soon","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"jinbesan"},"content":"Contributions to team-based tasks: to be added soon","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"jinbesan"},"content":"Review/Mentoring Contributions: to be added soon","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"jinbesan"},"content":"Contributions beyond team project: to be added soon","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"jinbesan":24}},{"path":"docs/team/nicleejy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"title: Nicholas\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"### Overview","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"FastTrack is a desktop application to help you keep track of daily expenses, optimised for use via a command line interface (CLI). With this app, you can easily add expenses by category, view a summary of what has been spent in total, by category or for the week. The user interface is intuitive and easy-to-use. Overall, FastTrack aims to speed up the time taken to log expenses, saving valuable time for the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"New Feature: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"Enhancements implemented: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"Contributions to the UG: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"Contributions to the DG: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"Contributions to team-based tasks: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"Review/Mentoring Contributions: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"Contributions beyond team project: to be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nicleejy":24}},{"path":"docs/team/randallnhr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"title: Randall\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"### Overview","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"FastTrack is a desktop application to help you keep track of daily expenses, optimised for use via a command line interface (CLI). With this app, you can easily add expenses by category, view a summary of what has been spent in total, by category or for the week. The user interface is intuitive and easy-to-use. Overall, FastTrack aims to speed up the time taken to log expenses, saving valuable time for the user.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"**New Feature:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"**Enhancements implemented:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"**Contributions to the UG:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"**Contributions to the DG:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"**Contributions to team-based tasks:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"**Review/Mentoring Contributions:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"**Contributions beyond team project:** to be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"randallnhr":24}},{"path":"docs/team/shirsho-12.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"title: Shirshajit\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"### Project: FastTrack","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"FastTrack is a desktop address book application used for _ _. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about __20__ kLoC.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"* **New Feature**: MAGIC to be added soon.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"  * What it does:  ","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"  * Justification:  ","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"  * Highlights:  ","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"  * Credits:  ","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"* **New Feature**: ","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"**Enhancements implemented**: to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"**Contributions to the UG:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"**Contributions to the DG:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"**Contributions to team-based tasks:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"**Review/Mentoring Contributions:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"**Contributions beyond team project:** to be added soon","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"shirsho-12":32}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.storage.ExpenseTrackerStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.storage.JsonExpenseTrackerStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"shirsho-12"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ExpenseTracker ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTrackerStorage expenseTrackerStorage \u003d new JsonExpenseTrackerStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"        storage \u003d new StorageManager(expenseTrackerStorage, userPrefsStorage);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"shirsho-12"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"     * book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"shirsho-12"},"content":"     * The data from the sample address book will be used instead if","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"     * {@code storage}\u0027s address book is not found,","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"shirsho-12"},"content":"     * or an empty address book will be used instead if errors occur when reading","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"shirsho-12"},"content":"     * {@code storage}\u0027s address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"shirsho-12"},"content":"        Optional\u003cReadOnlyExpenseTracker\u003e expenseTrackerOptional;","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"shirsho-12"},"content":"        ReadOnlyExpenseTracker initialData;","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"shirsho-12"},"content":"            expenseTrackerOptional \u003d storage.readExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"shirsho-12"},"content":"            if (!expenseTrackerOptional.isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"shirsho-12"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ExpenseTracker\");","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"            // TODO update sample data","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"shirsho-12"},"content":"            initialData \u003d expenseTrackerOptional.get();","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"shirsho-12"},"content":"            // initialData \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"shirsho-12"},"content":"            // addressBookOptional.orElseGet(SampleDataUtil::getSampleCategoryData);","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"shirsho-12"},"content":"            // initialData \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"shirsho-12"},"content":"            // addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"shirsho-12"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ExpenseTracker\");","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"shirsho-12"},"content":"            initialData \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"shirsho-12"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ExpenseTracker\");","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"shirsho-12"},"content":"            initialData \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"shirsho-12"},"content":"        // Update config file in case it was missing to begin with or there are","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"shirsho-12"},"content":"        // new/unused fields","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"shirsho-12"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"shirsho-12"},"content":"     * file path,","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"shirsho-12"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ExpenseTracker\");","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"shirsho-12"},"content":"        // Update prefs file in case it was missing to begin with or there are","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"shirsho-12"},"content":"        // new/unused fields","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"shirsho-12"},"content":"        logger.info(\"Starting ExpenseTracker \" + MainApp.VERSION);","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"shirsho-12"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Expense Tracker ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicleejy":1,"shirsho-12":36,"-":156}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"    ReadOnlyExpenseTracker getAddressBook();","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"    ObservableList\u003cCategory\u003e getFilteredCategoryList();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"    /** Returns an unmodifiable view of the filtered list of expenses */","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    ObservableList\u003cExpense\u003e getFilteredExpenseList();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"    int getExpenseListCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nicleejy":9,"shirsho-12":2,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.logic.parser.ExpenseTrackerParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"    private final ExpenseTrackerParser addressBookParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"shirsho-12"},"content":"     * {@code Storage}.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"shirsho-12"},"content":"        addressBookParser \u003d new ExpenseTrackerParser();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"shirsho-12"},"content":"            storage.saveExpenseTracker(model.getAddressBook());","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"shirsho-12"},"content":"    public ReadOnlyExpenseTracker getAddressBook() {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"    public ObservableList\u003cCategory\u003e getFilteredCategoryList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        return model.getFilteredCategoryList();","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"    public ObservableList\u003cExpense\u003e getFilteredExpenseList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"        return model.getFilteredExpenseList();","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"    public int getExpenseListCount() {","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        return model.getExpenseListCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"gitsac"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"gitsac"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"gitsac":2,"nicleejy":12,"shirsho-12":8,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/AddCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUMMARY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":" * Adds a category to the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"public class AddCategory extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"    public static final String COMMAND_WORD \u003d \"addcat\";","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a category to FastTrack. \"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"            + PREFIX_CATEGORY + \"CATEGORY_NAME\"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"            + PREFIX_SUMMARY + \"CATEGORY_SUMMARY\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"            + PREFIX_CATEGORY + \"groceries\"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"            + PREFIX_SUMMARY + \"all expenses related to groceries\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New category added: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"    public static final String MESSAGE_DUPLICATE_CATEGORY \u003d \"This category already exists in FastTrack\";","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"    private final Category toAdd;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"     * Creates an AddCategory to add the specified {@code Category}","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"    public AddCategory(Category category) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"        requireNonNull(category);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"        toAdd \u003d category;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"        if (model.hasCategory(toAdd)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CATEGORY);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"        model.addCategory(toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"                || (other instanceof AddCategory // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"                \u0026\u0026 toAdd.equals(((AddCategory) other).toAdd));","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"randallnhr":51,"shirsho-12":2}},{"path":"src/main/java/seedu/address/logic/commands/AddExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":" * Adds an expense to the Expense Tracker.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"public class AddExpenseCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an expense to FastTrack \"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"            + PREFIX_NAME + \"EXPENSE NAME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"            + PREFIX_CATEGORY + \"CATEGORY \"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"            + PREFIX_PRICE + \"AMOUNT \"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"            + PREFIX_DATE + \"[DATE]\"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"            + PREFIX_NAME + \"Milk\"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"            + PREFIX_CATEGORY + \"groceries\"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"            + PREFIX_PRICE + \"4.50\"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"            + PREFIX_DATE + \"2/10/23\";","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New expense added: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    private final Expense newExpense;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"     * Creates an AddExpenseCommand to add the specified {@code Expense}","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    public AddExpenseCommand(Expense expense) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        newExpense \u003d expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"        Category newCategory \u003d newExpense.getCategory();","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"        if (model.hasCategory(newCategory.getCategoryName())) {","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"            Category existingCategory \u003d model.getCategoryInstance(newCategory.getCategoryName());","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"            newExpense.setCategory(existingCategory);","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"            model.addCategory(newCategory);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        model.addExpense(newExpense);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newExpense));","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"                || (other instanceof AddExpenseCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"                \u0026\u0026 newExpense.equals(((AddExpenseCommand) other).newExpense));","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nicleejy":64,"shirsho-12":1}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"        model.setAddressBook(new ExpenseTracker());","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shirsho-12":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":" * Deletes a category identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"public class DeleteCategory extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"    public static final String COMMAND_WORD \u003d \"delcat\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"            + \": Deletes the category identified by the index number used in the displayed category list.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"    public static final String MESSAGE_DELETE_CATEGORY_SUCCESS \u003d \"Deleted Category: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"     * Creates an DeleteCategory to delete the specified {@code Category}","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"     * @param targetIndex index of the category in the filtered category list to delete","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"    public DeleteCategory(Index targetIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"        List\u003cCategory\u003e lastShownList \u003d model.getFilteredCategoryList();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"        Category categoryToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"        model.deleteCategory(categoryToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CATEGORY_SUCCESS, categoryToDelete));","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"randallnhr"},"content":"                || (other instanceof DeleteCategory // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"randallnhr"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCategory) other).targetIndex)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"randallnhr":52,"shirsho-12":5}},{"path":"src/main/java/seedu/address/logic/commands/DeleteExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":" * Deletes an expense from the expense tracker.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"public class DeleteExpenseCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"            + \": Deletes the expense identified by the index number used in the displayed expenses list.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    public static final String MESSAGE_DELETE_EXPENSE_SUCCESS \u003d \"Deleted expense: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"     * Creates an DeleteExpenseCommand to delete the specified {@code Expense}","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"     * @param targetIndex index of the expense in the filtered expense list to delete","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    public DeleteExpenseCommand(Index targetIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"        List\u003cExpense\u003e lastShownList \u003d model.getFilteredExpenseList();","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        Expense expense \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        model.deleteExpense(expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EXPENSE_SUCCESS, expense));","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"                || (other instanceof DeleteExpenseCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteExpenseCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nicleejy":50,"shirsho-12":5}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"gitsac"},"content":"        // List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"gitsac"},"content":"        // if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"gitsac"},"content":"        //  throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"gitsac"},"content":"        // }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"gitsac"},"content":"        // Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"gitsac"},"content":"        // Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"gitsac"},"content":"        // if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"gitsac"},"content":"        //     throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"gitsac"},"content":"        // }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"gitsac"},"content":"        // model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"gitsac"},"content":"        // model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"gitsac"},"content":"        // return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"gitsac"},"content":"        return new CommandResult(MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"randallnhr"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"randallnhr"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"randallnhr":3,"gitsac":13,"-":210}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Expense Tracker as requested ...\";","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"shirsho-12":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ListCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CATEGORY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"public class ListCategory extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"    public static final String COMMAND_WORD \u003d \"lcat\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all categories\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"        model.updateFilteredCategoryList(PREDICATE_SHOW_ALL_CATEGORY);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"randallnhr":23,"nicleejy":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":" * List all the expenses in the expense tracker.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all expenses\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nicleejy":1,"shirsho-12":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"    private final Index index;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"randallnhr"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"randallnhr"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"randallnhr"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"randallnhr"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"randallnhr"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"randallnhr"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"randallnhr"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"randallnhr"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"randallnhr"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"randallnhr"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"randallnhr"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"randallnhr"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"randallnhr"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"randallnhr"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"randallnhr"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"randallnhr"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"randallnhr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"randallnhr"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"randallnhr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"randallnhr"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"randallnhr"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"randallnhr"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"randallnhr"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"randallnhr"},"content":"        // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"randallnhr"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"randallnhr"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"randallnhr":98}},{"path":"src/main/java/seedu/address/logic/parser/AddCategoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUMMARY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.AddCategory;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"public class AddCategoryParser implements Parser\u003cAddCategory\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"    public AddCategory parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY, PREFIX_SUMMARY);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CATEGORY, PREFIX_SUMMARY)","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCategory.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"        String summary \u003d argMultimap.getValue(PREFIX_SUMMARY).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"        Category category \u003d ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).get(), summary);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"        return new AddCategory(category);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"randallnhr":46}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"randallnhr":3,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddExpenseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"import seedu.address.logic.commands.AddExpenseCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":" * Parses input arguments and creates a new AddExpenseCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"public class AddExpenseCommandParser implements Parser\u003cAddExpenseCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddExpenseCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"     * and returns an AddExpenseCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    public AddExpenseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CATEGORY, PREFIX_PRICE, PREFIX_DATE);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_CATEGORY, PREFIX_PRICE)","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddExpenseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"        String name \u003d ParserUtil.parseExpenseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        Category category \u003d ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        Price amount \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        Optional\u003cString\u003e dateStringArg \u003d argMultimap.getValue(PREFIX_DATE);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        if (dateStringArg.isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"            date \u003d ParserUtil.parseDate(dateStringArg.get());","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"        Expense expenseToAdd \u003d new Expense(name, amount.getPriceAsDouble(), date, category);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        return new AddExpenseCommand(expenseToAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nicleejy":61}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"    public static final Prefix PREFIX_SUMMARY \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"randallnhr":2,"nicleejy":5,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCategoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.DeleteCategory;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"public class DeleteCategoryParser implements Parser\u003cDeleteCategory\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"    public DeleteCategory parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"            return new DeleteCategory(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCategory.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"randallnhr":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteExpenseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import seedu.address.logic.commands.DeleteExpenseCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" * Parses input arguments and creates a new DeleteExpenseCommandParser object","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"public class DeleteExpenseCommandParser implements Parser\u003cDeleteExpenseCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteExpenseCommandParser","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"     * and returns a DeleteExpenseCommandParser object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    public DeleteExpenseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"            return new DeleteExpenseCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteExpenseCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nicleejy":29}},{"path":"src/main/java/seedu/address/logic/parser/ExpenseTrackerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.AddCategory;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import seedu.address.logic.commands.AddExpenseCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.DeleteCategory;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"import seedu.address.logic.commands.DeleteExpenseCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.ListCategory;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"public class ExpenseTrackerParser {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        case AddExpenseCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"            return new AddExpenseCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        case DeleteExpenseCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"            return new DeleteExpenseCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"randallnhr"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"randallnhr"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"randallnhr"},"content":"        case ListCategory.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"randallnhr"},"content":"            return new ListCategory();","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":82,"author":{"gitId":"randallnhr"},"content":"        case AddCategory.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"randallnhr"},"content":"            return new AddCategoryParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"randallnhr"},"content":"        case DeleteCategory.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"randallnhr"},"content":"            return new DeleteCategoryParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"randallnhr":16,"nicleejy":7,"shirsho-12":1,"-":69}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.MiscellaneousCategory;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.UserDefinedCategory;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.person.Price;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.util.CommandUtility;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     * Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"     * Parses a {@code String expenseName} into a String.","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"     * @throws ParseException if the given {@code expenseName} is invalid.","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"    public static String parseExpenseName(String expenseName) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(expenseName);","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        String trimmedName \u003d expenseName.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"        if (trimmedName.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"            throw new ParseException(\"The expense name should not be empty!\");","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"        return trimmedName;","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"     * Parses {@code price} into an {@code Price} and returns it.","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"     * @throws ParseException if the specified price is invalid (not non-negative and numeric).","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"        if (!Price.isValidPrice(trimmedPrice)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"        return new Price(trimmedPrice);","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"     * Parses {@code categoryName} and creates a {@code Category} instance and returns it.","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"     * Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"     * trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":"     * @throws ParseException if the specified categoryName does not exist","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"    public static Category parseCategory(String categoryName) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"        String trimmedCategoryName \u003d categoryName.trim().toLowerCase();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"        if (trimmedCategoryName.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"        if (categoryName.equals(\"miscellaneous\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"            return new MiscellaneousCategory();","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"        return new UserDefinedCategory(trimmedCategoryName, \"\");","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"     * Parses a {@code String category} into a {@code UserDefinedCategory}.","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"     * @throws ParseException if the given {@code category} is invalid.","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"    public static UserDefinedCategory parseCategory(String category, String summary) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(category);","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"        String trimmedCategory \u003d category.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"        if (!Category.isValidCategoryName(category)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"        return new UserDefinedCategory(trimmedCategory, summary);","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"     * Parses {@code dateString} into a {@code LocalDate} instance and returns it.","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"     * @throws ParseException if the date could not be parsed","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"nicleejy"},"content":"    public static LocalDate parseDate(String dateString) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"nicleejy"},"content":"        String trimmedDate \u003d dateString.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"nicleejy"},"content":"        LocalDate parsedDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"            parsedDate \u003d CommandUtility.parseDateFromUserInput(trimmedDate);","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"nicleejy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"nicleejy"},"content":"            throw new ParseException(\"Date should be of the form D/M/YY\");","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"nicleejy"},"content":"        return parsedDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nicleejy":82,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"                PREFIX_REMARK);","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"        Index index;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"randallnhr":40}},{"path":"src/main/java/seedu/address/model/ExpenseTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"gitsac"},"content":"import seedu.address.model.category.UniqueCategoryList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.ExpenseList;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"public class ExpenseTracker implements ReadOnlyExpenseTracker {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"gitsac"},"content":"    private final UniqueCategoryList categories;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    private final ExpenseList expenses;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"     * between constructors. See","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"     * ways to avoid duplication","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":38,"author":{"gitId":"gitsac"},"content":"        categories \u003d new UniqueCategoryList();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        expenses \u003d new ExpenseList();","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"    public ExpenseTracker() {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"     * Creates an ExpenseTracker using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"shirsho-12"},"content":"    public ExpenseTracker(ReadOnlyExpenseTracker toBeCopied) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"    public void setCategories(List\u003cCategory\u003e categories) {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"        this.categories.setCategoryList(categories);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"    public void setExpenses(List\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"        this.expenses.setExpenseList(expenses);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"     * Resets the existing data of this {@code ExpenseTracker} with {@code newData}.","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"    public void resetData(ReadOnlyExpenseTracker newData) {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        setExpenses(newData.getExpenseList());","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"gitsac"},"content":"        setCategories(newData.getCategoryList());","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"shirsho-12"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"shirsho-12"},"content":"     * the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"     * Returns true if the given category exists in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"     * @param category The category to check for existence in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"     * @return true if the category exists in the list and false otherwise.","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"gitsac"},"content":"    public boolean hasCategory(Category category) {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"gitsac"},"content":"        requireNonNull(category);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"gitsac"},"content":"        return categories.contains(category);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"     * Returns true if a category with the given name exists in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"shirsho-12"},"content":"     * @param categoryName The name of the category to check for existence in the","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"shirsho-12"},"content":"     *                     list.","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"shirsho-12"},"content":"     * @return true if a category with the given name exists in the list and false","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"shirsho-12"},"content":"     *         otherwise.","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"    public boolean hasCategory(String categoryName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"        for (Category c : categories.asUnmodifiableList()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"            if (Objects.equals(c.getCategoryName(), categoryName)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"                return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"        return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"    public void addCategory(Category toAdd) {","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"nicleejy"},"content":"        categories.add(toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"shirsho-12"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"shirsho-12"},"content":"     * {@code editedPerson}.","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":134,"author":{"gitId":"shirsho-12"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"shirsho-12"},"content":"     * existing person in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"shirsho-12"},"content":"     * Replaces the given category {@code target} in the list with","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"shirsho-12"},"content":"     * {@code editedCategory}.","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"shirsho-12"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"shirsho-12"},"content":"     * The category identity of {@code editedCategory} must not be the same as","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"shirsho-12"},"content":"     * another existing category in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"gitsac"},"content":"    public void removeCategory(Category key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"gitsac"},"content":"        categories.remove(key);","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":171,"author":{"gitId":"gitsac"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"gitsac"},"content":"    public ObservableList\u003cCategory\u003e getCategoryList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"gitsac"},"content":"        return categories.asUnmodifiableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"nicleejy"},"content":"    public ObservableList\u003cExpense\u003e getExpenseList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"nicleejy"},"content":"        return expenses.asUnmodifiableList();","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"shirsho-12"},"content":"                || (other instanceof ExpenseTracker // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"shirsho-12"},"content":"                        \u0026\u0026 persons.equals(((ExpenseTracker) other).persons));","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"nicleejy"},"content":"    public Category getCategoryInstance(String categoryName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"nicleejy"},"content":"        for (Category c : categories.asUnmodifiableList()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"nicleejy"},"content":"            if (Objects.equals(c.getCategoryName(), categoryName)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"nicleejy"},"content":"                return c;","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"nicleejy"},"content":"        return null;","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"nicleejy"},"content":"    public void addExpense(Expense expense) {","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"nicleejy"},"content":"        expenses.add(expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"nicleejy"},"content":"    public void removeExpense(Expense expense) {","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"nicleejy"},"content":"        expenses.remove(expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gitsac":20,"nicleejy":57,"shirsho-12":29,"-":103}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    Predicate\u003cExpense\u003e PREDICATE_SHOW_ALL_EXPENSES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"    Predicate\u003cCategory\u003e PREDICATE_SHOW_ALL_CATEGORY \u003d unused -\u003e true;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"shirsho-12"},"content":"    void setAddressBook(ReadOnlyExpenseTracker addressBook);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"shirsho-12"},"content":"    ReadOnlyExpenseTracker getAddressBook();","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"gitsac"},"content":"    // ReadOnlyCategoryList getAddressBook();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"shirsho-12"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"     * the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"gitsac"},"content":"    void deleteCategory(Category target);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"gitsac"},"content":"    void addCategory(Category toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"shirsho-12"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"shirsho-12"},"content":"     * existing person in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"    /** Returns whether a category is present in the category list by name */","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"    boolean hasCategory(String categoryName);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"    boolean hasCategory(Category category);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"    /** Returns an unmodifiable view of the filtered expense list */","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"    ObservableList\u003cExpense\u003e getFilteredExpenseList();","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"    ObservableList\u003cCategory\u003e getFilteredCategoryList();","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"    int getExpenseListCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"shirsho-12"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"shirsho-12"},"content":"     * {@code predicate}.","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"    void updateFilteredExpensesList(Predicate\u003cExpense\u003e predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"gitsac"},"content":"    void updateFilteredCategoryList(Predicate\u003cCategory\u003e predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"    void addExpense(Expense expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":"    void deleteExpense(Expense expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"    Category getCategoryInstance(String categoryName);","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"randallnhr":1,"gitsac":6,"nicleejy":24,"shirsho-12":8,"-":82}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import javafx.beans.property.IntegerProperty;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import javafx.beans.property.SimpleIntegerProperty;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"    private final ExpenseTracker addressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    private final FilteredList\u003cExpense\u003e filteredExpenses;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"gitsac"},"content":"    private final FilteredList\u003cCategory\u003e filteredCategories;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    private final IntegerProperty expenseListCount \u003d new SimpleIntegerProperty();","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"    private final IntegerProperty categoryListCount \u003d new SimpleIntegerProperty();","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"shirsho-12"},"content":"    public ModelManager(ReadOnlyExpenseTracker addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"        this.addressBook \u003d new ExpenseTracker(addressBook);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        filteredExpenses \u003d new FilteredList\u003c\u003e(this.addressBook.getExpenseList());","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"gitsac"},"content":"        filteredCategories \u003d new FilteredList\u003c\u003e(this.addressBook.getCategoryList());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"        updateExpenseListCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"shirsho-12"},"content":"        this(new ExpenseTracker(), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"    public int getExpenseListCount() {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        return expenseListCount.get();","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"    public void updateExpenseListCount() {","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"        expenseListCount.set(filteredExpenses.size());","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"shirsho-12"},"content":"    public void setAddressBook(ReadOnlyExpenseTracker addressBook) {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"shirsho-12"},"content":"    public ReadOnlyExpenseTracker getAddressBook() {","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"gitsac"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"gitsac"},"content":"    public void deleteCategory(Category target) {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"gitsac"},"content":"        addressBook.removeCategory(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"gitsac"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"gitsac"},"content":"    public void addCategory(Category toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"gitsac"},"content":"        addressBook.addCategory(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"shirsho-12"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"shirsho-12"},"content":"     * internal list of","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Category List Accessors","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"nicleejy"},"content":"    public ObservableList\u003cCategory\u003e getFilteredCategoryList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"nicleejy"},"content":"        return filteredCategories;","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"nicleejy"},"content":"    public void updateFilteredCategoryList(Predicate\u003cCategory\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"nicleejy"},"content":"        filteredCategories.setPredicate(predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"nicleejy"},"content":"    public boolean hasCategory(String categoryName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(categoryName);","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"nicleejy"},"content":"        return addressBook.hasCategory(categoryName);","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"nicleejy"},"content":"    public boolean hasCategory(Category category) {","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(category);","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"nicleejy"},"content":"        return addressBook.hasCategory(category);","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Expense List Accessors","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"shirsho-12"},"content":"     * Returns an unmodifiable view of the list of {@code Expense} backed by the","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"shirsho-12"},"content":"     * internal list of","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"nicleejy"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"nicleejy"},"content":"    public ObservableList\u003cExpense\u003e getFilteredExpenseList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"nicleejy"},"content":"        return filteredExpenses;","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"nicleejy"},"content":"    public void updateFilteredExpensesList(Predicate\u003cExpense\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"nicleejy"},"content":"        filteredExpenses.setPredicate(predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"nicleejy"},"content":"    public void addExpense(Expense expense) {","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"nicleejy"},"content":"        addressBook.addExpense(expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"nicleejy"},"content":"        updateFilteredExpensesList(PREDICATE_SHOW_ALL_EXPENSES);","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"nicleejy"},"content":"        updateExpenseListCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"nicleejy"},"content":"    public void deleteExpense(Expense expense) {","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"nicleejy"},"content":"        addressBook.removeExpense(expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"nicleejy"},"content":"        updateFilteredExpensesList(PREDICATE_SHOW_ALL_EXPENSES);","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"nicleejy"},"content":"    public Category getCategoryInstance(String categoryName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"nicleejy"},"content":"        return addressBook.getCategoryInstance(categoryName);","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gitsac":13,"nicleejy":72,"shirsho-12":20,"-":142}},{"path":"src/main/java/seedu/address/model/ReadOnlyExpenseTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"gitsac"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"public interface ReadOnlyExpenseTracker {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"gitsac"},"content":"    ObservableList\u003cCategory\u003e getCategoryList();","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    ObservableList\u003cExpense\u003e getExpenseList();","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gitsac":3,"nicleejy":3,"shirsho-12":1,"-":16}},{"path":"src/main/java/seedu/address/model/category/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gitsac"},"content":"package seedu.address.model.category;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"gitsac"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"gitsac"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"gitsac"},"content":" * Category class to represent categories that expenses are grouped under.","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"gitsac"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"gitsac"},"content":"public abstract class Category {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Category names should be alphanumeric\";","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"gitsac"},"content":"    protected String categoryName;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"gitsac"},"content":"    protected String summary;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"     * Constructor for Category class.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"     * @param categoryName Name of the category","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"     * @param summary Short description of the category","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"    public Category(String categoryName, String description) {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"        this.categoryName \u003d categoryName;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"        this.summary \u003d description;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"     * Returns true if a given string is a valid category name.","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"    public static boolean isValidCategoryName(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"gitsac"},"content":"    public String getCategoryName() {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"gitsac"},"content":"        return this.categoryName;","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"gitsac"},"content":"    };","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"gitsac"},"content":"    public String getSummary() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"gitsac"},"content":"        return this.summary;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"gitsac"},"content":"    };","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"     * Returns true if a given category matches the current category","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"gitsac"},"content":"    public boolean isSameCategory(Category toCheck) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"gitsac"},"content":"        if (this \u003d\u003d toCheck) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"gitsac"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"        if (toCheck !\u003d null \u0026\u0026 toCheck.getCategoryName().equals(this.getCategoryName())) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"gitsac"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"gitsac"},"content":"        return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"shirsho-12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"gitsac"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"gitsac"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"gitsac"},"content":"        if (!(other instanceof Category)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"gitsac"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"gitsac"},"content":"        Category otherTypecasted \u003d (Category) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"        if (this.getCategoryName().equals(otherTypecasted.getCategoryName())","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"                \u0026\u0026 this.getSummary().equals(otherTypecasted.getSummary())) {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"gitsac"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"gitsac"},"content":"        return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"shirsho-12"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"gitsac"},"content":"        return Objects.hash(categoryName, summary);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"randallnhr"},"content":"        return this.categoryName;","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"gitsac"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"randallnhr":13,"gitsac":42,"nicleejy":5,"shirsho-12":23}},{"path":"src/main/java/seedu/address/model/category/MiscellaneousCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gitsac"},"content":"package seedu.address.model.category;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"gitsac"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"* Category class to represent categories that expenses are not grouped into a","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"* specific category.","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"gitsac"},"content":"*/","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"gitsac"},"content":"public class MiscellaneousCategory extends Category {","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"     * Constructor for MiscellaneousCategory class.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"     * @param categoryName Name of the category","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"     * @param description Short description of the category","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"    public MiscellaneousCategory() {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"        super(\"Miscellaneous\", \"Placeholder Description\");","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"        return \"Miscellaneous\";","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"                || (other instanceof MiscellaneousCategory // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"                        \u0026\u0026 this.categoryName.equals(((MiscellaneousCategory) other).categoryName)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"        return categoryName.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"gitsac"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"gitsac":6,"shirsho-12":27}},{"path":"src/main/java/seedu/address/model/category/UniqueCategoryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gitsac"},"content":"package seedu.address.model.category;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"gitsac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"gitsac"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"gitsac"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"gitsac"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":" * A list of categories that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"gitsac"},"content":"public class UniqueCategoryList implements Iterable\u003cCategory\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"gitsac"},"content":"    private final ObservableList\u003cCategory\u003e internalListOfCategories \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    private final ObservableList\u003cCategory\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"            .unmodifiableObservableList(internalListOfCategories);","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"     * Returns true if the list contains an equivalent category as the given argument.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"     * @param toCheck Category to check for","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"gitsac"},"content":"    public boolean contains(Category toCheck) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"gitsac"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"gitsac"},"content":"        return internalListOfCategories.stream().anyMatch(toCheck::isSameCategory);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"     * Adds a category to the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"     * @param newCategory Category to add","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"gitsac"},"content":"    public void add(Category newCategory) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"gitsac"},"content":"        requireNonNull(newCategory);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"gitsac"},"content":"        if (contains(newCategory)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"gitsac"},"content":"            //Throw an exception here later","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"gitsac"},"content":"        internalListOfCategories.add(newCategory);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"shirsho-12"},"content":"     * Replaces the category {@code target} in the list with {@code editedCategory}.","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"shirsho-12"},"content":"     * @param toRemove Category to remove","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"gitsac"},"content":"    public void remove(Category toRemove) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"gitsac"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"gitsac"},"content":"        if (!internalListOfCategories.remove(toRemove)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"gitsac"},"content":"            //Throw an exception here later","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"     * Replaces the category {@code target} in the list with {@code editedCategory}.","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"shirsho-12"},"content":"     * The category identity of {@code editedCategory} must not be","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"shirsho-12"},"content":"     * the same as another existing category in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"     * @param replacementList List of categories to replace the current list","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"gitsac"},"content":"    public void setCategoryList(UniqueCategoryList replacementList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"gitsac"},"content":"        requireNonNull(replacementList);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"gitsac"},"content":"        internalListOfCategories.setAll(replacementList.internalListOfCategories);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"shirsho-12"},"content":"     * Replaces the category {@code target} in the list with {@code editedCategory}.","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"shirsho-12"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"     * The category identity of {@code editedCategory} must not be","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"shirsho-12"},"content":"     * the same as another existing category in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"     * @param listOfCategories List of categories to replace the current list","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"gitsac"},"content":"    public void setCategoryList(List\u003cCategory\u003e listOfCategories) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"gitsac"},"content":"        requireAllNonNull(listOfCategories);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"gitsac"},"content":"        if (!categoriesAreUnique(listOfCategories)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"gitsac"},"content":"            //Throw an exception here","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"gitsac"},"content":"        internalListOfCategories.setAll(listOfCategories);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"shirsho-12"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"shirsho-12"},"content":"     * This list will not contain any null categories.","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"shirsho-12"},"content":"     * @param listOfCategories List of categories to check for uniqueness","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"gitsac"},"content":"    public boolean categoriesAreUnique(List\u003cCategory\u003e listOfCategories) {","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"gitsac"},"content":"        for (int i \u003d 0; i \u003c listOfCategories.size(); i++) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"gitsac"},"content":"            for (int j \u003d i + 1; j \u003c listOfCategories.size(); j++) {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"gitsac"},"content":"                if (listOfCategories.get(i).isSameCategory(listOfCategories.get(j))) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"gitsac"},"content":"                    return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"gitsac"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"gitsac"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"gitsac"},"content":"        return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"shirsho-12"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"shirsho-12"},"content":"     * This list will not contain any null categories.","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"gitsac"},"content":"    public ObservableList\u003cCategory\u003e asUnmodifiableList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"gitsac"},"content":"        return this.internalUnmodifiableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"gitsac"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"gitsac"},"content":"    public Iterator\u003cCategory\u003e iterator() {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"gitsac"},"content":"        return this.internalListOfCategories.iterator();","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"gitsac"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"gitsac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"gitsac"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"gitsac"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"gitsac"},"content":"        if (!(other instanceof UniqueCategoryList)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"gitsac"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"gitsac"},"content":"        UniqueCategoryList otherInUniqueList \u003d (UniqueCategoryList) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"gitsac"},"content":"        return this.internalListOfCategories.equals(otherInUniqueList.internalListOfCategories);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"gitsac"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"gitsac"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"gitsac"},"content":"        return internalListOfCategories.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"gitsac"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"gitsac":84,"nicleejy":20,"shirsho-12":24}},{"path":"src/main/java/seedu/address/model/category/UserDefinedCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gitsac"},"content":"package seedu.address.model.category;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"gitsac"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":" * User-defined category class which allows users to customize their own","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":" * categories to use.","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"gitsac"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"gitsac"},"content":"public class UserDefinedCategory extends Category {","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"     * Constructor for UserDefinedCategory class.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"     * @param categoryName Name of the category","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"     * @param summary Short description of the category","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"gitsac"},"content":"    public UserDefinedCategory(String categoryName, String summary) {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"        super(categoryName, summary);","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"gitsac"},"content":"    public void setCategoryName(String newName) {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"gitsac"},"content":"        this.categoryName \u003d newName;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"gitsac"},"content":"    public void setDescription(String newSummary) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"gitsac"},"content":"        this.summary \u003d newSummary;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"gitsac"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"randallnhr":1,"gitsac":16,"shirsho-12":7}},{"path":"src/main/java/seedu/address/model/expense/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.model.expense;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":" * Represents an Expense in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":" * immutable.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":" * @author shirsho-12","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":" * @version 1.0","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"public class Expense {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Expense names should be alphanumeric\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"    private String name;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"    private double amount;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    private LocalDate date;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"    private Category category;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"     * Constructor for Expense class.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"     * @param name     Name of the expense","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"     * @param amount   Amount of the expense","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"     * @param date     Date of the expense","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"     * @param category Category of the expense","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    public Expense(String name, double amount, LocalDate date, Category category) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"shirsho-12"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"shirsho-12"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"shirsho-12"},"content":"    public String getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"shirsho-12"},"content":"        return name;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"    public double getAmount() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"shirsho-12"},"content":"        return amount;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"shirsho-12"},"content":"        return date;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"shirsho-12"},"content":"    public Category getCategory() {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"shirsho-12"},"content":"        return category;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"shirsho-12"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"        return \"Expense{\"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"shirsho-12"},"content":"                + \"name\u003d\u0027\" + name + \u0027\\\u0027\u0027","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"shirsho-12"},"content":"                + \", amount\u003d\" + amount","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"shirsho-12"},"content":"                + \", date\u003d\" + date","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"shirsho-12"},"content":"                + \", category\u003d\u0027\" + category + \u0027\\\u0027\u0027","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"shirsho-12"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"shirsho-12"},"content":"     * Returns true if a given string is a valid expense name.","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"     * @param category Category to be tested","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"    public static boolean isValidCategory(Category category) {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"shirsho-12"},"content":"        return Category.isValidCategoryName(category.getCategoryName());","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"shirsho-12"},"content":"     * Returns true if a given string is a valid expense name.","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"shirsho-12"},"content":"     * @param name Name to be tested","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"shirsho-12"},"content":"    public static boolean isValidName(String name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"shirsho-12"},"content":"        return name.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"shirsho-12"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"shirsho-12"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"shirsho-12"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"shirsho-12"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"shirsho-12"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"shirsho-12"},"content":"        Expense expense \u003d (Expense) o;","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"shirsho-12"},"content":"        if (Double.compare(expense.amount, amount) !\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"shirsho-12"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"shirsho-12"},"content":"        if (name !\u003d null ? !name.equals(expense.name) : expense.name !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"shirsho-12"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"shirsho-12"},"content":"        if (date !\u003d null ? !date.equals(expense.date) : expense.date !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"shirsho-12"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"shirsho-12"},"content":"        return category !\u003d null ? category.equals(expense.category) : expense.category \u003d\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"shirsho-12"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"shirsho-12"},"content":"        int result;","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"shirsho-12"},"content":"        long temp;","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"shirsho-12"},"content":"        result \u003d name !\u003d null ? name.hashCode() : 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"shirsho-12"},"content":"        temp \u003d Double.doubleToLongBits(amount);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"shirsho-12"},"content":"        result \u003d 31 * result","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"shirsho-12"},"content":"                + (int) (temp ^ (temp \u003e\u003e\u003e 32));","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"shirsho-12"},"content":"        result \u003d 31 * result","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"shirsho-12"},"content":"                + (date !\u003d null ? date.hashCode() : 0);","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"shirsho-12"},"content":"        result \u003d 31 * result","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"shirsho-12"},"content":"                + (category !\u003d null ? category.hashCode() : 0);","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"shirsho-12"},"content":"        return result;","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"shirsho-12"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"shirsho-12"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"shirsho-12"},"content":"    public void setAmount(double amount) {","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"shirsho-12"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"nicleejy"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"shirsho-12"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"shirsho-12"},"content":"    public void setCategory(Category category) {","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"shirsho-12"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"nicleejy":11,"shirsho-12":127}},{"path":"src/main/java/seedu/address/model/expense/ExpenseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.model.expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":" * A list of expenses that enforces uniqueness between its elements and","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":" * does not allow nulls.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"public class ExpenseList implements Iterable\u003cExpense\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    private final ObservableList\u003cExpense\u003e internalListOfExpenses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    private final ObservableList\u003cExpense\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"            .unmodifiableObservableList(internalListOfExpenses);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"     * Adds an expense to the internal list of expenses","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"     * @param newExpense Expense to add","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    public void add(Expense newExpense) {","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(newExpense);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        internalListOfExpenses.add(newExpense);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"     * Removes an expense from the internal list of expenses","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"     * @param toRemove Expense to remove","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    public void remove(Expense toRemove) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        internalListOfExpenses.remove(toRemove);","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"     * Sets an internal list of expenses with a new list of expenses","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"     * @param replacementList List of expenses to replace the current list","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"    public void setExpenseList(ExpenseList replacementList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(replacementList);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        internalListOfExpenses.setAll(replacementList.internalListOfExpenses);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"     * Sets an internal list of expenses with a new list of expenses","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"shirsho-12"},"content":"     * @param listOfExpenses List of expenses to replace the current list","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"    public void setExpenseList(List\u003cExpense\u003e listOfExpenses) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        requireAllNonNull(listOfExpenses);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        internalListOfExpenses.setAll(listOfExpenses);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"    public ObservableList\u003cExpense\u003e asUnmodifiableList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"        return this.internalUnmodifiableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"    public Iterator\u003cExpense\u003e iterator() {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        return this.internalListOfExpenses.iterator();","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"        if (!(other instanceof ExpenseList)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"        ExpenseList otherInUniqueList \u003d (ExpenseList) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"        return this.internalListOfExpenses.equals(otherInUniqueList.internalListOfExpenses);","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"        return internalListOfExpenses.hashCode();","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nicleejy":77,"shirsho-12":9}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"randallnhr"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"randallnhr"},"content":"        return remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"randallnhr"},"content":"                .append(\" Phone: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"randallnhr"},"content":"                .append(\" Email: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"randallnhr"},"content":"                .append(\" Address: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"randallnhr"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"randallnhr"},"content":"                .append(\" Remark: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"randallnhr"},"content":"                .append(getRemark())","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"randallnhr"},"content":"                .append(\" Tags: \");","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"randallnhr"},"content":"        getTags().forEach(builder::append);","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"randallnhr":15,"-":112}},{"path":"src/main/java/seedu/address/model/person/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":" * Represents a Price of an Expense in FastTrack.","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"public class Price {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"            \"Prices should only contain numbers, and should not be negative\";","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0|[1-9]\\\\d*)(\\\\.\\\\d+)?$\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    public final String value;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"     * @param price A valid price.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    public Price(String price) {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"        requireNonNull(price);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"        value \u003d price;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"     * Returns true if a given string is a valid price.","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    public double getPriceAsDouble() {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        return Double.parseDouble(value);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        return value;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"                \u0026\u0026 value.equals(((Price) other).value)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nicleejy":56}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"public class Remark {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"    public final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"     * Constructor for a Remark object.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"     * @param remark","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"randallnhr":37}},{"path":"src/main/java/seedu/address/model/util/CommandUtility.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":" * Utility class which contains helper functions related to various commands, such as conversion of date and times","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"public class CommandUtility {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"     * Parses a date string input in any allowed format and returns a LocalDate object.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"     * @param input A date string of any allowed format","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"     * @return A LocalDate object representing the parsed date","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"     * @throws IllegalArgumentException If the input string cannot be parsed into a valid date","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    public static LocalDate parseDateFromUserInput(String input) throws IllegalArgumentException {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"        DateTimeFormatter[] formatters \u003d {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yy\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yy\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yy\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yyyy\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"                DateTimeFormatter.ofPattern(\"dd/M/yy\"),","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"                DateTimeFormatter.ofPattern(\"dd/M/yyyy\")","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"            try {","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"                return LocalDate.parse(input, formatter);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"                continue;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        throw new IllegalArgumentException(\"Invalid date format\");","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nicleejy":40}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"gitsac"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"gitsac"},"content":"import seedu.address.model.category.UserDefinedCategory;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"gitsac"},"content":"    public static Category[] getSampleCategories() {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"gitsac"},"content":"        return new Category[] {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"gitsac"},"content":"            new UserDefinedCategory(\"Testing category name 1\", \"Description for first test category\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"gitsac"},"content":"            new UserDefinedCategory(\"Testing category name 2\", \"Description for second test category\")","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"shirsho-12"},"content":"    public static ReadOnlyExpenseTracker getSampleAddressBook() {","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker sampleAb \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"shirsho-12"},"content":"    public static ReadOnlyExpenseTracker getSampleCategoryData() {","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker sampleAb \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"gitsac"},"content":"        for (Category sampleCategory : getSampleCategories()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"gitsac"},"content":"            sampleAb.addCategory(sampleCategory);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"gitsac"},"content":"        return sampleAb;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"randallnhr":9,"gitsac":15,"shirsho-12":6,"-":51}},{"path":"src/main/java/seedu/address/model/util/StorageUtility.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":" * Utility class which contains helper functions related to various commands, such as conversion of date and times","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"public class StorageUtility {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"     * Parses a date string in the format of \"yyyy-MM-dd\" from JSON to a LocalDate object.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"     * @param dateString the date string to parse","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"     * @return a LocalDate object representing the parsed date","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    public static LocalDate parseDateFromJson(String dateString) {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"        return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"nicleejy":22}},{"path":"src/main/java/seedu/address/model/util/UserInterfaceUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":" * Utility class which contains functions for utility purposes, such as conversion of dates and prices","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":" * @author Nicholas Lee","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"public class UserInterfaceUtil {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"     * Returns a string representation of the given date object in the format \"dd/MM/yy\".","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"     * @param date the date object to be formatted","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"     * @return a formatted date string","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    public static String parseDate(LocalDate date) {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy\");","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     * Returns a string representation of the given double as a price string in the format \"$xx.xx\".","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"     * @param amount double value representing a price","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"     * @return a formatted price string representation","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"    public static String parsePrice(double amount) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"#0.00\");","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        String priceString \u003d df.format(amount);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"        return \"$\" + priceString;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"     * Returns the input string with the first letter capitalized and the rest of the letters in lower case.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"     * @param input the string to be capitalized","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"     * @return a string with the first letter capitalized","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"    public static String capitalizeFirstLetter(final String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        return Character.toUpperCase(input.charAt(0)) + input.substring(1).toLowerCase();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":44}},{"path":"src/main/java/seedu/address/storage/ExpenseTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":" * Represents a storage for {@link seedu.address.model.ExpenseTracker}.","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"public interface ExpenseTrackerStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"    Path getExpenseTrackerFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"     * Returns ExpenseTracker data as a {@link ReadOnlyExpenseTracker}.","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"    Optional\u003cReadOnlyExpenseTracker\u003e readExpenseTracker() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"     * @see #getExpenseTrackerFilePath()","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"    Optional\u003cReadOnlyExpenseTracker\u003e readExpenseTracker(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"     * Saves the given {@link ReadOnlyExpenseTracker} to the storage.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"shirsho-12"},"content":"     * @param expenseTracker cannot be null.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"shirsho-12"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"shirsho-12"},"content":"    void saveExpenseTracker(ReadOnlyExpenseTracker expenseTracker) throws IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"shirsho-12"},"content":"     * @see #saveExpenseTracker(ReadOnlyExpenseTracker)","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"    void saveExpenseTracker(ReadOnlyExpenseTracker expenseTracker, Path filePath) throws IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"shirsho-12":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gitsac"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"gitsac"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"gitsac"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"gitsac"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"gitsac"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"gitsac"},"content":"import seedu.address.model.category.UserDefinedCategory;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"gitsac"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":" * Jackson-friendly version of {@link Category}.","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"gitsac"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"gitsac"},"content":"class JsonAdaptedCategory {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"gitsac"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Category\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"gitsac"},"content":"    private final String categoryName;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"gitsac"},"content":"    private final String summary;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"gitsac"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"gitsac"},"content":"     * Constructs a {@code JsonAdaptedCategory} with the given category details.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"gitsac"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"gitsac"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"gitsac"},"content":"    public JsonAdaptedCategory(@JsonProperty(\"categoryName\") String categoryName,","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"gitsac"},"content":"                               @JsonProperty(\"summary\") String summary) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"gitsac"},"content":"        this.categoryName \u003d categoryName;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"gitsac"},"content":"        this.summary \u003d summary;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"gitsac"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"gitsac"},"content":"     * Converts a given {@code Category} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"gitsac"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"gitsac"},"content":"    public JsonAdaptedCategory(Category source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"gitsac"},"content":"        this.categoryName \u003d source.getCategoryName();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"gitsac"},"content":"        this.summary \u003d source.getSummary();","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"gitsac"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"shirsho-12"},"content":"     * Converts this Jackson-friendly adapted category object into the model\u0027s","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"shirsho-12"},"content":"     * {@code Category} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"shirsho-12"},"content":"     * @throws IllegalValueException if there were any data constraints violated","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"     *     in the adapted category.","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"gitsac"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"gitsac"},"content":"    public Category toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"gitsac"},"content":"        if (categoryName \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"gitsac"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"gitsac"},"content":"        final String modelCategoryName \u003d categoryName;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"gitsac"},"content":"        if (summary \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"gitsac"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"gitsac"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"gitsac"},"content":"        final String modelDescription \u003d summary;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"gitsac"},"content":"        return new UserDefinedCategory(modelCategoryName, modelDescription);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"gitsac"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"gitsac"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"gitsac":53,"nicleejy":2,"shirsho-12":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedExpense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.util.StorageUtility;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":" * Jackson-friendly version of {@link Expense}.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"public class JsonAdaptedExpense {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Expense\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"    private final String name;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    private final String amount;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    private final String date;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    private final JsonAdaptedCategory category;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"     * Constructs a {@code JsonAdaptedExpense} with the given expense details.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"     * @param name Name of the expense.","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"     * @param amount Amount of the expense.","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"     * @param date Date of the expense.","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"     * @param category Category of the expense.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    public JsonAdaptedExpense(@JsonProperty(\"name\") String name, @JsonProperty(\"amount\") String amount,","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"                              @JsonProperty(\"date\") String date,","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"                              @JsonProperty(\"category\") JsonAdaptedCategory category) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"shirsho-12"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"shirsho-12"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"shirsho-12"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"shirsho-12"},"content":"     * Converts a given {@code Expense} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"     * https://stackoverflow.com/questions/530012/how-to-convert-java-util-date-to-java-sql-date","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"shirsho-12"},"content":"     * @param source future changes to this will not affect the created {@code JsonAdaptedExpense}.","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"shirsho-12"},"content":"    public JsonAdaptedExpense(Expense source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"shirsho-12"},"content":"        name \u003d source.getName();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        amount \u003d Double.toString(source.getAmount());","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        date \u003d source.getFormattedDate();","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        category \u003d new JsonAdaptedCategory(","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"                source.getCategory().getCategoryName(), source.getCategory().getSummary());","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"     * Converts this Jackson-friendly adapted expense object into the model\u0027s {@code Expense} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted expense.","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"shirsho-12"},"content":"    public Expense toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"shirsho-12"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Name\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"shirsho-12"},"content":"        if (!Expense.isValidName(name)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"shirsho-12"},"content":"            throw new IllegalValueException(Expense.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"shirsho-12"},"content":"        final String modelName \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"        final double modelAmount \u003d Double.parseDouble(amount);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"shirsho-12"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Date\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"        final LocalDate modelDate \u003d StorageUtility.parseDateFromJson(date);","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"        final Category modelCategory \u003d category.toModelType();","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"shirsho-12"},"content":"        return new Expense(modelName, modelAmount, modelDate, modelCategory);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"nicleejy":20,"shirsho-12":63}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"randallnhr"},"content":"        final Remark modelRemark \u003d new Remark(\"\"); //TODO: Implement parsing and marshalling in the storage commit.","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"randallnhr"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"randallnhr":4,"-":108}},{"path":"src/main/java/seedu/address/storage/JsonExpenseTrackerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":" * A class to access ExpenseTracker data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"public class JsonExpenseTrackerStorage implements ExpenseTrackerStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonExpenseTrackerStorage.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"    public JsonExpenseTrackerStorage(Path filePath) {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"    public Path getExpenseTrackerFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"        return filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"    public Optional\u003cReadOnlyExpenseTracker\u003e readExpenseTracker() throws DataConversionException {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"shirsho-12"},"content":"        return readExpenseTracker(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"shirsho-12"},"content":"     * Similar to {@link #readExpenseTracker()}.","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"shirsho-12"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"shirsho-12"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"    public Optional\u003cReadOnlyExpenseTracker\u003e readExpenseTracker(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"shirsho-12"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"        Optional\u003cJsonSerializableExpenseTracker\u003e jsonExpenseTracker \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"shirsho-12"},"content":"                filePath, JsonSerializableExpenseTracker.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"shirsho-12"},"content":"        if (!jsonExpenseTracker.isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"shirsho-12"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"shirsho-12"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"shirsho-12"},"content":"            return Optional.of(jsonExpenseTracker.get().toModelType());","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"shirsho-12"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"shirsho-12"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"shirsho-12"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"shirsho-12"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"shirsho-12"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"shirsho-12"},"content":"    public void saveExpenseTracker(ReadOnlyExpenseTracker expenseTracker) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"        saveExpenseTracker(expenseTracker, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"shirsho-12"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"shirsho-12"},"content":"     * Similar to {@link #saveExpenseTracker(ReadOnlyExpenseTracker)}.","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"shirsho-12"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"shirsho-12"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"shirsho-12"},"content":"    public void saveExpenseTracker(ReadOnlyExpenseTracker expenseTracker, Path filePath) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"shirsho-12"},"content":"        requireNonNull(expenseTracker);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"shirsho-12"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"shirsho-12"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableExpenseTracker(expenseTracker), filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"shirsho-12":77}},{"path":"src/main/java/seedu/address/storage/JsonSerializableExpenseTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"gitsac"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":" * An Immutable ExpenseTracker that is serializable to JSON format.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"@JsonRootName(value \u003d \"expenseTracker\")","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"class JsonSerializableExpenseTracker {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"gitsac"},"content":"    public static final String MESSAGE_DUPLICATE_CATEGORY \u003d \"Category list contains duplicate categories!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"gitsac"},"content":"    private final List\u003cJsonAdaptedCategory\u003e categories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    private final List\u003cJsonAdaptedExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"     * Constructs a {@code JsonSerializableExpenseTracker} with the given expenses","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"     * and categories.","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"     * @param listOfCategories list of categories to be added to the ExpenseTracker","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"     * @param listOfExpenses   list of expenses to be added to the ExpenseTracker","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"shirsho-12"},"content":"    public JsonSerializableExpenseTracker(@JsonProperty(\"categories\") List\u003cJsonAdaptedCategory\u003e listOfCategories,","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"            @JsonProperty(\"expenses\") List\u003cJsonAdaptedExpense\u003e listOfExpenses) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"gitsac"},"content":"        this.categories.addAll(listOfCategories);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        this.expenses.addAll(listOfExpenses);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"     * Converts a given {@code ReadOnlyExpenseTracker} into this class for Jackson","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"shirsho-12"},"content":"     * use.","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"shirsho-12"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"     *               {@code JsonSerializableExpenseTracker}.","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"shirsho-12"},"content":"    public JsonSerializableExpenseTracker(ReadOnlyExpenseTracker source) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"gitsac"},"content":"        this.categories.addAll(source.getCategoryList()","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"gitsac"},"content":"                .stream().map(JsonAdaptedCategory::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        this.expenses.addAll(source.getExpenseList()","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"                .stream().map(JsonAdaptedExpense::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"shirsho-12"},"content":"     * Converts this ExpenseTracker into the model\u0027s {@code ExpenseTracker} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"    public ExpenseTracker toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker expenseTracker \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"gitsac"},"content":"        for (JsonAdaptedCategory jsonAdaptedCategory : categories) {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"gitsac"},"content":"            Category category \u003d jsonAdaptedCategory.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"shirsho-12"},"content":"            expenseTracker.addCategory(category);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"        for (JsonAdaptedExpense jsonAdaptedExpense : expenses) {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"            Expense expense \u003d jsonAdaptedExpense.toModelType();","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"shirsho-12"},"content":"            expenseTracker.addExpense(expense);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"gitsac"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"        return expenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gitsac":12,"nicleejy":8,"shirsho-12":21,"-":34}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"public interface Storage extends ExpenseTrackerStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"    Path getExpenseTrackerFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"    Optional\u003cReadOnlyExpenseTracker\u003e readExpenseTracker() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"    void saveExpenseTracker(ReadOnlyExpenseTracker expenseTracker) throws IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"shirsho-12":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":" * Manages storage of ExpenseTracker data in local storage.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"    private ExpenseTrackerStorage expenseBookStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"     * Creates a {@code StorageManager} with the given {@code ExpenseTrackerStorage}","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"    public StorageManager(ExpenseTrackerStorage expenseTracker, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"        this.expenseBookStorage \u003d expenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"shirsho-12"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ExpenseTracker methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"shirsho-12"},"content":"    public Path getExpenseTrackerFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"shirsho-12"},"content":"        return expenseBookStorage.getExpenseTrackerFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"shirsho-12"},"content":"    public Optional\u003cReadOnlyExpenseTracker\u003e readExpenseTracker() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"        return readExpenseTracker(expenseBookStorage.getExpenseTrackerFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"    public Optional\u003cReadOnlyExpenseTracker\u003e readExpenseTracker(Path filePath)","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"shirsho-12"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"shirsho-12"},"content":"        return expenseBookStorage.readExpenseTracker(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"shirsho-12"},"content":"    public void saveExpenseTracker(ReadOnlyExpenseTracker expenseTracker) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"shirsho-12"},"content":"        saveExpenseTracker(expenseTracker, expenseBookStorage.getExpenseTrackerFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"    public void saveExpenseTracker(ReadOnlyExpenseTracker expenseTracker, Path filePath) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"shirsho-12"},"content":"        expenseBookStorage.saveExpenseTracker(expenseTracker, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shirsho-12":19,"-":60}},{"path":"src/main/java/seedu/address/ui/CategoryCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" * A UI component that displays information of a {@code Category}.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"public class CategoryCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"    private static final String FXML \u003d \"CategoryListCard.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    public final Category category;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    private Label id;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    private Label categoryName;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    private Label expenseCount;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"     * Creates a {@code CategoryCard} with the given {@code Category} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    public CategoryCard(Category category, int displayedIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        categoryName.setText(category.getCategoryName());","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        //TODO add a function to count expenses under a specific category","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        expenseCount.setText(\"3\");","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"        if (!(other instanceof CategoryCard)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        CategoryCard card \u003d (CategoryCard) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"                \u0026\u0026 category.equals(card.category);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":57}},{"path":"src/main/java/seedu/address/ui/CategoryListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":" * Panel containing the list of categories.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"public class CategoryListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    private static final String FXML \u003d \"CategoryListPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CategoryListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    private ListView\u003cCategory\u003e categoryListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     * Creates a {@code CategoryListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    public CategoryListPanel(ObservableList\u003cCategory\u003e categoryList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        categoryListView.setItems(categoryList);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        categoryListView.setCellFactory(listView -\u003e new CategoryListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Category} using a {@code CategoryCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    class CategoryListViewCell extends ListCell\u003cCategory\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        protected void updateItem(Category category, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"            super.updateItem(category, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"            if (empty || category \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"                setGraphic(new CategoryCard(category, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":49}},{"path":"src/main/java/seedu/address/ui/ExpenseCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.util.UserInterfaceUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":" * A UI component that displays information of a {@code Expense}.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"public class ExpenseCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    private static final String FXML \u003d \"ExpenseListCard.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    public final Expense expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    private Label id;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    private Label expenseName;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    private Label price;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    private Label category;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"    private Label date;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"     * Creates a {@code ExpenseCard} with the given {@code Expense} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"    public ExpenseCard(Expense expense, int displayedIndex) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        this.expense \u003d expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        expenseName.setText(UserInterfaceUtil.capitalizeFirstLetter(expense.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"        String categoryName \u003d expense.getCategory().getCategoryName();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        category.setText(UserInterfaceUtil.capitalizeFirstLetter(categoryName));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"        date.setText(UserInterfaceUtil.parseDate(expense.getDate()));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        price.setText(UserInterfaceUtil.parsePrice(expense.getAmount()));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        if (!(other instanceof ExpenseCard)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        ExpenseCard card \u003d (ExpenseCard) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"                \u0026\u0026 expense.equals(card.expense);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":65}},{"path":"src/main/java/seedu/address/ui/ExpenseListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":" * Panel containing the list of expenses.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"public class ExpenseListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    private static final String FXML \u003d \"ExpenseListPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ExpenseListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"    private ListView\u003cExpense\u003e expenseListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     * Creates a {@code ExpenseListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"    public ExpenseListPanel(ObservableList\u003cExpense\u003e expenseList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        expenseListView.setItems(expenseList);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        expenseListView.setCellFactory(listView -\u003e new ExpenseListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Expense} using a {@code ExpenseCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    class ExpenseListViewCell extends ListCell\u003cExpense\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"        protected void updateItem(Expense expense, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"            super.updateItem(expense, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"            if (empty || expense \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"                setGraphic(new ExpenseCard(expense, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jinbesan"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jinbesan"},"content":"            \"https://docs.google.com/document/d/1nTsxXRuQh8OzcsR_LoAR6xX_pkw0IuO5HKIqznkDMzE/edit?usp\u003dsharing\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jinbesan"},"content":"    public static final String HELP_MESSAGE_COMMAND \u003d \"Features:\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jinbesan"},"content":"            + \"help\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jinbesan"},"content":"            + \"   - Accesses this help guide\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jinbesan"},"content":"            + \"cat [c/categoryName]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jinbesan"},"content":"            + \"   - Adds a new category to the expense tracker\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jinbesan"},"content":"            + \"delcat [categoryName]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jinbesan"},"content":"            + \"   - Deletes a category from the expense tracker\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jinbesan"},"content":"            + \"add [c/categoryName] [n/itemName] [p/price] [d/date]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jinbesan"},"content":"            + \"   - Adds an expense to the user\u0027s expense tracker\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jinbesan"},"content":"            + \"lcat (UNAVAILABLE AS OF v1.2)\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jinbesan"},"content":"            + \"   - Shows all categories in the expense tracker\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jinbesan"},"content":"            + \"del [index]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jinbesan"},"content":"            + \"   - Deletes expense at index [index]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jinbesan"},"content":"            + \"find [itemname] (UNAVAILABLE AS OF v1.2)\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jinbesan"},"content":"            + \"   - lists all items with matching names\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jinbesan"},"content":"            + \"list -[command option]  (UNAVAILABLE AS OF v1.2)\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jinbesan"},"content":"            + \"   - Toggles the view of summary of expenses\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jinbesan"},"content":"            + \"       list -t  - All expenses of the user\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jinbesan"},"content":"            + \"       list -c  - All expenses of the user in a specific category\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jinbesan"},"content":"            + \"       list -w  - All expenses of the user in the past 7 days\\n\\n\\n\";","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jinbesan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jinbesan"},"content":"    public static final String HELP_MESSAGE \u003d HELP_MESSAGE_COMMAND + \"For more info, refer to the user guide: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jinbesan"},"content":"            + USERGUIDE_URL;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jinbesan":25,"-":100}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    private ExpenseListPanel expenseListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    private CategoryListPanel categoryListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"    private ResultsHeader resultsHeader;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"    private ResultsDetails resultsDetails;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"    private StackPane resultsHeaderPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"    private StackPane resultsDetailsPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"        expenseListPanel \u003d new ExpenseListPanel(logic.getFilteredExpenseList());","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"        listPanelPlaceholder.getChildren().add(expenseListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"nicleejy"},"content":"        resultsHeader \u003d new ResultsHeader();","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"nicleejy"},"content":"        resultsHeaderPlaceholder.getChildren().add(resultsHeader.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"nicleejy"},"content":"        resultsDetails \u003d new ResultsDetails(logic.getExpenseListCount(), \"All\", true);","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"nicleejy"},"content":"        resultsDetailsPlaceholder.getChildren().add(resultsDetails.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"nicleejy"},"content":"     * Toggles the display between the expense list and the category list.","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"nicleejy"},"content":"     * @param isExpenseList true if the expense list should be shown, false if the category list should be shown","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"nicleejy"},"content":"    public void switchListPanel(boolean isExpenseList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"nicleejy"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"nicleejy"},"content":"        if (isExpenseList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"nicleejy"},"content":"            resultsHeader.setHeader(true, \"All\");","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"nicleejy"},"content":"            resultsDetails.setDetails(logic.getExpenseListCount(), \"All\", true);","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"nicleejy"},"content":"            expenseListPanel \u003d new ExpenseListPanel(logic.getFilteredExpenseList());","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"nicleejy"},"content":"            listPanelPlaceholder.getChildren().add(expenseListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"nicleejy"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"nicleejy"},"content":"            resultsHeader.setHeader(false, \"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"nicleejy"},"content":"            resultsDetails.setDetails(logic.getExpenseListCount(), \"\", false);","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"nicleejy"},"content":"            categoryListPanel \u003d new CategoryListPanel(logic.getFilteredCategoryList());","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"nicleejy"},"content":"            listPanelPlaceholder.getChildren().add(categoryListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"nicleejy"},"content":"            if (Objects.equals(commandText, \"lcat\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"nicleejy"},"content":"                switchListPanel(false);","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"nicleejy"},"content":"            if (Objects.equals(commandText, \"list\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"nicleejy"},"content":"                switchListPanel(true);","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"nicleejy"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nicleejy":46,"-":190}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"    private Label remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"randallnhr"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"randallnhr":4,"-":77}},{"path":"src/main/java/seedu/address/ui/ResultsDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":" * A UI component that displays information of a {@code Expense} or {@code Category}","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":" * such as the number of results and the filter applied if any.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"public class ResultsDetails extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"    private static final String FXML \u003d \"ResultsDetails.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    private Label resultsCount;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    private Label dateFilter;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    private Label dateLabel;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"    public ResultsDetails(int numResults, String timeFilter, boolean isExpense) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"        resultsCount.setText(Integer.toString(numResults));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"        dateLabel.setText(\"Date:\");","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"        if (isExpense) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"            dateFilter.setText(timeFilter);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"            dateFilter.setText(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"            dateLabel.setText(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"    public void setDetails(int numResults, String timeFilter, boolean isExpense) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"        resultsCount.setText(Integer.toString(numResults));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"        dateFilter.setText(timeFilter);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        if (isExpense) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"            dateFilter.setText(timeFilter);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"            dateLabel.setText(\"Date:\");","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"            dateFilter.setText(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"            dateLabel.setText(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"        if (!(other instanceof ResultsDetails)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"        ResultsDetails details \u003d (ResultsDetails) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"        return resultsCount.getText().equals(details.resultsCount.getText())","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"                \u0026\u0026 dateFilter.getText().equals(details.dateFilter.getText());","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":66}},{"path":"src/main/java/seedu/address/ui/ResultsHeader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":" * A UI component that displays information of a {@code Expense} or {@code Category}","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":" * with a title and the category filter applied if any.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"public class ResultsHeader extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"    private static final String FXML \u003d \"ResultsHeader.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"    private Label resultType;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    private Label filterType;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    public ResultsHeader() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"        resultType.setText(\"Expenses\");","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"        filterType.setText(\"All\");","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    public void setHeader(boolean isExpenseList, String filter) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        if (isExpenseList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"            resultType.setText(\"Expenses\");","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"            resultType.setText(\"Category\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"        filterType.setText(filter);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"        if (!(other instanceof ResultsHeader)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"        ResultsHeader header \u003d (ResultsHeader) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"        return resultType.getText().equals(header.resultType.getText())","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"                \u0026\u0026 filterType.getText().equals(header.filterType.getText());","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":55}},{"path":"src/main/resources/view/CategoryListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"  \u003cGridPane maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"           \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_label\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"             \u003cminWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"               \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"               \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"             \u003c/minWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"                     \u003cInsets right\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"           \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"           \u003cLabel fx:id\u003d\"categoryName\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_label\" text\u003d\"\\$categoryName\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"            \u003cRegion maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"            \u003cHBox alignment\u003d\"CENTER_RIGHT\" prefHeight\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"               \u003cLabel fx:id\u003d\"expenseCount\" alignment\u003d\"CENTER_RIGHT\" minWidth\u003d\"-Infinity\" text\u003d\"\\$expenseCount\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"                     \u003cstyleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"                        \u003cString fx:value\u003d\"cell_label\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"                        \u003cString fx:value\u003d\"label_dark\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"                     \u003c/styleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"                  \u003cLabel alignment\u003d\"CENTER_RIGHT\" text\u003d\"expense(s)\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"                     \u003cstyleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"                        \u003cString fx:value\u003d\"cell_label\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"                        \u003cString fx:value\u003d\"label_dark\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"                     \u003c/styleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"                        \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nicleejy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":66}},{"path":"src/main/resources/view/CategoryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"\u003cVBox maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"  \u003cListView fx:id\u003d\"categoryListView\" maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":8}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"50.0\" promptText\u003d\"Enter command here...\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"      \u003cStackPane.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"         \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"      \u003c/StackPane.margin\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"      \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"nicleejy":9,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"@font-face {","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"  font-family: \u0027Inter Light\u0027;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"  src: url(\u0027../fonts/Inter/Inter-Light.ttf\u0027);","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"@font-face {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"  font-family: \u0027Inter Regular\u0027;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"  src: url(\u0027../fonts/Inter/Inter-Regular.ttf\u0027);","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"@font-face {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"  font-family: \u0027Inter Bold\u0027;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"  src: url(\u0027../fonts/Inter/Inter-Bold.ttf\u0027);","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"@font-face {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"  font-family: \u0027Inter ExtraBold\u0027;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"  src: url(\u0027../fonts/Inter/Inter-ExtraBold.ttf\u0027);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"@font-face {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"  font-family: \u0027Inconsolata\u0027;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"  src: url(\u0027../fonts/Inconsolata/Inconsolata-Regular.ttf\u0027);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":".background {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #000026;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"    background-color: #000026; /* Used in the default.html file */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":".split-pane:horizontal \u003e .split-pane-divider {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"    -fx-divider-position: 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"    -fx-divider-width: 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #000026;","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"nicleejy"},"content":".list-view .scroll-bar {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #000026;","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":".list-view .scroll-bar:vertical .thumb {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #2E2E57;","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":".list-view .scroll-bar:vertical {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"    -fx-pref-width: 10px;","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":".text-area .scroll-bar:vertical {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"nicleejy"},"content":"     -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"nicleejy"},"content":"     -fx-pref-width: 8px;","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":".text-area .scroll-bar:horizontal {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"     -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"nicleejy"},"content":"     -fx-pref-height: 8px;","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":".text-area .filler {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"nicleejy"},"content":"    -fx-border-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"nicleejy"},"content":".text-area .corner {","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"nicleejy"},"content":"    -fx-border-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"nicleejy"},"content":".text-area .scroll-bar:vertical .thumb {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #2E2E57;","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"nicleejy"},"content":".text-area .scroll-bar:horizontal .thumb {","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #2E2E57;","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"nicleejy"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"nicleejy"},"content":".results_header {","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"nicleejy"},"content":"    -fx-font-family: \"Inter Bold\";","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"nicleejy"},"content":"    -fx-font-size: 26px;","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"nicleejy"},"content":".filter_name {","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #606DA0;","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"nicleejy"},"content":".details_header {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"nicleejy"},"content":"    -fx-font-family: \"Inter Regular\";","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"nicleejy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #606DA0;","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"nicleejy"},"content":".results_count {","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #0F51F0;","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"nicleejy"},"content":".date_filter {","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #0F51F0;","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"nicleejy"},"content":".cell_label {","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"nicleejy"},"content":"    -fx-font-family: \"Inter Regular\";","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"nicleejy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"nicleejy"},"content":".label_dark {","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #606DA0;","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"nicleejy"},"content":".category_tag {","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"nicleejy"},"content":"    -fx-font-family: \"Inter Regular\";","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"nicleejy"},"content":"    -fx-font-size: 10px;","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0B134F;","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"nicleejy"},"content":"    -fx-background-radius: 6px;","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #0F51F0;","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"nicleejy"},"content":"    -fx-padding: 8 12 8 12","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":192,"author":{"gitId":"nicleejy"},"content":"     -fx-background-color: #000026","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"nicleejy"},"content":".pane {","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"nicleejy"},"content":"     -fx-background-color: #000026;","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #000026;","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":204,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"nicleejy"},"content":"    -fx-font-family: \"Inconsolata\";","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"nicleejy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":208,"author":{"gitId":"nicleejy"},"content":"    -fx-border-color: #0F51F0;","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"nicleejy"},"content":"    -fx-border-width: 0 0 0 3px;","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":212,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":215,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":242,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #000026;","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #000026;","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #000026;","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"nicleejy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"nicleejy"},"content":"    -fx-font-family: \"Inter Regular\";","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #606DA0;","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"nicleejy"},"content":".menu-bar {","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"nicleejy"},"content":"     -fx-selection-bar: #0A0B39 ;","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"nicleejy"},"content":".menu-item:hover, .menu:hover {","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"nicleejy"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"nicleejy"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-14"},{"lineNumber":377,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #606DA0;","lastModifiedDate":"2023-03-14"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":383,"author":{"gitId":"nicleejy"},"content":"    -fx-font-family: \"Inter Regular\";","lastModifiedDate":"2023-03-14"},{"lineNumber":384,"author":{"gitId":"nicleejy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-14"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":386,"author":{"gitId":"nicleejy"},"content":"    -fx-prompt-text-fill: #606DA0;","lastModifiedDate":"2023-03-14"},{"lineNumber":387,"author":{"gitId":"nicleejy"},"content":"    -fx-border-color: #0F51F0;","lastModifiedDate":"2023-03-14"},{"lineNumber":388,"author":{"gitId":"nicleejy"},"content":"    -fx-border-width: 0 0 3 0px;","lastModifiedDate":"2023-03-14"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":393,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":395,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":396,"author":{"gitId":"nicleejy"},"content":"    -fx-background-color: #0A0B39;","lastModifiedDate":"2023-03-14"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":412,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"nicleejy":142,"-":270}},{"path":"src/main/resources/view/ExpenseListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"  \u003cGridPane maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" spacing\u003d\"30.0\" GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"           \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_label\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"             \u003cminWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"               \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"               \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"             \u003c/minWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"                     \u003cInsets right\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"           \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"           \u003cLabel fx:id\u003d\"expenseName\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_label\" text\u003d\"\\$expenseName\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"         \u003cLabel fx:id\u003d\"price\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_label\" text\u003d\"\\$price\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"         \u003cLabel fx:id\u003d\"category\" minWidth\u003d\"-Infinity\" styleClass\u003d\"category_tag\" text\u003d\"\\$category\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"         \u003cLabel fx:id\u003d\"date\" minWidth\u003d\"-Infinity\" text\u003d\"\\$date\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"               \u003cstyleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"                  \u003cString fx:value\u003d\"cell_label\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"                  \u003cString fx:value\u003d\"label_dark\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nicleejy"},"content":"               \u003c/styleClass\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nicleejy"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":53}},{"path":"src/main/resources/view/ExpenseListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"\u003cVBox maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"  \u003cListView fx:id\u003d\"expenseListView\" maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":8}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    -fx-text-fill: #606DA0;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nicleejy":1,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"    \u003cScene fill\u003d\"#000026\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"      \u003cVBox styleClass\u003d\"pane\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #000026;\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"                  \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"              \u003cVBox fx:id\u003d\"personList\" maxHeight\u003d\"1.7976931348623157E308\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"nicleejy"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"nicleejy"},"content":"               \u003cSplitPane dividerPositions\u003d\"0.29797979797979796\" maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nicleejy"},"content":"                 \u003citems\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nicleejy"},"content":"                     \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nicleejy"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nicleejy"},"content":"                           \u003cVBox minHeight\u003d\"80.0\" prefHeight\u003d\"80.0\" prefWidth\u003d\"100.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nicleejy"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nicleejy"},"content":"                                 \u003cStackPane fx:id\u003d\"resultsHeaderPlaceholder\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nicleejy"},"content":"                                    \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nicleejy"},"content":"                                       \u003cInsets bottom\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nicleejy"},"content":"                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                                 \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"nicleejy"},"content":"                                 \u003cStackPane fx:id\u003d\"resultsDetailsPlaceholder\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nicleejy"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nicleejy"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nicleejy"},"content":"                                 \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"nicleejy"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"nicleejy"},"content":"                           \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"nicleejy"},"content":"                      \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"200.0\" styleClass\u003d\"dialog-pane\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nicleejy"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"nicleejy"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"nicleejy"},"content":"                     \u003cVBox prefHeight\u003d\"169.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nicleejy"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"nicleejy"},"content":"                           \u003cHBox alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"100.0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"nicleejy"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"nicleejy"},"content":"                                 \u003cLabel alignment\u003d\"CENTER_RIGHT\" styleClass\u003d\"results_header\" text\u003d\"Weekly Summary\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"nicleejy"},"content":"                                    \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"nicleejy"},"content":"                                       \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"nicleejy"},"content":"                                    \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"nicleejy"},"content":"                                 \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"nicleejy"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"nicleejy"},"content":"                           \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"nicleejy"},"content":"                           \u003cPane prefHeight\u003d\"278.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"nicleejy"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"nicleejy"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"nicleejy"},"content":"                 \u003c/items\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"nicleejy"},"content":"               \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"nicleejy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":84,"author":{"gitId":"nicleejy"},"content":"           \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"100.0\" prefHeight\u003d\"100.0\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"nicleejy"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":90,"author":{"gitId":"nicleejy"},"content":"              \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"60.0\" minHeight\u003d\"60.0\" prefHeight\u003d\"60.0\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"nicleejy"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"                  \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"nicleejy"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"nicleejy"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":99,"author":{"gitId":"nicleejy"},"content":"           \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" styleClass\u003d\"pane\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"nicleejy"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"nicleejy"},"content":"                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"nicleejy"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"nicleejy"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"nicleejy":62,"-":45}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"randallnhr":1,"-":36}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"100.0\" prefHeight\u003d\"100.0\" styleClass\u003d\"pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"      \u003cStackPane.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"         \u003cInsets left\u003d\"11.0\" right\u003d\"5.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"      \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"      \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"         \u003cInsets left\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"      \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"         \u003cInsets left\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"      \u003c/padding\u003e\u003c/TextArea\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"nicleejy":15,"-":6}},{"path":"src/main/resources/view/ResultsDetails.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"      \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"            \u003cLabel fx:id\u003d\"resultsCount\" text\u003d\"\\$resultsCount\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"                  \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"                  \u003cFont name\u003d\"Helvetica\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"               \u003cstyleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"                  \u003cString fx:value\u003d\"details_header\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"                  \u003cString fx:value\u003d\"results_count\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"               \u003c/styleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nicleejy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nicleejy"},"content":"            \u003cLabel styleClass\u003d\"details_header\" text\u003d\"entries found\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nicleejy"},"content":"            \u003cRegion maxWidth\u003d\"1.7976931348623157E308\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nicleejy"},"content":"            \u003cLabel fx:id\u003d\"dateLabel\" styleClass\u003d\"details_header\" text\u003d\"Date:\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nicleejy"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nicleejy"},"content":"                  \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nicleejy"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nicleejy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nicleejy"},"content":"            \u003cLabel fx:id\u003d\"dateFilter\" alignment\u003d\"CENTER_RIGHT\" text\u003d\"\\$dateFilter\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nicleejy"},"content":"               \u003cstyleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nicleejy"},"content":"                  \u003cString fx:value\u003d\"details_header\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nicleejy"},"content":"                  \u003cString fx:value\u003d\"date_filter\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nicleejy"},"content":"               \u003c/styleClass\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nicleejy"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nicleejy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nicleejy"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nicleejy"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":42}},{"path":"src/main/resources/view/ResultsHeader.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleejy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nicleejy"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nicleejy"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nicleejy"},"content":"      \u003cHBox maxHeight\u003d\"-Infinity\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nicleejy"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"            \u003cLabel fx:id\u003d\"resultType\" styleClass\u003d\"results_header\" text\u003d\"Expenses\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"            \u003cRegion maxWidth\u003d\"1.7976931348623157E308\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"            \u003cLabel fx:id\u003d\"filterType\" alignment\u003d\"CENTER_RIGHT\" text\u003d\"\\$filterName\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"               \u003cstyleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"                  \u003cString fx:value\u003d\"results_header\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"                  \u003cString fx:value\u003d\"filter_name\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nicleejy"},"content":"               \u003c/styleClass\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nicleejy"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nicleejy":25}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"nicleejy"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"nicleejy"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nicleejy"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nicleejy"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nicleejy"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"nicleejy":9,"-":11}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.storage.JsonExpenseTrackerStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"        JsonExpenseTrackerStorage addressBookStorage \u003d new JsonExpenseTrackerStorage(","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"shirsho-12"},"content":"                temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"        JsonExpenseTrackerStorage addressBookStorage \u003d new JsonAddressBookIoExceptionThrowingStub(","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"shirsho-12"},"content":"                temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"shirsho-12"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"shirsho-12"},"content":"                temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"shirsho-12"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"shirsho-12"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"shirsho-12"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"shirsho-12"},"content":"     * result message is correct.","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"shirsho-12"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"shirsho-12"},"content":"     * result message is correct.","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"shirsho-12"},"content":"     * Executes the command, confirms that the exception is thrown and that the","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"shirsho-12"},"content":"     * result message is correct.","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"shirsho-12"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"shirsho-12"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"shirsho-12"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonExpenseTrackerStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"shirsho-12"},"content":"        public void saveExpenseTracker(ReadOnlyExpenseTracker addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"shirsho-12":20,"-":147}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"shirsho-12"},"content":"        public void setAddressBook(ReadOnlyExpenseTracker newData) {","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"shirsho-12"},"content":"        public ReadOnlyExpenseTracker getAddressBook() {","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"nicleejy"},"content":"        public void addExpense(Expense expense) {","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"nicleejy"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"nicleejy"},"content":"        public void deleteExpense(Expense expense) {","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"nicleejy"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"nicleejy"},"content":"        public void addCategory(Category toAdd) {","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"nicleejy"},"content":"        public void deleteCategory(Category target) {","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"nicleejy"},"content":"        public void updateFilteredExpensesList(Predicate\u003cExpense\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"nicleejy"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"nicleejy"},"content":"        public void updateFilteredCategoryList(Predicate\u003cCategory\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"nicleejy"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"nicleejy"},"content":"        public int getExpenseListCount() {","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"nicleejy"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"nicleejy"},"content":"        public ObservableList\u003cCategory\u003e getFilteredCategoryList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"nicleejy"},"content":"        public ObservableList\u003cExpense\u003e getFilteredExpenseList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"nicleejy"},"content":"        public Category getCategoryInstance(String categoryName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"nicleejy"},"content":"        public boolean hasCategory(Category category) {","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"nicleejy"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"nicleejy"},"content":"        public boolean hasCategory(String categoryName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"nicleejy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"nicleejy"},"content":"        };","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"nicleejy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"shirsho-12"},"content":"        public ReadOnlyExpenseTracker getAddressBook() {","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"shirsho-12"},"content":"            return new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"nicleejy":64,"shirsho-12":6,"-":188}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"        expectedModel.setAddressBook(new ExpenseTracker());","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"shirsho-12":2,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"shirsho-12"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"shirsho-12"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"shirsho-12"},"content":"     * Convenience wrapper to","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"shirsho-12"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"shirsho-12"},"content":"     * - the address book, filtered person list and selected person in","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"shirsho-12"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker expectedAddressBook \u003d new ExpenseTracker(actualModel.getAddressBook());","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"shirsho-12"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"shirsho-12"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"randallnhr":2,"shirsho-12":11,"-":122}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":" * EditCommand.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"        Model expectedModel \u003d new ModelManager(new ExpenseTracker(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"shirsho-12"},"content":"        Model expectedModel \u003d new ModelManager(new ExpenseTracker(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"shirsho-12"},"content":"        Model expectedModel \u003d new ModelManager(new ExpenseTracker(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"shirsho-12"},"content":"        Model expectedModel \u003d new ModelManager(new ExpenseTracker(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"shirsho-12":7,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":" * RemarkCommand.","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"        Model expectedModel \u003d new ModelManager(new ExpenseTracker(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"randallnhr"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"randallnhr"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"randallnhr"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"randallnhr"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"randallnhr"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"randallnhr"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"randallnhr"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"        Model expectedModel \u003d new ModelManager(new ExpenseTracker(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"randallnhr"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"randallnhr"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"randallnhr"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"randallnhr"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"randallnhr"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"randallnhr"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"randallnhr"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"randallnhr"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"shirsho-12"},"content":"        Model expectedModel \u003d new ModelManager(new ExpenseTracker(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"randallnhr"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"randallnhr"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"randallnhr"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"randallnhr"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"randallnhr"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"randallnhr"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"randallnhr"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"randallnhr"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"randallnhr"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"randallnhr"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"randallnhr"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"randallnhr"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"randallnhr"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"randallnhr"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"randallnhr"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"randallnhr"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"randallnhr"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"randallnhr"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"randallnhr"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"randallnhr"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"randallnhr"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"randallnhr"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"randallnhr"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"randallnhr"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"randallnhr"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"randallnhr"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"randallnhr"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"randallnhr"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"randallnhr"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"randallnhr"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"randallnhr"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"randallnhr":120,"shirsho-12":7}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"shirsho-12"},"content":"    private final ExpenseTrackerParser parser \u003d new ExpenseTrackerParser();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"randallnhr"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"randallnhr"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"randallnhr"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"randallnhr"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"randallnhr":11,"shirsho-12":1,"-":100}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"        // have remark","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(nonEmptyRemark));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"        // no remark","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"randallnhr"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"randallnhr"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"randallnhr"},"content":"        // no parameters","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"randallnhr"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"randallnhr"},"content":"        // no index","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"randallnhr":43}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nicleejy"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"    private final ExpenseTracker addressBook \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"shirsho-12"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"shirsho-12"},"content":"     * constraints.","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"shirsho-12"},"content":"    private static class AddressBookStub implements ReadOnlyExpenseTracker {","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"nicleejy"},"content":"        private final ObservableList\u003cCategory\u003e categories \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"nicleejy"},"content":"        private final ObservableList\u003cExpense\u003e expenses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"nicleejy"},"content":"        public ObservableList\u003cCategory\u003e getCategoryList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"nicleejy"},"content":"            return categories;","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"nicleejy"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"nicleejy"},"content":"        public ObservableList\u003cExpense\u003e getExpenseList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"nicleejy"},"content":"            return expenses;","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"nicleejy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"nicleejy":12,"shirsho-12":7,"-":98}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(new ExpenseTracker(), new ExpenseTracker(modelManager.getAddressBook()));","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker differentAddressBook \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"shirsho-12":3,"-":129}},{"path":"src/test/java/seedu/address/model/category/CategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.model.category;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"public class CategoryTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"shirsho-12":5}},{"path":"src/test/java/seedu/address/model/category/MiscellaneousCategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.model.category;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"public class MiscellaneousCategoryTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"    private final MiscellaneousCategory miscellaneousCategory \u003d new MiscellaneousCategory();","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(\"Miscellaneous\", miscellaneousCategory.toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"shirsho-12":14}},{"path":"src/test/java/seedu/address/model/category/UserDefinedCategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.model.category;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"public class UserDefinedCategoryTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"    private final UserDefinedCategory userDefinedCategory \u003d new UserDefinedCategory(\"test\", \"description\");","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(\"test\", userDefinedCategory.toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"    public void getDescriptionTest() {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"nicleejy"},"content":"        assertEquals(\"description\", userDefinedCategory.getSummary());","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(userDefinedCategory, new UserDefinedCategory(\"test\", \"description\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(userDefinedCategory.hashCode(), new UserDefinedCategory(\"test\", \"description\").hashCode());","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"nicleejy":1,"shirsho-12":28}},{"path":"src/test/java/seedu/address/model/expense/ExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.model.expense;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.category.MiscellaneousCategory;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.category.UserDefinedCategory;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"public class ExpenseTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"    private final Expense expense \u003d new Expense(\"test\", 1.0, null, new MiscellaneousCategory());","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"    public void getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(\"test\", expense.getName());","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"    public void getAmount() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(1.0, expense.getAmount());","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"    public void getDate() {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(null, expense.getDate());","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"    public void getCategory() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(new MiscellaneousCategory(), expense.getCategory());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"shirsho-12"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(\"Expense{name\u003d\u0027test\u0027, amount\u003d1.0, date\u003dnull, category\u003d\u0027Miscellaneous\u0027}\", expense.toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"shirsho-12"},"content":"    public void setCategory() {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"shirsho-12"},"content":"        expense.setCategory(new UserDefinedCategory(\"new\", \"bleh\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(new UserDefinedCategory(\"new\", \"bleh\"), expense.getCategory());","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"shirsho-12"},"content":"    public void setAmount() {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"shirsho-12"},"content":"        expense.setAmount(2.0);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(2.0, expense.getAmount());","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"shirsho-12"},"content":"    public void setName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"shirsho-12"},"content":"        expense.setName(\"test2\");","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(\"test2\", expense.getName());","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"    public void setDate() {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"        expense.setDate(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(null, expense.getDate());","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"shirsho-12"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"shirsho-12"},"content":"        Expense expense2 \u003d new Expense(\"test\", 1.0, null, new MiscellaneousCategory());","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(expense, expense2);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"shirsho-12"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"shirsho-12"},"content":"        Expense expense2 \u003d new Expense(\"test\", 1.0, null, new MiscellaneousCategory());","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(expense.hashCode(), expense2.hashCode());","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"shirsho-12":74}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"randallnhr"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"randallnhr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"randallnhr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"randallnhr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"randallnhr"},"content":"public class RemarkTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"randallnhr"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"randallnhr"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"randallnhr"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"randallnhr"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"randallnhr"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"randallnhr"},"content":"        Remark remarkCopy \u003d new Remark(remark.value);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"randallnhr"},"content":"        assertTrue(remark.equals(remarkCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"randallnhr"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"randallnhr"},"content":"        assertFalse(remark.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"randallnhr"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"randallnhr"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"randallnhr"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"randallnhr"},"content":"        assertFalse(remark.equals(differentRemark));","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"randallnhr"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"randallnhr":31}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shirsho-12"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"shirsho-12"},"content":"import static seedu.address.storage.JsonAdaptedExpense.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"shirsho-12"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"nicleejy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"shirsho-12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.category.Category;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.category.MiscellaneousCategory;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.expense.Expense;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"public class JsonAdaptedExpenseTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"shirsho-12"},"content":"    private static final String VALID_NAME \u003d \"Benson\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"    private static final double VALID_AMOUNT \u003d 23;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"nicleejy"},"content":"    private static final LocalDate VALID_DATE \u003d LocalDate.now();","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"    private static final Category VALID_CATEGORY \u003d new MiscellaneousCategory();","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":"    public void toModelType_validExpenseDetails_returnsExpense() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"shirsho-12"},"content":"        JsonAdaptedExpense expense \u003d new JsonAdaptedExpense(","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"            new Expense(VALID_NAME, VALID_AMOUNT, VALID_DATE, VALID_CATEGORY));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(VALID_NAME, expense.toModelType().getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(VALID_AMOUNT, expense.toModelType().getAmount());","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(VALID_DATE, expense.toModelType().getDate());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"shirsho-12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"shirsho-12"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"        JsonAdaptedExpense expense \u003d new JsonAdaptedExpense(","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"            new Expense(null, VALID_AMOUNT, VALID_DATE, VALID_CATEGORY));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"shirsho-12"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Name\");","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"shirsho-12"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, expense::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"shirsho-12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"shirsho-12"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"nicleejy":2,"shirsho-12":36}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"shirsho-12"},"content":"    private java.util.Optional\u003cReadOnlyExpenseTracker\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"        return new JsonExpenseTrackerStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"shirsho-12"},"content":"            .readExpenseTracker(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"shirsho-12"},"content":"        JsonExpenseTrackerStorage jsonAddressBookStorage \u003d new JsonExpenseTrackerStorage(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"shirsho-12"},"content":"        jsonAddressBookStorage.saveExpenseTracker(original, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"shirsho-12"},"content":"        ReadOnlyExpenseTracker readBack \u003d jsonAddressBookStorage.readExpenseTracker(filePath).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(original, new ExpenseTracker(readBack));","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"shirsho-12"},"content":"        jsonAddressBookStorage.saveExpenseTracker(original, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"shirsho-12"},"content":"        readBack \u003d jsonAddressBookStorage.readExpenseTracker(filePath).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(original, new ExpenseTracker(readBack));","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"shirsho-12"},"content":"        jsonAddressBookStorage.saveExpenseTracker(original); // file path not specified","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"shirsho-12"},"content":"        readBack \u003d jsonAddressBookStorage.readExpenseTracker().get(); // file path not specified","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(original, new ExpenseTracker(readBack));","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"shirsho-12"},"content":"    private void saveAddressBook(ReadOnlyExpenseTracker addressBook, String filePath) {","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"shirsho-12"},"content":"            new JsonExpenseTrackerStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"shirsho-12"},"content":"                    .saveExpenseTracker(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"shirsho-12"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new ExpenseTracker(), null));","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shirsho-12":20,"-":91}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"shirsho-12"},"content":"        JsonSerializableExpenseTracker dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"shirsho-12"},"content":"                JsonSerializableExpenseTracker.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"shirsho-12"},"content":"        JsonSerializableExpenseTracker dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"shirsho-12"},"content":"                JsonSerializableExpenseTracker.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"shirsho-12"},"content":"        JsonSerializableExpenseTracker dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"                JsonSerializableExpenseTracker.class).get();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableExpenseTracker.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shirsho-12":10,"-":37}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ReadOnlyExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"shirsho-12"},"content":"        JsonExpenseTrackerStorage addressBookStorage \u003d new JsonExpenseTrackerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"shirsho-12"},"content":"         * Note: This is an integration test that verifies the StorageManager is","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"shirsho-12"},"content":"         * properly wired to the","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"shirsho-12"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"shirsho-12"},"content":"         * JsonUserPrefsStorageTest} class.","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"shirsho-12"},"content":"         * Note: This is an integration test that verifies the StorageManager is","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"shirsho-12"},"content":"         * properly wired to the","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"shirsho-12"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"shirsho-12"},"content":"         * JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"        storageManager.saveExpenseTracker(original);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"shirsho-12"},"content":"        ReadOnlyExpenseTracker retrieved \u003d storageManager.readExpenseTracker().get();","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"shirsho-12"},"content":"        assertEquals(original, new ExpenseTracker(retrieved));","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"shirsho-12"},"content":"        assertNotNull(storageManager.getExpenseTrackerFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shirsho-12":16,"-":56}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"shirsho-12"},"content":"    private ExpenseTracker addressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"shirsho-12"},"content":"        addressBook \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"shirsho-12"},"content":"    public AddressBookBuilder(ExpenseTracker addressBook) {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"shirsho-12"},"content":"    public ExpenseTracker build() {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shirsho-12":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"randallnhr"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"randallnhr"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"randallnhr"},"content":"    private Remark remark;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"randallnhr"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"randallnhr"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"randallnhr"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"randallnhr"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"randallnhr"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"randallnhr"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"randallnhr"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"randallnhr"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"randallnhr"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"randallnhr"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"randallnhr"},"content":"        return new Person(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"randallnhr":14,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"shirsho-12"},"content":"import seedu.address.model.ExpenseTracker;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"shirsho-12"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"shirsho-12"},"content":" * tests.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"gitsac"},"content":"        .withTags(\"friends\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"gitsac"},"content":"        .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"shirsho-12"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"shirsho-12"},"content":"        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"shirsho-12"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"shirsho-12"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"shirsho-12"},"content":"    public static ExpenseTracker getTypicalAddressBook() {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"shirsho-12"},"content":"        ExpenseTracker ab \u003d new ExpenseTracker();","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"gitsac":2,"shirsho-12":9,"-":68}}]
