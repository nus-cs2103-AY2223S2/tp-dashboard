[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"\u003cimg src\u003d\"docs/images/logo.png\" width\u003d\"200px\"\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"ModTrek is a desktop application for managing a typical NUS Computer Science studentâ€™s modules and degree progression, optimised for use via a Command Line Interface (CLI). The app provides a convenient platform for students to easily access and update their modules within presses of a keyboard.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"jmestxr":4,"cjyothika":1,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"mainClassName \u003d \u0027seedu.modtrek.Main\u0027","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Dangabit":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"### Goh Kang Yang Eric","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"\u003cimg src\u003d\"images/dangabit.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"[[homepage](https://dangabit.github.io/)]","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"[[github](https://github.com/Dangabit)]","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"[[portfolio](team/dangabit.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"* Responsibilities: Models \u0026 Storage","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"### Goh Jun How","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"\u003cimg src\u003d\"images/jun-how.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"[[github](https://github.com/jun-how)]","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"[[portfolio](team/jun-how.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"* Responsibilities: Logic \u0026 Deliverables/Deadline","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"### Jyothika","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"\u003cimg src\u003d\"images/cjyothika.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"[[github](http://github.com/cjyothika)] [[portfolio](team/cjyothika.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"* Responsibilities: Testing and CI","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jmestxr"},"content":"### James Tan","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"\u003cimg src\u003d\"images/jmestxr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"[[github](http://github.com/jmestxr)]","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"jmestxr"},"content":"[[portfolio](team/jmestxr.md)]","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"* Responsibilities: Documentation, UI","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"### Cheam Jia Wei","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"\u003cimg src\u003d\"images/cheamybunny.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"[[github](https://github.com/Cheamybunny)]","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"[[portfolio](team/cheamybunny.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"* Responsibilities: Code Quality \u0026 Scheduling/Tracking","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Dangabit":6,"jmestxr":9,"Jun-How":5,"-":33,"Cheamybunny":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"\u003cimg src\u003d\"images/logo.png\" width\u003d\"200px\"\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"ModTrek is a desktop application for managing a typical NUS Computer Science studentâ€™s modules and degree progression, optimised for use via a Command Line Interface (CLI). The app provides a convenient platform for students to easily access and update their modules within presses of a keyboard.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"## Table of Contents","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"1. [Appendix: Requirements](#appendix)","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"   1. [Product Scope](#product-scope)","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"        1. Target User Profile","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"      1. Value Proposition","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"   1. [User Stories](#user-stories)","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"   1. [Use Cases](#use-cases)","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"   1. [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"   1. [Glossary](#glossary)","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"jmestxr"},"content":"* is a mainstream NUS Computer Science student","lastModifiedDate":"2023-03-01"},{"lineNumber":276,"author":{"gitId":"cjyothika"},"content":"* has a need to track their degree progress, modules and grades","lastModifiedDate":"2023-03-01"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"jmestxr"},"content":"* wants an overview of their academic progress quickly","lastModifiedDate":"2023-03-01"},{"lineNumber":282,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"cjyothika"},"content":"**Value proposition**: Manage module grades and credits faster than typical GUI/app","lastModifiedDate":"2023-03-01"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"jmestxr"},"content":"* All module information taken by student is recorded in a single platform and can be referred to easily","lastModifiedDate":"2023-03-01"},{"lineNumber":287,"author":{"gitId":"jmestxr"},"content":"* Offers a higher level of convenience, since the user can access module features within clicks on a keyboard","lastModifiedDate":"2023-03-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"jmestxr"},"content":"| Priority |   As aâ€¦  |                                                  I want toâ€¦                                                   |                             So that I canâ€¦                             |","lastModifiedDate":"2023-03-01"},{"lineNumber":295,"author":{"gitId":"jmestxr"},"content":"|:--------:|:--------:|:-------------------------------------------------------------------------------------------------------------:|:----------------------------------------------------------------------:|","lastModifiedDate":"2023-03-01"},{"lineNumber":296,"author":{"gitId":"jmestxr"},"content":"|  * * *   | New user |                                            see usage instructions                                             | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":297,"author":{"gitId":"jmestxr"},"content":"|  * * *   | User     |                              add a new module to a current or previous semester                               | track what modules I have already taken                                |","lastModifiedDate":"2023-03-01"},{"lineNumber":298,"author":{"gitId":"jmestxr"},"content":"|  * * *   | User     |                                             list out all modules                                              | view what modules I have already taken                                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":299,"author":{"gitId":"jmestxr"},"content":"|  * * *   | User     | tag a module with  degree requirements (e.g. University Level Requirements, Computer Science Foundation etc). | track which degree requirement each module fulfils                     |","lastModifiedDate":"2023-03-01"},{"lineNumber":300,"author":{"gitId":"jmestxr"},"content":"|  * * *   | User     |                                                delete a module                                                | remove modules that I have wrongly added                               |","lastModifiedDate":"2023-03-01"},{"lineNumber":301,"author":{"gitId":"jmestxr"},"content":"|   * *    | User     |                             find a module by code, grade, semester and/or credits                             | locate details of modules without having to go through the entire list |","lastModifiedDate":"2023-03-01"},{"lineNumber":302,"author":{"gitId":"jmestxr"},"content":"|  * * *   | User     |                                              edit module details                                              | correct mistakes in details I previously added                         |","lastModifiedDate":"2023-03-01"},{"lineNumber":303,"author":{"gitId":"jmestxr"},"content":"|   * *    | User     |                                      view a graph of my degree progress                                       | find out which type of modules I need to take in future semesters      |","lastModifiedDate":"2023-03-01"},{"lineNumber":304,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"jmestxr"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-01"},{"lineNumber":309,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"cjyothika"},"content":"(For all use cases below, the **System** is the `ModTrek` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-01"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":315,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":316,"author":{"gitId":"jmestxr"},"content":"#### Use case: Add a module","lastModifiedDate":"2023-03-01"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"cjyothika"},"content":"1.  User requests to add a module","lastModifiedDate":"2023-03-01"},{"lineNumber":321,"author":{"gitId":"cjyothika"},"content":"2.  ModTrek adds the module","lastModifiedDate":"2023-03-01"},{"lineNumber":322,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":323,"author":{"gitId":"cjyothika"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":324,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":325,"author":{"gitId":"cjyothika"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":326,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":327,"author":{"gitId":"cjyothika"},"content":"* 1a. The given module code or semester is missing or invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":328,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":329,"author":{"gitId":"cjyothika"},"content":"    * 1a1. ModTrek shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":330,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":331,"author":{"gitId":"cjyothika"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-01"},{"lineNumber":332,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":333,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":335,"author":{"gitId":"jmestxr"},"content":"#### Use case: Edit a module","lastModifiedDate":"2023-03-01"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":339,"author":{"gitId":"cjyothika"},"content":"1.  User requests to edit a moduleâ€™s details","lastModifiedDate":"2023-03-01"},{"lineNumber":340,"author":{"gitId":"cjyothika"},"content":"2.  ModTrek edits the moduleâ€™s details","lastModifiedDate":"2023-03-01"},{"lineNumber":341,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":342,"author":{"gitId":"cjyothika"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":343,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":344,"author":{"gitId":"cjyothika"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":345,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":346,"author":{"gitId":"cjyothika"},"content":"* 1a. The given module code or semester is missing or invalid","lastModifiedDate":"2023-03-01"},{"lineNumber":347,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":348,"author":{"gitId":"cjyothika"},"content":"    * 1a1. ModTrek shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":349,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":350,"author":{"gitId":"cjyothika"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-01"},{"lineNumber":351,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":352,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":353,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":354,"author":{"gitId":"jmestxr"},"content":"#### Use case: Delete a module","lastModifiedDate":"2023-03-01"},{"lineNumber":355,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":356,"author":{"gitId":"cjyothika"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":357,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":358,"author":{"gitId":"cjyothika"},"content":"1.  User requests to list modules","lastModifiedDate":"2023-03-01"},{"lineNumber":359,"author":{"gitId":"cjyothika"},"content":"2.  ModTrek shows a list of modules","lastModifiedDate":"2023-03-01"},{"lineNumber":360,"author":{"gitId":"cjyothika"},"content":"3.  User requests to delete a specific module in the list","lastModifiedDate":"2023-03-01"},{"lineNumber":361,"author":{"gitId":"cjyothika"},"content":"4.  ModTrek deletes the module","lastModifiedDate":"2023-03-01"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"cjyothika"},"content":"* 3a. The given module code is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"cjyothika"},"content":"    * 3a1. ModTrek shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":378,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":379,"author":{"gitId":"jmestxr"},"content":"#### Use case: Find modules","lastModifiedDate":"2023-03-01"},{"lineNumber":380,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":381,"author":{"gitId":"cjyothika"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":382,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":383,"author":{"gitId":"cjyothika"},"content":"1.  User requests to find modules","lastModifiedDate":"2023-03-01"},{"lineNumber":384,"author":{"gitId":"cjyothika"},"content":"2.  ModTrek finds the modules and displays them","lastModifiedDate":"2023-03-01"},{"lineNumber":385,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":386,"author":{"gitId":"cjyothika"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":387,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":388,"author":{"gitId":"cjyothika"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":389,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":390,"author":{"gitId":"cjyothika"},"content":"* 1a. The given module code or semester is missing.","lastModifiedDate":"2023-03-01"},{"lineNumber":391,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":392,"author":{"gitId":"cjyothika"},"content":"    * 1a1. ModTrek shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":393,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":394,"author":{"gitId":"cjyothika"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-01"},{"lineNumber":395,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":396,"author":{"gitId":"cjyothika"},"content":"* 2a. No matching modules were found.","lastModifiedDate":"2023-03-01"},{"lineNumber":397,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":398,"author":{"gitId":"jmestxr"},"content":"    * 2a1. ModTrek shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":399,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":400,"author":{"gitId":"jmestxr"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-01"},{"lineNumber":401,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":402,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":403,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":404,"author":{"gitId":"jmestxr"},"content":"#### Use case: Tag module","lastModifiedDate":"2023-03-01"},{"lineNumber":405,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":406,"author":{"gitId":"jmestxr"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":407,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":408,"author":{"gitId":"jmestxr"},"content":"1.  User requests to tag a module with mapping requirements.","lastModifiedDate":"2023-03-01"},{"lineNumber":409,"author":{"gitId":"jmestxr"},"content":"2.  ModTrek tags the module and displays it.","lastModifiedDate":"2023-03-01"},{"lineNumber":410,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":411,"author":{"gitId":"jmestxr"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":412,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":413,"author":{"gitId":"jmestxr"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":414,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":415,"author":{"gitId":"jmestxr"},"content":"* 1a. The given module code is missing.","lastModifiedDate":"2023-03-01"},{"lineNumber":416,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":417,"author":{"gitId":"jmestxr"},"content":"    * 1a1. ModTrek shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":418,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":419,"author":{"gitId":"jmestxr"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-01"},{"lineNumber":420,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":421,"author":{"gitId":"jmestxr"},"content":"* 2a. The module already has the tag.","lastModifiedDate":"2023-03-01"},{"lineNumber":422,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":423,"author":{"gitId":"jmestxr"},"content":"    * 2a1. ModTrek shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":424,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":425,"author":{"gitId":"jmestxr"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-01"},{"lineNumber":426,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":427,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":428,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":429,"author":{"gitId":"jmestxr"},"content":"#### Use case: List modules","lastModifiedDate":"2023-03-01"},{"lineNumber":430,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":431,"author":{"gitId":"jmestxr"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":432,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":433,"author":{"gitId":"jmestxr"},"content":"1. User requests to list modules","lastModifiedDate":"2023-03-01"},{"lineNumber":434,"author":{"gitId":"jmestxr"},"content":"2. ModTrek shows the list of modules","lastModifiedDate":"2023-03-01"},{"lineNumber":435,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":436,"author":{"gitId":"jmestxr"},"content":"Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":437,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":438,"author":{"gitId":"jmestxr"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":439,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":440,"author":{"gitId":"jmestxr"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-01"},{"lineNumber":441,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":442,"author":{"gitId":"jmestxr"},"content":"  Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":443,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":444,"author":{"gitId":"jmestxr"},"content":"**Use case: View a graph of degree progress**","lastModifiedDate":"2023-03-01"},{"lineNumber":445,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":446,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":447,"author":{"gitId":"jmestxr"},"content":"**MSS**","lastModifiedDate":"2023-03-01"},{"lineNumber":448,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":449,"author":{"gitId":"jmestxr"},"content":"1. User requests to view a graph showing degree progress","lastModifiedDate":"2023-03-01"},{"lineNumber":450,"author":{"gitId":"jmestxr"},"content":"2. ModTrek shows the graph","lastModifiedDate":"2023-03-01"},{"lineNumber":451,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":452,"author":{"gitId":"jmestxr"},"content":"Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":453,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":454,"author":{"gitId":"jmestxr"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":455,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":456,"author":{"gitId":"jmestxr"},"content":"* 2a. The list of modules is empty.","lastModifiedDate":"2023-03-01"},{"lineNumber":457,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":458,"author":{"gitId":"jmestxr"},"content":"  Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":459,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":460,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":463,"author":{"gitId":"jmestxr"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-01"},{"lineNumber":464,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"jmestxr"},"content":"1.  The application should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-03-01"},{"lineNumber":468,"author":{"gitId":"jmestxr"},"content":"2.  The application should be able to hold up to 1000 modules without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-01"},{"lineNumber":469,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"jmestxr"},"content":"4. The graph for degree progress should be rendered within two seconds.","lastModifiedDate":"2023-03-01"},{"lineNumber":471,"author":{"gitId":"jmestxr"},"content":"5. The application should be fast for expert users who frequently use a CLI.","lastModifiedDate":"2023-03-01"},{"lineNumber":472,"author":{"gitId":"jmestxr"},"content":"6. The application is not required to allocate modules to their mapping requirement automatically.","lastModifiedDate":"2023-03-01"},{"lineNumber":473,"author":{"gitId":"jmestxr"},"content":"7. The application is not required to handle any conflicts (eg. preclusion, prerequisites, corequisites) for any modules.","lastModifiedDate":"2023-03-01"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"jmestxr"},"content":"|        Term        |                                                                                                                             Explanation                                                                                                                            |","lastModifiedDate":"2023-03-01"},{"lineNumber":480,"author":{"gitId":"jmestxr"},"content":"|:------------------:|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-03-01"},{"lineNumber":481,"author":{"gitId":"jmestxr"},"content":"| Mainstream OS      | Windows, Linux, Unix, OS-X                                                                                                                                                                                                                                         |","lastModifiedDate":"2023-03-01"},{"lineNumber":482,"author":{"gitId":"jmestxr"},"content":"| Degree Requirement | Each module can be tagged into a degree requirement (or category) of any of the following types: University Level Requirements, Computer Science Foundation, Computer Science Breadth \u0026 Depth, IT Professionalism, Mathematics \u0026 Sciences, Unrestricted Electives. |","lastModifiedDate":"2023-03-01"},{"lineNumber":483,"author":{"gitId":"jmestxr"},"content":"| Degree Progress    | The completion status of each degree requirement, Cumulative Average Point (CAP), total MCs completed and remaining MCs needed to complete the degree.                                                                                                             |","lastModifiedDate":"2023-03-01"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jmestxr":121,"cjyothika":57,"-":358}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"\u003cimg src\u003d\"images/logo.png\" width\u003d\"200px\"\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"ModTrek is a desktop application for managing a typical NUS Computer Science studentâ€™s modules and degree progression, optimised for use via a Command Line Interface (CLI). The app provides a convenient platform for students to easily access and update their modules within presses of a keyboard.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"## Table of Contents","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"1. [Features](#features)","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"    1. Add a module: `Add`","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"   1. Remove a module: `Delete`","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"   1. Change module details: `Edit`","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"   1. Remove all modules: `Clear`","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"   1. Display all modules: `List`","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"   1. Find specific module by module code: `Find`","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"   1. Viewing help: `Help`","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"   1. Exiting the program: `Exit`","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"   1. Saving the data","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"   1. Editing the data file","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Dangabit"},"content":"3. [Frequently Asked Questions (FAQ)](#faq)","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Dangabit"},"content":"4. [Command Summary](#command-summary)","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"## Quick Start \u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jmestxr"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"jmestxr"},"content":"1. Download modtrek.jar here. (To be inserted)","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"jmestxr"},"content":"1. Copy the file to the folder you want to use as the home folder for ModTrek","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"jmestxr"},"content":"1. Open a command terminal, cd to the folder you put your jar file in, and use java -jar modtrek.jar to run the application","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"jmestxr"},"content":"1. A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"jmestxr"},"content":"1. Type commands within the command line interface (CLI) and press enter to execute it. For a list of executable commands, refer to the [Features / Commands Section](#features).","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"jmestxr"},"content":"![Ui QuickStart](images/Ui-quickstart.png)","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jmestxr"},"content":"## Features \u003ca name\u003d\"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":44,"author":{"gitId":"jmestxr"},"content":"MODTrek supports the following features:","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":46,"author":{"gitId":"jmestxr"},"content":"| Feature              | Description                                                                                                                                                                                                                                                                                                                                                    | Command Syntax                                                                                                                                                                                                                                               |","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"jmestxr"},"content":"|----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"jmestxr"},"content":"| add a module         | _Adds a module to the module list. Modules must be distinct.                                                                                                                                                                                                                                                                                                   | `add /m \u003ccode\u003e /c \u003ccredits\u003e /y \u003cyear-semester\u003e (/g \u003cgrade\u003e)`                                                                                                                                                                                                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"jmestxr"},"content":"| delete a module      | _Deletes the specified module from the module list.                                                                                                                                                                                                                                                                                                            | _To delete specific modules:_ \u003cbr\u003e`delete /m \u003ccode1\u003e (\u003ccode2\u003e) ...` \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e :exclamation: For `...`, specify one or more module codes of modules to be deleted, separated by space (\u0027 \u0027). \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e _To delete all modules:_ \u003cbr\u003e`delete all`        |","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"jmestxr"},"content":"| edit a module        | _Edits an existing module in the module list.                                                                                                                                                                                                                                                                                                                  | `edit /m \u003ccode\u003e ...`\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e_Specify one or more parameters in `...` :_\u003cbr\u003e- `/m \u003ccode\u003e`\u003cbr\u003e- `/c \u003ccredits\u003e`\u003cbr\u003e- `/y \u003cyear-semester\u003e`\u003cbr\u003e- `/g \u003cgrade\u003e`                                                                                                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"jmestxr"},"content":"| tag a module         | _Tags a module to include or remove one or more degree requirements (e.g. University Level Requirements, Computer Science Foundation etc) that the module fulfils.                                                                                                                                                                                             | _To include tags:_ `tag /m \u003ccode\u003e include \u003ctag1\u003e (\u003ctag2\u003e) ...` \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e _To remove tags:_ `tag /m \u003ccode\u003e remove \u003ctag1\u003e (\u003ctag2\u003e) ...` \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e :exclamation: For `...`, specify one or more tags to be included or removed, separated by space (\u0027 \u0027). |","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"jmestxr"},"content":"| list modules         | _Displays all the modules taken by the user.                                                                                                                                                                                                                                                                                                                   | `list`                                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"jmestxr"},"content":"| find a module        | _Displays specific module(s) satisfying the search query (by code, credits, year-semester, and/or grade) and their details previously logged by the user.                                                                                                                                                                                                      | `find (/m \u003ccode\u003e) (/c \u003ccredits\u003e) (/y \u003cyear-semester\u003e) (/g \u003cgrade\u003e)`                                                                                                                                                                                          |","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"jmestxr"},"content":"| view degree progress | _Displays a summary data on the degree progress (e.g. completion status of each degree requirement, Cumulative Average Point etc).                                                                                                                                                                                                                             | `view progress`                                                                                                                                                                                                                                              |","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"jmestxr"},"content":"| exit                 | _Exits the program.                                                                                                                                                                                                                                                                                                                                            | `exit`                                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"jmestxr"},"content":"| save MODTrek data    | _Saves the modified data regarding the modules into the hard disk automatically after any command that changes the data. There is no need to save manually.                                                                                                                                                                                                    | -                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"jmestxr"},"content":"| edit MODTrek data    | _Editing the data_\u003cbr\u003e\u003cbr\u003eModTrek data is saved as a JSON file [JAR file location]/data/modtrek.json. Advanced users are welcome to update data directly by editing that data file.\u003cbr\u003e \u003cbr\u003e:warning: **Caution!** If your changes to the data file makes its format invalid, ModTrek will discard all data and start with an empty data file at the next run. | -                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"jmestxr"},"content":"### Notes about command format:","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"jmestxr"},"content":"- Words enclosed by `\u003c\u003e` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"jmestxr"},"content":"  - E.g. in `add /m \u003ccode\u003e /c \u003ccredits\u003e /y \u003cyear-semester\u003e /g \u003cgrade\u003e`, `\u003ccode\u003e`, `\u003ccredits\u003e`, `\u003cyear-semester\u003e`, `\u003cgrade\u003e` are parameters which can be used as `add /m CS2103T /c 4 /y Y2S2 /g A+`","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"jmestxr"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `list`, `exit` and `clear`) will be ignored.","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"jmestxr"},"content":"- Parameters encapsulated in between brackets (\u0027()\u0027) are optional.","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"jmestxr"},"content":"## Frequently Asked Questions (FAQ) \u003ca name\u003d\"faq\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"jmestxr"},"content":"**Q**: Question\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"jmestxr"},"content":"**A**: Answer","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Dangabit"},"content":"## Command Summary","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jmestxr"},"content":"| Action                   | Format, Examples                                                                                                                                                                                  |","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"jmestxr"},"content":"|--------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"jmestxr"},"content":"| **Add**                  | `add /m \u003ccode\u003e /c \u003ccredits\u003e /y \u003cyear-semester\u003e (/g \u003cgrade\u003e)` \u003cbr\u003e e.g., `add /m CS2103T /c 4 /y y2s2`                                                                                             |","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"jmestxr"},"content":"| **Delete**               | `delete \u003ccode1\u003e (\u003ccode2\u003e) ...` or `delete all` \u003cbr\u003e e.g. `delete CS2100 CS2040S`                                                                                                                  |","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"jmestxr"},"content":"| **Edit**                 | `edit /m \u003cexisting code\u003e (/m \u003cnew code\u003e) (/c \u003ccredits\u003e) (/y \u003cyear-semester\u003e) (/g \u003cgrade\u003e)` \u003cbr\u003e e.g., `edit /m ES2660 /m CS2101`                                                                  |","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"jmestxr"},"content":"| **Tag**                  | `tag /m \u003ccode\u003e include \u003ctag1\u003e (\u003ctag2\u003e) ...` or `tag /m \u003ccode\u003e remove \u003ctag1\u003e (\u003ctag2\u003e) ...` \u003cbr\u003e e.g., `tag CS2030S include cs_foundation`, `tag ES2660 remove university_level it_professionalism` |","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"jmestxr"},"content":"| **List**                 | `list`                                                                                                                                                                                            |","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"jmestxr"},"content":"| **Find**                 | `find (/m \u003ccode\u003e) (/c \u003ccredits\u003e) (/y \u003cyear-semester\u003e) (/g \u003cgrade\u003e)` \u003cbr\u003e e.g., `find A+`                                                                                                          |","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"jmestxr"},"content":"| **View Degree Progress** | `view progress`                                                                                                                                                                                   |","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"jmestxr"},"content":"| **Exit**                 | `exit`                                                                                                                                                                                            |","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"jmestxr"},"content":"\u003cbr\u003e**Notes:**","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"jmestxr"},"content":"- Parameters encapsulated in between brackets `()` are optional.","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"jmestxr"},"content":"- For `edit`, at least one optional parameter has to be specified.","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Dangabit":3,"jmestxr":59,"-":28}},{"path":"docs/team/cheamybunny.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"title: Cheamybunny\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"### Project: ModTrek","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"ModTrek is a desktop application for managing a typical NUS Computer Science studentâ€™s modules and degree progression, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"The app is provides a convenient platform for students to easily access and update their modules within presses of a keyboard.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"* **New Feature**: to be updated","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"* **Project management**: to be updated","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"* **Enhancements to existing features**: to be updated","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    * User Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"* **Community**: to be updated","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"* **Tools**: to be updated","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Cheamybunny":27}},{"path":"docs/team/cjyothika.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"title: Jyothika\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"### Project: ModTrek","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"ModTrek is a desktop application for managing a typical NUS Computer Science studentâ€™s modules and degree progression, optimised for use via a Command Line Interface (CLI). We envision the app to be convenient so that students can easily access and update their modules within presses of a keyboard.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dcjyothika\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"  to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    * User Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"        * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"        * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"  to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"* **Review/Mentoring Contributions**:","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"to be added soon","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Dangabit":11,"cjyothika":18}},{"path":"docs/team/dangabit.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"title: Dangabit\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"### Project: ModTrek","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"ModTrek is a desktop application for managing a typical NUS Computer Science studentâ€™s modules and degree progression, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"The app is provides a convenient platform for students to easily access and update their modules within presses of a keyboard.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"  * User Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Dangabit"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Dangabit"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Dangabit":27}},{"path":"docs/team/jmestxr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jmestxr"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"jmestxr"},"content":"layout: page","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"jmestxr"},"content":"title: James\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"jmestxr"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"jmestxr"},"content":"### Project: ModTrek","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"jmestxr"},"content":"ModTrek is a desktop application for managing a typical NUS Computer Science studentâ€™s modules and degree progression, optimised for use via a Command Line Interface (CLI). The app is provides a convenient platform for students to easily access and update their modules within presses of a keyboard.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"jmestxr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"jmestxr"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"jmestxr"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"jmestxr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"jmestxr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"jmestxr"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"jmestxr"},"content":"  * User Guide:","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"jmestxr"},"content":"    * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"jmestxr"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"jmestxr"},"content":"    * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"jmestxr"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"jmestxr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"jmestxr"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"jmestxr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"jmestxr"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"jmestxr"},"content":"* **Tools**:","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"jmestxr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"jmestxr":31}},{"path":"docs/team/jun-how.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"title: Jun-How\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"### Project: ModTrek","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"ModTrek is a desktop application for managing a typical NUS Computer Science studentâ€™s modules and degree progression, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"The app is provides a convenient platform for students to easily access and update their modules within presses of a keyboard.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"* **Documentation**: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"  * User Guide: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"  * Developer Guide: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"* **Community**: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Jun-How":27}},{"path":"src/main/java/seedu/modtrek/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.FileUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Dangabit":3,"-":61}},{"path":"src/main/java/seedu/modtrek/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Dangabit":1,"-":24}},{"path":"src/main/java/seedu/modtrek/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.Config;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.Version;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.StringUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.Logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.LogicManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.storage.DegreeProgressionStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.storage.JsonDegreeProgressionStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.storage.Storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.storage.StorageManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.ui.Ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.ui.UiManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ModTrek ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        DegreeProgressionStorage degreeProgressionStorage \u003d new JsonDegreeProgressionStorage(userPrefs.getFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        storage \u003d new StorageManager(degreeProgressionStorage, userPrefsStorage);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"        Optional\u003cReadOnlyDegreeProgression\u003e degreeProgressionOptional;","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        ReadOnlyDegreeProgression initialData;","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"            degreeProgressionOptional \u003d storage.readDegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"            if (!degreeProgressionOptional.isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ModTrek\");","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"            initialData \u003d degreeProgressionOptional.orElseGet(SampleDataUtil::getSampleDegreeProgression);","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ModTrek\");","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"Dangabit"},"content":"            initialData \u003d new DegreeProgression();","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ModTrek\");","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"Dangabit"},"content":"            initialData \u003d new DegreeProgression();","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"cjyothika"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ModTrek\");","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"cjyothika"},"content":"        logger.info(\"Starting ModTrek \" + MainApp.VERSION);","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":23,"cjyothika":16,"-":144}},{"path":"src/main/java/seedu/modtrek/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":1,"-":62}},{"path":"src/main/java/seedu/modtrek/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":1,"-":78}},{"path":"src/main/java/seedu/modtrek/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":1,"-":111}},{"path":"src/main/java/seedu/modtrek/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_INVALID_MODULE_DISPLAYED_INDEX \u003d \"The module index provided is invalid\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_MODULES_LISTED_OVERVIEW \u003d \"%1$d modules listed!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":1,"cjyothika":2,"-":10}},{"path":"src/main/java/seedu/modtrek/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":1,"-":115}},{"path":"src/main/java/seedu/modtrek/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core.index;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Dangabit":1,"-":53}},{"path":"src/main/java/seedu/modtrek/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":1,"-":10}},{"path":"src/main/java/seedu/modtrek/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":1,"-":20}},{"path":"src/main/java/seedu/modtrek/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.MainApp;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dangabit":2,"-":40}},{"path":"src/main/java/seedu/modtrek/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":1,"-":34}},{"path":"src/main/java/seedu/modtrek/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.Config;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Dangabit":3,"-":20}},{"path":"src/main/java/seedu/modtrek/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":1,"-":82}},{"path":"src/main/java/seedu/modtrek/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":3,"-":140}},{"path":"src/main/java/seedu/modtrek/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":2,"-":66}},{"path":"src/main/java/seedu/modtrek/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"     * @see Model#getDegreeProgression()","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"    ReadOnlyDegreeProgression getDegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"    Path getDegreeProgressionFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Dangabit":5,"cjyothika":7,"-":39}},{"path":"src/main/java/seedu/modtrek/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.parser.ModTrekParser;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.storage.Storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    private final ModTrekParser modTrekParser;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        modTrekParser \u003d new ModTrekParser();","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        Command command \u003d modTrekParser.parseCommand(commandText);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"            storage.saveDegreeProgression(model.getDegreeProgression());","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"    public ReadOnlyDegreeProgression getDegreeProgression() {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        return model.getDegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"        return model.getFilteredModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"    public Path getDegreeProgressionFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"        return model.getDegreeProgressionFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Dangabit":9,"cjyothika":13,"-":58}},{"path":"src/main/java/seedu/modtrek/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_SEMYEAR;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":" * Adds a module to ModTrek","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds module to the ModTrek. \"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_CODE + \"MODULE CODE \"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_CREDIT + \"MODULE CREDITS \"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_SEMYEAR + \"SEMESTER-YEAR \"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_GRADE + \"GRADE \"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_CODE + \"CS1101S \"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_CREDIT + \"4 \"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_SEMYEAR + \"Y1S1 \"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_GRADE + \"A \"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_TAG + \"University Level Requirement \"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_TAG + \"Computer Science Foundation\";","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New module added: %1$s\";","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This module has already been added.Try using edit instead.\";","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"    private final Module toAdd;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"     * Creates an AddCommand to add the specified {@code Module}","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    public AddCommand(Module module) {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        toAdd \u003d module;","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"        if (model.hasModule(toAdd)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"        model.addModule(toAdd);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":4,"cjyothika":26,"-":37}},{"path":"src/main/java/seedu/modtrek/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":" * Clears the degree progression","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Degree Progress has been cleared!\";","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"        model.setDegreeProgression(new DegreeProgression());","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":3,"cjyothika":3,"-":17}},{"path":"src/main/java/seedu/modtrek/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":3,"-":17}},{"path":"src/main/java/seedu/modtrek/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":1,"-":70}},{"path":"src/main/java/seedu/modtrek/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.model.Model.PREDICATE_SHOW_NO_MODULES;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":" * Deletes a module identified using module code from ModTrek.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"     * The constant COMMAND_WORD.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_USAGE.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"            + \": Deletes the module identified by the module code\\n\"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"            + \"Parameters: {all} /m MODULE CODE\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"            + \"Example: \" + COMMAND_WORD + \" /m CS1101S\";","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_DELETE_MODULE_SUCCESS.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_DELETE_MODULE_SUCCESS \u003d \"Deleted Modules: %1$s\";","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_DELETE_MODULE_NOT_FOUND.","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_DELETE_MODULE_NOT_FOUND \u003d \"Could not find Module to delete: %1$s\";","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_DELETE_ALL_MODULES_SUCCESS.","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_DELETE_ALL_MODULES_SUCCESS \u003d \"All modules have been deleted!\";","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"    private final Set\u003cCode\u003e targetCodes;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"    private final boolean isAll;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Delete command.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"     * @param isALl       the is a ll","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"     * @param targetCodes the target codes","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"    public DeleteCommand(boolean isALl, Set\u003cCode\u003e targetCodes) {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        this.isAll \u003d isALl;","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        this.targetCodes \u003d targetCodes;","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"        if (isAll) {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"            model.setDegreeProgression(new DegreeProgression());","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"            return new CommandResult(MESSAGE_DELETE_ALL_MODULES_SUCCESS);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        ObservableList\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"        for (Code code : targetCodes) {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"            try {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"                Module moduleToDelete \u003d new Module(code);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"                model.deleteModule(moduleToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"            } catch (ModuleNotFoundException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"                throw new CommandException(String.format(MESSAGE_DELETE_MODULE_NOT_FOUND, code));","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_NO_MODULES);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MODULE_SUCCESS, targetCodes));","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"                \u0026\u0026 targetCodes.equals(((DeleteCommand) other).targetCodes)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":3,"cjyothika":63,"-":28}},{"path":"src/main/java/seedu/modtrek/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_SEMYEAR;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":" * Edits the details of an existing module in the ModTrek.","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the module identified \"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"            + \"Parameters: MODULE CODE \"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"            + \"[\" + PREFIX_CODE + \"CODE] \"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"            + \"[\" + PREFIX_CREDIT + \"CREDITS] \"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"            + \"[\" + PREFIX_SEMYEAR + \"SEMESTER-YEAR] \"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"            + \"[\" + PREFIX_GRADE + \"GRADE] \"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2106 \"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_CREDIT + \"4 \"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"            + PREFIX_SEMYEAR + \"Y2S2\";","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_EDIT_MODULE_SUCCESS \u003d \"Edited Module: %1$s\";","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in the grade book.\";","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_EDIT_MODULE_FAIL \u003d \"Module %1$s is not yet added\";","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"    private final Code code;","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"    private final EditModuleDescriptor editModuleDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"     * @param code of the module in the filtered module list to edit","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"     * @param editModuleDescriptor details to edit the module with","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"    public EditCommand(Code code, EditModuleDescriptor editModuleDescriptor) {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(code);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(editModuleDescriptor);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"        this.editModuleDescriptor \u003d new EditModuleDescriptor(editModuleDescriptor);","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"        ObservableList\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"        //should change this to a better way to retrieve module (possibly HashSet for modules?)","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"        Module moduleToEdit \u003d new Module(code);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        int index \u003d lastShownList.indexOf(moduleToEdit);","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"            throw new CommandException(MESSAGE_EDIT_MODULE_FAIL);","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"        moduleToEdit \u003d lastShownList.get(index);","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        Module editedModule \u003d createEditedModule(moduleToEdit, editModuleDescriptor);","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        if (!moduleToEdit.isSameModule(editedModule) \u0026\u0026 model.hasModule(editedModule)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"        model.setModule(moduleToEdit, editedModule);","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MODULE_SUCCESS, editedModule));","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"     * Creates and returns a {@code Module} with the details of {@code moduleToEdit}","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"     * edited with {@code editModuleDescriptor}.","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"    private static Module createEditedModule(Module moduleToEdit, EditModuleDescriptor editModuleDescriptor) {","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"        assert moduleToEdit !\u003d null;","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"        Code updatedCode \u003d editModuleDescriptor.getCode().orElse(moduleToEdit.getCode());","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"        Credit updatedCredit \u003d editModuleDescriptor.getCredit().orElse(moduleToEdit.getCredit());","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"        SemYear updatedSemYear \u003d editModuleDescriptor.getSemYear().orElse(moduleToEdit.getSemYear());","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        Grade updatedGrade \u003d editModuleDescriptor.getGrade().orElse(moduleToEdit.getGrade());","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"        Set\u003cTag\u003e updatedTags \u003d editModuleDescriptor.getTags().orElse(moduleToEdit.getTags());","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        return new Module(updatedCode, updatedCredit, updatedSemYear, updatedTags, updatedGrade);","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"        return code.equals(e.code)","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"cjyothika"},"content":"                \u0026\u0026 editModuleDescriptor.equals(e.editModuleDescriptor);","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"cjyothika"},"content":"     * Stores the details to edit the module with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"cjyothika"},"content":"     * corresponding field value of the module.","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"cjyothika"},"content":"    public static class EditModuleDescriptor {","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"cjyothika"},"content":"        private Code code;","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"cjyothika"},"content":"        private Credit credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"cjyothika"},"content":"        private SemYear semYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"cjyothika"},"content":"        private Grade grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"cjyothika"},"content":"        public EditModuleDescriptor() {}","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"cjyothika"},"content":"        public EditModuleDescriptor(EditModuleDescriptor toCopy) {","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"cjyothika"},"content":"            setCode(toCopy.code);","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"cjyothika"},"content":"            setCredit(toCopy.credit);","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"cjyothika"},"content":"            setSemYear(toCopy.semYear);","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"cjyothika"},"content":"            setGrade(toCopy.grade);","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"cjyothika"},"content":"            return CollectionUtil.isAnyNonNull(code, credit, semYear, grade, tags);","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"cjyothika"},"content":"        public void setCode(Code code) {","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"cjyothika"},"content":"            this.code \u003d code;","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"cjyothika"},"content":"        public Optional\u003cCode\u003e getCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"cjyothika"},"content":"            return Optional.ofNullable(code);","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"cjyothika"},"content":"        public void setCredit(Credit credit) {","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"cjyothika"},"content":"            this.credit \u003d credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"cjyothika"},"content":"        public Optional\u003cCredit\u003e getCredit() {","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"cjyothika"},"content":"            return Optional.ofNullable(credit);","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"cjyothika"},"content":"        public void setSemYear(SemYear semYear) {","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"cjyothika"},"content":"            this.semYear \u003d semYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"cjyothika"},"content":"        public Optional\u003cSemYear\u003e getSemYear() {","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"cjyothika"},"content":"            return Optional.ofNullable(semYear);","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"cjyothika"},"content":"        public void setGrade(Grade grade) {","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"cjyothika"},"content":"            this.grade \u003d grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"cjyothika"},"content":"        public Optional\u003cGrade\u003e getGrade() {","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"cjyothika"},"content":"            return Optional.ofNullable(grade);","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"cjyothika"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"cjyothika"},"content":"            if (!(other instanceof EditModuleDescriptor)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"cjyothika"},"content":"            EditModuleDescriptor e \u003d (EditModuleDescriptor) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"cjyothika"},"content":"            return getCode().equals(e.getCode())","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"cjyothika"},"content":"                    \u0026\u0026 getCredit().equals(e.getCredit())","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"cjyothika"},"content":"                    \u0026\u0026 getSemYear().equals(e.getSemYear())","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"cjyothika"},"content":"                    \u0026\u0026 getGrade().equals(e.getGrade())","lastModifiedDate":"2023-03-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Dangabit":6,"cjyothika":96,"-":124}},{"path":"src/main/java/seedu/modtrek/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting ModTrek as requested ...\";","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Dangabit":2,"cjyothika":1,"-":16}},{"path":"src/main/java/seedu/modtrek/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.ModuleCodePredicate;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":" * Finds and lists all modules in degree progression whose code contains any of the argument keywords.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds module with the specified module code \\n\"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"            + \"Parameters: MODULE CODE \\n\"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS1101S\";","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    private final ModuleCodePredicate predicate;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    public FindCommand(ModuleCodePredicate predicate) {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        model.updateFilteredModuleList(predicate);","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"                String.format(Messages.MESSAGE_MODULES_LISTED_OVERVIEW, model.getFilteredModuleList().size()));","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Dangabit":3,"cjyothika":9,"-":29}},{"path":"src/main/java/seedu/modtrek/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":2,"-":19}},{"path":"src/main/java/seedu/modtrek/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":" * Lists all modules in degree progression.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all modules\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":2,"cjyothika":4,"-":18}},{"path":"src/main/java/seedu/modtrek/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.commons.core.Messages;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":" * Tags modules with valid tags that correspond to different areas in degree progression","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"     * The constant COMMAND_WORD.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_ARGUMENTS.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Module Code: %1$d, Tag: %2$s\";","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_USAGE.","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"            + \": Adds tags to the module identified \"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"            + \"Parameters: CODE (module code) \"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS1101S \"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"            + \"/t UNIVERSITY LEVEL REQUIREMENTS\";","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_NOT_IMPLEMENTED_YET.","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"            \"Tag command not implemented yet\";","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_ADD_TAG_SUCCESS.","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Added tag to Module: %1$s\";","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_ADD_TAG_FAILURE.","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"    public static final String MESSAGE_ADD_TAG_FAILURE \u003d \"Oops tag is empty\";","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"    private final Code code;","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"    private final Tag tag;","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Tag command.","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"     * @param code of the module in the filtered module list to edit the tag","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"     * @param tag  of the module to be updated to","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"    public TagCommand(Code code, Tag tag) {","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        requireAllNonNull(code, tag);","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"        // possibly make module list a hash set instead of list","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"        Module moduleToEdit \u003d new Module(code);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        int index \u003d lastShownList.indexOf(moduleToEdit);","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"        moduleToEdit \u003d lastShownList.get(index);","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"        if (!lastShownList.contains(moduleToEdit)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"        Set\u003cTag\u003e newTags \u003d moduleToEdit.getModifiableTags();","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        newTags.add(tag);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"        Module editedModule \u003d new Module(","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"                moduleToEdit.getCode(), moduleToEdit.getCredit(), moduleToEdit.getSemYear(),","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"                newTags, moduleToEdit.getGrade());","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"        model.setModule(moduleToEdit, editedModule);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"        return new CommandResult(generateSuccessMessage(editedModule));","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"     * the tag is added to or removed from","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"     * {@code moduleToEdit}.","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"    private String generateSuccessMessage(Module moduleToEdit) {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"        String message \u003d !tag.tagName.isEmpty() ? MESSAGE_ADD_TAG_SUCCESS : MESSAGE_ADD_TAG_FAILURE;","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        return String.format(message, moduleToEdit.getCode().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"cjyothika"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"            return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"        // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"cjyothika"},"content":"        TagCommand e \u003d (TagCommand) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"cjyothika"},"content":"        return code.equals(e.code)","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"                \u0026\u0026 tag.equals(e.tag);","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":119}},{"path":"src/main/java/seedu/modtrek/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Dangabit":1,"-":16}},{"path":"src/main/java/seedu/modtrek/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_SEMYEAR;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CODE, PREFIX_CREDIT, PREFIX_SEMYEAR, PREFIX_GRADE, PREFIX_TAG);","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CODE, PREFIX_CREDIT, PREFIX_SEMYEAR)","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"        Code code \u003d ParserUtil.parseCode(argMultimap.getValue(PREFIX_CODE).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"        Credit credit \u003d ParserUtil.parseCredit(argMultimap.getValue(PREFIX_CREDIT).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"        SemYear semYear \u003d ParserUtil.parseSemYear(argMultimap.getValue(PREFIX_SEMYEAR).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"        Grade grade \u003d ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).orElse(\"\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        Module module \u003d new Module(code, credit, semYear, tagList, grade);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        return new AddCommand(module);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Dangabit":6,"cjyothika":17,"-":37}},{"path":"src/main/java/seedu/modtrek/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Dangabit":1,"-":59}},{"path":"src/main/java/seedu/modtrek/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Dangabit":1,"-":147}},{"path":"src/main/java/seedu/modtrek/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"    public static final Prefix PREFIX_CODE \u003d new Prefix(\"/m\");","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"    public static final Prefix PREFIX_CREDIT \u003d new Prefix(\"/c\");","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    public static final Prefix PREFIX_SEMYEAR \u003d new Prefix(\"/y\");","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"    public static final Prefix PREFIX_GRADE \u003d new Prefix(\"/g\");","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/t\");","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Dangabit":1,"cjyothika":5,"-":9}},{"path":"src/main/java/seedu/modtrek/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CODE);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"            boolean isAll;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"            Set\u003cCode\u003e codes;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"            String flag \u003d argumentMultimap.getPreamble();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"            if (flag.equals(\"all\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"                isAll \u003d true;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"                codes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"            } else if (flag.isEmpty() \u0026\u0026 argumentMultimap.getValue(PREFIX_CODE).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"                isAll \u003d false;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"                codes \u003d ParserUtil.parseCodes(argumentMultimap.getAllValues(PREFIX_CODE));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"            } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"                throw new ParseException(\"Incorrect format\");","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"            return new DeleteCommand(isAll, codes);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Dangabit":4,"cjyothika":21,"-":22}},{"path":"src/main/java/seedu/modtrek/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_SEMYEAR;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.EditCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.EditCommand.EditModuleDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_CODE, PREFIX_CREDIT, PREFIX_SEMYEAR, PREFIX_GRADE, PREFIX_TAG);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        Code code;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"            code \u003d ParserUtil.parseCode(argMultimap.getPreamble());","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        EditModuleDescriptor editModuleDescriptor \u003d new EditModuleDescriptor();","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        if (argMultimap.getValue(PREFIX_CODE).isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"            editModuleDescriptor.setCode(ParserUtil.parseCode(argMultimap.getValue(PREFIX_CODE).get()));","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        if (argMultimap.getValue(PREFIX_CREDIT).isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"            editModuleDescriptor.setCredit(ParserUtil.parseCredit(argMultimap.getValue(PREFIX_CREDIT).get()));","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        if (argMultimap.getValue(PREFIX_SEMYEAR).isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"            editModuleDescriptor.setSemYear(ParserUtil.parseSemYear(argMultimap.getValue(PREFIX_SEMYEAR).get()));","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        if (argMultimap.getValue(PREFIX_GRADE).isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"            editModuleDescriptor.setGrade(ParserUtil.parseGrade(argMultimap.getValue(PREFIX_GRADE).get()));","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editModuleDescriptor::setTags);","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        if (!editModuleDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        return new EditCommand(code, editModuleDescriptor);","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Dangabit":6,"cjyothika":21,"-":55}},{"path":"src/main/java/seedu/modtrek/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.ModuleCodePredicate;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"        return new FindCommand(new ModuleCodePredicate(ParserUtil.parseCode(args)));","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Dangabit":4,"cjyothika":2,"-":23}},{"path":"src/main/java/seedu/modtrek/logic/parser/ModTrekParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.EditCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.ListCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.TagCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"public class ModTrekParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":13,"cjyothika":5,"-":62}},{"path":"src/main/java/seedu/modtrek/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Dangabit":3,"-":13}},{"path":"src/main/java/seedu/modtrek/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"     * Parses a {@code String code} into a {@code Code}.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     * @throws ParseException if the given {@code code} is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    public static Code parseCode(String code) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(code);","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        String trimmedName \u003d code.trim();","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        if (!Code.isValidCode(trimmedName)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"            throw new ParseException(Code.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        return new Code(trimmedName);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"     * Parses a {@code String credit} into a {@code Credit}.","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"     * @throws ParseException if the given {@code credit} is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    public static Credit parseCredit(String credit) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(credit);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        String trimmedCredit \u003d credit.trim();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        if (!Credit.isValidCredit(trimmedCredit)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"            throw new ParseException(Credit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"        return new Credit(trimmedCredit);","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"     * Parses a {@code String semYear} into an {@code SemYear}.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"     * @throws ParseException if the given {@code semYear} is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"    public static SemYear parseSemYear(String semYear) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(semYear);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        String trimmedAddress \u003d semYear.trim();","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        if (!SemYear.isValidSemYear(trimmedAddress)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"            throw new ParseException(SemYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"        return new SemYear(trimmedAddress);","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"     * Parses a {@code String grade} into an {@code Grade}.","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"     * @throws ParseException if the given {@code grade} is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"    public static Grade parseGrade(String grade) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(grade);","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        String trimmedGrade \u003d grade.trim();","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"        if (!Grade.isValidGrade(trimmedGrade)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"            throw new ParseException(Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        return new Grade(trimmedGrade);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"     * Parses {@code Collection\u003cString\u003e codes} into a {@code Set\u003cCode\u003e}.","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"    public static Set\u003cCode\u003e parseCodes(Collection\u003cString\u003e codes) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(codes);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"cjyothika"},"content":"        final Set\u003cCode\u003e codeSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"cjyothika"},"content":"        for (String code : codes) {","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"            codeSet.add(parseCode(code));","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"        return codeSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Dangabit":3,"cjyothika":48,"-":70}},{"path":"src/main/java/seedu/modtrek/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Dangabit":1,"-":38}},{"path":"src/main/java/seedu/modtrek/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.TagCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":" * The type Tag command parser.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"     * @param args","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        Code code;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"            code \u003d ParserUtil.parseCode(argMultimap.getPreamble());","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        return new TagCommand(code, tag);","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":39}},{"path":"src/main/java/seedu/modtrek/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Dangabit":2,"-":15}},{"path":"src/main/java/seedu/modtrek/model/DegreeProgression.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.UniqueModuleList;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":" * The type Degree progression.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"public class DegreeProgression implements ReadOnlyDegreeProgression {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"    private final UniqueModuleList modules \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Degree progression.","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"    public DegreeProgression() {}","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"     * Creates an DegreeProgression using the Modules in the {@code toBeCopied}","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"     * @param toBeCopied the to be copied","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Dangabit"},"content":"    public DegreeProgression(ReadOnlyDegreeProgression toBeCopied) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Dangabit"},"content":"        this();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Dangabit"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"     * Replaces the contents of the Module list with {@code modules}.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"     * {@code modules} must not contain duplicate Modules.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"     * @param modules the modules","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"        this.modules.setModules(modules);","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Dangabit"},"content":"     * Resets the existing data of this {@code DegreeProgression} with {@code newData}.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"     * @param newData the new data","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Dangabit"},"content":"    public void resetData(ReadOnlyDegreeProgression newData) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Dangabit"},"content":"        setModules(newData.getModuleList());","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Dangabit"},"content":"    //// Module-level operations","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Dangabit"},"content":"     * Returns true if a Module with the same identity as {@code Module} exists in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"     * @param module the module","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Dangabit"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Dangabit"},"content":"        return modules.contains(module);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Dangabit"},"content":"     * Adds a Module to the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Dangabit"},"content":"     * The Module must not already exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"     * @param p the p","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Dangabit"},"content":"    public void addModule(Module p) {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Dangabit"},"content":"        modules.add(p);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Dangabit"},"content":"     * Replaces the given Module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Dangabit"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Dangabit"},"content":"     * The Module identity of {@code editedModule} must not be the same as another existing Module in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"     * @param target       the target","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"     * @param editedModule the edited module","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Dangabit"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(editedModule);","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Dangabit"},"content":"        modules.setModule(target, editedModule);","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Dangabit"},"content":"     * Removes {@code key} from this {@code DegreeProgression}.","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Dangabit"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"     * @param key the key","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Dangabit"},"content":"    public void removeModule(Module key) {","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Dangabit"},"content":"        modules.remove(key);","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Dangabit"},"content":"    //// util methods","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Dangabit"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Dangabit"},"content":"        return modules.asUnmodifiableObservableList().size() + \" modules\";","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"Dangabit"},"content":"    public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Dangabit"},"content":"        return modules.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"Dangabit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"Dangabit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"Dangabit"},"content":"                || (other instanceof DegreeProgression // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Dangabit"},"content":"                \u0026\u0026 modules.equals(((DegreeProgression) other).modules));","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Dangabit"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Dangabit"},"content":"        return modules.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":100,"cjyothika":26}},{"path":"src/main/java/seedu/modtrek/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":" * The API of the Model component.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"public interface Model {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    Predicate\u003cModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"     * {@code Predicate} that always evaluate to false","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    Predicate\u003cModule\u003e PREDICATE_SHOW_NO_MODULES \u003d unused -\u003e false;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Dangabit"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     * @param userPrefs the user prefs","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Dangabit"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"     * @return the user prefs","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Dangabit"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Dangabit"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"     * @return the gui settings","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Dangabit"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"     * @param guiSettings the gui settings","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Dangabit"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Dangabit"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"     * @return the degree progression file path","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Dangabit"},"content":"    Path getDegreeProgressionFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Dangabit"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"     * @param degreeProgressionFilePath the degree progression file path","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Dangabit"},"content":"    void setDegreeProgressionFilePath(Path degreeProgressionFilePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Dangabit"},"content":"     * Replaces address book data with the data in {@code DegreeProgression}.","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"     * @param degreeProgression the degree progression","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Dangabit"},"content":"    void setDegreeProgression(ReadOnlyDegreeProgression degreeProgression);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"     * Returns the DegreeProgression","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"     * @return the degree progression","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Dangabit"},"content":"    ReadOnlyDegreeProgression getDegreeProgression();","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Dangabit"},"content":"     * Returns true if a Module with the same identity as {@code Module} exists in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"     * @param module the module","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Dangabit"},"content":"    boolean hasModule(Module module);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Dangabit"},"content":"     * Deletes the given Module.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Dangabit"},"content":"     * The Module must exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"     * @param target the target","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Dangabit"},"content":"    void deleteModule(Module target);","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Dangabit"},"content":"     * Adds the given Module.","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Dangabit"},"content":"     * {@code Module} must not already exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"     * @param module the module","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Dangabit"},"content":"    void addModule(Module module);","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Dangabit"},"content":"     * Replaces the given Module {@code target} with {@code editedModule}.","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Dangabit"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Dangabit"},"content":"     * The Module identity of {@code editedModule} must not be the same as another existing Module in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"     * @param target       the target","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"     * @param editedModule the edited module","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Dangabit"},"content":"    void setModule(Module target, Module editedModule);","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"cjyothika"},"content":"     * Returns an unmodifiable view of the filtered Module list","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"     * @return the filtered module list","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Dangabit"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Dangabit"},"content":"     * Updates the filter of the filtered Module list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"cjyothika"},"content":"     * @param predicate the predicate","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Dangabit"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Dangabit"},"content":"    void updateFilteredModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":83,"cjyothika":45}},{"path":"src/main/java/seedu/modtrek/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":" * Represents the in-memory model of the degree progression data.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"    private final DegreeProgression degreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"    private final FilteredList\u003cModule\u003e filteredModules;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Dangabit"},"content":"     * Initializes a ModelManager with the given DegreeProgression and userPrefs.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Dangabit"},"content":"    public ModelManager(ReadOnlyDegreeProgression degreeProgression, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"        requireAllNonNull(degreeProgression, userPrefs);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"        logger.fine(\"Initializing with address book: \" + degreeProgression + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Dangabit"},"content":"        this.degreeProgression \u003d new DegreeProgression(degreeProgression);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Dangabit"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Dangabit"},"content":"        filteredModules \u003d new FilteredList\u003c\u003e(this.degreeProgression.getModuleList());","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Dangabit"},"content":"    public ModelManager() {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Dangabit"},"content":"        this(new DegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Dangabit"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Dangabit"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Dangabit"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Dangabit"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Dangabit"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Dangabit"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Dangabit"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Dangabit"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Dangabit"},"content":"    public Path getDegreeProgressionFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Dangabit"},"content":"        return userPrefs.getFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Dangabit"},"content":"    public void setDegreeProgressionFilePath(Path filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Dangabit"},"content":"        userPrefs.setFilePath(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Dangabit"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DegreeProgression \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"    public void setDegreeProgression(ReadOnlyDegreeProgression degreeProgression) {","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"        this.degreeProgression.resetData(degreeProgression);","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Dangabit"},"content":"    public ReadOnlyDegreeProgression getDegreeProgression() {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Dangabit"},"content":"        return degreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(module);","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"        return degreeProgression.hasModule(module);","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Dangabit"},"content":"    public void deleteModule(Module target) {","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Dangabit"},"content":"        degreeProgression.removeModule(target);","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"        degreeProgression.addModule(module);","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"        updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Dangabit"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Dangabit"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"Dangabit"},"content":"        degreeProgression.setModule(target, editedModule);","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Dangabit"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Module List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"Dangabit"},"content":"     * Returns an unmodifiable view of the list of {@code Module} backed by the internal list of","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"Dangabit"},"content":"     * {@code versionedDegreeProgression}","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Dangabit"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Dangabit"},"content":"        return filteredModules;","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Dangabit"},"content":"    public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Dangabit"},"content":"        filteredModules.setPredicate(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Dangabit"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Dangabit"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Dangabit"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Dangabit"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"Dangabit"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Dangabit"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"Dangabit"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Dangabit"},"content":"        // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"Dangabit"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"Dangabit"},"content":"        return degreeProgression.equals(other.degreeProgression)","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"Dangabit"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"Dangabit"},"content":"                \u0026\u0026 filteredModules.equals(other.filteredModules);","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":141,"cjyothika":9}},{"path":"src/main/java/seedu/modtrek/model/ReadOnlyDegreeProgression.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":" * Unmodifiable view of a degree progression","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"public interface ReadOnlyDegreeProgression {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"    ObservableList\u003cModule\u003e getModuleList();","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":4,"cjyothika":1,"-":12}},{"path":"src/main/java/seedu/modtrek/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"    Path getFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Dangabit":3,"-":13}},{"path":"src/main/java/seedu/modtrek/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"    private Path filePath \u003d Paths.get(\"data\" , \"degreeprogression.json\");","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"Dangabit"},"content":"        setFilePath(newUserPrefs.getFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"Dangabit"},"content":"    public Path getFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Dangabit"},"content":"        return filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"Dangabit"},"content":"    public void setFilePath(Path filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Dangabit"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"Dangabit"},"content":"                \u0026\u0026 filePath.equals(o.filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"Dangabit"},"content":"        return Objects.hash(guiSettings, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"Dangabit"},"content":"        sb.append(\"\\nLocal data file location : \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":12,"-":75}},{"path":"src/main/java/seedu/modtrek/model/module/Code.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":" * The type Code.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"public class Code {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_CONSTRAINTS.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"            \"Module code should not be blank and is alphanumeric\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"    private static final String VALIDATION_REGEX \u003d \"^[A-Z]{2,3}[0-9]{4}[A-Z]{0,1}$\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"     * The Code.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"    protected final String code;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Code.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     * @param code the code","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Dangabit"},"content":"    public Code(String code) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(code);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"        checkArgument(isValidCode(code), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"     * Is valid code boolean.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"     * @param test the test","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Dangabit"},"content":"    public static boolean isValidCode(String test) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Dangabit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Dangabit"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Dangabit"},"content":"        return code;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Dangabit"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Dangabit"},"content":"        return this \u003d\u003d obj","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Dangabit"},"content":"                || (obj instanceof Code","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Dangabit"},"content":"                \u0026\u0026 code.equals(((Code) obj).code));","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Dangabit"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Dangabit"},"content":"        return code.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":42,"cjyothika":20}},{"path":"src/main/java/seedu/modtrek/model/module/Credit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":" * The type Credit.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"public class Credit {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_CONSTRAINTS.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"            \"Credit should only be a number and only 1-2 digits long\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"    private static final String VALIDATION_REGEX \u003d \"\\\\d{1,2}\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"     * The Value.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"    protected final String value;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Credit.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     * @param value the value","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Dangabit"},"content":"    public Credit(String value) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"        checkArgument(isValidCredit(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"     * Is valid credit boolean.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"     * @param test the test","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Dangabit"},"content":"    public static boolean isValidCredit(String test) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Dangabit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Dangabit"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Dangabit"},"content":"        return value;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Dangabit"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Dangabit"},"content":"        return this \u003d\u003d obj","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Dangabit"},"content":"                || (obj instanceof Credit","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Dangabit"},"content":"                \u0026\u0026 value.equals(((Credit) obj).value));","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Dangabit"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Dangabit"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":42,"cjyothika":20}},{"path":"src/main/java/seedu/modtrek/model/module/Grade.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":" * The type Grade.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"public class Grade {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_CONSTRAINTS.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"            \"Grade should be either one of [A+, A, A-, B+, B, B-, C+, C, D+, D, F, S, U]\";","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"    private static final List\u003cString\u003e VALID_GRADES \u003d Arrays.asList(new String[] {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"        \"A+\",","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"        \"A\",","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"        \"A-\",","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"        \"B+\",","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Dangabit"},"content":"        \"B\",","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Dangabit"},"content":"        \"B-\",","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Dangabit"},"content":"        \"C+\",","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Dangabit"},"content":"        \"C\",","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Dangabit"},"content":"        \"D+\",","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"        \"D\",","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"        \"F\",","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"        \"S\",","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        \"U\",","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        \"\" // empty grade field","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Dangabit"},"content":"    });","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"     * The Value.","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Dangabit"},"content":"    protected final String value;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Grade.","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"     * @param value the value","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"Dangabit"},"content":"    public Grade(String value) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Dangabit"},"content":"        checkArgument(isValidGrade(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Dangabit"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"     * Is valid grade boolean.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"     * @param test the test","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"Dangabit"},"content":"    public static boolean isValidGrade(String test) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        requireNonNull(test);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Dangabit"},"content":"        return VALID_GRADES.contains(test);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Dangabit"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Dangabit"},"content":"        return value;","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Dangabit"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Dangabit"},"content":"        return this \u003d\u003d obj","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Dangabit"},"content":"                || (obj instanceof Grade","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Dangabit"},"content":"                \u0026\u0026 value.equals(((Grade) obj).value));","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Dangabit"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Dangabit"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":58,"cjyothika":23}},{"path":"src/main/java/seedu/modtrek/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":" * Represents a module in ModTrek","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"public class Module {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"    // Identity fields","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"    private final Code code;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"    // Data fields","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"    private final Credit credits;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"    private final SemYear semesterYear;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"    private final Grade grade;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Module.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"     * @param code         the code","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"     * @param credits      the credits","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"     * @param semesterYear the semester year","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"     * @param tags         the tags","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"     * @param grade        the grade","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"Dangabit"},"content":"    public Module(Code code, Credit credits, SemYear semesterYear, Set\u003cTag\u003e tags, Grade grade) {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Dangabit"},"content":"        requireAllNonNull(code, credits, semesterYear, tags);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Dangabit"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Dangabit"},"content":"        this.credits \u003d credits;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Dangabit"},"content":"        this.semesterYear \u003d semesterYear;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Dangabit"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Dangabit"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Module.","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"     * @param code the code","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"    public Module(Code code) {","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        requireAllNonNull(code);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        this.credits \u003d new Credit(\"4\");","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        this.semesterYear \u003d new SemYear(\"Y1S1\");","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"        this.grade \u003d new Grade(\"S\");","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"     * Gets code.","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"     * @return the code","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"Dangabit"},"content":"    public Code getCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Dangabit"},"content":"        return code;","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"     * Gets credit.","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"     * @return the credit","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"Dangabit"},"content":"    public Credit getCredit() {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Dangabit"},"content":"        return credits;","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"     * Gets sem year.","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"     * @return the sem year","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"Dangabit"},"content":"    public SemYear getSemYear() {","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Dangabit"},"content":"        return semesterYear;","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"     * Gets grade.","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"     * @return the grade","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"Dangabit"},"content":"    public Grade getGrade() {","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Dangabit"},"content":"        assert grade !\u003d null;","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Dangabit"},"content":"        return grade;","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"     * Gets tags.","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"     * @return the tags","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"Dangabit"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Dangabit"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"     * Gets modifiable tags.","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"cjyothika"},"content":"     * @return the tags","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"    public Set\u003cTag\u003e getModifiableTags() {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"        return tags;","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"cjyothika"},"content":"     * Is same module boolean.","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"     * @param otherModule the other module","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"cjyothika"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"Dangabit"},"content":"    public boolean isSameModule(Module otherModule) {","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"        if (otherModule \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"            return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Dangabit"},"content":"        return code.equals(otherModule.code);","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Dangabit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Dangabit"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Dangabit"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Dangabit"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Dangabit"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Dangabit"},"content":"        Module otherModule \u003d (Module) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"cjyothika"},"content":"        return otherModule.code.equals(this.code);","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Dangabit"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"Dangabit"},"content":"        return Objects.hash(code, credits, semesterYear, tags);","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"Dangabit"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"Dangabit"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"Dangabit"},"content":"        builder.append(code)","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"Dangabit"},"content":"                .append(\"; Credits: \")","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"Dangabit"},"content":"                .append(credits)","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"Dangabit"},"content":"                .append(\"; Year-Semester: \")","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"Dangabit"},"content":"                .append(semesterYear);","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"Dangabit"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"Dangabit"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"Dangabit"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"Dangabit"},"content":"        if (grade !\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"Dangabit"},"content":"            builder.append(\"; Grade: \")","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"Dangabit"},"content":"                    .append(grade);","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"Dangabit"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":101,"cjyothika":66}},{"path":"src/main/java/seedu/modtrek/model/module/ModuleCodePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":" * Tests that a {@code Module}\u0027s {@code Name} matches module code.","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"public class ModuleCodePredicate implements Predicate\u003cModule\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"    private final Code moduleCode;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    public ModuleCodePredicate(Code moduleCode) {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"    public boolean test(Module module) {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"        return module.getCode().equals(moduleCode);","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"                || (other instanceof ModuleCodePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"                \u0026\u0026 moduleCode.equals(((ModuleCodePredicate) other).moduleCode)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":27}},{"path":"src/main/java/seedu/modtrek/model/module/SemYear.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":" * The type Sem year.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"public class SemYear {","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"     * The constant MESSAGE_CONSTRAINTS.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"            \"SemYear should be alphanumeric in the format YxSx, where x are digits\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"    private static final String VALIDATION_REGEX \u003d \"Y\\\\dS\\\\d\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"     * The Semyear.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"    protected final String semyear;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Sem year.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     * @param semyear the semyear","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Dangabit"},"content":"    public SemYear(String semyear) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(semyear);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"        checkArgument(isValidSemYear(semyear), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"        this.semyear \u003d semyear;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"     * Is valid sem year boolean.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"     * @param test the test","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Dangabit"},"content":"    public static boolean isValidSemYear(String test) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Dangabit"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Dangabit"},"content":"    public String toString() {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Dangabit"},"content":"        return semyear;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Dangabit"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Dangabit"},"content":"        return this \u003d\u003d obj","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Dangabit"},"content":"                || (obj instanceof SemYear","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Dangabit"},"content":"                \u0026\u0026 semyear.equals(((SemYear) obj).semyear));","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Dangabit"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Dangabit"},"content":"        return semyear.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":42,"cjyothika":20}},{"path":"src/main/java/seedu/modtrek/model/module/UniqueModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":" * The type Unique module list.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"public class UniqueModuleList implements Iterable\u003cModule\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"    private final ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"    private final ObservableList\u003cModule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"     * Contains boolean.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     * @param toCheck the to check","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"     * @return the boolean","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"    public boolean contains(Module toCheck) {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"        return internalList.stream().anyMatch(toCheck::isSameModule);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"     * Add.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"     * @param toAdd the to add","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Dangabit"},"content":"    public void add(Module toAdd) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Dangabit"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Dangabit"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"     * Sets module.","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"     * @param target       the target","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"     * @param editedModule the edited module","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"Dangabit"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Dangabit"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Dangabit"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Dangabit"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Dangabit"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Dangabit"},"content":"        if (!target.isSameModule(editedModule) \u0026\u0026 contains(editedModule)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Dangabit"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Dangabit"},"content":"        internalList.set(index, editedModule);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"     * Remove.","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"     * @param toRemove the to remove","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"Dangabit"},"content":"    public void remove(Module toRemove) {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Dangabit"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Dangabit"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"     * Sets modules.","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"     * @param replacement the replacement","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"Dangabit"},"content":"    // For resetting","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Dangabit"},"content":"    public void setModules(UniqueModuleList replacement) {","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Dangabit"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Dangabit"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"     * Sets modules.","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"     * @param modules the modules","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"Dangabit"},"content":"    // For resetting","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Dangabit"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Dangabit"},"content":"        requireAllNonNull(modules);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Dangabit"},"content":"        if (!modulesAreUnique(modules)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Dangabit"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Dangabit"},"content":"        internalList.setAll(modules);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"     * As unmodifiable observable list observable list.","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"     * @return the observable list","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"Dangabit"},"content":"    public ObservableList\u003cModule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Dangabit"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"Dangabit"},"content":"    public Iterator\u003cModule\u003e iterator() {","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"Dangabit"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Dangabit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Dangabit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Dangabit"},"content":"                || (other instanceof UniqueModuleList // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Dangabit"},"content":"                        \u0026\u0026 internalList.equals(((UniqueModuleList) other).internalList));","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Dangabit"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Dangabit"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Dangabit"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Dangabit"},"content":"    private boolean modulesAreUnique(List\u003cModule\u003e modules) {","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Dangabit"},"content":"        for (int i \u003d 0; i \u003c modules.size() - 1; i++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Dangabit"},"content":"            for (int j \u003d i + 1; j \u003c modules.size(); j++) {","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"Dangabit"},"content":"                if (modules.get(i).isSameModule(modules.get(j))) {","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"Dangabit"},"content":"                    return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"Dangabit"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Dangabit"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Dangabit"},"content":"        return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":104,"cjyothika":40}},{"path":"src/main/java/seedu/modtrek/model/module/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.module.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":" * identity).","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"        super(\"Operation would result in duplicate modules\");","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":11}},{"path":"src/main/java/seedu/modtrek/model/module/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.module.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"public class ModuleNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":6}},{"path":"src/main/java/seedu/modtrek/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"    private enum ValidTag {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"        UNIVERSITY_LEVEL_REQUIREMENTS,","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"        COMPUTER_SCIENCE_FOUNDATION,","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"        COMPUTER_SCIENCE_BREADTH_AND_DEPTH,","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"        IT_PROFESSIONALISM,","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"        MATHEMATICS_AND_SCIENCES,","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"        UNRESTRICTED_ELECTIVES","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be one of possible curriculum requirements\";","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        this.tagName \u003d tagName.replace(\" \", \"_\").toUpperCase();;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Dangabit"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Dangabit"},"content":"            String formattedString \u003d test","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Dangabit"},"content":"                    .replace(\" \", \"_\")","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"                    .toUpperCase();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Dangabit"},"content":"            ValidTag.valueOf(formattedString);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Dangabit"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Dangabit"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Dangabit"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Dangabit"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"        return tagName;","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Dangabit":21,"cjyothika":2,"-":47}},{"path":"src/main/java/seedu/modtrek/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":" * Contains utility methods for populating {@code DegreeProgression} with sample data.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"    public static Module[] getSampleModules() {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"        return null;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"    public static ReadOnlyDegreeProgression getSampleDegreeProgression() {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"        return null;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"        for (String s : strings) {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"            tagSet.add(new Tag(s));","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        return tagSet;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Dangabit"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":26,"cjyothika":6}},{"path":"src/main/java/seedu/modtrek/storage/DegreeProgressionStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * Represents a storage for {@link seedu.address.model.DegreeProgression}.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public interface DegreeProgressionStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    Path getDegreeProgressionFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Returns DegreeProgression data as a {@link ReadOnlyDegreeProgression}.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"    Optional\u003cReadOnlyDegreeProgression\u003e readDegreeProgression() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"     * @see #getDegreeProgressionFilePath()","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"    Optional\u003cReadOnlyDegreeProgression\u003e readDegreeProgression(Path filePath) throws DataConversionException,","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"            IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"     * Saves the given {@link ReadOnlyDegreeProgression} to the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"     * @param degreeProgression cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"    void saveDegreeProgression(ReadOnlyDegreeProgression degreeProgression) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"     * @see #saveDegreeProgression(ReadOnlyDegreeProgression)","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"    void saveDegreeProgression(ReadOnlyDegreeProgression degreeProgression, Path filePath) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":3,"cjyothika":2,"Cheamybunny":41}},{"path":"src/main/java/seedu/modtrek/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"class JsonAdaptedModule {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    private final String code;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"    private final String credit;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"    private final String grade;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"    private final String semYear;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"    public JsonAdaptedModule(@JsonProperty(\"code\") String code, @JsonProperty(\"credit\") String credit,","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"                             @JsonProperty(\"grade\") String grade, @JsonProperty(\"semYear\") String semYear,","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"        this.code \u003d code;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"        this.credit \u003d credit;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"        this.grade \u003d grade;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"        this.semYear \u003d semYear;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"        code \u003d source.getCode().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"        credit \u003d source.getCredit().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"        grade \u003d source.getGrade().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"        semYear \u003d source.getSemYear().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Cheamybunny"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Cheamybunny"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Cheamybunny"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Cheamybunny"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Cheamybunny"},"content":"        final List\u003cTag\u003e moduleTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Cheamybunny"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Cheamybunny"},"content":"            moduleTags.add(tag.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Cheamybunny"},"content":"        if (code \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Cheamybunny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Code.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Cheamybunny"},"content":"        if (!Code.isValidCode(code)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Cheamybunny"},"content":"            throw new IllegalValueException(Code.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Cheamybunny"},"content":"        final Code modelCode \u003d new Code(code);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Cheamybunny"},"content":"        if (credit \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Cheamybunny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Credit.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Cheamybunny"},"content":"        if (!Credit.isValidCredit(credit)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Cheamybunny"},"content":"            throw new IllegalValueException(Credit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Cheamybunny"},"content":"        final Credit modelCredit \u003d new Credit(credit);","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Cheamybunny"},"content":"        if (grade \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Cheamybunny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Grade.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Cheamybunny"},"content":"        if (!Grade.isValidGrade(grade)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Cheamybunny"},"content":"            throw new IllegalValueException(Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Cheamybunny"},"content":"        final Grade modelGrade \u003d new Grade(grade);","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Cheamybunny"},"content":"        if (semYear \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Cheamybunny"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, SemYear.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Cheamybunny"},"content":"        if (!SemYear.isValidSemYear(semYear)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Cheamybunny"},"content":"            throw new IllegalValueException(SemYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Cheamybunny"},"content":"        final SemYear modelSemYear \u003d new SemYear(semYear);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Dangabit"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(moduleTags);","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Cheamybunny"},"content":"        return new Module(modelCode, modelCredit, modelSemYear, modelTags, modelGrade);","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":8,"cjyothika":1,"Cheamybunny":100}},{"path":"src/main/java/seedu/modtrek/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Dangabit":3,"-":45}},{"path":"src/main/java/seedu/modtrek/storage/JsonDegreeProgressionStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.FileUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.JsonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":" * The type Json degree progression storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"public class JsonDegreeProgressionStorage implements DegreeProgressionStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDegreeProgressionStorage.class);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"     * Instantiates a new Json degree progression storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"     * @param filePath the file path","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"    public JsonDegreeProgressionStorage(Path filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    public Path getDegreeProgressionFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"    public Optional\u003cReadOnlyDegreeProgression\u003e readDegreeProgression() throws DataConversionException {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"        return readDegreeProgression(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"     * Similar to {@link #readDegreeProgression()}.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"    public Optional\u003cReadOnlyDegreeProgression\u003e readDegreeProgression(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"        Optional\u003cJsonSerializableDegreeProgression\u003e jsonDegreeProgression \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"                filePath, JsonSerializableDegreeProgression.class);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"        if (!jsonDegreeProgression.isPresent()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"            return Optional.of(jsonDegreeProgression.get().toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Cheamybunny"},"content":"    public void saveDegreeProgression(ReadOnlyDegreeProgression degreeProgression) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Cheamybunny"},"content":"        saveDegreeProgression(degreeProgression, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Cheamybunny"},"content":"     * Similar to {@link #saveDegreeProgression(ReadOnlyDegreeProgression)}.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Cheamybunny"},"content":"    public void saveDegreeProgression(ReadOnlyDegreeProgression degreeProgression, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Cheamybunny"},"content":"        requireNonNull(degreeProgression);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Cheamybunny"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDegreeProgression(degreeProgression), filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Dangabit":7,"cjyothika":8,"-":52,"Cheamybunny":18}},{"path":"src/main/java/seedu/modtrek/storage/JsonSerializableDegreeProgression.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":" * An Immutable DegreeProgression that is serializable to JSON format.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"@JsonRootName(value \u003d \"degreeprogression\")","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"class JsonSerializableDegreeProgression {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"Module list contains duplicate module(s).\";","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"     * Constructs a {@code JsonSerializableDegreeProgression} with the given modules.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"    public JsonSerializableDegreeProgression(@JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules) {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"     * Converts a given {@code ReadOnlyDegreeProgression} into this class for Jackson use.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDegreeProgression}.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"    public JsonSerializableDegreeProgression(ReadOnlyDegreeProgression source) {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"     * Converts this degree progression into the model\u0027s {@code DegreeProgression} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Cheamybunny"},"content":"    public DegreeProgression toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Cheamybunny"},"content":"        DegreeProgression degreeProgression \u003d new DegreeProgression();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"        for (JsonAdaptedModule jsonAdaptedModule : modules) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Cheamybunny"},"content":"            Module module \u003d jsonAdaptedModule.toModelType();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"            if (degreeProgression.hasModule(module)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"            degreeProgression.addModule(module);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"        return degreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Dangabit":5,"Cheamybunny":55}},{"path":"src/main/java/seedu/modtrek/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.JsonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Dangabit":5,"-":42}},{"path":"src/main/java/seedu/modtrek/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"public interface Storage extends DegreeProgressionStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    Path getDegreeProgressionFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    Optional\u003cReadOnlyDegreeProgression\u003e readDegreeProgression() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"    void saveDegreeProgression(ReadOnlyDegreeProgression degreeProgression) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Dangabit":5,"-":23,"Cheamybunny":4}},{"path":"src/main/java/seedu/modtrek/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    private DegreeProgressionStorage degreeProgressionStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * Creates a {@code StorageManager} with the given {@code DegreeProgressionStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"    public StorageManager(DegreeProgressionStorage degreeProgressionStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"        this.degreeProgressionStorage \u003d degreeProgressionStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"    public Path getDegreeProgressionFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"        return degreeProgressionStorage.getDegreeProgressionFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"    public Optional\u003cReadOnlyDegreeProgression\u003e readDegreeProgression() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"        return readDegreeProgression(degreeProgressionStorage.getDegreeProgressionFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"    public Optional\u003cReadOnlyDegreeProgression\u003e readDegreeProgression(Path filePath) throws DataConversionException,","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"            IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"Cheamybunny"},"content":"        return degreeProgressionStorage.readDegreeProgression(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"Cheamybunny"},"content":"    public void saveDegreeProgression(ReadOnlyDegreeProgression degreeProgression) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Cheamybunny"},"content":"        saveDegreeProgression(degreeProgression, degreeProgressionStorage.getDegreeProgressionFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"Cheamybunny"},"content":"    public void saveDegreeProgression(ReadOnlyDegreeProgression degreeProgression, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"Cheamybunny"},"content":"        degreeProgressionStorage.saveDegreeProgression(degreeProgression, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":6,"cjyothika":2,"-":58,"Cheamybunny":13}},{"path":"src/main/java/seedu/modtrek/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":" * Represents a storage for {@link seedu.modtrek.model.UserPrefs}.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"     * Saves the given {@link seedu.modtrek.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Dangabit":6,"-":30}},{"path":"src/main/java/seedu/modtrek/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"Dangabit"},"content":"         * @see seedu.modtrek.logic.Logic#execute(String)","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Dangabit":5,"-":80}},{"path":"src/main/java/seedu/modtrek/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide here: \" + USERGUIDE_URL;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dangabit":2,"-":100}},{"path":"src/main/java/seedu/modtrek/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.Logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    private ModuleListPanel moduleListPanel;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList());","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"        personListPanelPlaceholder.getChildren().add(moduleListPanel.getRoot());","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDegreeProgressionFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"cjyothika"},"content":"    public ModuleListPanel getModuleListPanel() {","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"cjyothika"},"content":"        return moduleListPanel;","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"Dangabit"},"content":"     * @see seedu.modtrek.logic.Logic#execute(String)","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dangabit":8,"cjyothika":6,"-":182}},{"path":"src/main/java/seedu/modtrek/ui/ModuleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":" * An UI component that displays information of a {@code Module}.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"public class ModuleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    private static final String FXML \u003d \"ModuleListCard.fxml\";","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    public final Module module;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    private Label code;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"    private Label credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"    private Label semyear;","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"    private Label grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"     * Creates a {@code ModuleCode} with the given {@code Module} and index to display.","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"    public ModuleCard(Module module, int displayedIndex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        this.module \u003d module;","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        code.setText(module.getCode().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        credit.setText(module.getCredit().toString() + \" MCs\");","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"        semyear.setText(module.getSemYear().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"        grade.setText(module.getGrade().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        module.getTags().stream()","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"        if (!(other instanceof ModuleCard)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        ModuleCard card \u003d (ModuleCard) other;","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"        return module.equals(card.module);","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Dangabit":1,"cjyothika":21,"-":54}},{"path":"src/main/java/seedu/modtrek/ui/ModuleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"public class ModuleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    private static final String FXML \u003d \"ModuleListPanel.fxml\";","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    private ListView\u003cModule\u003e moduleListView;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList) {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        moduleListView.setItems(moduleList);","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Module} using a {@code ModuleCard}.","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    class ModuleListViewCell extends ListCell\u003cModule\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        protected void updateItem(Module module, boolean empty) {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"            super.updateItem(module, empty);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"            if (empty || module \u003d\u003d null) {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"                setGraphic(new ModuleCard(module, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dangabit":2,"cjyothika":14,"-":33}},{"path":"src/main/java/seedu/modtrek/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dangabit":1,"-":27}},{"path":"src/main/java/seedu/modtrek/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":1,"-":27}},{"path":"src/main/java/seedu/modtrek/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Dangabit":1,"-":12}},{"path":"src/main/java/seedu/modtrek/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.MainApp;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.StringUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.Logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dangabit":5,"-":83}},{"path":"src/main/java/seedu/modtrek/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.MainApp;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Dangabit":2,"-":86}},{"path":"src/main/resources/view/ModuleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        \u003cLabel fx:id\u003d\"code\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"      \u003cLabel fx:id\u003d\"credit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$credit\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"      \u003cLabel fx:id\u003d\"semyear\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$semyear\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"      \u003cLabel fx:id\u003d\"grade\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$grade\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cjyothika":4,"-":32}},{"path":"src/main/resources/view/ModuleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"  \u003cListView fx:id\u003d\"moduleListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cjyothika":1,"-":7}},{"path":"src/test/java/seedu/modtrek/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Dangabit":1,"-":57}},{"path":"src/test/java/seedu/modtrek/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Dangabit":1,"-":26}},{"path":"src/test/java/seedu/modtrek/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":2,"-":133}},{"path":"src/test/java/seedu/modtrek/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.core.index;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Dangabit":2,"-":58}},{"path":"src/test/java/seedu/modtrek/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Dangabit":2,"-":34}},{"path":"src/test/java/seedu/modtrek/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Dangabit":3,"-":105}},{"path":"src/test/java/seedu/modtrek/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.Config;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Dangabit":4,"cjyothika":1,"-":112}},{"path":"src/test/java/seedu/modtrek/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":2,"-":21}},{"path":"src/test/java/seedu/modtrek/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.testutil.TestUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":3,"-":42}},{"path":"src/test/java/seedu/modtrek/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.commons.util;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Dangabit":2,"-":141}},{"path":"src/test/java/seedu/modtrek/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CODE_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CREDIT_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.GRADE_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.SEMYEAR_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.CommandResult;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.ListCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.storage.JsonDegreeProgressionStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.storage.StorageManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"        JsonDegreeProgressionStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"                new JsonDegreeProgressionStorage(temporaryFolder.resolve(\"degreeprogression.json\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"Cheamybunny"},"content":"        JsonDegreeProgressionStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CODE_DESC_CS1101S + CREDIT_DESC_CS1101S + SEMYEAR_DESC_CS1101S","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"                + GRADE_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        Module expectedModule \u003d new ModuleBuilder(CS1101S).withTags().build();","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        expectedModel.addModule(expectedModule);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"    public void getFilteredModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredModuleList().remove(0));","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(model.getDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"Cheamybunny"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonDegreeProgressionStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"cjyothika"},"content":"        public void saveDegreeProgression(ReadOnlyDegreeProgression addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Dangabit":13,"cjyothika":19,"-":121,"Cheamybunny":3}},{"path":"src/test/java/seedu/modtrek/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        model \u003d new ModelManager(getTypicalDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    public void execute_newModule_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        Module validModule \u003d new ModuleBuilder().build();;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(model.getDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        expectedModel.addModule(validModule);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(new AddCommand(validModule), model,","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validModule), expectedModel);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Dangabit":5,"cjyothika":10,"-":23}},{"path":"src/test/java/seedu/modtrek/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    public void constructor_nullModule_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        ModelStubAcceptingModuleAdded modelStub \u003d new ModelStubAcceptingModuleAdded();","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        Module validModule \u003d new ModuleBuilder().build();","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        CommandResult commandResult \u003d new AddCommand(validModule).execute(modelStub);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validModule), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"        assertEquals(Arrays.asList(validModule), modelStub.personsAdded);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"    public void execute_duplicateModule_throwsCommandException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        Module validModule \u003d new ModuleBuilder().build();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        AddCommand addCommand \u003d new AddCommand(validModule);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        ModelStub modelStub \u003d new ModelStubWithModule(validModule);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        Module alice \u003d new ModuleBuilder().withCode(\"CS2100\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"        Module bob \u003d new ModuleBuilder().withCode(\"ST2334\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        public Path getDegreeProgressionFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"        public void setDegreeProgressionFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"cjyothika"},"content":"        public void addModule(Module person) {","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"        public void setDegreeProgression(ReadOnlyDegreeProgression newData) {","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"cjyothika"},"content":"        public ReadOnlyDegreeProgression getDegreeProgression() {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"cjyothika"},"content":"        public boolean hasModule(Module person) {","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"cjyothika"},"content":"        public void deleteModule(Module target) {","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"cjyothika"},"content":"        public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"cjyothika"},"content":"        public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"cjyothika"},"content":"        public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"cjyothika"},"content":"    private class ModelStubWithModule extends ModelStub {","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"cjyothika"},"content":"        private final Module person;","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"cjyothika"},"content":"        ModelStubWithModule(Module person) {","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"cjyothika"},"content":"        public boolean hasModule(Module person) {","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"cjyothika"},"content":"            return this.person.isSameModule(person);","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"cjyothika"},"content":"    private class ModelStubAcceptingModuleAdded extends ModelStub {","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"cjyothika"},"content":"        final ArrayList\u003cModule\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"cjyothika"},"content":"        public boolean hasModule(Module person) {","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"cjyothika"},"content":"            return personsAdded.stream().anyMatch(person::isSameModule);","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"cjyothika"},"content":"        public void addModule(Module person) {","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"cjyothika"},"content":"        public ReadOnlyDegreeProgression getDegreeProgression() {","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"Dangabit"},"content":"            return new DegreeProgression();","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Dangabit":8,"cjyothika":36,"-":150}},{"path":"src/test/java/seedu/modtrek/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"    public void execute_emptyDegreeProgression_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    public void execute_nonEmptyDegreeProgression_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        Model model \u003d new ModelManager(getTypicalDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        expectedModel.setDegreeProgression(new DegreeProgression());","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Dangabit":6,"cjyothika":6,"-":20}},{"path":"src/test/java/seedu/modtrek/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Dangabit":1,"-":53}},{"path":"src/test/java/seedu/modtrek/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_SEMYEAR;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_CODE_CS1101S \u003d \"CS1101S\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_CODE_MA2002 \u003d \"MA2002\";","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_CREDIT_CS1101S \u003d \"4\";","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_CREDIT_MA2002 \u003d \"8\";","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_SEMYEAR_CS1101S \u003d \"Y1S1\";","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_SEMYEAR_MA2002 \u003d \"Y1S2\";","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_GRADE_CS1101S \u003d \"A\";","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_GRADE_MA2002 \u003d \"A-\";","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_TAG_CS1101S \u003d \"COMPUTER SCIENCE FOUNDATION\";","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"    public static final String VALID_TAG_MA2002 \u003d \"MATHEMATICS AND SCIENCES\";","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    public static final String CODE_DESC_CS1101S \u003d \" \" + PREFIX_CODE + VALID_CODE_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    public static final String CODE_DESC_MA2002 \u003d \" \" + PREFIX_CODE + VALID_CODE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"    public static final String CREDIT_DESC_CS1101S \u003d \" \" + PREFIX_CREDIT + VALID_CREDIT_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    public static final String CREDIT_DESC_MA2002 \u003d \" \" + PREFIX_CREDIT + VALID_CREDIT_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"    public static final String SEMYEAR_DESC_CS1101S \u003d \" \" + PREFIX_SEMYEAR + VALID_SEMYEAR_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"    public static final String SEMYEAR_DESC_MA2002 \u003d \" \" + PREFIX_SEMYEAR + VALID_SEMYEAR_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"    public static final String GRADE_DESC_CS1101S \u003d \" \" + PREFIX_GRADE + VALID_GRADE_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"    public static final String GRADE_DESC_MA2002 \u003d \" \" + PREFIX_GRADE + VALID_GRADE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"    public static final String TAG_DESC_MA2002 \u003d \" \" + PREFIX_TAG + VALID_TAG_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    public static final String TAG_DESC_CS1101S \u003d \" \" + PREFIX_TAG + VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"    public static final String INVALID_CODE_DESC \u003d \" \" + PREFIX_CODE + \"CS1101S\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    public static final String INVALID_CREDIT_DESC \u003d \" \" + PREFIX_CREDIT + \"4MC\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"    public static final String INVALID_SEMYEAR_DESC \u003d \" \" + PREFIX_SEMYEAR + \"YEAR1SEM1\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"    public static final String INVALID_GRADE_DESC \u003d \" \" + PREFIX_GRADE + \"A++\";","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"COMPUTER SCIENCE *\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"    public static final EditCommand.EditModuleDescriptor DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"    public static final EditCommand.EditModuleDescriptor DESC_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        DESC_CS1101S \u003d new EditModuleDescriptorBuilder().withCode(VALID_CODE_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"                .withCredit(VALID_CREDIT_CS1101S).withSemYear(VALID_SEMYEAR_CS1101S).withGrade(VALID_GRADE_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"                .withTags(VALID_TAG_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        DESC_MA2002 \u003d new EditModuleDescriptorBuilder().withCode(VALID_CODE_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"                .withCredit(VALID_CREDIT_MA2002).withSemYear(VALID_SEMYEAR_MA2002).withGrade(VALID_GRADE_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"                .withTags(VALID_TAG_CS1101S, VALID_TAG_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"     * - the degree progression, filtered module list and selected module in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"        DegreeProgression expectedDegreeProgression \u003d new DegreeProgression(actualModel.getDegreeProgression());","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        ObservableList\u003cModule\u003e expectedFilteredList \u003d actualModel.getFilteredModuleList();","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedDegreeProgression, actualModel.getDegreeProgression());","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredModuleList());","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Dangabit":4,"cjyothika":60,"-":44}},{"path":"src/test/java/seedu/modtrek/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.DeleteCommand.MESSAGE_DELETE_MODULE_NOT_FOUND;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS2100;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.ST2334;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"class DeleteCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    private Model model \u003d new ModelManager(getTypicalDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        Module moduleToDelete \u003d model.getFilteredModuleList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(CS2100.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(false, codesToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MODULE_SUCCESS, codesToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        expectedModel.deleteModule(moduleToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        showNoModule(expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(CS1101S.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(false, codesToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        assertCommandFailure(deleteCommand, model, String.format(MESSAGE_DELETE_MODULE_NOT_FOUND, CS1101S.getCode()));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"        Module moduleToDelete \u003d model.getFilteredModuleList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(CS2100.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(false, codesToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_MODULE_SUCCESS, codesToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(model.getDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        expectedModel.deleteModule(moduleToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"        showNoModule(expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"    public void execute_validAllKeyword_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(true, codesToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_ALL_MODULES_SUCCESS;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(new DegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        showNoModule(expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(CS2100.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(ST2334.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(false, codesToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(false, codesToDelete2);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(false, codesToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"cjyothika"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"cjyothika"},"content":"    private void showNoModule(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"        model.updateFilteredModuleList(p -\u003e false);","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"cjyothika"},"content":"        assertTrue(model.getFilteredModuleList().isEmpty());","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cjyothika":118}},{"path":"src/test/java/seedu/modtrek/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.DESC_CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.DESC_MA2002;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_MA2002;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_MA2002;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.EditCommand.MESSAGE_EDIT_MODULE_FAIL;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS2100;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.IS1103;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.ST2334;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"class EditCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"    private Model model \u003d new ModelManager(getTypicalDegreeProgression(),","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"            new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        Module editedModule \u003d new ModuleBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"                new EditModuleDescriptorBuilder(editedModule).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        EditCommand editCommand \u003d new EditCommand(CS2100.getCode(),","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"                descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_MODULE_SUCCESS,","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"                editedModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(new DegreeProgression(model","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"                .getDegreeProgression()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        expectedModel.setModule(model.getFilteredModuleList().get(0), editedModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        Code moduleToEdit \u003d IS1103.getCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"        Module lastModule \u003d IS1103;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        ModuleBuilder moduleInList \u003d new ModuleBuilder(lastModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        Module editedModule \u003d moduleInList.withCode(VALID_CODE_MA2002).withCredit(VALID_CREDIT_MA2002)","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"                .withTags(VALID_TAG_CS1101S).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder().withCode(VALID_CODE_MA2002)","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"                .withCredit(VALID_CREDIT_MA2002).withTags(VALID_TAG_CS1101S).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        EditCommand editCommand \u003d new EditCommand(moduleToEdit, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_MODULE_SUCCESS, editedModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(new DegreeProgression(model.getDegreeProgression()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"        expectedModel.setModule(lastModule, editedModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        EditCommand editCommand \u003d new EditCommand(CS2100.getCode(),","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"                new EditCommand.EditModuleDescriptor());","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        Module editedModule \u003d model.getFilteredModuleList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_MODULE_SUCCESS,","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"                editedModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"                new DegreeProgression(model.getDegreeProgression()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"        Module moduleInFilteredList \u003d model.getFilteredModuleList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        Module editedModule \u003d new ModuleBuilder(moduleInFilteredList).withCode(VALID_CODE_MA2002).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"        EditCommand editCommand \u003d new EditCommand(CS2100.getCode(),","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"                new EditModuleDescriptorBuilder().withCode(VALID_CODE_MA2002).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_MODULE_SUCCESS, editedModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(new DegreeProgression(model.getDegreeProgression()),","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"        expectedModel.setModule(model.getFilteredModuleList().get(0), editedModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"    public void execute_duplicateModuleUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"        Module firstModule \u003d model.getFilteredModuleList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder(firstModule).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"        EditCommand editCommand \u003d new EditCommand(ST2334.getCode(), descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"cjyothika"},"content":"    public void execute_duplicateModuleFilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"cjyothika"},"content":"        // edit module in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"        Module moduleInList \u003d model.getDegreeProgression().getModuleList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"        EditCommand editCommand \u003d new EditCommand(ST2334.getCode(),","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"                new EditModuleDescriptorBuilder(moduleInList).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"cjyothika"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"cjyothika"},"content":"    public void execute_invalidModuleIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"cjyothika"},"content":"                .withCode(VALID_CODE_MA2002).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"cjyothika"},"content":"        EditCommand editCommand \u003d new EditCommand(CS1101S.getCode(), descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"cjyothika"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_EDIT_MODULE_FAIL);","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"cjyothika"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"cjyothika"},"content":"        final EditCommand standardCommand \u003d new EditCommand(CS2100.getCode(), DESC_CS1101S);","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"cjyothika"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor copyDescriptor \u003d new EditCommand.EditModuleDescriptor(DESC_CS1101S);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"cjyothika"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(CS2100.getCode(), copyDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"cjyothika"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"cjyothika"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"cjyothika"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"cjyothika"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"cjyothika"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"cjyothika"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"cjyothika"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"cjyothika"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"cjyothika"},"content":"        assertFalse(standardCommand.equals(new EditCommand(ST2334.getCode(), DESC_CS1101S)));","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"cjyothika"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"cjyothika"},"content":"        assertFalse(standardCommand.equals(new EditCommand(CS2100.getCode(), DESC_MA2002)));","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cjyothika":158}},{"path":"src/test/java/seedu/modtrek/logic/commands/EditModuleDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.DESC_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_SEMYEAR_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.EditCommand.EditModuleDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"public class EditModuleDescriptorTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    public void equals() {","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"        EditModuleDescriptor descriptorWithSameValues \u003d new EditModuleDescriptor(DESC_CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        assertTrue(DESC_CS1101S.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        assertTrue(DESC_CS1101S.equals(DESC_CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        assertFalse(DESC_CS1101S.equals(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        assertFalse(DESC_CS1101S.equals(5));","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        assertFalse(DESC_CS1101S.equals(DESC_MA2002));","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        EditModuleDescriptor editedAmy \u003d new EditModuleDescriptorBuilder(DESC_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"                .withCode(VALID_CODE_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"        assertFalse(DESC_CS1101S.equals(editedAmy));","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"        editedAmy \u003d new EditModuleDescriptorBuilder(DESC_CS1101S).withCredit(VALID_CREDIT_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        assertFalse(DESC_CS1101S.equals(editedAmy));","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        editedAmy \u003d new EditModuleDescriptorBuilder(DESC_CS1101S).withSemYear(VALID_SEMYEAR_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        assertFalse(DESC_CS1101S.equals(editedAmy));","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        editedAmy \u003d new EditModuleDescriptorBuilder(DESC_CS1101S).withGrade(VALID_GRADE_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"        assertFalse(DESC_CS1101S.equals(editedAmy));","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"        editedAmy \u003d new EditModuleDescriptorBuilder(DESC_CS1101S).withTags(VALID_TAG_CS1101S).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"        assertFalse(DESC_CS1101S.equals(editedAmy));","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":59}},{"path":"src/test/java/seedu/modtrek/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Dangabit":5,"-":15}},{"path":"src/test/java/seedu/modtrek/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS2100;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.ST2334;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.ModuleCodePredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"class FindCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    private Model model \u003d new ModelManager(getTypicalDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"        ModuleCodePredicate firstPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"                new ModuleCodePredicate(CS2100.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        ModuleCodePredicate secondPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"                new ModuleCodePredicate(ST2334.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cjyothika":47}},{"path":"src/test/java/seedu/modtrek/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Dangabit":5,"-":15}},{"path":"src/test/java/seedu/modtrek/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"        model \u003d new ModelManager(getTypicalDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        expectedModel \u003d new ModelManager(model.getDegreeProgression(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Dangabit":5,"cjyothika":3,"-":23}},{"path":"src/test/java/seedu/modtrek/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_MA2002;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS2100;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.ST2334;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"class TagCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    private Model model \u003d new ModelManager(getTypicalDegreeProgression(),","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"            new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        Module taggedModule \u003d CS2100;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        TagCommand tagCommand \u003d new TagCommand(CS2100.getCode(),","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"                ParserUtil.parseTag(\"computer science breadth and depth\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_ADD_TAG_SUCCESS,","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"                taggedModule.getCode().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        Model expectedModel \u003d new ModelManager(new DegreeProgression(model","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"                .getDegreeProgression()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        expectedModel.setModule(model.getFilteredModuleList().get(0), taggedModule);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        final TagCommand standardCommand \u003d new TagCommand(CS2100.getCode(), new Tag(VALID_TAG_CS1101S));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        TagCommand commandWithSameValues \u003d new TagCommand(CS2100.getCode(), new Tag(VALID_TAG_CS1101S));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        assertFalse(standardCommand.equals(new TagCommand(ST2334.getCode(), new Tag(VALID_TAG_CS1101S))));","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        assertFalse(standardCommand.equals(new TagCommand(CS2100.getCode(), new Tag(VALID_TAG_MA2002))));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cjyothika":67}},{"path":"src/test/java/seedu/modtrek/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Dangabit"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CODE_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CODE_DESC_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CREDIT_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CREDIT_DESC_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.GRADE_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.GRADE_DESC_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_CODE_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_CREDIT_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_GRADE_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_SEMYEAR_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.SEMYEAR_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.SEMYEAR_DESC_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.TAG_DESC_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.TAG_DESC_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_SEMYEAR_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_SEMYEAR_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        Module expectedModule \u003d new ModuleBuilder(MA2002).withTags(VALID_TAG_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"                + GRADE_DESC_MA2002 + TAG_DESC_MA2002, new AddCommand(expectedModule));","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, CODE_DESC_CS1101S + CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"                + GRADE_DESC_MA2002 + TAG_DESC_MA2002, new AddCommand(expectedModule));","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, CODE_DESC_MA2002 + CREDIT_DESC_CS1101S + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"                + GRADE_DESC_MA2002 + TAG_DESC_MA2002, new AddCommand(expectedModule));","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_CS1101S + SEMYEAR_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"                + GRADE_DESC_MA2002 + TAG_DESC_MA2002, new AddCommand(expectedModule));","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002 + GRADE_DESC_CS1101S","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"                + GRADE_DESC_MA2002 + TAG_DESC_MA2002, new AddCommand(expectedModule));","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"        Module expectedModuleMultipleTags \u003d new ModuleBuilder(MA2002).withTags(VALID_TAG_MA2002, VALID_TAG_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002 + GRADE_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_CS1101S + TAG_DESC_MA2002, new AddCommand(expectedModuleMultipleTags));","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"        Module expectedModule \u003d new ModuleBuilder(CS1101S).withTags().build();","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, CODE_DESC_CS1101S + CREDIT_DESC_CS1101S + SEMYEAR_DESC_CS1101S + GRADE_DESC_CS1101S,","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"                new AddCommand(expectedModule));","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"        //no grade specified","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"        expectedModule \u003d new ModuleBuilder().withCode(VALID_CODE_CS1101S)","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"                .withCredit(VALID_CREDIT_CS1101S).withSemYear(VALID_SEMYEAR_CS1101S).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, CODE_DESC_CS1101S + CREDIT_DESC_CS1101S + SEMYEAR_DESC_CS1101S,","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"                new AddCommand(expectedModule));","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002 + GRADE_DESC_MA2002,","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, CODE_DESC_MA2002 + VALID_CREDIT_MA2002 + SEMYEAR_DESC_MA2002 + GRADE_DESC_MA2002,","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + VALID_SEMYEAR_MA2002 + GRADE_DESC_MA2002,","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_MA2002 + VALID_CREDIT_MA2002 + VALID_SEMYEAR_MA2002 + VALID_GRADE_MA2002,","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, INVALID_CODE_DESC + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002 + GRADE_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_CS1101S + TAG_DESC_MA2002, Code.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, CODE_DESC_MA2002 + INVALID_CREDIT_DESC + SEMYEAR_DESC_MA2002 + GRADE_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_CS1101S + TAG_DESC_MA2002, Credit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + INVALID_SEMYEAR_DESC + GRADE_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_CS1101S + TAG_DESC_MA2002, SemYear.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002 + INVALID_GRADE_DESC","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_CS1101S + TAG_DESC_MA2002, Grade.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002 + GRADE_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"cjyothika"},"content":"                + INVALID_TAG_DESC + VALID_TAG_MA2002, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, INVALID_CODE_DESC + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002 + INVALID_GRADE_DESC,","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"cjyothika"},"content":"                Code.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + CODE_DESC_MA2002 + CREDIT_DESC_MA2002 + SEMYEAR_DESC_MA2002","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"cjyothika"},"content":"                + GRADE_DESC_MA2002 + TAG_DESC_CS1101S + TAG_DESC_MA2002,","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Dangabit":10,"cjyothika":72,"-":64}},{"path":"src/test/java/seedu/modtrek/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Dangabit":1,"-":149}},{"path":"src/test/java/seedu/modtrek/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.Command;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Dangabit":3,"-":36}},{"path":"src/test/java/seedu/modtrek/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.MA2002;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(CS1101S.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, \" /m CS1101S\", new DeleteCommand(false, codesToDelete));","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"    public void parse_validMultipleArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(CS1101S.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(MA2002.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, \" /m CS1101S /m MA2002\", new DeleteCommand(false, codesToDelete));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    public void parse_validArgsAll_returnsDeleteCommand() {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, \"all\", new DeleteCommand(true, codesToDelete));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Dangabit":5,"cjyothika":23,"-":25}},{"path":"src/test/java/seedu/modtrek/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CODE_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CREDIT_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.CREDIT_DESC_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.GRADE_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.GRADE_DESC_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_CODE_DESC;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_CREDIT_DESC;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_GRADE_DESC;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_SEMYEAR_DESC;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.SEMYEAR_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.SEMYEAR_DESC_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.TAG_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.TAG_DESC_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_SEMYEAR_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_SEMYEAR_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.EditCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"class EditCommandParserTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        // no module specified","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, PREFIX_CODE + \" \" + VALID_CODE_CS1101S, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        // no field specified","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        // no module and no field specified","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + VALID_CREDIT_CS1101S, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + \"/i \" + VALID_CREDIT_CS1101S, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + INVALID_CODE_DESC,","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"                Code.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + INVALID_CREDIT_DESC,","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"                Credit.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + INVALID_SEMYEAR_DESC,","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"                SemYear.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + INVALID_GRADE_DESC,","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"                Grade.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + INVALID_TAG_DESC,","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + INVALID_CREDIT_DESC","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"                + SEMYEAR_DESC_CS1101S, Credit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + CREDIT_DESC_MA2002","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"                + INVALID_CREDIT_DESC, Credit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Module} being edited,","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + TAG_DESC_MA2002","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_CS1101S + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + TAG_DESC_MA2002","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"                + TAG_EMPTY + TAG_DESC_CS1101S, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + TAG_EMPTY","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_MA2002 + TAG_DESC_CS1101S, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"cjyothika"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + INVALID_CODE_DESC","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"                        + INVALID_SEMYEAR_DESC + VALID_GRADE_CS1101S + VALID_CREDIT_CS1101S,","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"                Code.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"cjyothika"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"        Module targetModule \u003d CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"        String userInput \u003d VALID_CODE_CS1101S + CREDIT_DESC_MA2002 + TAG_DESC_CS1101S","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"cjyothika"},"content":"                + SEMYEAR_DESC_CS1101S + GRADE_DESC_CS1101S + CODE_DESC_CS1101S + TAG_DESC_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"                .withCode(VALID_CODE_CS1101S)","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"                .withCredit(VALID_CREDIT_MA2002).withSemYear(VALID_SEMYEAR_CS1101S)","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"cjyothika"},"content":"                .withGrade(VALID_GRADE_CS1101S)","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"cjyothika"},"content":"                .withTags(VALID_TAG_CS1101S, VALID_TAG_MA2002).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"cjyothika"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"cjyothika"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"cjyothika"},"content":"        Module targetModule \u003d CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"cjyothika"},"content":"        String userInput \u003d VALID_CODE_CS1101S + CREDIT_DESC_MA2002 + SEMYEAR_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"cjyothika"},"content":"                .withCredit(VALID_CREDIT_MA2002)","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"cjyothika"},"content":"                .withSemYear(VALID_SEMYEAR_CS1101S).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"cjyothika"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"cjyothika"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"cjyothika"},"content":"        // name","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"cjyothika"},"content":"        Module targetModule \u003d CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"cjyothika"},"content":"        String userInput \u003d VALID_CODE_CS1101S + CODE_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"cjyothika"},"content":"                .withCode(VALID_CODE_CS1101S).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"cjyothika"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"cjyothika"},"content":"        // phone","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"cjyothika"},"content":"        userInput \u003d VALID_CODE_CS1101S + CREDIT_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"cjyothika"},"content":"        descriptor \u003d new EditModuleDescriptorBuilder().withCredit(VALID_CREDIT_CS1101S).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"cjyothika"},"content":"        expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"cjyothika"},"content":"        // email","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"cjyothika"},"content":"        userInput \u003d VALID_CODE_CS1101S + SEMYEAR_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"cjyothika"},"content":"        descriptor \u003d new EditModuleDescriptorBuilder().withSemYear(VALID_SEMYEAR_CS1101S).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"cjyothika"},"content":"        expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"cjyothika"},"content":"        // address","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"cjyothika"},"content":"        userInput \u003d VALID_CODE_CS1101S + GRADE_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"cjyothika"},"content":"        descriptor \u003d new EditModuleDescriptorBuilder().withGrade(VALID_GRADE_CS1101S).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"cjyothika"},"content":"        expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"cjyothika"},"content":"        // tags","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"cjyothika"},"content":"        userInput \u003d VALID_CODE_CS1101S + TAG_DESC_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"cjyothika"},"content":"        descriptor \u003d new EditModuleDescriptorBuilder().withTags(VALID_TAG_MA2002).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"cjyothika"},"content":"        expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"cjyothika"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"cjyothika"},"content":"        Module targetModule \u003d CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"cjyothika"},"content":"        String userInput \u003d VALID_CODE_CS1101S + CREDIT_DESC_CS1101S + GRADE_DESC_CS1101S","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"cjyothika"},"content":"                + SEMYEAR_DESC_CS1101S","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_MA2002 + CREDIT_DESC_CS1101S + GRADE_DESC_CS1101S + SEMYEAR_DESC_CS1101S","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"cjyothika"},"content":"                + TAG_DESC_MA2002","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"cjyothika"},"content":"                + CREDIT_DESC_MA2002 + GRADE_DESC_MA2002 + SEMYEAR_DESC_MA2002 + TAG_DESC_CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"cjyothika"},"content":"                .withCredit(VALID_CREDIT_MA2002)","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"cjyothika"},"content":"                .withSemYear(VALID_SEMYEAR_MA2002).withGrade(VALID_GRADE_MA2002)","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"cjyothika"},"content":"                .withTags(VALID_TAG_MA2002, VALID_TAG_CS1101S)","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"cjyothika"},"content":"                .build();","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"cjyothika"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"cjyothika"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"cjyothika"},"content":"        // no other valid values specified","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"cjyothika"},"content":"        Module targetModule \u003d CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"cjyothika"},"content":"        String userInput \u003d VALID_CODE_CS1101S + INVALID_CREDIT_DESC + CREDIT_DESC_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"cjyothika"},"content":"                .withCredit(VALID_CREDIT_MA2002).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"cjyothika"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"cjyothika"},"content":"        // other valid values specified","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"cjyothika"},"content":"        userInput \u003d VALID_CODE_CS1101S + SEMYEAR_DESC_MA2002 + INVALID_CREDIT_DESC","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"cjyothika"},"content":"                + GRADE_DESC_MA2002","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"cjyothika"},"content":"                + CREDIT_DESC_MA2002;","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"cjyothika"},"content":"        descriptor \u003d new EditModuleDescriptorBuilder().withCredit(VALID_CREDIT_MA2002)","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"cjyothika"},"content":"                .withSemYear(VALID_SEMYEAR_MA2002)","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"cjyothika"},"content":"                .withGrade(VALID_GRADE_MA2002).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"cjyothika"},"content":"        expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"cjyothika"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"cjyothika"},"content":"        Module targetModule \u003d CS1101S;","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"cjyothika"},"content":"        String userInput \u003d VALID_CODE_CS1101S + TAG_EMPTY;","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"cjyothika"},"content":"        EditCommand.EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder()","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"cjyothika"},"content":"                .withTags().build();","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"cjyothika"},"content":"        EditCommand expectedCommand \u003d new EditCommand(new Code(VALID_CODE_CS1101S), descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":226,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"cjyothika":226}},{"path":"src/test/java/seedu/modtrek/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.ModuleCodePredicate;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"                new FindCommand(new ModuleCodePredicate(new Code(\"CS1101S\")));","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        assertParseSuccess(parser, \"CS1101S\", expectedFindCommand);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Dangabit":5,"cjyothika":4,"-":21}},{"path":"src/test/java/seedu/modtrek/logic/parser/ModTrekParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.EditCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.EditCommand.EditModuleDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.ListCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.ModuleCodePredicate;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.EditModuleDescriptorBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"public class ModTrekParserTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    private final ModTrekParser parser \u003d new ModTrekParser();","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        Module module \u003d new ModuleBuilder().build();","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ModuleUtil.getAddCommand(module));","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        assertEquals(new AddCommand(module), command);","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + \"/m CS1101S\");","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"        Set\u003cCode\u003e codesToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"        codesToDelete.add(CS1101S.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        assertEquals(new DeleteCommand(false, codesToDelete), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        Module module \u003d new ModuleBuilder().build();","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        EditModuleDescriptor descriptor \u003d new EditModuleDescriptorBuilder(module).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"                + \"CS1101S\" + \" \" + ModuleUtil.getEditModuleDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        assertTrue(new EditCommand(new Code(\"CS1101S\"), descriptor).equals(command));","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"        Code findCode \u003d new Code(\"CS1101S\");","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"                FindCommand.COMMAND_WORD + \" \" + \"CS1101S\");","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        assertEquals(new FindCommand(new ModuleCodePredicate(findCode)), command);","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Dangabit":13,"cjyothika":27,"-":63}},{"path":"src/test/java/seedu/modtrek/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_CODE \u003d \"CS@3230\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_CREDIT \u003d \"+4\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_GRADE \u003d \"A++\";","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_SEMYEAR \u003d \"Year 2 Sem 2\";","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_TAG \u003d \"#computer science breath and depth\";","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_CODE \u003d \"CS3230\";","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_CREDIT \u003d \"4\";","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_GRADE \u003d \"A+\";","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_SEMYEAR \u003d \"Y2S2\";","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_TAG_1 \u003d \"computer science breadth and depth\";","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_TAG_2 \u003d \"computer science foundation\";","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"    public void parseCode_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCode((String) null));","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    public void parseCode_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCode(INVALID_CODE));","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"    public void parseCode_validValueWithoutWhitespace_returnsCode() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        Code expectedCode \u003d new Code(VALID_CODE);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedCode, ParserUtil.parseCode(VALID_CODE));","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"    public void parseCode_validValueWithWhitespace_returnsTrimmedCode() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_CODE + WHITESPACE;","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"        Code expectedCode \u003d new Code(VALID_CODE);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedCode, ParserUtil.parseCode(nameWithWhitespace));","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"    public void parseCredit_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCredit((String) null));","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"    public void parseCredit_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCredit(INVALID_CREDIT));","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"    public void parseCredit_validValueWithoutWhitespace_returnsCredit() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"        Credit expectedCredit \u003d new Credit(VALID_CREDIT);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedCredit, ParserUtil.parseCredit(VALID_CREDIT));","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"    public void parseCredit_validValueWithWhitespace_returnsTrimmedCredit() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_CREDIT + WHITESPACE;","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"        Credit expectedCredit \u003d new Credit(VALID_CREDIT);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedCredit, ParserUtil.parseCredit(phoneWithWhitespace));","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"    public void parseGrade_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGrade((String) null));","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"    public void parseGrade_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGrade(INVALID_GRADE));","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"    public void parseGrade_validValueWithoutWhitespace_returnsGrade() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"        Grade expectedGrade \u003d new Grade(VALID_GRADE);","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedGrade, ParserUtil.parseGrade(VALID_GRADE));","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"    public void parseGrade_validValueWithWhitespace_returnsTrimmedGrade() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_GRADE + WHITESPACE;","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        Grade expectedGrade \u003d new Grade(VALID_GRADE);","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedGrade, ParserUtil.parseGrade(addressWithWhitespace));","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"    public void parseSemYear_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSemYear((String) null));","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"cjyothika"},"content":"    public void parseSemYear_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSemYear(INVALID_SEMYEAR));","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"    public void parseSemYear_validValueWithoutWhitespace_returnsSemYear() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"        SemYear expectedSemYear \u003d new SemYear(VALID_SEMYEAR);","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedSemYear, ParserUtil.parseSemYear(VALID_SEMYEAR));","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"cjyothika"},"content":"    public void parseSemYear_validValueWithWhitespace_returnsTrimmedSemYear() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"cjyothika"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_SEMYEAR + WHITESPACE;","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"cjyothika"},"content":"        SemYear expectedSemYear \u003d new SemYear(VALID_SEMYEAR);","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedSemYear, ParserUtil.parseSemYear(emailWithWhitespace));","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Dangabit":4,"cjyothika":60,"-":110}},{"path":"src/test/java/seedu/modtrek/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.TagCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"class TagCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    public void parse_missingparts_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        // no module specified","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, PREFIX_TAG + \"Computer Science Foundation\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + \"Computer Science Foundation\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + \"/i \" + \"Computer Science Foundation\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        assertParseFailure(parser, VALID_CODE_CS1101S + INVALID_TAG_DESC,","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cjyothika":44}},{"path":"src/test/java/seedu/modtrek/model/DegreeProgressionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"public class DegreeProgressionTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    private final DegreeProgression degreeProgression \u003d new DegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        assertEquals(Collections.emptyList(), degreeProgression.getModuleList());","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e degreeProgression.resetData(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"    public void resetData_withValidReadOnlyDegreeProgression_replacesData() {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"        DegreeProgression newData \u003d getTypicalDegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"        degreeProgression.resetData(newData);","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"        assertEquals(newData, degreeProgression);","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"    public void resetData_withDuplicateModules_throwsDuplicateModuleException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        // Two modules with the same identity fields","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        Module editedAlice \u003d new ModuleBuilder(CS1101S).withGrade(VALID_GRADE_MA2002).withTags(VALID_TAG_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"                .build();","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        List\u003cModule\u003e newModules \u003d Arrays.asList(CS1101S, editedAlice);","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        DegreeProgressionStub newData \u003d new DegreeProgressionStub(newModules);","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e degreeProgression.resetData(newData));","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"    public void hasModule_nullModule_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e degreeProgression.hasModule(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"    public void hasModule_moduleNotInDegreeProgression_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        assertFalse(degreeProgression.hasModule(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"    public void hasModule_moduleInDegreeProgression_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"        degreeProgression.addModule(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"        assertTrue(degreeProgression.hasModule(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"    public void hasModule_moduleWithSameIdentityFieldsInDegreeProgression_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"        degreeProgression.addModule(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        Module editedAlice \u003d new ModuleBuilder(CS1101S).withGrade(VALID_GRADE_MA2002).withTags(VALID_TAG_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"                .build();","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        assertTrue(degreeProgression.hasModule(editedAlice));","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"    public void getModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e degreeProgression.getModuleList().remove(0));","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"     * A stub ReadOnlyDegreeProgression whose modules list can violate interface constraints.","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"    private static class DegreeProgressionStub implements ReadOnlyDegreeProgression {","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"        private final ObservableList\u003cModule\u003e modules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        DegreeProgressionStub(Collection\u003cModule\u003e modules) {","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"            this.modules.setAll(modules);","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"            return modules;","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":102}},{"path":"src/test/java/seedu/modtrek/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.DegreeProgressionBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        assertEquals(new DegreeProgression(), new DegreeProgression(modelManager.getDegreeProgression()));","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        userPrefs.setFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        userPrefs.setFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"    public void setDegreeProgressionFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDegreeProgressionFilePath(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"    public void setDegreeProgressionFilePath_validPath_setsDegreeProgressionFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"        modelManager.setDegreeProgressionFilePath(path);","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"        assertEquals(path, modelManager.getDegreeProgressionFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"    public void hasModule_nullModule_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasModule(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"    public void hasModule_personNotInDegreeProgression_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"        assertFalse(modelManager.hasModule(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"    public void hasModule_personInDegreeProgression_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"        modelManager.addModule(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"        assertTrue(modelManager.hasModule(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"    public void getFilteredModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredModuleList().remove(0));","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"        DegreeProgression degreeProgression \u003d new DegreeProgressionBuilder().withModule(CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"                .withModule(MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        DegreeProgression differentDegreeProgression \u003d new DegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"        modelManager \u003d new ModelManager(degreeProgression, userPrefs);","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(degreeProgression, userPrefs);","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"cjyothika"},"content":"        // different degreeProgression -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"cjyothika"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentDegreeProgression, userPrefs)));","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"cjyothika"},"content":"        modelManager.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"cjyothika"},"content":"        differentUserPrefs.setFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"cjyothika"},"content":"        assertFalse(modelManager.equals(new ModelManager(degreeProgression, differentUserPrefs)));","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Dangabit":3,"cjyothika":32,"-":92}},{"path":"src/test/java/seedu/modtrek/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setFilePath(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Dangabit":2,"cjyothika":1,"-":18}},{"path":"src/test/java/seedu/modtrek/model/module/CodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"public class CodeTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Code(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    public void constructor_invalidCode_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"        String invalidCode \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Code(invalidCode));","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    public void isValidCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        // null name","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e Code.isValidCode(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        // invalid name","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Code.isValidCode(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Code.isValidCode(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Code.isValidCode(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Code.isValidCode(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        // valid name","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Code.isValidCode(\"CS3230\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Code.isValidCode(\"CS3211\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Code.isValidCode(\"CS2105\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Code.isValidCode(\"MA2108\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Code.isValidCode(\"GEC1025\")); // long names","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":40}},{"path":"src/test/java/seedu/modtrek/model/module/CreditTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"public class CreditTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Credit(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    public void constructor_invalidCredit_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"        String invalidCredit \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Credit(invalidCredit));","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    public void isValidCredit() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        // null phone number","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e Credit.isValidCredit(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Credit.isValidCredit(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Credit.isValidCredit(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Credit.isValidCredit(\"four\")); // non-numeric","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Credit.isValidCredit(\"4 MC\")); // alphabets within digits","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Credit.isValidCredit(\"600\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        // valid phone numbers","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Credit.isValidCredit(\"4\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Credit.isValidCredit(\"8\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Credit.isValidCredit(\"12\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":39}},{"path":"src/test/java/seedu/modtrek/model/module/GradeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"public class GradeTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Grade(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    public void constructor_invalidGrade_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"        String invalidGrade \u003d \" \";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Grade(invalidGrade));","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    public void isValidGrade() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        // null address","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e Grade.isValidGrade(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Grade.isValidGrade(\"A++\")); // empty string","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        assertFalse(Grade.isValidGrade(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        // valid addresses","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Grade.isValidGrade(\"A+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Grade.isValidGrade(\"S\")); // one character","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        assertTrue(Grade.isValidGrade(\"B-\")); // long address","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":36}},{"path":"src/test/java/seedu/modtrek/model/module/ModuleCodePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.ST2334;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"class ModuleCodePredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"        ModuleCodePredicate firstPredicate \u003d new ModuleCodePredicate(CS1101S.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"        ModuleCodePredicate secondPredicate \u003d new ModuleCodePredicate(ST2334.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"        ModuleCodePredicate firstPredicateCopy \u003d new ModuleCodePredicate(CS1101S.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        ModuleCodePredicate predicate \u003d new ModuleCodePredicate(CS1101S.getCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        assertFalse(predicate.test(new ModuleBuilder().withCode(\"ST2334\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cjyothika":43}},{"path":"src/test/java/seedu/modtrek/model/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_SEMYEAR_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"public class ModuleTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"        Module person \u003d new ModuleBuilder().build();","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    public void isSameModule() {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        assertTrue(CS1101S.isSameModule(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        assertFalse(CS1101S.isSameModule(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        Module editedCS1101s \u003d new ModuleBuilder(CS1101S).withCredit(VALID_CREDIT_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"                .withSemYear(VALID_SEMYEAR_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"                .withGrade(VALID_GRADE_MA2002).withTags(VALID_TAG_CS1101S).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        assertTrue(CS1101S.isSameModule(editedCS1101s));","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"        editedCS1101s \u003d new ModuleBuilder(CS1101S).withCode(VALID_CODE_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"        assertFalse(CS1101S.isSameModule(editedCS1101s));","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        Module aliceCopy \u003d new ModuleBuilder(CS1101S).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        assertTrue(CS1101S.equals(aliceCopy));","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        assertTrue(CS1101S.equals(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        assertFalse(CS1101S.equals(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        assertFalse(CS1101S.equals(5));","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        assertFalse(CS1101S.equals(MA2002));","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        Module editedCS1101s \u003d new ModuleBuilder(CS1101S).withCode(VALID_CODE_MA2002).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"        assertFalse(CS1101S.equals(editedCS1101s));","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Dangabit":1,"cjyothika":28,"-":38}},{"path":"src/test/java/seedu/modtrek/model/module/SemYearTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"public class SemYearTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SemYear(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"    public void constructor_invalidSemYear_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"        String invalidSemYear \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new SemYear(invalidSemYear));","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    public void isValidSemYear() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"        // null email","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e SemYear.isValidSemYear(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        // blank email","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        assertFalse(SemYear.isValidSemYear(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        assertFalse(SemYear.isValidSemYear(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        // missing parts","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        assertFalse(SemYear.isValidSemYear(\"Y1\")); // missing local part","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        assertFalse(SemYear.isValidSemYear(\"Y2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        assertFalse(SemYear.isValidSemYear(\"S1\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        // invalid parts","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        assertFalse(SemYear.isValidSemYear(\"Y1_S1\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"        // valid email","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"        assertTrue(SemYear.isValidSemYear(\"Y1S1\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"        assertTrue(SemYear.isValidSemYear(\"Y3S2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"        assertTrue(SemYear.isValidSemYear(\"Y4S2\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"        assertTrue(SemYear.isValidSemYear(\"Y2S1\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":46}},{"path":"src/test/java/seedu/modtrek/model/module/UniqueModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.model.module;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"    import static seedu.modtrek.testutil.TypicalModules.CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.ModuleBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"public class UniqueModuleListTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    private final UniqueModuleList uniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    public void contains_nullModule_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.contains(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        assertFalse(uniqueModuleList.contains(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        assertTrue(uniqueModuleList.contains(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        Module editedAlice \u003d new ModuleBuilder(CS1101S).withGrade(VALID_GRADE_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"                .withTags(VALID_TAG_CS1101S).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        assertTrue(uniqueModuleList.contains(editedAlice));","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"    public void add_nullModule_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.add(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"    public void add_duplicateModule_throwsDuplicateModuleException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e uniqueModuleList.add(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"    public void setModule_nullTargetModule_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.setModule(null, CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"    public void setModule_nullEditedModule_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.setModule(CS1101S, null));","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"    public void setModule_targetModuleNotInList_throwsModuleNotFoundException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList.setModule(CS1101S, CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"    public void setModule_editedModuleIsSameModule_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.setModule(CS1101S, CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"        expectedUniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"    public void setModule_editedModuleHasSameIdentity_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"        Module editedAlice \u003d new ModuleBuilder(CS1101S).withGrade(VALID_GRADE_MA2002).withTags(VALID_TAG_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.setModule(CS1101S, editedAlice);","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        expectedUniqueModuleList.add(editedAlice);","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"    public void setModule_editedModuleHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.setModule(CS1101S, MA2002);","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"        expectedUniqueModuleList.add(MA2002);","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"    public void setModule_editedModuleHasNonUniqueIdentity_throwsDuplicateModuleException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(MA2002);","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e uniqueModuleList.setModule(CS1101S, MA2002));","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"cjyothika"},"content":"    public void remove_nullModule_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.remove(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"cjyothika"},"content":"    public void remove_personDoesNotExist_throwsModuleNotFoundException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"cjyothika"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList.remove(CS1101S));","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"cjyothika"},"content":"    public void remove_existingModule_removesModule() {","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.remove(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"cjyothika"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"cjyothika"},"content":"    public void setModules_nullUniqueModuleList_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.setModules((UniqueModuleList) null));","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"cjyothika"},"content":"    public void setModules_uniqueModuleList_replacesOwnListWithProvidedUniqueModuleList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"cjyothika"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"cjyothika"},"content":"        expectedUniqueModuleList.add(MA2002);","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.setModules(expectedUniqueModuleList);","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"cjyothika"},"content":"    public void setModules_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.setModules((List\u003cModule\u003e) null));","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"cjyothika"},"content":"    public void setModules_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.add(CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"cjyothika"},"content":"        List\u003cModule\u003e personList \u003d Collections.singletonList(MA2002);","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"cjyothika"},"content":"        uniqueModuleList.setModules(personList);","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"cjyothika"},"content":"        UniqueModuleList expectedUniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"cjyothika"},"content":"        expectedUniqueModuleList.add(MA2002);","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"cjyothika"},"content":"        assertEquals(expectedUniqueModuleList, uniqueModuleList);","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"cjyothika"},"content":"    public void setModules_listWithDuplicateModules_throwsDuplicateModuleException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"cjyothika"},"content":"        List\u003cModule\u003e listWithDuplicateModules \u003d Arrays.asList(CS1101S, CS1101S);","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"cjyothika"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e uniqueModuleList.setModules(listWithDuplicateModules));","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"cjyothika"},"content":"            -\u003e uniqueModuleList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Dangabit":1,"cjyothika":83,"-":86}},{"path":"src/test/java/seedu/modtrek/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.model.tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Dangabit":2,"-":24}},{"path":"src/test/java/seedu/modtrek/storage/JsonAdaptedModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.storage.JsonAdaptedModule.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"public class JsonAdaptedModuleTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_NAME \u003d \"CS1\";","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_CREDIT \u003d \"+651234\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_GRADE \u003d \" \";","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"    private static final String INVALID_SEMYEAR \u003d \"year 1\";","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_NAME \u003d MA2002.getCode().toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_CREDIT \u003d MA2002.getCredit().toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_SEMYEAR \u003d MA2002.getSemYear().toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"    private static final String VALID_GRADE \u003d MA2002.getGrade().toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d MA2002.getTags().stream()","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_validModuleDetails_returnsModule() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(MA2002);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        assertEquals(MA2002, module.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_invalidCode_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"                new JsonAdaptedModule(INVALID_NAME, VALID_CREDIT, VALID_GRADE, VALID_SEMYEAR, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d Code.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_nullCode_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(null, VALID_CREDIT, VALID_GRADE, VALID_SEMYEAR, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Code.class.getSimpleName());","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_invalidCredit_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"                new JsonAdaptedModule(VALID_NAME, INVALID_CREDIT, VALID_GRADE, VALID_SEMYEAR, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d Credit.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_nullCredit_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(VALID_NAME, null, VALID_GRADE, VALID_SEMYEAR, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Credit.class.getSimpleName());","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_invalidSemYear_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"                new JsonAdaptedModule(VALID_NAME, VALID_CREDIT, VALID_GRADE, INVALID_SEMYEAR, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d SemYear.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_nullSemYear_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(VALID_NAME, VALID_CREDIT, VALID_GRADE, null, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, SemYear.class.getSimpleName());","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_invalidGrade_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"                new JsonAdaptedModule(VALID_NAME, VALID_CREDIT, VALID_SEMYEAR, INVALID_GRADE, VALID_TAGS);","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d Grade.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_nullGrade_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(VALID_NAME, VALID_CREDIT, null, VALID_SEMYEAR, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Grade.class.getSimpleName());","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"        JsonAdaptedModule module \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"                new JsonAdaptedModule(VALID_NAME, VALID_CREDIT, VALID_GRADE, VALID_SEMYEAR, invalidTags);","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, module::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Dangabit":3,"cjyothika":60,"-":48}},{"path":"src/test/java/seedu/modtrek/storage/JsonDegreeProgressionStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS2030S;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.CS2040S;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"public class JsonDegreeProgressionStorageTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDegreeProgressionStorageTest\");","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    @TempDir","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    public void readDegreeProgression_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDegreeProgression(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"    private java.util.Optional\u003cReadOnlyDegreeProgression\u003e readDegreeProgression(String filePath) throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        return new JsonDegreeProgressionStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"                .readDegreeProgression(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"                : null;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        assertFalse(readDegreeProgression(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDegreeProgression(\"notJsonFormatDegreeProgression.json\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"    public void readDegreeProgression_invalidModuleDegreeProgression_throwDataConversionException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDegreeProgression(\"invalidModuleDegreeProgression.json\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"    public void readDegreeProgression_invalidAndValidModuleDegreeProgression_throwDataConversionException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDegreeProgression(","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"                \"invalidAndValidModuleDegreeProgression.json\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"    public void readAndSaveDegreeProgression_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDegreeProgression.json\");","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"        DegreeProgression original \u003d getTypicalDegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"        JsonDegreeProgressionStorage jsonDegreeProgressionStorage \u003d new JsonDegreeProgressionStorage(filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"        jsonDegreeProgressionStorage.saveDegreeProgression(original, filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"        ReadOnlyDegreeProgression readBack \u003d jsonDegreeProgressionStorage.readDegreeProgression(filePath).get();","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        assertEquals(original, new DegreeProgression(readBack));","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"        original.addModule(CS2030S);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"        original.removeModule(CS2030S);","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        jsonDegreeProgressionStorage.saveDegreeProgression(original, filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"        readBack \u003d jsonDegreeProgressionStorage.readDegreeProgression(filePath).get();","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        assertEquals(original, new DegreeProgression(readBack));","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"        original.addModule(CS2040S);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"        jsonDegreeProgressionStorage.saveDegreeProgression(original); // file path not specified","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"        readBack \u003d jsonDegreeProgressionStorage.readDegreeProgression().get(); // file path not specified","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"        assertEquals(original, new DegreeProgression(readBack));","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"    public void saveDegreeProgression_nullDegreeProgression_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDegreeProgression(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"cjyothika"},"content":"    private void saveDegreeProgression(ReadOnlyDegreeProgression addressBook, String filePath) {","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"cjyothika"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"cjyothika"},"content":"            new JsonDegreeProgressionStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"cjyothika"},"content":"                    .saveDegreeProgression(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"cjyothika"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"cjyothika"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"cjyothika"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"cjyothika"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"cjyothika"},"content":"    public void saveDegreeProgression_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"cjyothika"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDegreeProgression(new DegreeProgression(), null));","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":111}},{"path":"src/test/java/seedu/modtrek/storage/JsonSerializableDegreeProgressionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.util.JsonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.testutil.TypicalModules;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"public class JsonSerializableDegreeProgressionTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"            .get(\"src\", \"test\", \"data\", \"JsonSerializableDegreeProgressionTest\");","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"            .resolve(\"typicalModuleDegreeProgression.json\");","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"            .resolve(\"invalidModuleDegreeProgression.json\");","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"            .resolve(\"duplicateModuleDegreeProgression.json\");","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_typicalModulesFile_success() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        JsonSerializableDegreeProgression dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"                JsonSerializableDegreeProgression.class).get();","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"        DegreeProgression addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        DegreeProgression typicalModulesDegreeProgression \u003d TypicalModules.getTypicalDegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        assertEquals(addressBookFromFile, typicalModulesDegreeProgression);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_invalidModuleFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"        JsonSerializableDegreeProgression dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"                JsonSerializableDegreeProgression.class).get();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    public void toModelType_duplicateModules_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"        JsonSerializableDegreeProgression dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"                JsonSerializableDegreeProgression.class).get();","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDegreeProgression.MESSAGE_DUPLICATE_MODULE,","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Dangabit":5,"cjyothika":17,"-":23,"Cheamybunny":6}},{"path":"src/test/java/seedu/modtrek/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"        userPrefs.setFilePath(Paths.get(\"data\\\\degreeprogression.json\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Dangabit":5,"cjyothika":1,"-":102}},{"path":"src/test/java/seedu/modtrek/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.testutil.TypicalModules.getTypicalDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.ReadOnlyDegreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"        JsonDegreeProgressionStorage addressBookStorage \u003d new JsonDegreeProgressionStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"         * {@link JsonDegreeProgressionStorage} class.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDegreeProgressionStorageTest} class.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"        DegreeProgression original \u003d getTypicalDegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"        storageManager.saveDegreeProgression(original);","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"        ReadOnlyDegreeProgression retrieved \u003d storageManager.readDegreeProgression().get();","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"Dangabit"},"content":"        assertEquals(original, new DegreeProgression(retrieved));","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"    public void getDegreeProgressionFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"        assertNotNull(storageManager.getDegreeProgressionFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":5,"cjyothika":9,"-":53,"Cheamybunny":1}},{"path":"src/test/java/seedu/modtrek/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Dangabit":1,"-":33}},{"path":"src/test/java/seedu/modtrek/testutil/DegreeProgressionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":" * A utility class to help with building Module objects.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":" *     {@code DegreeProgression dp \u003d new DegreeProgressionBuilder().withModule(\"CS1101s\", \"MA2002\").build();}","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"public class DegreeProgressionBuilder {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"    private DegreeProgression degreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":"    public DegreeProgressionBuilder() {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":"        degreeProgression \u003d new DegreeProgression();","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"    public DegreeProgressionBuilder(DegreeProgression degreeProgression) {","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"        this.degreeProgression \u003d degreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    public DegreeProgressionBuilder withModule(Module module) {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        degreeProgression.addModule(module);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"Dangabit"},"content":"    public DegreeProgression build() {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"        return degreeProgression;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":3,"cjyothika":12,"-":19}},{"path":"src/test/java/seedu/modtrek/testutil/EditModuleDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.EditCommand.EditModuleDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":" * A utility class to help with building EditModuleDescriptor objects.","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"public class EditModuleDescriptorBuilder {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    private EditModuleDescriptor descriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptorBuilder() {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"        descriptor \u003d new EditModuleDescriptor();","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptorBuilder(EditModuleDescriptor descriptor) {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"        this.descriptor \u003d new EditModuleDescriptor(descriptor);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"     * Returns an {@code EditModuleDescriptor} with fields containing {@code module}\u0027s details","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptorBuilder(Module module) {","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        descriptor \u003d new EditModuleDescriptor();","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        descriptor.setCode(module.getCode());","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        descriptor.setCredit(module.getCredit());","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        descriptor.setSemYear(module.getSemYear());","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        descriptor.setGrade(module.getGrade());","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        descriptor.setTags(module.getTags());","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"     * Sets the {@code Code} of the {@code EditModuleDescriptor} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptorBuilder withCode(String code) {","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        descriptor.setCode(new Code(code));","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"     * Sets the {@code Credit} of the {@code EditModuleDescriptor} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptorBuilder withCredit(String credit) {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"        descriptor.setCredit(new Credit(credit));","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"     * Sets the {@code SemYear} of the {@code EditModuleDescriptor} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptorBuilder withSemYear(String semYear) {","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"        descriptor.setSemYear(new SemYear(semYear));","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"     * Sets the {@code Grade} of the {@code EditModuleDescriptor} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptorBuilder withGrade(String grade) {","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"        descriptor.setGrade(new Grade(grade));","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditModuleDescriptor}","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"    public EditModuleDescriptor build() {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Dangabit":2,"cjyothika":36,"-":49}},{"path":"src/test/java/seedu/modtrek/testutil/ModuleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cjyothika"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Code;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.SemYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"cjyothika"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"cjyothika"},"content":" * A utility class to help with building Module objects.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"cjyothika"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":"public class ModuleBuilder {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"    public static final String DEFAULT_CODE \u003d \"CS1101S\";","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"cjyothika"},"content":"    public static final String DEFAULT_CREDIT \u003d \"4\";","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"cjyothika"},"content":"    public static final String DEFAULT_SEMYEAR \u003d \"Y1S1\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"    public static final String DEFAULT_GRADE \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    private Code code;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"    private Credit credit;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    private SemYear semYear;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"    private Grade grade;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"     * Creates a {@code ModuleBuilder} with the default details.","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"    public ModuleBuilder() {","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        code \u003d new Code(DEFAULT_CODE);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        credit \u003d new Credit(DEFAULT_CREDIT);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        semYear \u003d new SemYear(DEFAULT_SEMYEAR);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        grade \u003d new Grade(DEFAULT_GRADE);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"     * Initializes the ModuleBuilder with the data of {@code moduleToCopy}.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"    public ModuleBuilder(Module moduleToCopy) {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"cjyothika"},"content":"        code \u003d moduleToCopy.getCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        credit \u003d moduleToCopy.getCredit();","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"        semYear \u003d moduleToCopy.getSemYear();","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        grade \u003d moduleToCopy.getGrade();","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        tags \u003d new HashSet\u003c\u003e(moduleToCopy.getTags());","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"     * Sets the {@code Code} of the {@code Module} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"    public ModuleBuilder withCode(String code) {","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"        this.code \u003d new Code(code);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"        return this;","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"cjyothika"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Module} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"cjyothika"},"content":"    public ModuleBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"cjyothika"},"content":"        return this;","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"     * Sets the {@code Grade} of the {@code Module} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"    public ModuleBuilder withGrade(String grade) {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"        this.grade \u003d new Grade(grade);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"cjyothika"},"content":"        return this;","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"     * Sets the {@code Credit} of the {@code Module} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"cjyothika"},"content":"    public ModuleBuilder withCredit(String credit) {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"cjyothika"},"content":"        this.credit \u003d new Credit(credit);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"cjyothika"},"content":"        return this;","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"cjyothika"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"cjyothika"},"content":"     * Sets the {@code SemYear} of the {@code Module} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"cjyothika"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"cjyothika"},"content":"    public ModuleBuilder withSemYear(String semYear) {","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"cjyothika"},"content":"        this.semYear \u003d new SemYear(semYear);","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"cjyothika"},"content":"        return this;","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"cjyothika"},"content":"    public Module build() {","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"cjyothika"},"content":"        return new Module(code, credit, semYear, tags, grade);","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"cjyothika"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"cjyothika"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"cjyothika"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"cjyothika":96}},{"path":"src/test/java/seedu/modtrek/testutil/ModuleUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CODE;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_CREDIT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_SEMYEAR;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.logic.commands.EditCommand.EditModuleDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.tag.Tag;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"cjyothika"},"content":" * A utility class for Module.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"public class ModuleUtil {","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":"     * Returns an add command string for adding the {@code module}.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"    public static String getAddCommand(Module module) {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"cjyothika"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getModuleDetails(module);","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"     * Returns the part of command string for the given {@code module}\u0027s details.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"    public static String getModuleDetails(Module module) {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"        sb.append(PREFIX_CODE + module.getCode().toString() + \" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"        sb.append(PREFIX_CREDIT + module.getCredit().toString() + \" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"        sb.append(PREFIX_SEMYEAR + module.getSemYear().toString() + \" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"        sb.append(PREFIX_GRADE + module.getGrade().toString() + \" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"        module.getTags().stream().forEach(","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.toString() + \" \")","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"cjyothika"},"content":"     * Returns the part of command string for the given {@code EditModuleDescriptor}\u0027s details.","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    public static String getEditModuleDescriptorDetails(EditModuleDescriptor descriptor) {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"        descriptor.getCode().ifPresent(name -\u003e sb.append(PREFIX_CODE).append(name.toString()).append(\" \"));","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"        descriptor.getCredit().ifPresent(phone -\u003e sb.append(PREFIX_CREDIT).append(phone.toString()).append(\" \"));","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"        descriptor.getSemYear().ifPresent(email -\u003e sb.append(PREFIX_SEMYEAR).append(email.toString()).append(\" \"));","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"        descriptor.getGrade().ifPresent(address -\u003e sb.append(PREFIX_GRADE).append(address.toString()).append(\" \"));","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"            if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.toString()).append(\" \"));","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"            } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Dangabit":4,"cjyothika":29,"-":29}},{"path":"src/test/java/seedu/modtrek/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":1,"-":71}},{"path":"src/test/java/seedu/modtrek/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"     * Returns the middle index of the module in the {@code model}\u0027s module list.","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"        return Index.fromOneBased(model.getFilteredModuleList().size() / 2);","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"     * Returns the last index of the module in the {@code model}\u0027s module list.","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"        return Index.fromOneBased(model.getFilteredModuleList().size());","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"cjyothika"},"content":"     * Returns the module in the {@code model}\u0027s module list at {@code index}.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"    public static Module getModule(Model model, Index index) {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"        return model.getFilteredModuleList().get(index.getZeroBased());","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Dangabit":3,"cjyothika":8,"-":44}},{"path":"src/test/java/seedu/modtrek/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Dangabit":2,"-":10}},{"path":"src/test/java/seedu/modtrek/testutil/TypicalModules.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CODE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_CREDIT_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_GRADE_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_SEMYEAR_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_SEMYEAR_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_CS1101S;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"cjyothika"},"content":"import static seedu.modtrek.logic.commands.CommandTestUtil.VALID_TAG_MA2002;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.model.DegreeProgression;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cjyothika"},"content":"import seedu.modtrek.model.module.Module;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"cjyothika"},"content":" * A utility class containing a list of {@code Module} objects to be used in tests.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"cjyothika"},"content":"public class TypicalModules {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"cjyothika"},"content":"    public static final Module CS2100 \u003d new ModuleBuilder().withCode(\"CS2100\")","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"cjyothika"},"content":"            .withGrade(\"A\").withSemYear(\"Y1S2\")","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"cjyothika"},"content":"            .withCredit(\"4\")","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"cjyothika"},"content":"            .withTags(\"COMPUTER SCIENCE FOUNDATION\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"cjyothika"},"content":"    public static final Module ST2334 \u003d new ModuleBuilder().withCode(\"ST2334\")","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"cjyothika"},"content":"            .withGrade(\"A\")","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(\"Y1S2\").withCredit(\"4\")","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"cjyothika"},"content":"            .withTags(\"MATHEMATICS AND SCIENCES\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"cjyothika"},"content":"    public static final Module MA1521 \u003d new ModuleBuilder().withCode(\"MA1521\").withCredit(\"4\")","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(\"Y1S1\").withGrade(\"A\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"cjyothika"},"content":"    public static final Module CS1231 \u003d new ModuleBuilder().withCode(\"CS1231\").withCredit(\"4\")","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(\"Y1S1\").withGrade(\"A+\").withTags(\"COMPUTER SCIENCE FOUNDATION\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"cjyothika"},"content":"    public static final Module GEA1000 \u003d new ModuleBuilder().withCode(\"GEA1000\").withCredit(\"4\")","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(\"Y1S2\").withGrade(\"A\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"cjyothika"},"content":"    public static final Module CS1010R \u003d new ModuleBuilder().withCode(\"CS1010R\").withCredit(\"1\")","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(\"Y1S2\").withGrade(\"A+\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"cjyothika"},"content":"    public static final Module IS1103 \u003d new ModuleBuilder().withCode(\"IS1103\").withCredit(\"4\")","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(\"Y1S2\").withGrade(\"A\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"cjyothika"},"content":"    public static final Module CS2030S \u003d new ModuleBuilder().withCode(\"CS2030S\").withCredit(\"4\")","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(\"Y1S2\").withGrade(\"A\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"cjyothika"},"content":"    public static final Module CS2040S \u003d new ModuleBuilder().withCode(\"CS2040S\").withCredit(\"4\")","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(\"Y1S2\").withGrade(\"B+\").build();","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"cjyothika"},"content":"    // Manually added - Module\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"cjyothika"},"content":"    public static final Module CS1101S \u003d new ModuleBuilder().withCode(VALID_CODE_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"cjyothika"},"content":"            .withCredit(VALID_CREDIT_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(VALID_SEMYEAR_CS1101S).withGrade(VALID_GRADE_CS1101S)","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"cjyothika"},"content":"            .withTags(VALID_TAG_CS1101S).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"cjyothika"},"content":"    public static final Module MA2002 \u003d new ModuleBuilder().withCode(VALID_CODE_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"cjyothika"},"content":"            .withCredit(VALID_CREDIT_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"cjyothika"},"content":"            .withSemYear(VALID_SEMYEAR_MA2002).withGrade(VALID_GRADE_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"cjyothika"},"content":"            .withTags(VALID_TAG_CS1101S, VALID_TAG_MA2002)","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"cjyothika"},"content":"    public static final String KEYWORD_MATCHING_CS2030S \u003d \"CS2030S\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"cjyothika"},"content":"    private TypicalModules() {} // prevents instantiation","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"cjyothika"},"content":"     * Returns an {@code GradeBook} with all the typical modules.","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"cjyothika"},"content":"    public static DegreeProgression getTypicalDegreeProgression() {","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"Dangabit"},"content":"        DegreeProgression ab \u003d new DegreeProgression();","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"cjyothika"},"content":"        for (Module module : getTypicalModules()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"cjyothika"},"content":"            ab.addModule(module);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"cjyothika"},"content":"    public static List\u003cModule\u003e getTypicalModules() {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"cjyothika"},"content":"        return new ArrayList\u003cModule\u003e(Arrays.asList(CS2100, ST2334, MA1521, GEA1000, CS1231, CS1010R, IS1103));","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Dangabit":3,"cjyothika":52,"-":25}},{"path":"src/test/java/seedu/modtrek/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Dangabit":1,"-":34}},{"path":"src/test/java/seedu/modtrek/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dangabit"},"content":"package seedu.modtrek.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Dangabit"},"content":"import static seedu.modtrek.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Dangabit"},"content":"import seedu.modtrek.MainApp;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Dangabit":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"\u003c?import seedu.modtrek.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"cjyothika":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"cjyothika"},"content":"\u003cfx:root type\u003d\"seedu.modtrek.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"cjyothika":1,"-":5}}]
