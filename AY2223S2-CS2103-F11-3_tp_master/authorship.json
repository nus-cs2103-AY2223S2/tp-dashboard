[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"# Vaccination Management System","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F11-3/tp/actions) [![codecov](https://codecov.io/gh/AY2223S2-CS2103-F11-3/tp/branch/master/graph/badge.svg?token\u003d2HQAFUFOZJ)](https://codecov.io/gh/AY2223S2-CS2103-F11-3/tp)","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"## Target user:","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"The target user profile for the Vaccination Management System is an administrative staff who manages vaccinations centre. They prefer to work with a (CLI) for speed and efficiency. They have a fast typing speed and value the ability to manage the stock of vaccines, determine vaccine suitability, and schedule appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"## Value Proposition:","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"The Vaccination Management System provides an efficient solution for managing vaccine stock, determining patient suitability and scheduling appointments, and improving administrative efficiency and patient care. The system is optimised for typist, making it an ideal choice for busy administrative staff who type fast and prefer a CLI-first design.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"# Credits:","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":2,"francisyzy":13}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"mainClassName \u003d \u0027seedu.vms.Main\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"run {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    archiveFileName \u003d \u0027vms.jar\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":2,"-":70,"francisyzy":4}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"daitenshionyan"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI\"/\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":433}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"You can reach us by creating Github issues [here](https://github.com/AY2223S2-CS2103-F11-3/tp/issues)!","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"### Francis Yeo","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/francisyzy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"[[homepage](https://francisyzy.com)]","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"[[github](https://github.com/francisyzy)]","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"[[portfolio](team/francisyzy.md)]","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"* Role: Team Lead","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"* Responsibilities: Patient Feature Enhancement, Documentation, Dev Ops","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"### daitenshionyan","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"\u003cimg src\u003d\"images/daitenshionyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"[[github](https://github.com/daitenshionyan)]","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"[[portfolio](team/daitenshionyan.md)]","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"* Role: Developer","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"### nusE0726844","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/nuse0726844.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"[[github](http://github.com/nusE0726844)] [[portfolio](team/nuse0726844.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"### slackernoob","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"\u003cimg src\u003d\"images/slackernoob.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"[[github](http://github.com/slackernoob)]","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"[[portfolio](team/slackernoob.md)]","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":5,"slackernoob":4,"-":31,"francisyzy":9,"nusE0726844":2}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/MainApp.java).","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"daitenshionyan":1,"-":78}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"* COVID-19 vaccination data - [MOH ｜ COVID-19 Vaccination](https://www.moh.gov.sg/covid-19/vaccination)","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"* Chemical name synonyms - [PubChem](https://pubchem.ncbi.nlm.nih.gov/)","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"* Code snippet in [`ResultMessageBox`](https://github.com/AY2223S2-CS2103-F11-3/tp/blob/bd171c0108f75ff1c61c6bca63f618fb758eacda/src/main/java/seedu/vms/ui/ResultMessageBox.java#L44-L54) to size `TextArea` adapted and modified from - [StackOverflow - Javafx textfield resize to text length?](https://stackoverflow.com/a/25643696)","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"* CLI presentation format in UG adapted from - [Document command-line syntax](https://developers.google.com/style/code-syntax)","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/MainApp.java). It is responsible for,","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `patient delete 1`.","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"* defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/ui/Ui.java)","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"The `UI` is responsible for the GUI of VMS. It does so with the aid of JavaFX UI framework. To simplify the creation of GUI layouts of different parts, several classes extends `UiPart` which is responsible for the creation of JavaFX scene graph structures through `.fxml` files. The `.fxml` files of these UI parts are stored in `src/main/resources/view` in with matching names to the class using them. For example, the `.fxml` file of [`MainWindow`](https://github.com/AY2223S2-CS2103-F11-3/tp/blob/master/src/main/java/seedu/vms/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103-F11-3/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":":information_source: **NOTE**: Not all UI classes responsible for displaying something graphically extends `UiPart`. `UiPart` is used as a tool to simplify the creation of complicated GUI layout. Simple GUI parts such as `DetailedView` and `ListViewPanel` do not extend `UiPart`.","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"Below shows a (partial) class diagram of the main parts of `Ui` component.","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":":information_source: **NOTE**: `UiPart` has been omitted as the purpose of this diagram is to show the structure between the main parts of the `UI` component.","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"As seen from the class diagram above, `MainWindow` has composition type relationship with several other classes. Namely,","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"* `DetailedView` - responsible for the graphical display of the **detail panels**.","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"  * 1 each for patients and vaccinations.","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"* `CommandBox` - responsible for gathering the user\u0027s command input.","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"* `HelpWindow` - responsible for the graphical display of the help window.","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"* `ListViewPanel` - responsible for the graphical display of the **list view panels**.","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"  * 1 each for patients, vaccinations and appointments.","lastModifiedDate":"2023-04-10"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"* `ResultDisplay` - responsible for displaying messages to the user.","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"The classes mentioned above are only initialized when `fillInnerParts()` method of `MainWindow` is called. The object diagram below show the state after `fillInnerParts()` has been called.","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"![State of MainWindow](images/UiObjectDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":":information_source: **INFO**: `LogicManager` is a concrete implementation of `Logic`. `LogicManager` was not shown in the complementing class diagram as it is not involved in the structure of the UI component. see [Logic component](#logic-component) to learn more about `LogicManager`.","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"#### Refreshing","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"In order to maintain the responsiveness of the GUI, the FX Application thread is used solely for GUI related processes such as event handling and display updates. For parsing and the execution of commands, their processes are dispatched on a separate thread. To learn more about this, see [Logic component](#logic-component).","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"To handle display changes due to changes in the state of data that the different GUI parts are displaying, all classes of the `UI` component in the class diagram above with the exception of `HelpWindow` implements `Refreshable`. This is a functional interface whose functional method is `refresh()`. Calling this method will cause the implementing UI classes to check for changes in the data that they are displaying and update their display accordingly. To invoke the `refresh()` method continuously, a `ScheduledThreadPoolExecutor` is created in `MainApp` that is tasked to call `refresh()` of `UiManager` 30 times every second.","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"Unlike the implementation where the displays are updated as soon as it a change happens, this implementation is able to accumulate and differ the displaying of changes. This improves the responsiveness of the GUI in scenarios where there is a spike in the number of changes in data as the GUI does not update for every change. Such scenarios may happen when the use uses patient\u0027s `clear` command when there are a large number of patient.","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"#### `DetailedView`","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"To display its contents, `DetailedView` uses an observer pattern to observe for the data that it needs to display. It observes an `ObjectProperty` through a `ChangeListener`, both of which are defined by JavaFX. To convert the observed object to the `Node` object that JavaFX can display, `DetailedView` will also have a `Function`, that is provided on construction, which will handle this conversion.","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"To collect and store changes to be displayed, 2 private class fields are defined:","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"* `isUpdated` of type `boolean`.","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"  * Will be `true` if the change has been displayed and `false` otherwise.","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"* `value` of type `T` where `T` is the type of the object being detailed.","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"  * The object that has to be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"  * Can be `null` which will signify that nothing should be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"`isUpdated` is required as `value` can be `null`. Thus checks to see if `value` is `null` will not work.","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"Below shows the class diagram, showing the structure of `DetailedView`. Notice how that there are no external dependencies to other parts of VMS.","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"![Class diagram of DetailedView](images/UiDetailedViewClassDiagram.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"Below shows the object diagram showing the state after `fillInnerParts()` of `MainWindow` is called for the patient detail panel to highlight the listener pattern structure that `DetailView` implements. A similar object diagram can be drawn for the vaccination detail panel by changing the relevant variable names and types.","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"![Object diagram of DetailedView](images/UiDetailedViewPatientObjectDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"The activity diagram below shows the work flow of `DetailedDisplay` as it checks for changes and update its display when `refresh()` is invoked.","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"![Activity diagram of DetailedView](images/UiDetailedViewRefreshActivityDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"As seen, no display updates are done if `isUpdate` is `true`, which signifies that the display has already been updated. This improves efficiency as the display is only updated when necessary.","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"#### `ListViewPanel`","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"Similar to `DetailedView`, `ListViewPanel` also uses an observer pattern and a `Function` to convert the observed object to a `Node`. However, it observes an `ObservableMap` through a `MapChangeListener`, both of which also defined by JavaFX. Only the values of the observed map will be displayed and the `Function` of `ListViewPanel` is used to convert these values to their equivalent `Node` representations. The order in which the values of the observed map are displayed is defined by a `Comparator` by default is the comparator produced from `Comparator.naturalOrder()`. This comparator is stored in an `ObjectProperty` in `ListViewPanel`","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"To collect changes to be displayed for the refresh, the latest `MapChangeListener.Change` (referred to as `Change` in this section) is stored in an `ObjectProperty`. `Change` is an inner class of `MapChangeListener` and defines a method, `getMap()` which allows the retrieval of the state of the map to be displayed. Unlike `DetailedView`, a `null` check to the value of this `ObjectProperty` can be done to verify if a an update to the display is required as its value will only be `null` if there is nothing to update.","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"Below shows the class diagram of `ListViewPanel` to graphically view this structure.","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"![Class diagram of ListViewPanel](images/UiListViewPanelClassDiagram.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"The complementing object diagram for appointment list view is shown below. Some `AppointmentManager` components are also added to detail the observer pattern structure of `ListViewPanel`. A similar diagram can be done for the patient list view panel.","lastModifiedDate":"2023-04-07"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"![Object diagram of Appointment ListViewPanel](images/UiListViewPanelApptObjectDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"To be able to refer to vaccinations by the index that they are displayed in the vaccination list panel, `ModelManager` will need to have a list view that describes the order in which the vaccinations are displayed. To avoid coupling, `ModelManager` observes the `ListViewPanel`, that is responsible for displaying the vaccination list panel, through the observer pattern. The items and order in which `ListViewPanel` is displaying is kept in an `ObservableList` as defined by JavaFX `ListView` which `ListViewPanel` extends. As such, obtain the required list view, `ModelManager` keeps another `ObservableList` that is bounded to the `ObservableList` defined by `ListView` through the observer pattern. Refer to the object diagram below for a graphical visualization of the structure described. The object diagram shows the state after `fillInnerParts()` is called.","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"![Object diagram of Vaccination ListViewPanel](images/UiListViewPanelVaxObjectDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"Below show the activity diagram when the `refresh()` method is invoked. The item list referred to in the diagram is the `ObservableList` that `ListView` defines. Updates to this list will update the display.","lastModifiedDate":"2023-04-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"![Activity diagram of ListViewPanel](images/UiListViewPanelActivityDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"#### `ResultDisplay`","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"To display messages to the user after every command that they have inputted, a `Consumer`, that accepts a list of `CommandMessage`, is used to update `ResultDisplay` whenever `Logic` has completed the execution of a command regardless if it was successful. The `Consumer` only function is to call the `queueMessages(List\u003cCommandMessage\u003e)` method of `ResultDisplay`. This method will queue all `CommandMessage` to be displayed in the order of the given list. When the `refresh()` method is called, elements in the queue will be polled and converted to their `Node` representation until the queue is emptied. To understand more about when this `Consumer` is called within `Logic`, read [Executing a command](#executing-a-command).","lastModifiedDate":"2023-04-07"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"Below shows the class diagram of the described structure. `Logic`, `LogicManager` and `Consumer` are not shown as there are no dependencies between these classes/interfaces and `ResultDisplay`.","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"![Class diagram of ResultDisplay](images/UiResultDisplayClassDiagram.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"Below shows the object diagram of `ResultDisplay` after the `fillInnerParts()` method has been called. This diagram reveals the observer pattern structure which the class diagram does not.","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"![Object diagram of ResultDisplay](images/UiResultDisplayObjectDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"The following diagram shows the activity diagram when the `refresh()` method is called. On top of how messages are displayed, the procedure of how the 30 message history limit is maintained is shown as well.","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"![Activity diagram of ResultDisplay](images/UiResultDisplayActivityDiagram.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/logic/Logic.java)","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" /\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"`LogicManager` is a concrete implementation of `Logic` which handles the logical components of VMS. Its main responsibility is to handle the execution of user entered commands.","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"`LogicManager` handles command execution in the form of an execution queue. When the user enters a command, that command is queued into an execution queue in `LogicManager`. Both queueing and the execution of commands can happen in parallel. However, at any one time, at most one command will be executed at a time.","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"#### Command execution","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"For the entire command execution portion of the `Logic` component, only `queue(String)` method is exposed to the outside. As such, to queue and execute a user command, only the `queue(String)` method of `Logic` will have to be called. This method will queue the command for execution and execute it when it is its turn. Command inputs are stored and queued in an internal queue called the command queue (`cmdQueue`). To allow for parallel queuing and dequeuing, this queue has a type of `LinkedBlockingDeque`. The elements stored within the queue are the `String` of the command input that the user has entered.","lastModifiedDate":"2023-04-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"To avoid dependencies with other classes, specifically UI related classes, `ModelManager` stores a `completionHandler`, which is a `Consumer\u003cList\u003cCommandMessage\u003e\u003e`. `completionHandler` can be set and changed by other classes and is called whenever a command execution is completed.","lastModifiedDate":"2023-04-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"##### Queuing a command","lastModifiedDate":"2023-04-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"When the `queue(String)` is called upon, the following happens.","lastModifiedDate":"2023-04-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"1. The command input is added to the end of `cmdQueue`.","lastModifiedDate":"2023-04-04"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"2. An attempt is then made to start the execute the next command in the queue through `startNext()`. This is described in detail in the next section.","lastModifiedDate":"2023-04-04"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"\u003cimg src\u003d\"images/LogicQueueSequenceDiagram.png\" id\u003d\"logic-queue-sequence-diagram-fig\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"##### Starting a command","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"The method `startNext()` is a private method in `LogicManager` that handles the starting of the execution of a command. When it is called upon, a check is done to check if there are any command still in execution and that there are still commands yet to be executed in `cmdQueue`. If this is not the case, nothing happens and the method returns silently. If not, the following happens.","lastModifiedDate":"2023-04-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"1. The next command input in `cmdQueue` is polled.","lastModifiedDate":"2023-04-04"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"2. A new `Thread` object is created whose task is to parse and execute the command input polled in step 1.","lastModifiedDate":"2023-04-04"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"3. The created `Thread` objects is then started on a separate thread to perform its task of executing the command.","lastModifiedDate":"2023-04-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"\u003cimg src\u003d\"images/StartNextCommandSequenceDiagram.png\" id\u003d\"logic-start-next-command-fig\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"##### Executing a command","lastModifiedDate":"2023-04-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"When the created `Thread` in `startNext()` is started, Java Virtual Machine will call its `run()` method at an appropriate time. This will start the parsing then execution of a command input by calling the `processCommand(String)` of `LogicManager`. The following sequence describes how a command input is executed when `processCommand(String)` is called.","lastModifiedDate":"2023-04-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"1. The command input is passed to the stored instance of `Model` in `LogicManager` to be parsed. The returned result is a `ParseResult` which is an association class of the parsed `Command` and its corresponding `CommandMessage` if there are warnings while parsing. More accurately, the parsed `Command` is one of the concrete implementations of `Command`.","lastModifiedDate":"2023-04-04"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"2. The `Command` in the returned `ParseResult` object of step 1 is then executed. It is given the stored instance of `Model` to perform its task and its interaction with model depends on the concrete implementation of `Command` parsed. This is represented as a **ref** frame in the sequence diagram below to highlight that the `Command` object and `Model` interacts with each other, but their interactions may vary depending on the implementation of the parsed `Command`. Once done it returns a `CommandMessage`.","lastModifiedDate":"2023-04-04"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"3. The new state of `Model` is then saved into hard disk through `saveModel()` method. This will return a list of `CommandMessage` containing the error messages that occurred while saving.","lastModifiedDate":"2023-04-04"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"4. All `CommandMessage`s that have been created from steps 1 to 3 are combined as a list and passed to `completeExecution(List\u003cString\u003e)` method.","lastModifiedDate":"2023-04-04"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"5. The `completionHandler` is then passed the combined list of `CommandMessage` in step 5 to handle the completion of the command.","lastModifiedDate":"2023-04-04"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"6. An attempt is then made to start the next command through `startNext()` as described in the section before.","lastModifiedDate":"2023-04-04"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"\u003cimg src\u003d\"images/LogicCommandExecutionSequenceDiagram.png\" id\u003d\"logic-command-execution-sequence-diagram\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":":information_source: **INFO**: The parsing of commands are handled in `Model` to allow for user custom keywords.","lastModifiedDate":"2023-04-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/Model.java)","lastModifiedDate":"2023-02-20"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"nusE0726844"},"content":"Here\u0027s a (partial) class diagram of the Model component:","lastModifiedDate":"2023-04-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"nusE0726844"},"content":"![Class Diagram for Model component](images/ModelClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"nusE0726844"},"content":"`ModelManager` is a concrete implementation of `Model` which handles the model components of VMS.","lastModifiedDate":"2023-04-06"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"The responsibilities of `Model` component,","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"* stores the runtime state of the other managers:","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"  * `PatientManager`","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"  * `VaxTypeManager`","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"  * `AppointmentManager`","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"  * `KeywordManager`","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"nusE0726844"},"content":"* stores the objects to be displayed as a separate filtered map which is exposed to outsiders as an unmodifiable","lastModifiedDate":"2023-04-07"},{"lineNumber":254,"author":{"gitId":"nusE0726844"},"content":"`ObservableMap\u003cK, V\u003e`, where `V` is the type of object being stored (eg. `IdData\u003cPatient\u003e`) and `K` is the type of the","lastModifiedDate":"2023-04-07"},{"lineNumber":255,"author":{"gitId":"nusE0726844"},"content":"key the stored object is mapped to (for `Patient` and `Appointment`, this is an `Integer` and as for `VaxType`, this","lastModifiedDate":"2023-04-07"},{"lineNumber":256,"author":{"gitId":"nusE0726844"},"content":"is a `String`).","lastModifiedDate":"2023-04-07"},{"lineNumber":257,"author":{"gitId":"nusE0726844"},"content":"* stores the object to be detailed as a `ObjectProperty\u003cV\u003e` where `V` is the type of the object to be displayed (eg.","lastModifiedDate":"2023-04-07"},{"lineNumber":258,"author":{"gitId":"nusE0726844"},"content":"`IdData\u003cPatient\u003e`).","lastModifiedDate":"2023-04-07"},{"lineNumber":259,"author":{"gitId":"nusE0726844"},"content":"* store a `UserPref` object that represents the user\u0027s preferences. This is exposed to the outside as a","lastModifiedDate":"2023-04-07"},{"lineNumber":260,"author":{"gitId":"nusE0726844"},"content":"`ReadOnlyUserPref` object.","lastModifiedDate":"2023-04-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"### Patient component","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"francisyzy"},"content":"**API** : [`Patient.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/patient/Patient.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"nusE0726844"},"content":"Here\u0027s a (partial) class diagram of the Patient component:","lastModifiedDate":"2023-04-06"},{"lineNumber":267,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":268,"author":{"gitId":"nusE0726844"},"content":"![Class Diagram of Patient](images/ModelPatientClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":269,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":270,"author":{"gitId":"francisyzy"},"content":"To represent a patient, `Patient` contains the Identity and Medical information using the following attributes:","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"francisyzy"},"content":"* Identity:","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"francisyzy"},"content":"  * The `name` of the patient","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"francisyzy"},"content":"  * The `phone` of the patient","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"francisyzy"},"content":"  * The `dateOfBirth` of the patient","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"francisyzy"},"content":"* Medical:","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"francisyzy"},"content":"  * The `bloodType` of the patient","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"francisyzy"},"content":"  * The `allergies` of the patient","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"francisyzy"},"content":"  * The `vaccines` of the patient","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"francisyzy"},"content":"`Patient` have limitations on its attributes according to the [Non-Functional Requirements](#non-functional-requirements).","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"francisyzy"},"content":"#### PatientManager","lastModifiedDate":"2023-03-29"},{"lineNumber":284,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":285,"author":{"gitId":"nusE0726844"},"content":"**API** : [`PatientManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/patient/PatientManager.java)","lastModifiedDate":"2023-04-06"},{"lineNumber":286,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":287,"author":{"gitId":"francisyzy"},"content":"On top of storing `Patient` objects, `PatientManager` ensures the patient\u0027s vaccination records are updated if the name of a vaccination changes. It also ensures that there is a maximum limit of `Patient` objects allowed to be stored according to the [Non-Functional Requirements](#non-functional-requirements).","lastModifiedDate":"2023-03-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"### Vaccination component","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"Vaccinations are represented as `VaxType` objects and stored within `VaxTypeManager`.","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"#### VaxType","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"nusE0726844"},"content":"**API** : [`VaxType.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/vaccination/VaxType.java)","lastModifiedDate":"2023-04-06"},{"lineNumber":296,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":297,"author":{"gitId":"nusE0726844"},"content":"Here\u0027s a (partial) class diagram of the VaxType component:","lastModifiedDate":"2023-04-06"},{"lineNumber":298,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":299,"author":{"gitId":"nusE0726844"},"content":"![Class Diagram of VaxType](images/ModelVaxTypeClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":300,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"To represent a vaccination, `VaxType` contains the following attributes:","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"* A name represented as a `GroupName` object.","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"* A set of groups which the vaccination classifies under as a set of `GroupName` objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"* A minimum age as an `Age` object.","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"* A maximum age as an `Age` object.","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"* A set ingredients of the vaccination as a set of `GroupName` objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"* A list of requirements of vaccination groups that will have to be taken before this vaccination can be taken as a list of `Requirement` objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"daitenshionyan"},"content":"#### VaxTypeManager","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"nusE0726844"},"content":"**API** : [`VaxTypeManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/vaccination/VaxTypeManager.java)","lastModifiedDate":"2023-04-06"},{"lineNumber":313,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":314,"author":{"gitId":"francisyzy"},"content":"On top of storing `VaxType` objects, `VaxTypeManager` ensures the uniqueness of `VaxType`. It also ensures that there is a maximum limit of `VaxType` objects allowed to be stored according to the [Non-Functional Requirements](#non-functional-requirements).","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"nusE0726844"},"content":"### Appointment component","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":318,"author":{"gitId":"nusE0726844"},"content":"**API** : [`Appointment.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/appointment/Appointment.java)","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"nusE0726844"},"content":"Here\u0027s a (partial) class diagram of the Appointment component:","lastModifiedDate":"2023-04-06"},{"lineNumber":321,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":322,"author":{"gitId":"nusE0726844"},"content":"![Class Diagram of Appointment](images/ModelAppointmentClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":323,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":324,"author":{"gitId":"nusE0726844"},"content":"The `Appointment` component,","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"nusE0726844"},"content":"* Contains the details of patients\u0027 appointment","lastModifiedDate":"2023-03-23"},{"lineNumber":327,"author":{"gitId":"daitenshionyan"},"content":"  * The patients\u0027 `Patient id`.","lastModifiedDate":"2023-04-10"},{"lineNumber":328,"author":{"gitId":"daitenshionyan"},"content":"  * The duration of each appointment (Uses the `start time` and `end time`).","lastModifiedDate":"2023-04-10"},{"lineNumber":329,"author":{"gitId":"daitenshionyan"},"content":"  * The type and dose of `vaccine` to be administered.","lastModifiedDate":"2023-04-10"},{"lineNumber":330,"author":{"gitId":"daitenshionyan"},"content":"  * The `status` of the appointment.","lastModifiedDate":"2023-04-10"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"nusE0726844"},"content":"#### AppointmentManager","lastModifiedDate":"2023-04-06"},{"lineNumber":333,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":334,"author":{"gitId":"nusE0726844"},"content":"**API** : [`AppointmentManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/appointment/AppointmentManager.java)","lastModifiedDate":"2023-04-06"},{"lineNumber":335,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":336,"author":{"gitId":"nusE0726844"},"content":"On top of storing `Appointment` objects, `AppointmentManager` ensures the uniqueness of `Appointment`. It also ensures that there is a maximum limit of `Appointment` objects allowed to be stored according to the [Non-Functional Requirements](#non-functional-requirements).","lastModifiedDate":"2023-04-06"},{"lineNumber":337,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":338,"author":{"gitId":"nusE0726844"},"content":"### Keyword component","lastModifiedDate":"2023-04-06"},{"lineNumber":339,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":340,"author":{"gitId":"nusE0726844"},"content":"**API** : [`Keyword.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/keyword/Keyword.java)","lastModifiedDate":"2023-04-06"},{"lineNumber":341,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":342,"author":{"gitId":"nusE0726844"},"content":"Here\u0027s a (partial) class diagram of the Keyword component:","lastModifiedDate":"2023-04-06"},{"lineNumber":343,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":344,"author":{"gitId":"nusE0726844"},"content":"![Class Diagram of Keyword](images/ModelKeywordClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":345,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":346,"author":{"gitId":"nusE0726844"},"content":"The `Keyword` component,","lastModifiedDate":"2023-04-07"},{"lineNumber":347,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":348,"author":{"gitId":"nusE0726844"},"content":"* Contains the mapping of a custom keyword to a main keyword","lastModifiedDate":"2023-04-07"},{"lineNumber":349,"author":{"gitId":"daitenshionyan"},"content":"  * The custom\u0027 `\u003ckeyword\u003e`.","lastModifiedDate":"2023-04-10"},{"lineNumber":350,"author":{"gitId":"nusE0726844"},"content":"  * The main `\u003ckeyword\u003e`:","lastModifiedDate":"2023-04-07"},{"lineNumber":351,"author":{"gitId":"daitenshionyan"},"content":"    * `appointment` for `Appointment` class.","lastModifiedDate":"2023-04-10"},{"lineNumber":352,"author":{"gitId":"daitenshionyan"},"content":"    * `patient` for `Patient` class.","lastModifiedDate":"2023-04-10"},{"lineNumber":353,"author":{"gitId":"daitenshionyan"},"content":"    * `vaccination` for `VaxType` class.","lastModifiedDate":"2023-04-10"},{"lineNumber":354,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":355,"author":{"gitId":"nusE0726844"},"content":"#### KeywordManager","lastModifiedDate":"2023-04-06"},{"lineNumber":356,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":357,"author":{"gitId":"nusE0726844"},"content":"**API** : [`KeywordManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/keyword/KeywordManager.java)","lastModifiedDate":"2023-04-06"},{"lineNumber":358,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":359,"author":{"gitId":"nusE0726844"},"content":"The `KeywordManager` main responsibility is the storing of `Keyword` objects.","lastModifiedDate":"2023-04-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":361,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"daitenshionyan"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/storage/Storage.java)","lastModifiedDate":"2023-02-20"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"slackernoob"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"1100\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":367,"author":{"gitId":"daitenshionyan"},"content":"The `Storage` component is responsible for the reading and writing of the states of the different managers in `Model` to and from the hard disk. As shown in the diagram above, it inherits from `PatientManagerStorage`, `UserPrefsStorage`, `VaxTypeStorage`, `AppointmentStorage` and `KeywordStorage`. As such, it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"francisyzy"},"content":"#### Cascading delete","lastModifiedDate":"2023-03-29"},{"lineNumber":370,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":371,"author":{"gitId":"francisyzy"},"content":"The cascading delete feature is an important part of the VMS\u0027s design, as it helps to maintain data integrity and avoid orphaned records in the system. When a object is deleted from the VMS, any related records should also be deleted to ensure that the system remains consistent.","lastModifiedDate":"2023-03-29"},{"lineNumber":372,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":373,"author":{"gitId":"francisyzy"},"content":"##### Relationship between `Patient` and `Appointment`","lastModifiedDate":"2023-03-29"},{"lineNumber":374,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":375,"author":{"gitId":"francisyzy"},"content":"When a `Patient` record is deleted from the system, any associated `Appointment` records will be deleted as well. This is because `Appointment` records are directly linked to a specific `Patient`, and it would not make sense to keep these records around if the `Patient` is no longer in the system. The implementation can be found in [`AppointmentManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/appointment/AppointmentManager.java).","lastModifiedDate":"2023-03-29"},{"lineNumber":376,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":377,"author":{"gitId":"francisyzy"},"content":"##### Relationship between `VaxType` and `Appointment`","lastModifiedDate":"2023-03-29"},{"lineNumber":378,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":379,"author":{"gitId":"francisyzy"},"content":"When a `VaxType` record is deleted from the system, any associated `Appointment` records will be deleted as well. This is because `VaxType` records are directly linked to a specific `Appointment`, and it would not make sense to keep these records around if the `VaxType` record is no longer offered by the VaxType center. The implementation can be found in [`AppointmentManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/appointment/AppointmentManager.java).","lastModifiedDate":"2023-03-29"},{"lineNumber":380,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":381,"author":{"gitId":"francisyzy"},"content":"##### Relationship between `Patient` and `VaxType`","lastModifiedDate":"2023-03-29"},{"lineNumber":382,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":383,"author":{"gitId":"francisyzy"},"content":"On the other hand, `Patient` records are not deleted when a `VaxType` record is deleted from the system. This is because `Patient` records should not be modified if a `VaxType` is no longer offered. If a `VaxType` record is deleted, the associated `Appointment` records will be deleted, but any `Patient` records associated with those `VaxType` records will not be updated in the system. This is because the `Patient` records may still be relevant, even if the `VaxType` is no longer in the system.","lastModifiedDate":"2023-03-29"},{"lineNumber":384,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":385,"author":{"gitId":"francisyzy"},"content":"#### Cascading Change","lastModifiedDate":"2023-03-30"},{"lineNumber":386,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":387,"author":{"gitId":"francisyzy"},"content":"The cascading change feature is an important part of the VMS\u0027s design, as it helps to maintain data integrity and avoid orphaned records in the system. When a object is changed in the VMS, any related records should also be changed to ensure that the system remains consistent.","lastModifiedDate":"2023-03-30"},{"lineNumber":388,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":389,"author":{"gitId":"francisyzy"},"content":"##### Relationship between `Patient` and `Appointment`","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":391,"author":{"gitId":"francisyzy"},"content":"When a `Patient` record is updated in the system, any associated `Appointment` records will be updated as well. This is because `Appointment` records are directly linked to a specific `Patient`, and if the patient\u0027s information changes, it is important to update any related `appointment`s to reflect this change. The implementation can be found in [`AppointmentManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/appointment/AppointmentManager.java).","lastModifiedDate":"2023-03-30"},{"lineNumber":392,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"francisyzy"},"content":"##### Relationship between `VaxType` and `Patient`","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"francisyzy"},"content":"When a `VaxType` record is updated in the system, any associated `Patient` records will be updated as well. This is because `VaxType` records contain information about the `VaxType`s that a `patient` has taken, and if the `VaxType` information changes, it is important to update any related `patient` records to reflect this change. The implementation can be found in [`PatientManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/patient/PatientManager.java).","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":397,"author":{"gitId":"francisyzy"},"content":"##### Relationship between `VaxType` and `Appointment`","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":399,"author":{"gitId":"francisyzy"},"content":"Additionally, when a `VaxType` record is updated in the system, any associated `Appointment` records will be updated as well. This is because `VaxType` records are directly linked to a specific `Appointment`, and if the `VaxType` information changes, it is important to update any related `appointment` records to reflect this change. The implementation can be found in [`AppointmentManager.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/appointment/AppointmentManager.java).","lastModifiedDate":"2023-03-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"francisyzy"},"content":"Classes used by multiple components are in the `seedu.vms.commons` package.","lastModifiedDate":"2023-02-21"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"francisyzy"},"content":"### Patient","lastModifiedDate":"2023-03-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":413,"author":{"gitId":"francisyzy"},"content":"#### Adding a Patient","lastModifiedDate":"2023-03-29"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":415,"author":{"gitId":"francisyzy"},"content":"The **Adding a Patient** mechanism is facilitated by `VMS`. The Patient created is stored inside `PatientManager` object.","lastModifiedDate":"2023-03-22"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":417,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-03-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":419,"author":{"gitId":"francisyzy"},"content":"Given below is an example usage scenario when a user enter `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax` as a command.","lastModifiedDate":"2023-03-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":421,"author":{"gitId":"francisyzy"},"content":"1. The user enters the command in the `UI component`","lastModifiedDate":"2023-03-23"},{"lineNumber":422,"author":{"gitId":"francisyzy"},"content":"2. It will be passed to the `Logic component`","lastModifiedDate":"2023-03-23"},{"lineNumber":423,"author":{"gitId":"francisyzy"},"content":"3. When `AddCommandParser` receives the information from `PatientParser`, it will invoke the following methods to help with the parsing.","lastModifiedDate":"2023-03-23"},{"lineNumber":424,"author":{"gitId":"francisyzy"},"content":"    1. `ParserUtil#parseName` will be called to create a Name object using \"John Doe\".","lastModifiedDate":"2023-03-23"},{"lineNumber":425,"author":{"gitId":"francisyzy"},"content":"    2. `ParserUtil#parsePhone` will be called to create a Phone object using \"98765432\".","lastModifiedDate":"2023-03-23"},{"lineNumber":426,"author":{"gitId":"francisyzy"},"content":"    3. `ParserUtil#parseDob` will be called to create a Dob object using \"2001-03-19\".","lastModifiedDate":"2023-03-23"},{"lineNumber":427,"author":{"gitId":"francisyzy"},"content":"    4. `ParserUtil#parseBloodType` will be called to create a BloodType object using \"B+\".","lastModifiedDate":"2023-03-23"},{"lineNumber":428,"author":{"gitId":"francisyzy"},"content":"    5. `ParserUtil#parseGroups` will be called to create GroupName[] object named allergies using [\"catfur\", \"pollen\"].","lastModifiedDate":"2023-03-23"},{"lineNumber":429,"author":{"gitId":"francisyzy"},"content":"    6. `ParserUtil#parseGroups` will be called to create GroupName[] object named vaccines using [\"covax\"].","lastModifiedDate":"2023-03-23"},{"lineNumber":430,"author":{"gitId":"francisyzy"},"content":"4. After successfully parsing the args, `AddCommandParser` will create a Patient using the new Name, Phone, Dob, BloodType, Allergies\u003cGroupName\u003e, Vaccines\u003cGroupName\u003e. Then it will create an `AddCommand` with the new Patient object.","lastModifiedDate":"2023-03-23"},{"lineNumber":431,"author":{"gitId":"francisyzy"},"content":"5. When `AddCommand#execute` is called, `model#addPatient` will be called to add the new Patient into the model. `AddCommand` will then return `CommandMessage` to indicate it\u0027s success.","lastModifiedDate":"2023-03-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":433,"author":{"gitId":"francisyzy"},"content":"Note that `Allergies` and `Vaccines` are optional, so the user does not need to include `--a` or `--v` if the it is not applicable.","lastModifiedDate":"2023-03-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":435,"author":{"gitId":"francisyzy"},"content":"The activity diagram below summarises the action when the patient `AddCommand` is executed.","lastModifiedDate":"2023-04-05"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":437,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/AddPatientActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":439,"author":{"gitId":"francisyzy"},"content":"Given below is an sequence diagram that illustrates the **Adding a Patient** parsing mechanism behaves at every step.","lastModifiedDate":"2023-04-08"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":441,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/AddPatientParsingSequenceDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":444,"author":{"gitId":"francisyzy"},"content":"*Patient parsing detail here:*","lastModifiedDate":"2023-04-08"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":446,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/AddPatientParseActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":448,"author":{"gitId":"francisyzy"},"content":"#### Detailing Patients","lastModifiedDate":"2023-04-05"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":450,"author":{"gitId":"francisyzy"},"content":"The **Detailing Patients** mechanism is facilitated by `VMS`. It will update the UI with the Patient requested.","lastModifiedDate":"2023-04-05"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":452,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-04-05"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":454,"author":{"gitId":"francisyzy"},"content":"Given below is an example usage scenario when a user enter `patient detail 1` as a command.","lastModifiedDate":"2023-04-05"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":456,"author":{"gitId":"daitenshionyan"},"content":"1. The user enters the command in the `UI component`.","lastModifiedDate":"2023-04-10"},{"lineNumber":457,"author":{"gitId":"daitenshionyan"},"content":"2. It will be passed to the `Logic component`.","lastModifiedDate":"2023-04-10"},{"lineNumber":458,"author":{"gitId":"francisyzy"},"content":"3. When `DetailCommandParser` receives the information from `PatientParser`, it will invoke the `ParseUtil#parseIndex` to parse PATIENT_ID. It will throw a `ParseException` if there are no args present.","lastModifiedDate":"2023-04-05"},{"lineNumber":459,"author":{"gitId":"daitenshionyan"},"content":"4. After successfully parsing the args, `FindCommandParser` will create an `DetailCommand` with the parsed index.","lastModifiedDate":"2023-04-10"},{"lineNumber":460,"author":{"gitId":"francisyzy"},"content":"5. When `DetailCommand#execute` is called, `model#setDetailedPatient` will be called to update the ui to display the Patient requested.","lastModifiedDate":"2023-04-05"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":462,"author":{"gitId":"francisyzy"},"content":"The activity diagram below summarises the action when the patient `DetailCommand` is executed.","lastModifiedDate":"2023-04-05"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":464,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/DetailPatientActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":466,"author":{"gitId":"francisyzy"},"content":"#### Listing Patients","lastModifiedDate":"2023-03-29"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":468,"author":{"gitId":"francisyzy"},"content":"The **Listing Patients** mechanism is facilitated by `VMS`. It will list all the Patients that are stored in the `PatientManager`.","lastModifiedDate":"2023-03-22"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":470,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-03-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":472,"author":{"gitId":"francisyzy"},"content":"Given below is an example usage scenario when a user enter `patient list` as a command.","lastModifiedDate":"2023-03-23"},{"lineNumber":473,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":474,"author":{"gitId":"daitenshionyan"},"content":"1. The user enters the command in the `UI component`.","lastModifiedDate":"2023-04-10"},{"lineNumber":475,"author":{"gitId":"daitenshionyan"},"content":"2. It will be passed to the `Logic component`.","lastModifiedDate":"2023-04-10"},{"lineNumber":476,"author":{"gitId":"francisyzy"},"content":"3. `PatientParser` will invoke `ListCommandParser`, which will create `ListCommand` directly as they do not use any args.","lastModifiedDate":"2023-03-29"},{"lineNumber":477,"author":{"gitId":"francisyzy"},"content":"4. When `ListCommand#execute` is called, `model#updateFilteredPatientList` will be called to update the list with the `PREDICATE_SHOW_ALL_PATIENTS` to display all Patients.","lastModifiedDate":"2023-03-23"},{"lineNumber":478,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":479,"author":{"gitId":"francisyzy"},"content":"The activity diagram below summarises the action when the patient `ListCommand` is executed.","lastModifiedDate":"2023-04-05"},{"lineNumber":480,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":481,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/ListPatientActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":482,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":483,"author":{"gitId":"francisyzy"},"content":"#### Finding a Patient","lastModifiedDate":"2023-03-29"},{"lineNumber":484,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":485,"author":{"gitId":"francisyzy"},"content":"The **Finding a Patient** mechanism is facilitated by `VMS`. It will find specific list of Patient objects from `PatientManager` inside `VMS` object with the keywords provided.","lastModifiedDate":"2023-03-22"},{"lineNumber":486,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":487,"author":{"gitId":"francisyzy"},"content":"The user can choose to add flags when searching, to search for the specific attributes of a Patient. If no flags are present, the mechanism will assume that it is searching the Patient\u0027s name.","lastModifiedDate":"2023-03-26"},{"lineNumber":488,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":489,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-03-23"},{"lineNumber":490,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":491,"author":{"gitId":"francisyzy"},"content":"Given below is an example usage scenario when a user enter `patient find --n John Deer --p 98765431 --d 2001-03-19 --b B+ --a catfur --v covax` as a command.","lastModifiedDate":"2023-03-29"},{"lineNumber":492,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":493,"author":{"gitId":"francisyzy"},"content":"1. The user enters the command in the `UI component`","lastModifiedDate":"2023-03-26"},{"lineNumber":494,"author":{"gitId":"francisyzy"},"content":"2. It will be passed to the `Logic component`","lastModifiedDate":"2023-03-26"},{"lineNumber":495,"author":{"gitId":"francisyzy"},"content":"3. When `FindCommandParser` receives the information from `PatientParser`, it will invoke the following methods to help with the parsing. It will throw a `ParseException` if there are no args present.","lastModifiedDate":"2023-03-29"},{"lineNumber":496,"author":{"gitId":"francisyzy"},"content":"    1. `ParserUtil#parseName` will be called to create a Name object using \"John Doe\".","lastModifiedDate":"2023-03-26"},{"lineNumber":497,"author":{"gitId":"francisyzy"},"content":"    2. `ParserUtil#parsePhone` will be called to create a Phone object using \"98765432\".","lastModifiedDate":"2023-03-26"},{"lineNumber":498,"author":{"gitId":"francisyzy"},"content":"    3. `ParserUtil#parseDob` will be called to create a Dob object using \"2001-03-19\".","lastModifiedDate":"2023-03-26"},{"lineNumber":499,"author":{"gitId":"francisyzy"},"content":"    4. `ParserUtil#parseBloodType` will be called to create a BloodType object using \"B+\".","lastModifiedDate":"2023-03-26"},{"lineNumber":500,"author":{"gitId":"francisyzy"},"content":"    5. `ParserUtil#parseGroups` will be called to create GroupName[] object named allergies using [\"catfur\", \"pollen\"].","lastModifiedDate":"2023-03-26"},{"lineNumber":501,"author":{"gitId":"francisyzy"},"content":"    6. `ParserUtil#parseGroups` will be called to create GroupName[] object named vaccines using [\"covax\"].","lastModifiedDate":"2023-03-26"},{"lineNumber":502,"author":{"gitId":"francisyzy"},"content":"4. After successfully parsing the args, the following will happen","lastModifiedDate":"2023-03-26"},{"lineNumber":503,"author":{"gitId":"francisyzy"},"content":"    1. `FindCommandParser` will create an FindPatientDescriptor using the new Name, Phone, Dob, BloodType, Allergies `\u003cGroupName\u003e`, Vaccines `\u003cGroupName\u003e`.","lastModifiedDate":"2023-03-29"},{"lineNumber":504,"author":{"gitId":"francisyzy"},"content":"    1a. If none of the flags are present, it will take the entire arg as a `setNameSearch`.","lastModifiedDate":"2023-03-26"},{"lineNumber":505,"author":{"gitId":"francisyzy"},"content":"    2. Then it will create an `FindCommand` with the new FindPatientDescriptor object.","lastModifiedDate":"2023-03-26"},{"lineNumber":506,"author":{"gitId":"francisyzy"},"content":"5. When `FindCommand#execute` is called, the following will happen.","lastModifiedDate":"2023-03-26"},{"lineNumber":507,"author":{"gitId":"francisyzy"},"content":"    1. It will check if the different attributes of FindPatientDescriptor is present.","lastModifiedDate":"2023-03-26"},{"lineNumber":508,"author":{"gitId":"francisyzy"},"content":"    2. It will find the patient by creating different `Optional\u003cAttributePredicate\u003e`.","lastModifiedDate":"2023-03-26"},{"lineNumber":509,"author":{"gitId":"francisyzy"},"content":"    3. The different predicates will be added into a `List\u003cPredicate\u003cPatient\u003e\u003e` and passed to `model#setPatientFilters` to display the filtered Patients.","lastModifiedDate":"2023-03-26"},{"lineNumber":510,"author":{"gitId":"francisyzy"},"content":"    4. `FindCommand` will then return `CommandMessage` to indicate it\u0027s success and the number of patients found.","lastModifiedDate":"2023-03-26"},{"lineNumber":511,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":512,"author":{"gitId":"francisyzy"},"content":"The activity diagram below summarises the action when the patient `FindCommand` is executed.","lastModifiedDate":"2023-04-05"},{"lineNumber":513,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":514,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/FindPatientActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":515,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":516,"author":{"gitId":"francisyzy"},"content":"`FindCommandParser#parse` will call `String#trim` to trim the search request. If there is no additional flags, it will fall back to the default of using the search term to find Names.","lastModifiedDate":"2023-03-21"},{"lineNumber":517,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":518,"author":{"gitId":"francisyzy"},"content":"#### Editing a Patient","lastModifiedDate":"2023-03-29"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":520,"author":{"gitId":"francisyzy"},"content":"The **Editing a Patient** mechanism is facilitated by `VMS`. It will read and modify a target Patient object from `PatientManger` inside `VMS` object.","lastModifiedDate":"2023-03-22"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":522,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-03-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":524,"author":{"gitId":"francisyzy"},"content":"Given below is an example usage scenario when a user enter `patient edit 5 --n John Deer --p 98765431 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax` as a command.","lastModifiedDate":"2023-03-29"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":526,"author":{"gitId":"francisyzy"},"content":"1. The user enters the command in the `UI component`","lastModifiedDate":"2023-03-23"},{"lineNumber":527,"author":{"gitId":"francisyzy"},"content":"2. It will be passed to the `Logic component`","lastModifiedDate":"2023-03-23"},{"lineNumber":528,"author":{"gitId":"francisyzy"},"content":"3. When `EditCommandParser` receives the information from `PatientParser`, it will invoke the following methods to help with the parsing. It will short circuit and throw a `ParseException` if 1. is not fulfilled.","lastModifiedDate":"2023-03-29"},{"lineNumber":529,"author":{"gitId":"francisyzy"},"content":"    1. `ParserUtil#parseIndex` will be called to create a Index object using \"5\".","lastModifiedDate":"2023-03-23"},{"lineNumber":530,"author":{"gitId":"francisyzy"},"content":"    2. `ParserUtil#parseName` will be called to create a Name object using \"John Doe\".","lastModifiedDate":"2023-03-23"},{"lineNumber":531,"author":{"gitId":"francisyzy"},"content":"    3. `ParserUtil#parsePhone` will be called to create a Phone object using \"98765432\".","lastModifiedDate":"2023-03-23"},{"lineNumber":532,"author":{"gitId":"francisyzy"},"content":"    4. `ParserUtil#parseDob` will be called to create a Dob object using \"2001-03-19\".","lastModifiedDate":"2023-03-23"},{"lineNumber":533,"author":{"gitId":"francisyzy"},"content":"    5. `ParserUtil#parseBloodType` will be called to create a BloodType object using \"B+\".","lastModifiedDate":"2023-03-23"},{"lineNumber":534,"author":{"gitId":"francisyzy"},"content":"    6. `ParserUtil#parseGroups` will be called to create GroupName[] object named allergies using [\"catfur\", \"pollen\"].","lastModifiedDate":"2023-03-23"},{"lineNumber":535,"author":{"gitId":"francisyzy"},"content":"    7. `ParserUtil#parseGroups` will be called to create GroupName[] object named vaccines using [\"covax\"].","lastModifiedDate":"2023-03-23"},{"lineNumber":536,"author":{"gitId":"daitenshionyan"},"content":"4. After successfully parsing the args, `EditCommandParser` will create an editPatientDescriptor using the new Name, Phone, Dob, BloodType, Allergies `\u003cGroupName\u003e`, Vaccines `\u003cGroupName\u003e`. Then it will create an `EditCommand` with the new editPatientDescriptor object with the index.","lastModifiedDate":"2023-03-28"},{"lineNumber":537,"author":{"gitId":"francisyzy"},"content":"5. When `EditCommand#execute` is called, the following will happen.","lastModifiedDate":"2023-03-23"},{"lineNumber":538,"author":{"gitId":"francisyzy"},"content":"    1. It will ensure that the Index given is within the list, else it will throw a CommandException","lastModifiedDate":"2023-03-29"},{"lineNumber":539,"author":{"gitId":"francisyzy"},"content":"    2. It will edit the patient by creating a new patient with the new values from the Parser as Patients are Immutable","lastModifiedDate":"2023-03-29"},{"lineNumber":540,"author":{"gitId":"francisyzy"},"content":"    3. Then `model#setPatient` will be called to add the new Patient into the model.","lastModifiedDate":"2023-03-23"},{"lineNumber":541,"author":{"gitId":"francisyzy"},"content":"    4. `EditCommand` will then return `CommandMessage` to indicate it\u0027s success.","lastModifiedDate":"2023-03-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":543,"author":{"gitId":"francisyzy"},"content":"The activity diagram below summarises the action when the patient `EditCommand` is executed.","lastModifiedDate":"2023-04-05"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":545,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/EditPatientActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":547,"author":{"gitId":"francisyzy"},"content":"#### Deleting a Patient","lastModifiedDate":"2023-03-29"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":549,"author":{"gitId":"francisyzy"},"content":"The **Deleting a Patients** mechanism is facilitated by `VMS`. It will delete specific Patient objects from `PatientManager` inside `VMS` object with using the index provided.","lastModifiedDate":"2023-03-26"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":551,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-03-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":553,"author":{"gitId":"francisyzy"},"content":"Given below is an example usage scenario when a user enter `patient delete 5` as a command.","lastModifiedDate":"2023-03-26"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":555,"author":{"gitId":"francisyzy"},"content":"1. The user enters the command in the `UI component`","lastModifiedDate":"2023-04-05"},{"lineNumber":556,"author":{"gitId":"francisyzy"},"content":"2. It will be passed to the `Logic component`","lastModifiedDate":"2023-04-05"},{"lineNumber":557,"author":{"gitId":"francisyzy"},"content":"3. When `DeleteCommandParser` receives the information from `PatientParser`, it will invoke the `ParseUtil#parseIndex` to parse PATIENT_ID. It will throw a `ParseException` if there are no args present.","lastModifiedDate":"2023-04-05"},{"lineNumber":558,"author":{"gitId":"francisyzy"},"content":"4. After successfully parsing the args, `FindCommandParser` will create an `DeleteCommand` with the parsed index","lastModifiedDate":"2023-04-05"},{"lineNumber":559,"author":{"gitId":"francisyzy"},"content":"5. When `DeleteCommand#execute` is called, `model#setDeletedPatient` will be called to update the ui to display the Patient requested.","lastModifiedDate":"2023-04-05"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":561,"author":{"gitId":"francisyzy"},"content":"The activity diagram below summarises the action when the patient `DeleteCommand` is executed.","lastModifiedDate":"2023-04-05"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":563,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/DeletePatientActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":565,"author":{"gitId":"francisyzy"},"content":"#### Clearing Patients","lastModifiedDate":"2023-03-29"},{"lineNumber":566,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":567,"author":{"gitId":"francisyzy"},"content":"The **Clearing Patients** mechanism is facilitated by `VMS`. It will set the patient manager with a new empty patient manager, effectively clearing all the Patients","lastModifiedDate":"2023-03-26"},{"lineNumber":568,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":569,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-03-26"},{"lineNumber":570,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":571,"author":{"gitId":"francisyzy"},"content":"Given below is an example usage scenario when a user enter `patient clear` as a command.","lastModifiedDate":"2023-03-26"},{"lineNumber":572,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":573,"author":{"gitId":"daitenshionyan"},"content":"1. The user enters the command in the `UI component`.","lastModifiedDate":"2023-04-10"},{"lineNumber":574,"author":{"gitId":"daitenshionyan"},"content":"2. It will be passed to the `Logic component`.","lastModifiedDate":"2023-04-10"},{"lineNumber":575,"author":{"gitId":"francisyzy"},"content":"3. `PatientParser` will invoke `ClearCommand` which will create `ClearCommand` as they do not use any args.","lastModifiedDate":"2023-03-29"},{"lineNumber":576,"author":{"gitId":"francisyzy"},"content":"4. When `ClearCommand#execute` is called, `model#setPatientManager` will be called to update the list a new PatientManger() with no patients.","lastModifiedDate":"2023-03-26"},{"lineNumber":577,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":578,"author":{"gitId":"francisyzy"},"content":"The activity diagram below summarises the action when the patient `ClearCommand` is executed.","lastModifiedDate":"2023-04-05"},{"lineNumber":579,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":580,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/patient/dg/ClearPatientActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":581,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":582,"author":{"gitId":"francisyzy"},"content":"### Keyword","lastModifiedDate":"2023-03-29"},{"lineNumber":583,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":584,"author":{"gitId":"francisyzy"},"content":"#### Adding a Keyword","lastModifiedDate":"2023-03-29"},{"lineNumber":585,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":586,"author":{"gitId":"slackernoob"},"content":"The **Keyword Adding** mechanism is facilitated by `VMS`. The Keyword created is stored inside `KeywordManager` object.","lastModifiedDate":"2023-04-09"},{"lineNumber":587,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":588,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-03-29"},{"lineNumber":589,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":590,"author":{"gitId":"slackernoob"},"content":"Given below is an example usage scenario when a user enters `keyword add --k patient --n p` as a command.","lastModifiedDate":"2023-04-09"},{"lineNumber":591,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":592,"author":{"gitId":"slackernoob"},"content":"1. The user enters the command in the `UI Component`.","lastModifiedDate":"2023-04-09"},{"lineNumber":593,"author":{"gitId":"slackernoob"},"content":"2. It will be passed to the `Logic component`.","lastModifiedDate":"2023-04-09"},{"lineNumber":594,"author":{"gitId":"slackernoob"},"content":"3. When `AddCommandParser` receives the information from `KeywordParser`, it will invoke the following methods for parsing.","lastModifiedDate":"2023-04-09"},{"lineNumber":595,"author":{"gitId":"slackernoob"},"content":"   1. `ParserUtil#parseMainKeyword` will be called to create a String object using `patient`.","lastModifiedDate":"2023-04-09"},{"lineNumber":596,"author":{"gitId":"slackernoob"},"content":"   2. `ParserUtil#parseKeyword` will be called to create a String object using `p`.","lastModifiedDate":"2023-04-09"},{"lineNumber":597,"author":{"gitId":"slackernoob"},"content":"4. After successfully parsing the args, `AddCommandParser` will create a Keyword using the new `patient` and `p`","lastModifiedDate":"2023-04-09"},{"lineNumber":598,"author":{"gitId":"slackernoob"},"content":"strings created.","lastModifiedDate":"2023-04-09"},{"lineNumber":599,"author":{"gitId":"slackernoob"},"content":"5. When `AddCommand#execute` is called, `model#addKeyword` will be called to add the new Keyword into the model.","lastModifiedDate":"2023-04-09"},{"lineNumber":600,"author":{"gitId":"slackernoob"},"content":"`AddCommand` will then return `CommandMessage` to indicate it\u0027s success.","lastModifiedDate":"2023-04-09"},{"lineNumber":601,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":602,"author":{"gitId":"slackernoob"},"content":"Note that `MainKeyword` and `Keyword` are required args, hence the user must include `--k` and `--n` in the command.","lastModifiedDate":"2023-04-09"},{"lineNumber":603,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":604,"author":{"gitId":"slackernoob"},"content":"The activity diagram below summarises the action when the keyword `AddCommand` is executed.","lastModifiedDate":"2023-04-09"},{"lineNumber":605,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":606,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/keyword/AddKeywordActivityDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":607,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":608,"author":{"gitId":"slackernoob"},"content":"Given below is a sequence diagram that illustrates the **Keyword Adding** parsing mechanism at every step.","lastModifiedDate":"2023-04-09"},{"lineNumber":609,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":610,"author":{"gitId":"slackernoob"},"content":"\u003cimg src\u003d\"images/keyword/AddKeywordSequenceDiagram.png\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":611,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":612,"author":{"gitId":"slackernoob"},"content":"*Keyword parsing detail here:*","lastModifiedDate":"2023-04-09"},{"lineNumber":613,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":614,"author":{"gitId":"slackernoob"},"content":"\u003cimg src\u003d\"images/keyword/AddKeywordParseActivityDiagram.png\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":615,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":616,"author":{"gitId":"slackernoob"},"content":"#### Deleting a Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":617,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":618,"author":{"gitId":"slackernoob"},"content":"The **Keyword Delete** mechanism is facilitated by `VMS`. It will delete specific Keyword objects from `KeywordManager`","lastModifiedDate":"2023-04-09"},{"lineNumber":619,"author":{"gitId":"slackernoob"},"content":"inside `VMS` object using the string provided.","lastModifiedDate":"2023-04-09"},{"lineNumber":620,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":621,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":622,"author":{"gitId":"francisyzy"},"content":"##### Execution Sequence","lastModifiedDate":"2023-03-29"},{"lineNumber":623,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":624,"author":{"gitId":"slackernoob"},"content":"Given below is an example usage scenario when a user enters `keyword delete p` as a command.","lastModifiedDate":"2023-04-09"},{"lineNumber":625,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":626,"author":{"gitId":"slackernoob"},"content":"1. The user enters the command in the `UI Component`.","lastModifiedDate":"2023-04-09"},{"lineNumber":627,"author":{"gitId":"slackernoob"},"content":"2. It will be passed to the `Logic component`.","lastModifiedDate":"2023-04-09"},{"lineNumber":628,"author":{"gitId":"slackernoob"},"content":"3. When `DeleteCommandParser` receives the information from `KeywordParser`, it will invoke the","lastModifiedDate":"2023-04-09"},{"lineNumber":629,"author":{"gitId":"slackernoob"},"content":"`ParserUtil#parseDeleteKeyword` to parse the string `p` provided. It will throw a `ParseException` if there are no","lastModifiedDate":"2023-04-09"},{"lineNumber":630,"author":{"gitId":"slackernoob"},"content":"args present.","lastModifiedDate":"2023-04-09"},{"lineNumber":631,"author":{"gitId":"slackernoob"},"content":"4. After successfully parsing the arg, `DeleteCommandParser` will create a `DeleteCommand` with the parsed `p` string.","lastModifiedDate":"2023-04-09"},{"lineNumber":632,"author":{"gitId":"slackernoob"},"content":"5. When `DeleteCommand#execute` is called, `model#deleteKeyword` will be called to delete the specified Keyword from","lastModifiedDate":"2023-04-09"},{"lineNumber":633,"author":{"gitId":"slackernoob"},"content":"the model. `DeleteCommand` will then return `CommandMessage` to indicate it\u0027s success.","lastModifiedDate":"2023-04-09"},{"lineNumber":634,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":635,"author":{"gitId":"slackernoob"},"content":"The activity diagram below summarises the action when the keyword `DeleteCommand` is executed.","lastModifiedDate":"2023-04-09"},{"lineNumber":636,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":637,"author":{"gitId":"slackernoob"},"content":"\u003cimg src\u003d\"images/keyword/DeleteKeywordActivityDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":639,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":644,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":645,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":646,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":647,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"daitenshionyan"},"content":"* a receptionist of small size private clinics in charge of managing vaccination appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":658,"author":{"gitId":"daitenshionyan"},"content":"* prefer desktop apps over other types.","lastModifiedDate":"2023-04-08"},{"lineNumber":659,"author":{"gitId":"daitenshionyan"},"content":"* can type fast.","lastModifiedDate":"2023-04-08"},{"lineNumber":660,"author":{"gitId":"daitenshionyan"},"content":"* prefers typing to mouse interactions.","lastModifiedDate":"2023-04-08"},{"lineNumber":661,"author":{"gitId":"daitenshionyan"},"content":"* is reasonably comfortable using CLI apps for speed and efficiency.","lastModifiedDate":"2023-04-08"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":663,"author":{"gitId":"daitenshionyan"},"content":"**Value proposition**: Application will","lastModifiedDate":"2023-04-08"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"daitenshionyan"},"content":"* Validate the eligibility of patients to take vaccinations faster than manual means.","lastModifiedDate":"2023-04-08"},{"lineNumber":666,"author":{"gitId":"daitenshionyan"},"content":"* Manage patients.","lastModifiedDate":"2023-04-08"},{"lineNumber":667,"author":{"gitId":"daitenshionyan"},"content":"* Manage vaccinations.","lastModifiedDate":"2023-04-08"},{"lineNumber":668,"author":{"gitId":"daitenshionyan"},"content":"* Manage appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":669,"author":{"gitId":"daitenshionyan"},"content":"* All of which faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-04-08"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"| Priority | As a …​        | I want to …​                                             | So that I can …​                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"daitenshionyan"},"content":"| -------- | -------------- | -------------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2023-04-08"},{"lineNumber":677,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | get the patient\u0027s contact easily                         | contact them when needed.                                              |","lastModifiedDate":"2023-04-08"},{"lineNumber":678,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | be able to key in people with the same name              | save the data of people with the same name                             |","lastModifiedDate":"2023-04-08"},{"lineNumber":679,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | view patient details                                     | recall the details of a patient                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":680,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | add a patient                                            |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":681,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | update a patient                                         |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":682,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | delete a patient                                         |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":683,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | view appointment details                                 | recall the details of an appointment                                   |","lastModifiedDate":"2023-04-08"},{"lineNumber":684,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | add an appointment                                       |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":685,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | delete an appointment                                    |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":686,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | update an appointment                                    |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":687,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | view upcoming appointments                               | so that I know what appointments are coming soon                       |","lastModifiedDate":"2023-04-08"},{"lineNumber":688,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | view vaccination details                                 | recall the details of a vaccination type                               |","lastModifiedDate":"2023-04-08"},{"lineNumber":689,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | add a vaccination                                        |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":690,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | delete a vaccination                                     |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":691,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | update a vaccination                                     |                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":692,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | User           | check the eligibility of a patient to take a vaccination | verify if I can schedule the appointment that the patient requested    |","lastModifiedDate":"2023-04-08"},{"lineNumber":693,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | Forgetful user | view the guide page of the application                   | understand of the parts of the application that I have forgotten works |","lastModifiedDate":"2023-04-08"},{"lineNumber":694,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | Forgetful user | see the syntax of commands                               | know how to use the command                                            |","lastModifiedDate":"2023-04-08"},{"lineNumber":695,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | New user       | see the app populated with sample data                   | use it as a tutorial for how the app will work                         |","lastModifiedDate":"2023-04-08"},{"lineNumber":696,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | New User       | purge all the current data                               | get rid of sample data                                                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":697,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | User           | generate patient numbers                                 | uniquely identify a patient by their patient number                    |","lastModifiedDate":"2023-04-08"},{"lineNumber":698,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | User           | generate appointment numbers                             | uniquely identify an appointment by its appointment number             |","lastModifiedDate":"2023-04-08"},{"lineNumber":699,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | User           | find patients                                            | view details about the patient I am looking for faster                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":700,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | User           | list all patients                                        | clear my find filters for patients                                     |","lastModifiedDate":"2023-04-08"},{"lineNumber":701,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | User           | find vaccinations                                        | view details about the vaccination I am looking for faster             |","lastModifiedDate":"2023-04-08"},{"lineNumber":702,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | User           | list all vaccinations                                    | clear my find filters for vaccinations                                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":703,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | User           | find appointments                                        | view details about the appointment I am looking for faster             |","lastModifiedDate":"2023-04-08"},{"lineNumber":704,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | User           | list all appointments                                    | clear my find filters for appointments                                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":705,"author":{"gitId":"francisyzy"},"content":"| `*`      | Forgetful user | see what commands there are                              | know what commands I can use                                           |","lastModifiedDate":"2023-02-20"},{"lineNumber":706,"author":{"gitId":"daitenshionyan"},"content":"| `*`      | User           | check what is the next free appointment slot             | choose the best time for the patient quicker                           |","lastModifiedDate":"2023-04-08"},{"lineNumber":707,"author":{"gitId":"daitenshionyan"},"content":"| `*`      | User           | undo my latest action                                    | undo my mistakes                                                       |","lastModifiedDate":"2023-04-08"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"daitenshionyan"},"content":"For all use cases below, the **System** is the `VMS` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-03-07"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"slackernoob"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-23"},{"lineNumber":714,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":715,"author":{"gitId":"daitenshionyan"},"content":"#### UC-PAT-001 - Add patient","lastModifiedDate":"2023-03-07"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"francisyzy"},"content":"1. User enters command to add a patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":720,"author":{"gitId":"francisyzy"},"content":"2. VMS adds the patient.","lastModifiedDate":"2023-02-20"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":722,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":723,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":724,"author":{"gitId":"francisyzy"},"content":"##### Extensions","lastModifiedDate":"2023-04-08"},{"lineNumber":725,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":726,"author":{"gitId":"francisyzy"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":727,"author":{"gitId":"francisyzy"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":728,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":729,"author":{"gitId":"francisyzy"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-04-08"},{"lineNumber":730,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":731,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":732,"author":{"gitId":"francisyzy"},"content":"#### UC-PAT-002 - Detail patient","lastModifiedDate":"2023-04-08"},{"lineNumber":733,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":734,"author":{"gitId":"francisyzy"},"content":"##### MSS","lastModifiedDate":"2023-04-08"},{"lineNumber":735,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":736,"author":{"gitId":"francisyzy"},"content":"1. User enters command to view details of a patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":737,"author":{"gitId":"francisyzy"},"content":"2. VMS shows the details of the patient requested.","lastModifiedDate":"2023-04-08"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":739,"author":{"gitId":"francisyzy"},"content":"  Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":740,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":741,"author":{"gitId":"francisyzy"},"content":"##### Extensions","lastModifiedDate":"2023-04-08"},{"lineNumber":742,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":743,"author":{"gitId":"francisyzy"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":744,"author":{"gitId":"francisyzy"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":745,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":746,"author":{"gitId":"francisyzy"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-04-08"},{"lineNumber":747,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":748,"author":{"gitId":"francisyzy"},"content":"* 1b. User requested to detail a patient that does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":749,"author":{"gitId":"francisyzy"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":751,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":753,"author":{"gitId":"francisyzy"},"content":"#### UC-PAT-003 - List patients","lastModifiedDate":"2023-04-08"},{"lineNumber":754,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":755,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":757,"author":{"gitId":"francisyzy"},"content":"1. User enters command to list patients.","lastModifiedDate":"2023-04-08"},{"lineNumber":758,"author":{"gitId":"francisyzy"},"content":"2. VMS shows the list of patients with their corresponding IDs.","lastModifiedDate":"2023-04-08"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":760,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":762,"author":{"gitId":"francisyzy"},"content":"#### UC-PAT-004 - Find patients","lastModifiedDate":"2023-04-08"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":764,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":766,"author":{"gitId":"francisyzy"},"content":"1. User enter command to find patients.","lastModifiedDate":"2023-04-08"},{"lineNumber":767,"author":{"gitId":"francisyzy"},"content":"2. VMS shows the list of matched patients with their corresponding IDs.","lastModifiedDate":"2023-04-08"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":769,"author":{"gitId":"francisyzy"},"content":"  Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":771,"author":{"gitId":"francisyzy"},"content":"##### Extensions","lastModifiedDate":"2023-04-08"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":773,"author":{"gitId":"francisyzy"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":774,"author":{"gitId":"francisyzy"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":776,"author":{"gitId":"francisyzy"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-04-08"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":778,"author":{"gitId":"francisyzy"},"content":"#### UC-PAT-005 - Edit patient","lastModifiedDate":"2023-04-08"},{"lineNumber":779,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":780,"author":{"gitId":"francisyzy"},"content":"##### MSS","lastModifiedDate":"2023-04-08"},{"lineNumber":781,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":782,"author":{"gitId":"francisyzy"},"content":"1. User enters command to edit a specific patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":783,"author":{"gitId":"francisyzy"},"content":"2. VMS edits the patients","lastModifiedDate":"2023-04-08"},{"lineNumber":784,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":785,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":786,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":787,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":788,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":789,"author":{"gitId":"francisyzy"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":790,"author":{"gitId":"francisyzy"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":791,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":792,"author":{"gitId":"francisyzy"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-04-08"},{"lineNumber":793,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":794,"author":{"gitId":"francisyzy"},"content":"* 1b. User requested to edit a patient that does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":795,"author":{"gitId":"francisyzy"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":796,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":797,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":798,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":799,"author":{"gitId":"francisyzy"},"content":"#### UC-PAT-006 - Delete patient","lastModifiedDate":"2023-04-08"},{"lineNumber":800,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":801,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":802,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":803,"author":{"gitId":"francisyzy"},"content":"1. User requests to delete a specific patient in the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":804,"author":{"gitId":"francisyzy"},"content":"2. VMS deletes the patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":805,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":806,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":807,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":808,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":809,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":810,"author":{"gitId":"francisyzy"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":811,"author":{"gitId":"francisyzy"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":812,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":813,"author":{"gitId":"francisyzy"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-04-08"},{"lineNumber":814,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":815,"author":{"gitId":"francisyzy"},"content":"* 1b. User requested to delete a patient that does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":816,"author":{"gitId":"francisyzy"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":817,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":818,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":819,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":820,"author":{"gitId":"francisyzy"},"content":"* 1c. VMS detects that some appointments will become invalid after deletion.","lastModifiedDate":"2023-04-08"},{"lineNumber":821,"author":{"gitId":"francisyzy"},"content":"  * 1c1. VMS requests user to force the change.","lastModifiedDate":"2023-04-08"},{"lineNumber":822,"author":{"gitId":"francisyzy"},"content":"  * 1c2. User enters command to force the change.","lastModifiedDate":"2023-04-08"},{"lineNumber":823,"author":{"gitId":"francisyzy"},"content":"  * 1c3. VMS deletes the patient and all invalid appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":824,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":825,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":826,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":827,"author":{"gitId":"francisyzy"},"content":"#### UC-PAT-007 - Clear patients","lastModifiedDate":"2023-04-08"},{"lineNumber":828,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":829,"author":{"gitId":"francisyzy"},"content":"##### MSS","lastModifiedDate":"2023-04-08"},{"lineNumber":830,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":831,"author":{"gitId":"francisyzy"},"content":"1. User requests to list patients.","lastModifiedDate":"2023-04-08"},{"lineNumber":832,"author":{"gitId":"francisyzy"},"content":"2. VMS shows the list of patients with their corresponding IDs.","lastModifiedDate":"2023-04-08"},{"lineNumber":833,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":834,"author":{"gitId":"francisyzy"},"content":"  Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":837,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":839,"author":{"gitId":"daitenshionyan"},"content":"#### UC-APT-001 - Add appointment","lastModifiedDate":"2023-03-07"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":841,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":843,"author":{"gitId":"francisyzy"},"content":"1. User request to add an appointment.","lastModifiedDate":"2023-02-20"},{"lineNumber":844,"author":{"gitId":"francisyzy"},"content":"2. User enters the start and end timing of the appointment, and the associated patient.","lastModifiedDate":"2023-02-20"},{"lineNumber":845,"author":{"gitId":"francisyzy"},"content":"3. VMS adds the appointment.","lastModifiedDate":"2023-02-20"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":847,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":849,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":851,"author":{"gitId":"francisyzy"},"content":"* 2a. timing format or patient ID is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":852,"author":{"gitId":"francisyzy"},"content":"  * 2a1. VMS shows an error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":854,"author":{"gitId":"francisyzy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":856,"author":{"gitId":"nusE0726844"},"content":"#### UC-APT-002 - List appointments","lastModifiedDate":"2023-04-09"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":858,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":860,"author":{"gitId":"francisyzy"},"content":"1. User requests to list appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":861,"author":{"gitId":"francisyzy"},"content":"2. VMS shows a list of appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":863,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":865,"author":{"gitId":"francisyzy"},"content":"#### UC-APT-003 - Edit appointment","lastModifiedDate":"2023-04-08"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":867,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":869,"author":{"gitId":"nusE0726844"},"content":"1. User enters command to edit an appointment.","lastModifiedDate":"2023-04-09"},{"lineNumber":870,"author":{"gitId":"nusE0726844"},"content":"2. VMS edits the appointment.","lastModifiedDate":"2023-04-09"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":872,"author":{"gitId":"francisyzy"},"content":"   Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":874,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":876,"author":{"gitId":"nusE0726844"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-09"},{"lineNumber":877,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":879,"author":{"gitId":"nusE0726844"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":881,"author":{"gitId":"nusE0726844"},"content":"* 1b. User requested to edit an appointment that does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":882,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":884,"author":{"gitId":"nusE0726844"},"content":"      Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":886,"author":{"gitId":"daitenshionyan"},"content":"#### UC-APT-004 - Delete appointment","lastModifiedDate":"2023-03-07"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":888,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":890,"author":{"gitId":"nusE0726844"},"content":"1. User enters command to delete an appointment.","lastModifiedDate":"2023-04-09"},{"lineNumber":891,"author":{"gitId":"nusE0726844"},"content":"2. VMS deletes the appointment.","lastModifiedDate":"2023-04-09"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"nusE0726844"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-09"},{"lineNumber":898,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":899,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":900,"author":{"gitId":"nusE0726844"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":901,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":902,"author":{"gitId":"nusE0726844"},"content":"* 1b. User requested to delete an appointment that does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":903,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":904,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":905,"author":{"gitId":"nusE0726844"},"content":"      Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":906,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":907,"author":{"gitId":"nusE0726844"},"content":"#### UC-APT-005 - Find appointments","lastModifiedDate":"2023-04-09"},{"lineNumber":908,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":909,"author":{"gitId":"nusE0726844"},"content":"##### MSS","lastModifiedDate":"2023-04-09"},{"lineNumber":910,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":911,"author":{"gitId":"nusE0726844"},"content":"1. User requests to find appointments.","lastModifiedDate":"2023-04-09"},{"lineNumber":912,"author":{"gitId":"nusE0726844"},"content":"2. VMS shows a list of appointments that matches search criteria.","lastModifiedDate":"2023-04-09"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"nusE0726844"},"content":"##### Extensions","lastModifiedDate":"2023-04-09"},{"lineNumber":917,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":918,"author":{"gitId":"nusE0726844"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-04-09"},{"lineNumber":919,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS returns an empty list.","lastModifiedDate":"2023-04-09"},{"lineNumber":920,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":921,"author":{"gitId":"nusE0726844"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":922,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":923,"author":{"gitId":"nusE0726844"},"content":"* 1b. Some appointments match the search criteria.","lastModifiedDate":"2023-04-09"},{"lineNumber":924,"author":{"gitId":"nusE0726844"},"content":"    * 1b1. VMS returns the list of appointment that matches.","lastModifiedDate":"2023-04-09"},{"lineNumber":925,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":926,"author":{"gitId":"nusE0726844"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":927,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":928,"author":{"gitId":"nusE0726844"},"content":"* 1c. No appointment match the search criteria.","lastModifiedDate":"2023-04-09"},{"lineNumber":929,"author":{"gitId":"nusE0726844"},"content":"    * 1c1. VMS returns an empty list.","lastModifiedDate":"2023-04-09"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"francisyzy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"nusE0726844"},"content":"#### UC-APT-006 - Mark appointments","lastModifiedDate":"2023-04-09"},{"lineNumber":934,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":935,"author":{"gitId":"nusE0726844"},"content":"##### MSS","lastModifiedDate":"2023-04-09"},{"lineNumber":936,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":937,"author":{"gitId":"nusE0726844"},"content":"1. User requests to mark a specified appointment.","lastModifiedDate":"2023-04-09"},{"lineNumber":938,"author":{"gitId":"nusE0726844"},"content":"2. VMS marks the appointment.","lastModifiedDate":"2023-04-09"},{"lineNumber":939,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":940,"author":{"gitId":"nusE0726844"},"content":"   Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":941,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":942,"author":{"gitId":"nusE0726844"},"content":"##### Extensions","lastModifiedDate":"2023-04-09"},{"lineNumber":943,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":944,"author":{"gitId":"nusE0726844"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-09"},{"lineNumber":945,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":946,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":947,"author":{"gitId":"nusE0726844"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":948,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":949,"author":{"gitId":"nusE0726844"},"content":"* 1b. User requested to mark an appointment that does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":950,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":951,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":952,"author":{"gitId":"nusE0726844"},"content":"      Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":953,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":954,"author":{"gitId":"nusE0726844"},"content":"* 1b. User requested to mark an appointment that is already marked.","lastModifiedDate":"2023-04-09"},{"lineNumber":955,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. If assertion is enabled","lastModifiedDate":"2023-04-09"},{"lineNumber":956,"author":{"gitId":"nusE0726844"},"content":"        * 1a11. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":957,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":958,"author":{"gitId":"nusE0726844"},"content":"          Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":959,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":960,"author":{"gitId":"nusE0726844"},"content":"    * 1b1. If assertion is disabled","lastModifiedDate":"2023-04-09"},{"lineNumber":961,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":962,"author":{"gitId":"nusE0726844"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":963,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":964,"author":{"gitId":"nusE0726844"},"content":"#### UC-APT-007 - Unmark appointments","lastModifiedDate":"2023-04-09"},{"lineNumber":965,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":966,"author":{"gitId":"nusE0726844"},"content":"##### MSS","lastModifiedDate":"2023-04-09"},{"lineNumber":967,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":968,"author":{"gitId":"nusE0726844"},"content":"1. User requests to unmark a specified appointment.","lastModifiedDate":"2023-04-09"},{"lineNumber":969,"author":{"gitId":"nusE0726844"},"content":"2. VMS changes the status of the appointment to not completed.","lastModifiedDate":"2023-04-09"},{"lineNumber":970,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":971,"author":{"gitId":"nusE0726844"},"content":"   Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":972,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":973,"author":{"gitId":"nusE0726844"},"content":"##### Extensions","lastModifiedDate":"2023-04-09"},{"lineNumber":974,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":975,"author":{"gitId":"nusE0726844"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-09"},{"lineNumber":976,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":977,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":978,"author":{"gitId":"nusE0726844"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":979,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":980,"author":{"gitId":"nusE0726844"},"content":"* 1b. User requested to unmark an appointment that does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":981,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":982,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":983,"author":{"gitId":"nusE0726844"},"content":"      Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":984,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":985,"author":{"gitId":"nusE0726844"},"content":"* 1b. User requested to unmark an appointment that is already unmarked.","lastModifiedDate":"2023-04-09"},{"lineNumber":986,"author":{"gitId":"nusE0726844"},"content":"    * 1a1. If assertion is enabled","lastModifiedDate":"2023-04-09"},{"lineNumber":987,"author":{"gitId":"nusE0726844"},"content":"        * 1a11. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":988,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":989,"author":{"gitId":"nusE0726844"},"content":"          Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":990,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":991,"author":{"gitId":"nusE0726844"},"content":"    * 1b1. If assertion is disabled","lastModifiedDate":"2023-04-09"},{"lineNumber":992,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":993,"author":{"gitId":"nusE0726844"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":994,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":995,"author":{"gitId":"daitenshionyan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":996,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":997,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-001 - Add vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":998,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":999,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":1000,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1001,"author":{"gitId":"daitenshionyan"},"content":"1. User enters command to add a vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1002,"author":{"gitId":"daitenshionyan"},"content":"2. VMS adds the vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1003,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1004,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":1005,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1006,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":1007,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1008,"author":{"gitId":"daitenshionyan"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":1009,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1010,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1011,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":1012,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1013,"author":{"gitId":"daitenshionyan"},"content":"* 1b. User requested to add a vaccination that already exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":1014,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1015,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1016,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1017,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1018,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-002 - List vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1019,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1020,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-04-08"},{"lineNumber":1021,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1022,"author":{"gitId":"daitenshionyan"},"content":"1. User enters the command to list vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1023,"author":{"gitId":"daitenshionyan"},"content":"2. VMS lists all vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1024,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1025,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1026,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1027,"author":{"gitId":"francisyzy"},"content":"#### UC-VAC-003 - Edit vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1028,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1029,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":1030,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1031,"author":{"gitId":"francisyzy"},"content":"1. User enters command to edit a vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1032,"author":{"gitId":"francisyzy"},"content":"2. VMS edits the vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1033,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1034,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1035,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1036,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":1037,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1038,"author":{"gitId":"daitenshionyan"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":1039,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1040,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1041,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":1042,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1043,"author":{"gitId":"francisyzy"},"content":"* 1b. User requested to edit a vaccination that does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":1044,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1045,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1046,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1047,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1048,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-004 - Delete vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1049,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1050,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":1051,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1052,"author":{"gitId":"daitenshionyan"},"content":"1. User enters command to delete a vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1053,"author":{"gitId":"daitenshionyan"},"content":"2. VMS deletes the vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1054,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1055,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1056,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1057,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":1058,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1059,"author":{"gitId":"daitenshionyan"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":1060,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1061,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1062,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":1063,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1064,"author":{"gitId":"daitenshionyan"},"content":"* 1b. User requested to delete a vaccination that does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":1065,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1066,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1067,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1068,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1069,"author":{"gitId":"daitenshionyan"},"content":"* 1c. VMS detects that some appointments will become invalid after deletion.","lastModifiedDate":"2023-04-08"},{"lineNumber":1070,"author":{"gitId":"daitenshionyan"},"content":"  * 1c1. VMS requests user to force the change.","lastModifiedDate":"2023-04-08"},{"lineNumber":1071,"author":{"gitId":"daitenshionyan"},"content":"  * 1c2. User enters command to force the change.","lastModifiedDate":"2023-04-08"},{"lineNumber":1072,"author":{"gitId":"daitenshionyan"},"content":"  * 1c3. VMS deletes the vaccination and all invalid appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":1073,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1074,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1075,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1076,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-005 - Clear vaccinations","lastModifiedDate":"2023-04-08"},{"lineNumber":1077,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1078,"author":{"gitId":"daitenshionyan"},"content":"1. User enters command to clear vaccinations.","lastModifiedDate":"2023-04-08"},{"lineNumber":1079,"author":{"gitId":"daitenshionyan"},"content":"2. VMS deletes all vaccinations.","lastModifiedDate":"2023-04-08"},{"lineNumber":1080,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1081,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1082,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1083,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-04-08"},{"lineNumber":1084,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1085,"author":{"gitId":"daitenshionyan"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":1086,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1087,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1088,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":1089,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1090,"author":{"gitId":"daitenshionyan"},"content":"* 1b. VMS detects that some appointments will become invalid after clearing.","lastModifiedDate":"2023-04-08"},{"lineNumber":1091,"author":{"gitId":"daitenshionyan"},"content":"  * 1b1. VMS requests user to force the change.","lastModifiedDate":"2023-04-08"},{"lineNumber":1092,"author":{"gitId":"daitenshionyan"},"content":"  * 1b2. User enters command to force the change.","lastModifiedDate":"2023-04-08"},{"lineNumber":1093,"author":{"gitId":"daitenshionyan"},"content":"  * 1b3. VMS deletes all vaccinations and all invalid appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":1094,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1095,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1096,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1097,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-006 - Filter vaccinations","lastModifiedDate":"2023-04-08"},{"lineNumber":1098,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1099,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":1100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1101,"author":{"gitId":"daitenshionyan"},"content":"1. User enters command to filter vaccinations.","lastModifiedDate":"2023-04-08"},{"lineNumber":1102,"author":{"gitId":"daitenshionyan"},"content":"2. VMS shows only filtered vaccinations.","lastModifiedDate":"2023-04-08"},{"lineNumber":1103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1104,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1106,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":1107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1108,"author":{"gitId":"daitenshionyan"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":1109,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1111,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":1112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1113,"author":{"gitId":"daitenshionyan"},"content":"* 1b. User requested to apply no filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":1114,"author":{"gitId":"daitenshionyan"},"content":"  * 1b1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1116,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1118,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-007 - Detail a vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1119,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1120,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-04-08"},{"lineNumber":1121,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1122,"author":{"gitId":"daitenshionyan"},"content":"1. User enters command to detail a vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1123,"author":{"gitId":"daitenshionyan"},"content":"2. VMS shows details about that vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":1124,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1125,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1126,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1127,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-04-08"},{"lineNumber":1128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1129,"author":{"gitId":"daitenshionyan"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-08"},{"lineNumber":1130,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1132,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":1133,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":1134,"author":{"gitId":"daitenshionyan"},"content":"* 1b. User requested to detail a vaccination that does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":1135,"author":{"gitId":"daitenshionyan"},"content":"  * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":1136,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1137,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-04-08"},{"lineNumber":1138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1139,"author":{"gitId":"slackernoob"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-09"},{"lineNumber":1140,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1141,"author":{"gitId":"slackernoob"},"content":"#### UC-KEY-001 - Add keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1142,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1143,"author":{"gitId":"slackernoob"},"content":"##### MSS","lastModifiedDate":"2023-04-09"},{"lineNumber":1144,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1145,"author":{"gitId":"slackernoob"},"content":"1. User enters command to add a keyword.","lastModifiedDate":"2023-04-09"},{"lineNumber":1146,"author":{"gitId":"slackernoob"},"content":"2. VMS adds the keyword.","lastModifiedDate":"2023-04-09"},{"lineNumber":1147,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1148,"author":{"gitId":"slackernoob"},"content":"   Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":1149,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1150,"author":{"gitId":"slackernoob"},"content":"##### Extensions","lastModifiedDate":"2023-04-09"},{"lineNumber":1151,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1152,"author":{"gitId":"slackernoob"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-09"},{"lineNumber":1153,"author":{"gitId":"slackernoob"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":1154,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1155,"author":{"gitId":"slackernoob"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":1156,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1157,"author":{"gitId":"slackernoob"},"content":"* 1b. User requested to add a keyword that overrides a main component keyword.","lastModifiedDate":"2023-04-09"},{"lineNumber":1158,"author":{"gitId":"slackernoob"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":1159,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1160,"author":{"gitId":"slackernoob"},"content":"      Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":1161,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1162,"author":{"gitId":"slackernoob"},"content":"* 1c. User requested to add a keyword with a main keyword that is not `patient`,","lastModifiedDate":"2023-04-09"},{"lineNumber":1163,"author":{"gitId":"slackernoob"},"content":"`appointment` or `vaccination`.","lastModifiedDate":"2023-04-09"},{"lineNumber":1164,"author":{"gitId":"slackernoob"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":1165,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1166,"author":{"gitId":"slackernoob"},"content":"      Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":1167,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1168,"author":{"gitId":"slackernoob"},"content":"#### UC-KEY-002 - Delete keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1169,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1170,"author":{"gitId":"slackernoob"},"content":"##### MSS","lastModifiedDate":"2023-04-09"},{"lineNumber":1171,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1172,"author":{"gitId":"slackernoob"},"content":"1. User requests to delete a specific keyword in the list.","lastModifiedDate":"2023-04-09"},{"lineNumber":1173,"author":{"gitId":"slackernoob"},"content":"2. VMS deletes the keyword.","lastModifiedDate":"2023-04-09"},{"lineNumber":1174,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1175,"author":{"gitId":"slackernoob"},"content":"   Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":1176,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1177,"author":{"gitId":"slackernoob"},"content":"##### Extensions","lastModifiedDate":"2023-04-09"},{"lineNumber":1178,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1179,"author":{"gitId":"slackernoob"},"content":"* 1a. VMS detects error in the command entered.","lastModifiedDate":"2023-04-09"},{"lineNumber":1180,"author":{"gitId":"slackernoob"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":1181,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1182,"author":{"gitId":"slackernoob"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":1183,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1184,"author":{"gitId":"slackernoob"},"content":"* 1b. User requested to delete a keyword that does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":1185,"author":{"gitId":"slackernoob"},"content":"    * 1a1. VMS shows an error message.","lastModifiedDate":"2023-04-09"},{"lineNumber":1186,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1187,"author":{"gitId":"slackernoob"},"content":"      Use case ends.","lastModifiedDate":"2023-04-09"},{"lineNumber":1188,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1189,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1190,"author":{"gitId":"francisyzy"},"content":"### Non-Functional Requirements","lastModifiedDate":"2023-03-29"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1193,"author":{"gitId":"daitenshionyan"},"content":"2. Should be able to handle the following limits without any noticeable sluggishness in performance on typical usage:","lastModifiedDate":"2023-03-23"},{"lineNumber":1194,"author":{"gitId":"francisyzy"},"content":"   1. 1000 patients, each with a limit of:","lastModifiedDate":"2023-03-26"},{"lineNumber":1195,"author":{"gitId":"francisyzy"},"content":"      1. 100 allergies","lastModifiedDate":"2023-03-26"},{"lineNumber":1196,"author":{"gitId":"francisyzy"},"content":"      2. 30 vaccines","lastModifiedDate":"2023-03-26"},{"lineNumber":1197,"author":{"gitId":"daitenshionyan"},"content":"   2. 30 vaccination types, each with a limit of:","lastModifiedDate":"2023-03-23"},{"lineNumber":1198,"author":{"gitId":"daitenshionyan"},"content":"      1. 10 groups","lastModifiedDate":"2023-03-23"},{"lineNumber":1199,"author":{"gitId":"daitenshionyan"},"content":"      2. 30 ingredients","lastModifiedDate":"2023-03-23"},{"lineNumber":1200,"author":{"gitId":"daitenshionyan"},"content":"      3. 10 requirements","lastModifiedDate":"2023-03-28"},{"lineNumber":1201,"author":{"gitId":"daitenshionyan"},"content":"   3. 1000 appointments.","lastModifiedDate":"2023-03-23"},{"lineNumber":1202,"author":{"gitId":"daitenshionyan"},"content":"3. On top of 2, should also be able to handle these names up to 30 characters without any noticeable sluggishness in performance on typical usage:","lastModifiedDate":"2023-03-23"},{"lineNumber":1203,"author":{"gitId":"daitenshionyan"},"content":"   1. Allergy","lastModifiedDate":"2023-03-23"},{"lineNumber":1204,"author":{"gitId":"daitenshionyan"},"content":"   2. Vaccination name","lastModifiedDate":"2023-03-23"},{"lineNumber":1205,"author":{"gitId":"daitenshionyan"},"content":"   3. Vaccination group name","lastModifiedDate":"2023-03-23"},{"lineNumber":1206,"author":{"gitId":"daitenshionyan"},"content":"   4. Vaccination ingredient name","lastModifiedDate":"2023-03-23"},{"lineNumber":1207,"author":{"gitId":"daitenshionyan"},"content":"4. On top of 2, should also be able to handle requirement set of sizes up to 30.","lastModifiedDate":"2023-03-23"},{"lineNumber":1208,"author":{"gitId":"daitenshionyan"},"content":"5. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-23"},{"lineNumber":1209,"author":{"gitId":"daitenshionyan"},"content":"6. Should auto save to prevent data loss if application crashes.","lastModifiedDate":"2023-03-23"},{"lineNumber":1210,"author":{"gitId":"daitenshionyan"},"content":"7. Should save its data in a human readable file.","lastModifiedDate":"2023-04-08"},{"lineNumber":1211,"author":{"gitId":"daitenshionyan"},"content":"8. All functional features should be accessible through CLI.","lastModifiedDate":"2023-04-08"},{"lineNumber":1212,"author":{"gitId":"daitenshionyan"},"content":"9. Should work without requiring an installer.","lastModifiedDate":"2023-04-08"},{"lineNumber":1213,"author":{"gitId":"daitenshionyan"},"content":"10. Should not depend on a remote server.","lastModifiedDate":"2023-04-08"},{"lineNumber":1214,"author":{"gitId":"daitenshionyan"},"content":"11. Should not cause any resolution related inconveniences to the user for:","lastModifiedDate":"2023-04-08"},{"lineNumber":1215,"author":{"gitId":"daitenshionyan"},"content":"    1. Screen resolutions 1920x1080 and higher.","lastModifiedDate":"2023-04-08"},{"lineNumber":1216,"author":{"gitId":"daitenshionyan"},"content":"    2. Screen scales 100% and 125%.","lastModifiedDate":"2023-04-08"},{"lineNumber":1217,"author":{"gitId":"daitenshionyan"},"content":"12. Application executable JAR file should be less than 100MB.","lastModifiedDate":"2023-04-08"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1221,"author":{"gitId":"daitenshionyan"},"content":"* **Component**:","lastModifiedDate":"2023-04-09"},{"lineNumber":1222,"author":{"gitId":"daitenshionyan"},"content":"  * In the context of application usage - the main functionalities of the application:","lastModifiedDate":"2023-04-09"},{"lineNumber":1223,"author":{"gitId":"daitenshionyan"},"content":"    * Basic","lastModifiedDate":"2023-04-09"},{"lineNumber":1224,"author":{"gitId":"daitenshionyan"},"content":"    * Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1225,"author":{"gitId":"daitenshionyan"},"content":"    * Patient","lastModifiedDate":"2023-04-09"},{"lineNumber":1226,"author":{"gitId":"daitenshionyan"},"content":"    * Vaccination","lastModifiedDate":"2023-04-09"},{"lineNumber":1227,"author":{"gitId":"daitenshionyan"},"content":"    * Appointment","lastModifiedDate":"2023-04-09"},{"lineNumber":1228,"author":{"gitId":"daitenshionyan"},"content":"  * In the context of application design - the parts of the application design:","lastModifiedDate":"2023-04-09"},{"lineNumber":1229,"author":{"gitId":"daitenshionyan"},"content":"    * Main","lastModifiedDate":"2023-04-09"},{"lineNumber":1230,"author":{"gitId":"daitenshionyan"},"content":"    * Ui","lastModifiedDate":"2023-04-09"},{"lineNumber":1231,"author":{"gitId":"daitenshionyan"},"content":"    * Logic","lastModifiedDate":"2023-04-09"},{"lineNumber":1232,"author":{"gitId":"daitenshionyan"},"content":"    * Model","lastModifiedDate":"2023-04-09"},{"lineNumber":1233,"author":{"gitId":"daitenshionyan"},"content":"    * Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":1234,"author":{"gitId":"daitenshionyan"},"content":"* **DOB**: Date of birth of a patient.","lastModifiedDate":"2023-04-09"},{"lineNumber":1235,"author":{"gitId":"daitenshionyan"},"content":"* **Group** (in the context of vaccination): A group that the vaccination can be classified under.","lastModifiedDate":"2023-04-09"},{"lineNumber":1236,"author":{"gitId":"daitenshionyan"},"content":"* **History requirement** (in the context of vaccination): A set of vaccination groups that either has to be present or cannot be present in the groups that a vaccination classifies under.","lastModifiedDate":"2023-04-09"},{"lineNumber":1237,"author":{"gitId":"daitenshionyan"},"content":"* **Index**: The position of an element in a list-like structure (eg. position of a vaccination in the vaccination list panel).","lastModifiedDate":"2023-04-09"},{"lineNumber":1238,"author":{"gitId":"daitenshionyan"},"content":"* **Ingredients**: ingredients used to make the vaccination / things that the patient cannot be allergic to.","lastModifiedDate":"2023-04-09"},{"lineNumber":1239,"author":{"gitId":"daitenshionyan"},"content":"* **Keyword**: A user defined word to refer to one of the main keywords.","lastModifiedDate":"2023-04-09"},{"lineNumber":1240,"author":{"gitId":"daitenshionyan"},"content":"* **Mainkeyword**: One of these 3 that refers to the main component of VMS.","lastModifiedDate":"2023-04-09"},{"lineNumber":1241,"author":{"gitId":"daitenshionyan"},"content":"  * `patient`","lastModifiedDate":"2023-04-09"},{"lineNumber":1242,"author":{"gitId":"daitenshionyan"},"content":"  * `vaccination`","lastModifiedDate":"2023-04-09"},{"lineNumber":1243,"author":{"gitId":"daitenshionyan"},"content":"  * `appointment`","lastModifiedDate":"2023-04-09"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1245,"author":{"gitId":"daitenshionyan"},"content":"* **Patient**: A person who may receive the vaccination.","lastModifiedDate":"2023-04-09"},{"lineNumber":1246,"author":{"gitId":"daitenshionyan"},"content":"* **Patient/Appointment ID**: A unique serial number for patient/appointment.","lastModifiedDate":"2023-04-09"},{"lineNumber":1247,"author":{"gitId":"daitenshionyan"},"content":"* **VMS**: Vaccination Management System.","lastModifiedDate":"2023-04-10"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1253,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note**: These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-04-08"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1255,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1257,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1258,"author":{"gitId":"daitenshionyan"},"content":":information_source: **NOTE**: If copying and pasting commands exactly, it is important to execute them in the order instructed. If you wish to mix up the order, ID/index related arguments such as \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e will have to be changed accordingly.","lastModifiedDate":"2023-04-08"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1271,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1278,"author":{"gitId":"francisyzy"},"content":"### Adding a patient","lastModifiedDate":"2023-04-09"},{"lineNumber":1279,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1280,"author":{"gitId":"francisyzy"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":1281,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1282,"author":{"gitId":"francisyzy"},"content":"Before every test case, ensure that the patient \"John Doe\" does not exist. This can be done by executing the following before every test case:","lastModifiedDate":"2023-04-09"},{"lineNumber":1283,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1284,"author":{"gitId":"francisyzy"},"content":"`patient clear --force true`","lastModifiedDate":"2023-04-09"},{"lineNumber":1285,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1286,"author":{"gitId":"francisyzy"},"content":"#### Test: All optional parameters omitted","lastModifiedDate":"2023-04-09"},{"lineNumber":1287,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1288,"author":{"gitId":"francisyzy"},"content":"`patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1289,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1290,"author":{"gitId":"francisyzy"},"content":"##### Expected","lastModifiedDate":"2023-04-09"},{"lineNumber":1291,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1292,"author":{"gitId":"francisyzy"},"content":"![Expected display](images/patient/dg/PatientAdd_Blank.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":1293,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1294,"author":{"gitId":"francisyzy"},"content":"#### Test: Optional parameters present","lastModifiedDate":"2023-04-09"},{"lineNumber":1295,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1296,"author":{"gitId":"francisyzy"},"content":"`patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1297,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1298,"author":{"gitId":"francisyzy"},"content":"##### Expected","lastModifiedDate":"2023-04-09"},{"lineNumber":1299,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1300,"author":{"gitId":"francisyzy"},"content":"![Expected display](images/patient/dg/PatientAdd_NotBlank.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":1301,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1302,"author":{"gitId":"francisyzy"},"content":"### Patient attribute validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1303,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1304,"author":{"gitId":"francisyzy"},"content":"Before every test case, ensure that the there are no patients. This can be done by executing the following before every test case:","lastModifiedDate":"2023-04-09"},{"lineNumber":1305,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1306,"author":{"gitId":"francisyzy"},"content":"`patient clear --force true`","lastModifiedDate":"2023-04-09"},{"lineNumber":1307,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1308,"author":{"gitId":"francisyzy"},"content":"#### Test: Name validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1309,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1310,"author":{"gitId":"francisyzy"},"content":"##### Valid Name","lastModifiedDate":"2023-04-09"},{"lineNumber":1311,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1312,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1313,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John   Doe --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1314,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John   Doe2 --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1315,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1316,"author":{"gitId":"francisyzy"},"content":"##### Invalid Name {#invalid-patient-name}","lastModifiedDate":"2023-04-09"},{"lineNumber":1317,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1318,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John-Doe --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1319,"author":{"gitId":"francisyzy"},"content":"* `patient add --n    --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1320,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John D. --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1321,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John s/o Alex --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1322,"author":{"gitId":"francisyzy"},"content":"* `patient add --n --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1323,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1324,"author":{"gitId":"francisyzy"},"content":"#### Test: Phone validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1325,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1326,"author":{"gitId":"francisyzy"},"content":"##### Valid Phone","lastModifiedDate":"2023-04-09"},{"lineNumber":1327,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1328,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1329,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 999 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1330,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 12345678912345 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1331,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1332,"author":{"gitId":"francisyzy"},"content":"##### Invalid Phone","lastModifiedDate":"2023-04-09"},{"lineNumber":1333,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1334,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p +65 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1335,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 99 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1336,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 123-456 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1337,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p (123) 2345 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1338,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1339,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1340,"author":{"gitId":"francisyzy"},"content":"#### Test: Dob validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1341,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1342,"author":{"gitId":"francisyzy"},"content":"##### Valid Dob","lastModifiedDate":"2023-04-09"},{"lineNumber":1343,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1344,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1345,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 0800 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1346,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 1600 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1347,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1348,"author":{"gitId":"francisyzy"},"content":"##### Invalid Dob","lastModifiedDate":"2023-04-09"},{"lineNumber":1349,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1350,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19T2000 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1351,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-50 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1352,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2040-03-19 --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1353,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d --b B+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1354,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1355,"author":{"gitId":"francisyzy"},"content":"#### Test: Blood Type validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1356,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1357,"author":{"gitId":"francisyzy"},"content":"##### Valid Blood Type","lastModifiedDate":"2023-04-09"},{"lineNumber":1358,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1359,"author":{"gitId":"francisyzy"},"content":"*List of valid Blood Type test non exhaustive*","lastModifiedDate":"2023-04-09"},{"lineNumber":1360,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1361,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b A+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1362,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b A-`","lastModifiedDate":"2023-04-09"},{"lineNumber":1363,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b AB+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1364,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1365,"author":{"gitId":"francisyzy"},"content":"##### Invalid Blood Type","lastModifiedDate":"2023-04-09"},{"lineNumber":1366,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1367,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b C+`","lastModifiedDate":"2023-04-09"},{"lineNumber":1368,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b C*`","lastModifiedDate":"2023-04-09"},{"lineNumber":1369,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b`","lastModifiedDate":"2023-04-09"},{"lineNumber":1370,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1371,"author":{"gitId":"francisyzy"},"content":"#### Test: Group Name validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1372,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1373,"author":{"gitId":"francisyzy"},"content":"`GroupName` validation will include both allergies and vaccination as their underlying type is the same `GroupName` type","lastModifiedDate":"2023-04-09"},{"lineNumber":1374,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1375,"author":{"gitId":"francisyzy"},"content":"##### Valid Group Name","lastModifiedDate":"2023-04-09"},{"lineNumber":1376,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1377,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1378,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur, pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1379,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a cat(fur) --a pol-len --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1380,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1381,"author":{"gitId":"francisyzy"},"content":"##### Invalid Group Name","lastModifiedDate":"2023-04-09"},{"lineNumber":1382,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1383,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a poll*en --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1384,"author":{"gitId":"francisyzy"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfurcatfurcatfurcatfurcatfurcatfur --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1385,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1386,"author":{"gitId":"francisyzy"},"content":"### Viewing details of a patient","lastModifiedDate":"2023-04-09"},{"lineNumber":1387,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1388,"author":{"gitId":"francisyzy"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":1389,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1390,"author":{"gitId":"francisyzy"},"content":"Before every test case, ensure that the there are no patients. This can be done by executing the following before every test case:","lastModifiedDate":"2023-04-09"},{"lineNumber":1391,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1392,"author":{"gitId":"francisyzy"},"content":"`patient clear --force true`","lastModifiedDate":"2023-04-09"},{"lineNumber":1393,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1394,"author":{"gitId":"francisyzy"},"content":"1. `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1395,"author":{"gitId":"francisyzy"},"content":"1. `patient detail 1`","lastModifiedDate":"2023-04-09"},{"lineNumber":1396,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1397,"author":{"gitId":"francisyzy"},"content":"#### Expected","lastModifiedDate":"2023-04-09"},{"lineNumber":1398,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1399,"author":{"gitId":"francisyzy"},"content":"![Expected display](images/patient/dg/PatientAdd_NotBlank.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":1400,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1401,"author":{"gitId":"francisyzy"},"content":"### Listing all patients","lastModifiedDate":"2023-04-09"},{"lineNumber":1402,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1403,"author":{"gitId":"francisyzy"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":1404,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1405,"author":{"gitId":"francisyzy"},"content":"Before every test case, ensure that the there are no patients. This can be done by executing the following before every test case:","lastModifiedDate":"2023-04-09"},{"lineNumber":1406,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1407,"author":{"gitId":"francisyzy"},"content":"`patient clear --force true`","lastModifiedDate":"2023-04-09"},{"lineNumber":1408,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1409,"author":{"gitId":"francisyzy"},"content":"1. `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1410,"author":{"gitId":"francisyzy"},"content":"1. `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1411,"author":{"gitId":"francisyzy"},"content":"1. `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1412,"author":{"gitId":"francisyzy"},"content":"1. `patient list`","lastModifiedDate":"2023-04-09"},{"lineNumber":1413,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1414,"author":{"gitId":"francisyzy"},"content":"#### Expected","lastModifiedDate":"2023-04-09"},{"lineNumber":1415,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1416,"author":{"gitId":"francisyzy"},"content":"![Expected display](images/patient/dg/PatientList.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":1417,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1418,"author":{"gitId":"francisyzy"},"content":"### Locating a patient","lastModifiedDate":"2023-04-09"},{"lineNumber":1419,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1420,"author":{"gitId":"francisyzy"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":1421,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1422,"author":{"gitId":"francisyzy"},"content":"Before every test case, ensure that the there are no patients. This can be done by executing the following before every test case:","lastModifiedDate":"2023-04-09"},{"lineNumber":1423,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1424,"author":{"gitId":"francisyzy"},"content":"`patient clear --force true`","lastModifiedDate":"2023-04-09"},{"lineNumber":1425,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1426,"author":{"gitId":"francisyzy"},"content":"1. Add patients with different Names, Blood Type","lastModifiedDate":"2023-04-09"},{"lineNumber":1427,"author":{"gitId":"francisyzy"},"content":"1. `patient add --n John Doe --p 98765432 --d 2001-03-19 --b A+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1428,"author":{"gitId":"francisyzy"},"content":"1. `patient add --n John Does --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1429,"author":{"gitId":"francisyzy"},"content":"1. `patient add --n John Po --p 98765432 --d 2001-03-19 --b AB+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-04-09"},{"lineNumber":1430,"author":{"gitId":"francisyzy"},"content":"1. Find patient with name \"John Doe\"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1431,"author":{"gitId":"francisyzy"},"content":"  `patient find John Doe`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1432,"author":{"gitId":"francisyzy"},"content":"  **Expected**: 2 patients listed! (John Doe, John Does)","lastModifiedDate":"2023-04-09"},{"lineNumber":1433,"author":{"gitId":"francisyzy"},"content":"1. Find patient with name \"John Does\"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1434,"author":{"gitId":"francisyzy"},"content":"  `patient find John Does`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1435,"author":{"gitId":"francisyzy"},"content":"  **Expected**: 1 patients listed! (John Does)","lastModifiedDate":"2023-04-09"},{"lineNumber":1436,"author":{"gitId":"francisyzy"},"content":"1. Find patient with name \"John\"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1437,"author":{"gitId":"francisyzy"},"content":"  `patient find John`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1438,"author":{"gitId":"francisyzy"},"content":"  **Expected**: 3 patients listed! (John Doe, John Does, John Po)","lastModifiedDate":"2023-04-09"},{"lineNumber":1439,"author":{"gitId":"francisyzy"},"content":"1. Find patient with \"A+\" Blood Type\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1440,"author":{"gitId":"francisyzy"},"content":"  `patient find --b A+`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1441,"author":{"gitId":"francisyzy"},"content":"  **Expected**: 1 patients listed! (John Doe)","lastModifiedDate":"2023-04-09"},{"lineNumber":1442,"author":{"gitId":"francisyzy"},"content":"1. Find patient with \"A+\" Blood Type and named \"John\"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1443,"author":{"gitId":"francisyzy"},"content":"  `patient find --b A+ --n John`\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1444,"author":{"gitId":"francisyzy"},"content":"  **Expected**: 1 patients listed! (John Doe)","lastModifiedDate":"2023-04-09"},{"lineNumber":1445,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1446,"author":{"gitId":"daitenshionyan"},"content":"### Adding a vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1448,"author":{"gitId":"daitenshionyan"},"content":"In all cases, vaccination \"a\" will be added but its state is determined through the display.","lastModifiedDate":"2023-04-08"},{"lineNumber":1449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1450,"author":{"gitId":"daitenshionyan"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-08"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1452,"author":{"gitId":"daitenshionyan"},"content":"Before every test case, ensure that the vaccination \"a\" does not exist and that there are no vaccination filters applied. This can be done by executing the following before every test case:","lastModifiedDate":"2023-04-08"},{"lineNumber":1453,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1454,"author":{"gitId":"daitenshionyan"},"content":"* `vaccination clear --force true`","lastModifiedDate":"2023-04-08"},{"lineNumber":1455,"author":{"gitId":"daitenshionyan"},"content":"* `vaccination list`","lastModifiedDate":"2023-04-08"},{"lineNumber":1456,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1457,"author":{"gitId":"daitenshionyan"},"content":"#### Test: All optional parameters omitted","lastModifiedDate":"2023-04-08"},{"lineNumber":1458,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1459,"author":{"gitId":"daitenshionyan"},"content":"`vaccination add a`","lastModifiedDate":"2023-04-08"},{"lineNumber":1460,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1461,"author":{"gitId":"daitenshionyan"},"content":"##### Expected","lastModifiedDate":"2023-04-08"},{"lineNumber":1462,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1463,"author":{"gitId":"daitenshionyan"},"content":"![Expected display](images/vaccination/dg/VaxAdd_AllBlank.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":1464,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1465,"author":{"gitId":"daitenshionyan"},"content":"#### Test: Optional parameters present","lastModifiedDate":"2023-04-08"},{"lineNumber":1466,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1467,"author":{"gitId":"daitenshionyan"},"content":"`vaccination add a --lal 45 --g a,b,c --i a,b,c --h all::all --h any::any --h none::none`","lastModifiedDate":"2023-04-08"},{"lineNumber":1468,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1469,"author":{"gitId":"daitenshionyan"},"content":"##### Expected","lastModifiedDate":"2023-04-08"},{"lineNumber":1470,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1471,"author":{"gitId":"daitenshionyan"},"content":"![Expected display](images/vaccination/dg/VaxAdd_NotBlank.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":1472,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1473,"author":{"gitId":"daitenshionyan"},"content":"### Vaccination validation","lastModifiedDate":"2023-04-08"},{"lineNumber":1474,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1475,"author":{"gitId":"daitenshionyan"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-08"},{"lineNumber":1476,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1477,"author":{"gitId":"daitenshionyan"},"content":"Before every test case, ensure that the there are no patients and vaccinations.","lastModifiedDate":"2023-04-08"},{"lineNumber":1478,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1479,"author":{"gitId":"daitenshionyan"},"content":"* `patient clear --force true`","lastModifiedDate":"2023-04-08"},{"lineNumber":1480,"author":{"gitId":"daitenshionyan"},"content":"* `vaccination clear --force true`","lastModifiedDate":"2023-04-08"},{"lineNumber":1481,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1482,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1483,"author":{"gitId":"daitenshionyan"},"content":":information_source: **NOTE**: If copying and pasting commands exactly, it is important to execute them in the order instructed. If you wish to mix up the order, ID/index related arguments such as \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e will have to be changed accordingly.","lastModifiedDate":"2023-04-08"},{"lineNumber":1484,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1485,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1486,"author":{"gitId":"daitenshionyan"},"content":"#### Test: History requirement - ALL","lastModifiedDate":"2023-04-08"},{"lineNumber":1487,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1488,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"TAKING\" which will be the vaccination to be taken with `ALL` type history requirement.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1489,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add TAKING --h ALL::G1, G2, G3`","lastModifiedDate":"2023-04-08"},{"lineNumber":1490,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"LACKING\" that will lack a required group.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1491,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add LACKING --g G1, G2`","lastModifiedDate":"2023-04-08"},{"lineNumber":1492,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"ALL\" that will have all required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1493,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add ALL --g G1, G2, G3`","lastModifiedDate":"2023-04-08"},{"lineNumber":1494,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"EXTRA\" that will have all required groups and extra.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1495,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add EXTRA --g G1, G2, G3, G4`","lastModifiedDate":"2023-04-08"},{"lineNumber":1496,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"LACKING\" who has taken a vaccination with lacking required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1497,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n LACKING --p 445 --d 0001-1-1 --b A+ --v LACKING`","lastModifiedDate":"2023-04-08"},{"lineNumber":1498,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"ALL\" who has taken a vaccination with all required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1499,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n ALL --p 445 --d 0001-1-1 --b A+ --v ALL`","lastModifiedDate":"2023-04-08"},{"lineNumber":1500,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"EXTRA\" who has taken a vaccination with all required groups and extra.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1501,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n EXTRA --p 445 --d 0001-1-1 --b A+ --v EXTRA`","lastModifiedDate":"2023-04-08"},{"lineNumber":1502,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"LACKING\"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1503,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 1 --v TAKING --s 9999-1-1 --e 9999-1-2`.\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1504,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Patient cannot take the vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1505,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"ALL\"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1506,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 2 --v TAKING --s 9999-1-1 --e 9999-1-2`.\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1507,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Appointment added","lastModifiedDate":"2023-04-08"},{"lineNumber":1508,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"EXTRA\".\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1509,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 3 --v TAKING --s 9999-1-1 --e 9999-1-2`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1510,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Appointment added","lastModifiedDate":"2023-04-08"},{"lineNumber":1511,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1512,"author":{"gitId":"daitenshionyan"},"content":"#### Test: History requirement - ANY","lastModifiedDate":"2023-04-08"},{"lineNumber":1513,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1514,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"TAKING\" which will be the vaccination to be taken with `ANY` type history requirement.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1515,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add TAKING --h ANY::G1, G2, G3`","lastModifiedDate":"2023-04-08"},{"lineNumber":1516,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"LACKING\" that will lack required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1517,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add LACKING --g G1`","lastModifiedDate":"2023-04-08"},{"lineNumber":1518,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"ALL\" that will have all required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1519,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add ALL --g G1, G2, G3`","lastModifiedDate":"2023-04-08"},{"lineNumber":1520,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"EXTRA\" that will have all required groups and extra.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1521,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add EXTRA --g G1, G2, G3, G4`","lastModifiedDate":"2023-04-08"},{"lineNumber":1522,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"NONE\" that will have none of the required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1523,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add NONE --g G4, G5`","lastModifiedDate":"2023-04-08"},{"lineNumber":1524,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"LACKING\" who has taken a vaccination with lacking required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1525,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n LACKING --p 445 --d 0001-1-1 --b A+ --v LACKING`","lastModifiedDate":"2023-04-08"},{"lineNumber":1526,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"ALL\" who has taken a vaccination with all required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1527,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n ALL --p 445 --d 0001-1-1 --b A+ --v ALL`","lastModifiedDate":"2023-04-08"},{"lineNumber":1528,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"EXTRA\" who has taken a vaccination with all required groups and extra.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1529,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n EXTRA --p 445 --d 0001-1-1 --b A+ --v EXTRA`","lastModifiedDate":"2023-04-08"},{"lineNumber":1530,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"NONE\" who has taken a vaccination with none of the required groups.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1531,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n NONE --p 445 --d 0001-1-1 --b A+ --v NONE`","lastModifiedDate":"2023-04-08"},{"lineNumber":1532,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"LACKING\".\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1533,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 1 --v TAKING --s 9999-1-1 --e 9999-1-2`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1534,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Appointment added","lastModifiedDate":"2023-04-08"},{"lineNumber":1535,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"ALL\".\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1536,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 2 --v TAKING --s 9999-1-1 --e 9999-1-2`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1537,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Appointment added","lastModifiedDate":"2023-04-08"},{"lineNumber":1538,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"EXTRA\".\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1539,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 3 --v TAKING --s 9999-1-1 --e 9999-1-2`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1540,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Appointment added","lastModifiedDate":"2023-04-08"},{"lineNumber":1541,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"NONE\".\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1542,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 4 --v TAKING --s 9999-1-1 --e 9999-1-2`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1543,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Patient cannot take the vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1544,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1545,"author":{"gitId":"daitenshionyan"},"content":"#### Test: History requirement - NONE","lastModifiedDate":"2023-04-08"},{"lineNumber":1546,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1547,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"TAKING\" which will be the vaccination to be taken with `NONE` type history requirement.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1548,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add TAKING --h NONE::G1, G2, G3`","lastModifiedDate":"2023-04-08"},{"lineNumber":1549,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"PRESENT\" which will have a group that cannot be present.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1550,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add PRESENT --g G1`","lastModifiedDate":"2023-04-08"},{"lineNumber":1551,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"PRESENT EXTRA\" which will have a group that cannot be present and another that can.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1552,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add PRESENT EXTRA --g G1, G4`","lastModifiedDate":"2023-04-08"},{"lineNumber":1553,"author":{"gitId":"daitenshionyan"},"content":"1. Add vaccination \"NONE\" that will have none of the groups that cannot be present.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1554,"author":{"gitId":"daitenshionyan"},"content":"  `vaccination add NONE --g G4, G5`","lastModifiedDate":"2023-04-08"},{"lineNumber":1555,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"PRESENT\" who has taken a vaccination with a group that cannot be present.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1556,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n PRESENT --p 445 --d 0001-1-1 --b A+ --v PRESENT`","lastModifiedDate":"2023-04-08"},{"lineNumber":1557,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"PRESENT EXTRA\" who has taken a vaccination with a group that cannot be present and another that can.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1558,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n PRESENT EXTRA --p 445 --d 0001-1-1 --b A+ --v PRESENT EXTRA`","lastModifiedDate":"2023-04-08"},{"lineNumber":1559,"author":{"gitId":"daitenshionyan"},"content":"1. Add patient \"NONE\" who has taken a vaccination with a groups that can be present.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1560,"author":{"gitId":"daitenshionyan"},"content":"  `patient add --n NONE--p 445 --d 0001-1-1 --b A+ --v NONE`","lastModifiedDate":"2023-04-08"},{"lineNumber":1561,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"PRESENT\".\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1562,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 1 --v TAKING --s 9999-1-1 --e 9999-1-2`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1563,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Patient cannot take the vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1564,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"PRESENT EXTRA\".\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1565,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 2 --v TAKING --s 9999-1-1 --e 9999-1-2`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1566,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Patient cannot take the vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1567,"author":{"gitId":"daitenshionyan"},"content":"1. Schedule an appointment for patient \"NONE\".\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":1568,"author":{"gitId":"daitenshionyan"},"content":"  `appointment add --p 3 --v TAKING --s 9999-1-1 --e 9999-1-2`\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1569,"author":{"gitId":"daitenshionyan"},"content":"  **Expected**: Appointment added","lastModifiedDate":"2023-04-08"},{"lineNumber":1570,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1571,"author":{"gitId":"nusE0726844"},"content":"### Adding a appointment","lastModifiedDate":"2023-04-09"},{"lineNumber":1572,"author":{"gitId":"nusE0726844"},"content":"Adds an appointment to the VMS.","lastModifiedDate":"2023-04-09"},{"lineNumber":1573,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1574,"author":{"gitId":"nusE0726844"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":1575,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1576,"author":{"gitId":"nusE0726844"},"content":"Before every test case, ensure that the list of appointments is empty,","lastModifiedDate":"2023-04-09"},{"lineNumber":1577,"author":{"gitId":"nusE0726844"},"content":"and the list of patients and vaccinations contains the patient and vaccine to be added.","lastModifiedDate":"2023-04-09"},{"lineNumber":1578,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1579,"author":{"gitId":"nusE0726844"},"content":"Clears the list of patients and vaccines","lastModifiedDate":"2023-04-09"},{"lineNumber":1580,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1581,"author":{"gitId":"nusE0726844"},"content":"patient clear --force true","lastModifiedDate":"2023-04-09"},{"lineNumber":1582,"author":{"gitId":"nusE0726844"},"content":"vaccination clear --force true","lastModifiedDate":"2023-04-09"},{"lineNumber":1583,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1584,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1585,"author":{"gitId":"nusE0726844"},"content":"Adds the necessary patient and vaccine","lastModifiedDate":"2023-04-09"},{"lineNumber":1586,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1587,"author":{"gitId":"nusE0726844"},"content":"patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur \\","lastModifiedDate":"2023-04-09"},{"lineNumber":1588,"author":{"gitId":"nusE0726844"},"content":"    --a pollen --v Moderna","lastModifiedDate":"2023-04-09"},{"lineNumber":1589,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1590,"author":{"gitId":"nusE0726844"},"content":"vaccination add Dose 1 (Moderna)","lastModifiedDate":"2023-04-09"},{"lineNumber":1591,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1592,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1593,"author":{"gitId":"nusE0726844"},"content":"#### Adding a valid appointment","lastModifiedDate":"2023-04-09"},{"lineNumber":1594,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1595,"author":{"gitId":"nusE0726844"},"content":"`appointment add --p 1 --s 2024-01-01 1330 --e 2024-01-01 1400 --v Dose 1 (Moderna)`","lastModifiedDate":"2023-04-09"},{"lineNumber":1596,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1597,"author":{"gitId":"nusE0726844"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":1598,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1599,"author":{"gitId":"nusE0726844"},"content":"* There must be a patient with an id of `\u003cIndex\u003e` `#0001`.","lastModifiedDate":"2023-04-09"},{"lineNumber":1600,"author":{"gitId":"nusE0726844"},"content":"* There must be a vaccine `Dose 1 (Moderna)`.","lastModifiedDate":"2023-04-09"},{"lineNumber":1601,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1602,"author":{"gitId":"nusE0726844"},"content":"##### Expected","lastModifiedDate":"2023-04-09"},{"lineNumber":1603,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1604,"author":{"gitId":"nusE0726844"},"content":"![Valid Add Appointment](images/appointment/dg/AddAppointmentValid.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1605,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1606,"author":{"gitId":"nusE0726844"},"content":"#### Adding an invalid appointment","lastModifiedDate":"2023-04-09"},{"lineNumber":1607,"author":{"gitId":"nusE0726844"},"content":"Invalid appointments include:","lastModifiedDate":"2023-04-09"},{"lineNumber":1608,"author":{"gitId":"nusE0726844"},"content":"* missing parameters","lastModifiedDate":"2023-04-09"},{"lineNumber":1609,"author":{"gitId":"nusE0726844"},"content":"* existing upcoming appointment","lastModifiedDate":"2023-04-09"},{"lineNumber":1610,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1611,"author":{"gitId":"nusE0726844"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":1612,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1613,"author":{"gitId":"nusE0726844"},"content":"* There must be a patient with an id of `\u003cIndex\u003e` `#0001`.","lastModifiedDate":"2023-04-09"},{"lineNumber":1614,"author":{"gitId":"nusE0726844"},"content":"* There must be a vaccine `Dose 1 (Moderna)`.","lastModifiedDate":"2023-04-09"},{"lineNumber":1615,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1616,"author":{"gitId":"nusE0726844"},"content":"#### Adding a invalid appointment - Missing parameters","lastModifiedDate":"2023-04-09"},{"lineNumber":1617,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1618,"author":{"gitId":"nusE0726844"},"content":"`appointment add --p 1 --s 2024-01-01 1330 --e 2024-01-01 1400`","lastModifiedDate":"2023-04-09"},{"lineNumber":1619,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1620,"author":{"gitId":"nusE0726844"},"content":"##### Expected","lastModifiedDate":"2023-04-09"},{"lineNumber":1621,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1622,"author":{"gitId":"nusE0726844"},"content":"![Invalid Add Appointment Missing.PNG](images/appointment/dg/AddAppointmentInvalidMissing.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1623,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1624,"author":{"gitId":"nusE0726844"},"content":"#### Adding a invalid appointment - Existing upcoming appointment","lastModifiedDate":"2023-04-09"},{"lineNumber":1625,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1626,"author":{"gitId":"nusE0726844"},"content":"`appointment add --p 1 --s 2024-01-01 1330 --e 2024-01-01 1400 --v Dose 1 (Moderna)`","lastModifiedDate":"2023-04-09"},{"lineNumber":1627,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1628,"author":{"gitId":"nusE0726844"},"content":"`appointment add --p 1 --s 2024-01-01 1330 --e 2024-01-01 1400 --v Dose 1 (Moderna)`","lastModifiedDate":"2023-04-09"},{"lineNumber":1629,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1630,"author":{"gitId":"nusE0726844"},"content":"##### Expected","lastModifiedDate":"2023-04-09"},{"lineNumber":1631,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1632,"author":{"gitId":"nusE0726844"},"content":"![Invalid Add Appointment Existing](images/appointment/dg/AddAppointmentInvalidExisting.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1633,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1634,"author":{"gitId":"slackernoob"},"content":"### Adding a keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1635,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1636,"author":{"gitId":"slackernoob"},"content":"#### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":1637,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1638,"author":{"gitId":"slackernoob"},"content":"Before every test case, ensure that the keyword mapping of main keyword \"patient\" and keyword \"pa\" does not exist. This","lastModifiedDate":"2023-04-09"},{"lineNumber":1639,"author":{"gitId":"slackernoob"},"content":"can be done by executing the following before every test case:","lastModifiedDate":"2023-04-09"},{"lineNumber":1640,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1641,"author":{"gitId":"slackernoob"},"content":"`keyword delete pa`","lastModifiedDate":"2023-04-09"},{"lineNumber":1642,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1643,"author":{"gitId":"slackernoob"},"content":"#### Test:","lastModifiedDate":"2023-04-09"},{"lineNumber":1644,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1645,"author":{"gitId":"slackernoob"},"content":"`keyword add --k patient --n pa`","lastModifiedDate":"2023-04-09"},{"lineNumber":1646,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1647,"author":{"gitId":"slackernoob"},"content":"##### Expected","lastModifiedDate":"2023-04-09"},{"lineNumber":1648,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1649,"author":{"gitId":"slackernoob"},"content":"![Expected display](images/keyword/Keyword_Add.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":1650,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1651,"author":{"gitId":"slackernoob"},"content":"### Keyword attribute validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1652,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1653,"author":{"gitId":"slackernoob"},"content":"Before every test case, ensure that keyword mapping of main keyword \"patient\" and keyword \"pa\", main keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1654,"author":{"gitId":"slackernoob"},"content":"\"appointment\" and keyword \"appo\", and main keyword \"vaccination\" and keyword \"vacci\" does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":1655,"author":{"gitId":"slackernoob"},"content":"This can be done by executing all of the following commands before every test case:","lastModifiedDate":"2023-04-09"},{"lineNumber":1656,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1657,"author":{"gitId":"slackernoob"},"content":"`keyword delete pa`","lastModifiedDate":"2023-04-09"},{"lineNumber":1658,"author":{"gitId":"slackernoob"},"content":"`keyword delete appo`","lastModifiedDate":"2023-04-09"},{"lineNumber":1659,"author":{"gitId":"slackernoob"},"content":"`keyword delete vacci`","lastModifiedDate":"2023-04-09"},{"lineNumber":1660,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1661,"author":{"gitId":"slackernoob"},"content":"#### Test: Keyword validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1662,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1663,"author":{"gitId":"slackernoob"},"content":"##### Valid Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1664,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1665,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k patient --n pa`","lastModifiedDate":"2023-04-09"},{"lineNumber":1666,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k appointment --n appo`","lastModifiedDate":"2023-04-09"},{"lineNumber":1667,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k vaccination --n vacci`","lastModifiedDate":"2023-04-09"},{"lineNumber":1668,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1669,"author":{"gitId":"slackernoob"},"content":"##### Invalid Keyword {#invalid-keyword-name}","lastModifiedDate":"2023-04-09"},{"lineNumber":1670,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1671,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k patient --n patient`","lastModifiedDate":"2023-04-09"},{"lineNumber":1672,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k vaccination --n appointment`","lastModifiedDate":"2023-04-09"},{"lineNumber":1673,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k appointment --n ap pt`","lastModifiedDate":"2023-04-09"},{"lineNumber":1674,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1675,"author":{"gitId":"slackernoob"},"content":"#### Test: Main Keyword validation","lastModifiedDate":"2023-04-09"},{"lineNumber":1676,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1677,"author":{"gitId":"slackernoob"},"content":"##### Valid Main Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1678,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1679,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k patient --n pa`","lastModifiedDate":"2023-04-09"},{"lineNumber":1680,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k appointment --n appo`","lastModifiedDate":"2023-04-09"},{"lineNumber":1681,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k vaccination --n vacci`","lastModifiedDate":"2023-04-09"},{"lineNumber":1682,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1683,"author":{"gitId":"slackernoob"},"content":"##### Invalid Main Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1684,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1685,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k patientt --n pa`","lastModifiedDate":"2023-04-09"},{"lineNumber":1686,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k help --n appo`","lastModifiedDate":"2023-04-09"},{"lineNumber":1687,"author":{"gitId":"slackernoob"},"content":"* `keyword add --k blank --n vacci`","lastModifiedDate":"2023-04-09"},{"lineNumber":1688,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1689,"author":{"gitId":"daitenshionyan"},"content":"## Appendix: Planned enhancements","lastModifiedDate":"2023-04-08"},{"lineNumber":1690,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1691,"author":{"gitId":"daitenshionyan"},"content":"#### Less strict patient name check","lastModifiedDate":"2023-04-09"},{"lineNumber":1692,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1693,"author":{"gitId":"francisyzy"},"content":"We plan to update NAME to allow for other possible name formats, not limited to the ones listed above (see [invalid patient name](#invalid-patient-name)). The VALIDATION_REGEX currently does not restrict the length of Name to accommodate patients with long names. We also plan to limit the name to prevent UI elements from being overflowed.","lastModifiedDate":"2023-04-09"},{"lineNumber":1694,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1695,"author":{"gitId":"francisyzy"},"content":"The following is an example of the problem:","lastModifiedDate":"2023-04-09"},{"lineNumber":1696,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1697,"author":{"gitId":"francisyzy"},"content":"![Patient Name too long](images/patient/dg/patient_name_long.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":1698,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1699,"author":{"gitId":"francisyzy"},"content":"A proposed solution is to update the validation regex to something like `public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}\\\\-.,/@ ]*\";`","lastModifiedDate":"2023-04-09"},{"lineNumber":1700,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1701,"author":{"gitId":"francisyzy"},"content":"#### Phone number limit","lastModifiedDate":"2023-04-09"},{"lineNumber":1702,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1703,"author":{"gitId":"francisyzy"},"content":"We plan to cap the max length of the phone number type so that the UI elements does not get overflowed.","lastModifiedDate":"2023-04-09"},{"lineNumber":1704,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1705,"author":{"gitId":"francisyzy"},"content":"The following is an example of the problem:","lastModifiedDate":"2023-04-09"},{"lineNumber":1706,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1707,"author":{"gitId":"francisyzy"},"content":"![Phone Number too long](images/patient/dg/phone_number_long.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":1708,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1709,"author":{"gitId":"francisyzy"},"content":"A proposed solution would be to limit the phone number to 32 character long.","lastModifiedDate":"2023-04-09"},{"lineNumber":1710,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1711,"author":{"gitId":"daitenshionyan"},"content":"#### Decrease the warning severity message of invalid appointment data file","lastModifiedDate":"2023-04-09"},{"lineNumber":1712,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1713,"author":{"gitId":"daitenshionyan"},"content":"On start up, in same cases, the `DEATH` severity (the highest due to an uncaught exception) will show if the loaded appointment file is invalid (eg. start time of an appointment after end time). We plan to decrease this severity.","lastModifiedDate":"2023-04-09"},{"lineNumber":1714,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1715,"author":{"gitId":"daitenshionyan"},"content":"#### ID count saving","lastModifiedDate":"2023-04-09"},{"lineNumber":1716,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1717,"author":{"gitId":"daitenshionyan"},"content":"We plan to save the current ID count to hard disk as well on every auto save. This will resolve the issue where the ID counts is forgotten when the application is closed and defaulted to the highest ID. Here are some examples on what may happen if the ID count is forgotten:","lastModifiedDate":"2023-04-09"},{"lineNumber":1718,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1719,"author":{"gitId":"daitenshionyan"},"content":"* User adds 100 patients and then deletes all of them. ID count is at 100. A restart of the application will cause the ID count to reset to 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":1720,"author":{"gitId":"daitenshionyan"},"content":"* User adds 1000 patients, deletes the patients with IDs 11 to 20, adds 5 additional patients and deletes the added 5. ID count will be 15. A restart of the application will cause the ID count to reset to 1000 and the addition of the next patient will have an ID of 11.","lastModifiedDate":"2023-04-09"},{"lineNumber":1721,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1722,"author":{"gitId":"daitenshionyan"},"content":"#### Validation of requirements of type `NONE`","lastModifiedDate":"2023-04-09"},{"lineNumber":1723,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1724,"author":{"gitId":"daitenshionyan"},"content":"The validation checks for history requirements specifically the `NONE` type is planned to be enhanced. The enhancement will disallow the addition or creation of a history requirement if there exist a requirement of `NONE` that causes the entire history requirement to become meaningless. These cases are as follows:","lastModifiedDate":"2023-04-09"},{"lineNumber":1725,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1726,"author":{"gitId":"daitenshionyan"},"content":"* Duplicate requirements of `NONE` type (eg. 2 `NONE::G1`).","lastModifiedDate":"2023-04-09"},{"lineNumber":1727,"author":{"gitId":"daitenshionyan"},"content":"* Conflicting requirements with a `NONE` type (eg. `NONE::G1` and `ANY::G1`).","lastModifiedDate":"2023-04-09"},{"lineNumber":1728,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1729,"author":{"gitId":"daitenshionyan"},"content":"#### Ignore whitespace for name parsing","lastModifiedDate":"2023-04-09"},{"lineNumber":1730,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1731,"author":{"gitId":"daitenshionyan"},"content":"We plan to improve teh parsing of names such that any additional whitespace characters between non-whitespace characters are taken only to be 1. For example, the following names `A NAME`, `A  NAME` or `A   NAME` will be parsed to be `A NAME`. Extra spaces are likely to be an error by the user and in the real world, these extra whitespace characters are taken to be a single space. This enhancement applies to **patient names**, **vaccination names**, **allergy names** and **vaccination group names**.","lastModifiedDate":"2023-04-09"},{"lineNumber":1732,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1733,"author":{"gitId":"daitenshionyan"},"content":"#### Emptying vaccination history requirement","lastModifiedDate":"2023-04-09"},{"lineNumber":1734,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1735,"author":{"gitId":"daitenshionyan"},"content":"Currently when a vaccination has been added, there is no way to update its history requirement to become empty if it is not. The `--set true` argument flag is only able to replace the entire history requirement list with another that is not empty.","lastModifiedDate":"2023-04-09"},{"lineNumber":1736,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1737,"author":{"gitId":"daitenshionyan"},"content":"We plan to enhance this by adding an additional flag to vaccination\u0027s edit \u003ccode\u003e--empty \u003cvar\u003eSHOULD_EMPTY\u003c/var\u003e\u003c/code\u003e where \u003ccode\u003e\u003cvar\u003eSHOULD_EMPTY\u003c/var\u003e\u003c/code\u003e is of `boolean` type with a default value of `false`. The presence of this argument in the vaccination `edit` command will cause the history requirement of the vaccination to be emptied.","lastModifiedDate":"2023-04-09"},{"lineNumber":1738,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1739,"author":{"gitId":"daitenshionyan"},"content":"The enhancement will also be implemented such that if both `--h` and `--empty` argument were to appear in the same `edit` command, the command will not be processed and an error message will be shown. This is the protect the user\u0027s data from unintended changes.","lastModifiedDate":"2023-04-09"},{"lineNumber":1740,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1741,"author":{"gitId":"daitenshionyan"},"content":"#### Stricter date validation fo days of month","lastModifiedDate":"2023-04-10"},{"lineNumber":1742,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":1743,"author":{"gitId":"daitenshionyan"},"content":"We plan to implement a stricter date validation checks for dates. The stricter check will disallow dates fo months that exceeds the number of days in that month. For example 2023-2-31 (2023 Feb 31 as February does not have 31 days) will be disallowed. These invalid dates will show an error message, informing the user that the date is invalid.","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"daitenshionyan":586,"slackernoob":151,"-":285,"francisyzy":496,"nusE0726844":225}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"  * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `vms` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"-":28,"francisyzy":1}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"   1. Run the `seedu.vms.Main` and try a few commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [VMS’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"daitenshionyan":1,"-":53,"francisyzy":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"   e.g. `seedu.vms.commons.StringUtilTest`","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"   e.g. `seedu.vms.storage.StorageManagerTest`","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"   e.g. `seedu.vms.logic.LogicManagerTest`","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"Are you a **receptionist** in charge of **managing vaccination appointments** in your clinic?","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"Vaccinations now have more complicated prerequisites to take them, and Vaccination Management System (VMS) aims to make this validation easier. VMS is a **desktop application for validating and keeping track of vaccination appointments**; its operations are **optimized for fast typists who prefer using a Command Line Interface (CLI)** while maintaining the benefits of a Graphical User Interface (GUI). If you type fast, VMS can efficiently validate your vaccination appointment!","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"## Start up","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"1. Ensure that java `11` or above is properly installed on your device.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"2. Download the latest [`VMS.jar`](https://github.com/AY2223S2-CS2103-F11-3/tp/releases).","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"3. Copy the file to an appropriate folder for VMS to execute in.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"4. Open the command terminal, `cd` into the folder in step 3 and start VMS with `java -jar vms.jar` command. A GUI similar similar to what is shown below should appear in a few seconds.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\" id\u003d\"start-up-warning-info\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":":information_source: **Start up warning messages**","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"If this is your first time starting up the application, you might be greeted with a few warning messages. However, do not be alarmed as this is to protect your save data. They will only show if VMS is unable to find or load your save data for whatever reason.","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"Any successful command execution will save the current state of VMS and stop the warning messages from showing, assuming that the data files are not tempered with. You can try entering the `help` or `exit` commands to initialize the starting data files.","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"View the [data files section](#data-files) to learn more about these data files.","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-danger\" id\u003d\"start-up-warning-warning\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":":warning: **Potential loss of data**","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"If this is not your first time using VMS, do **\u003cu\u003eNOT\u003c/u\u003e** attempt to execute any commands. Review the warning messages first ensuring that the warnings are expected due to intentional tempering with the data files (eg. deleting the entire data folder or one of the data files) before continuing.","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"**If any commands were to successfully be executed, \u003cu\u003eALL\u003c/u\u003e previous data in the data folder, if present, will be overwritten and lost forever.**","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"## GUI of VMS","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"\u003cimg src\u003d\"images/AnnotatedUiDisplay.png\" id\u003d\"annotated-ui-display\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"| Number                                | Name                     | Detail                                       |","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"| ------------------------------------- | ------------------------ | -------------------------------------------- |","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"| \u003cspan class\u003d\"circled-number\"\u003e1\u003c/span\u003e | Command input field      | Where commands are entered                   |","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"| \u003cspan class\u003d\"circled-number\"\u003e2\u003c/span\u003e | Message panel            | Where messages are displayed                 |","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"| \u003cspan class\u003d\"circled-number\"\u003e3\u003c/span\u003e | Patient list panel       | A list view of patients                      |","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"| \u003cspan class\u003d\"circled-number\"\u003e3\u003c/span\u003e | Patient detail panel     | Panel where patients are shown in detail     |","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"| \u003cspan class\u003d\"circled-number\"\u003e5\u003c/span\u003e | Vaccination list panel   | A list view of vaccinations                  |","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"| \u003cspan class\u003d\"circled-number\"\u003e6\u003c/span\u003e | Vaccination detail panel | Panel where vaccinations are shown in detail |","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"| \u003cspan class\u003d\"circled-number\"\u003e7\u003c/span\u003e | Appointment list panel   | A list view of appointments                  |","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"## Usage guide","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"##### Initializing","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"Before diving into VMS, first initialize the data of the vaccinations that your clinic supports.","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"* VMS is initialized with a few COVID-19 vaccinations by default. If your clinic do not offer these vaccinations, these data can be purged by running vaccination\u0027s [`clear`](#clear---clear-all-vaccination-data) command.","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"* See [`add`](#add---add-a-vaccination) on how you can add a vaccination.","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"##### Normal usage","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"After initializing the vaccination data of your clinic, you are ready to go! All you will have to do is follow these simple steps and VMS will ease your receptionist duties.","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"1. Wait for a patient to call in to book an appointment for a vaccination.","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"2. If they do not exist in the system yet, add them into the system using patient\u0027s [`add`](#add---add-a-patient) command.","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"3. Schedule an appointment for them by running appointment\u0027s [`add`](#add---add-an-appointment) command.","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"4. If the patient is eligible to take the vaccination that they want, the appointment will be added into VMS. Otherwise, an error message will show and you can inform them about their ineligibility to take the vaccination.","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"5. If you wish to retrieve a patient\u0027s contact number, maybe to remind them of their upcoming appointment, you can retrieve it by using patient\u0027s [`detail`](#detail---view-details-of-a-patient) command. The patient\u0027s ID number is conveniently displayed on the appointment card for easy reference.","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"##### Example scenario","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"Here is an scenario example usage using \u003cu\u003eVMS start up sample data\u003c/u\u003e immediately after [start up](#start-up):","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"1. A patient calls, he provides information that his name is **Tan Xiao Ming**, born on **1999 April 15**, blood type **A+**, allergic to nothing and has already taken **Dose 1 (Moderna)**. From your clinic phone, the number is **97643158**. The following command will add this patient into the system:","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"patient add --n Tan Xiao Ming --p 97643158 --d 1999-04-15 \\","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        --b A+ --v Dose 1 (Moderna)","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"\u003csub\u003e:clipboard: \u003ccode\u003epatient add --n Tan Xiao Ming --p 97643158 --d 1999-04-15 --b A+ --v Dose 1 (Moderna)\u003c/code\u003e\u003c/sub\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"2. He mentions that he wishes to take **Dose 2 (Pfizer)** on **2024 March 5th at 1600**. You clinic\u0027s average vaccination appointment take roughly about 30mins. From step 2, it is shown that Xiao Ming has an ID of **7** as well. The following command will attempt to schedule an appointment for him:","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"appointment add --p 7 --v Dose 2 (Pfizer) --s 2024-3-5 1600 --e 2024-3-5 1630","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"3. Uah! An error message shows saying that the he cannot take that vaccination. According to MOH, this is so as patient\u0027s first and second COVID-19 vaccination doses must be of the same brand. You inform him of this and he decides that he will take Dose 2 (Moderna) instead. Without scrolling, you see that this vaccination is in index **4** of the vaccination list panel. To attempt to schedule this new appointment for Xiao Ming, enter the following command:","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"appointment add --p 7 --v 4 --s 2024-3-5 1600 --e 2024-3-5 1630","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"4. The appointment get successfully added and you inform him that you have schedule the appointment for him.","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":":information_source: **INFO**: The backslash character (`\\`) in step 1 is just for presentation purposes. Only the text after the clipboard (:clipboard:) should be copied and paste into VMS. See \u003ca href\u003d\"#CLI-presentation-format\"\u003eCLI presentation format\u003c/a\u003e for more information.","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"With this, VMS has automated the validation of patient\u0027s appointment scheduling, making your receptionist duties easier!","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"This example also highlights the adaptive nature of VMS CLI syntax from steps 2 and 3. See the [features](#features) to understand more about VMS full capabilities.","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\" id\u003d\"CLI-presentation-format\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"**:information_source: Command syntaxes presentation**\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"* **Pink italicized bolded capitalized words** represents _placeholders_ that the reader will have to replace with a variable. For example, \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e will represent a patient ID in commands or example outputs.","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"* **Backslash** (`\\`) before line breaks represents a _command continuation_ where the following line break and backslash are to be replaced with an EMPTY character. For example,\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"  \u003cpre\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"  appointment add --p \u003cvar\u003ePATIENT_ID\u003c/var\u003e \\","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"      --s \u003cvar\u003eSTART_TIME\u003c/var\u003e --e \u003cvar\u003eEND_TIME\u003c/var\u003e \\","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"      --v \u003cvar\u003eVAX_NAME\u003c/var\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"  \u003c/pre\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"  would have the same meaning as this","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"  \u003cpre\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"  appointment add --p \u003cvar\u003ePATIENT_ID\u003c/var\u003e --s \u003cvar\u003eSTART_TIME\u003c/var\u003e --e \u003cvar\u003eEND_TIME\u003c/var\u003e --v \u003cvar\u003eVAX_NAME\u003c/var\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"  \u003c/pre\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"  For CLI input examples, a clipboard (:clipboard:) will follow which represents the copy and paste version.","lastModifiedDate":"2023-04-05"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"* **Square brackets** (`[` and `]`) around arguments indicate that the argument is _optional_. For example,","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"  \u003cbr\u003e\u003ccode\u003e[--n \u003cvar\u003eNEW_NAME\u003c/var\u003e]\u003c/code\u003e would mean that \u003ccode\u003e--n \u003cvar\u003eNEW_NAME\u003c/var\u003e\u003c/code\u003e is optional.","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"* **Three dots with no space** (`...`) \u003cu\u003eafter\u003c/u\u003e arguments indicates that multiple of the same type of argument can be repeated. For example \u003ccode\u003e[--r \u003cvar\u003eREQUIREMENT\u003c/var\u003e]...\u003c/code\u003e would mean that \u003ccode\u003e--r \u003cvar\u003eREQUIREMENT\u003c/var\u003e\u003c/code\u003e can appear multiple times.","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"* **Plus** (`+`) indicates that the argument before must occur at least once but may be repeated multiple times.","lastModifiedDate":"2023-04-05"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"* **Three dots with no space** (`...`) \u003cu\u003ebefore\u003c/u\u003e and \u003cu\u003eafter\u003c/u\u003e an argument would indicate that a _list_ of that argument is required. The elements of a list are delimited by commas (`,`) and the keyword `\u003cEMPTY\u003e` (case sensitive) is used to represent an empty list. For example, \u003ccode\u003e--g ...\u003cvar\u003eGROUP\u003c/var\u003e...\u003c/code\u003e would mean that a list of \u003ccode\u003e\u003cvar\u003eGROUP\u003c/var\u003e\u003c/code\u003e is required. Accepted arguments may be \u003ccode\u003e--g \u003cvar\u003eGROUP_1\u003c/var\u003e, \u003cvar\u003eGROUP_2\u003c/var\u003e, \u003cvar\u003eGROUP_3\u003c/var\u003e\u003c/code\u003e for a list of 3 groups or `--g \u003cEMPTY\u003e` for an empty list of groups.","lastModifiedDate":"2023-04-05"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"* **Triangle brackets** (`\u003c` and `\u003e`) around words represent a [type](#types).","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"* **Braces** (`{` and `}`) are represents _argument groups_.","lastModifiedDate":"2023-04-05"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"* **Pipe** (`|`) represents _mutually exclusive arguments_. For example,\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"  \u003cpre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"  {\u003cvar\u003ePATIENT_NAME\u003c/var\u003e | [--\u003cvar\u003eATTRIBUTE_FLAG\u003c/var\u003e \u003cvar\u003eFLAG_ARGUMENT\u003c/var\u003e]+}","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"  \u003c/pre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"  would mean that the user will have to choose between entering the argument of the form \u003ccode\u003e\u003cvar\u003ePATIENT_NAME\u003c/var\u003e\u003c/code\u003e or \u003ccode\u003e[--\u003cvar\u003eATTRIBUTE_FLAG\u003c/var\u003e \u003cvar\u003eFLAG_ARGUMENT\u003c/var\u003e]+\u003c/code\u003e but not both.","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"### General command syntax","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"The general command line syntax is as follows:\u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"\u003cvar\u003eCOMPONENT\u003c/var\u003e \u003cvar\u003eCOMMAND_WORD\u003c/var\u003e \u003cvar\u003ePREAMBLE\u003c/var\u003e [--\u003cvar\u003eFLAG\u003c/var\u003e \u003cvar\u003eARGUMENT\u003c/var\u003e]...","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eCOMPONENT\u003c/var\u003e\u003c/code\u003e is a variable of type [`\u003ccomponent\u003e`](#component). It may be omitted if it is","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"  [`basic`](#basic---applications-basic-features).","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePREAMBLE\u003c/var\u003e\u003c/code\u003e is any text after \u003ccode\u003e\u003cvar\u003eCOMMAND_WORD\u003c/var\u003e\u003c/code\u003e to the end of the command or","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"  the first `--` flag delimiter. Its type is command dependent and will be taken to be empty if","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"  \u003ccode\u003e\u003cvar\u003eCOMMAND_WORD\u003c/var\u003e\u003c/code\u003e is immediately followed by `--`.","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eCOMMAND_WORD\u003c/var\u003e\u003c/code\u003e and \u003ccode\u003e\u003cvar\u003eFLAG\u003c/var\u003e\u003c/code\u003e are single word arguments that do no accept","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"  spaces.","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"##### Additional points","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"* `--` is used to delimit flags and cannot be present in any of the argument placeholders.","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"* Some arguments may require parts which are delimited by `::`.","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"* Leading and trailing white spaces in \u003ccode\u003e\u003cvar\u003eARGUMENTS\u003c/var\u003e\u003c/code\u003e and elements in lists will be ignored.","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"* For flag arguments, if the command only requires one occurrence of it but multiple are given, only the last argument will be taken.","lastModifiedDate":"2023-04-03"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"  * Example: If a command only requires one \u003ccode\u003e--force \u003cvar\u003eIS_FORCE\u003c/var\u003e\u003c/code\u003e, but `--force false --force true` is present in the command input, only the last argument, `--force true`, will be taken.","lastModifiedDate":"2023-04-03"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"### Types","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003ccomponent\u003e`","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"The list of available components are given in the [components section](#components).","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cboolean\u003e`","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"Represents logical `true` or `false`. Only an input \"true\" (case insensitive) will result in logical `true`. All other values will result in `false`.","lastModifiedDate":"2023-04-07"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"Therefore, the following values are allowed an will evaluate to `false`:","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"* `false`","lastModifiedDate":"2023-04-07"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"* `true with additional characters`","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"* `123`","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"* A blank argument.","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cinteger\u003e`","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"An integer value between `-2147483648` and `2147483647`.","lastModifiedDate":"2023-04-07"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cindex\u003e`","lastModifiedDate":"2023-04-07"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"An extension of `\u003cinteger\u003e` allowing only positive non-zero values (ie. `x \u003e 0`).","lastModifiedDate":"2023-04-07"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cage\u003e`","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"An extension of `\u003cinteger\u003e`, allowing only positive values (ie. `x \u003e\u003d 0`). Age also has a max value of `200` which is","lastModifiedDate":"2023-04-07"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"allowed to be exceeded, provided it conforms to `\u003cinteger\u003e` restrictions as well. All values of age that exceed the max","lastModifiedDate":"2023-04-07"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"value will be evaluated to be equal.","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cstring\u003e`","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"Strings can take on any character sequence that do not contain `--` or new line characters.","lastModifiedDate":"2023-04-07"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cmain-keyword\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"Only these values (case sensitive) are allowed:","lastModifiedDate":"2023-04-05"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"* `patient`","lastModifiedDate":"2023-04-05"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"* `vaccination`","lastModifiedDate":"2023-04-05"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"* `appointment`","lastModifiedDate":"2023-04-05"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":204,"author":{"gitId":"slackernoob"},"content":"#### `\u003ckeyword\u003e`","lastModifiedDate":"2023-04-06"},{"lineNumber":205,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":206,"author":{"gitId":"slackernoob"},"content":"A non-empty string that takes on any character sequence that do not contain spaces.","lastModifiedDate":"2023-04-06"},{"lineNumber":207,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":208,"author":{"gitId":"slackernoob"},"content":"The following values and characters (case sensitive) are not allowed:","lastModifiedDate":"2023-04-09"},{"lineNumber":209,"author":{"gitId":"slackernoob"},"content":"* `patient`","lastModifiedDate":"2023-04-06"},{"lineNumber":210,"author":{"gitId":"slackernoob"},"content":"* `vaccination`","lastModifiedDate":"2023-04-06"},{"lineNumber":211,"author":{"gitId":"slackernoob"},"content":"* `appointment`","lastModifiedDate":"2023-04-06"},{"lineNumber":212,"author":{"gitId":"slackernoob"},"content":"* `keyword`","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"slackernoob"},"content":"* `basic`","lastModifiedDate":"2023-04-06"},{"lineNumber":214,"author":{"gitId":"slackernoob"},"content":"* `help`","lastModifiedDate":"2023-04-06"},{"lineNumber":215,"author":{"gitId":"slackernoob"},"content":"* `exit`","lastModifiedDate":"2023-04-06"},{"lineNumber":216,"author":{"gitId":"slackernoob"},"content":"* `*`","lastModifiedDate":"2023-04-09"},{"lineNumber":217,"author":{"gitId":"slackernoob"},"content":"* `(`","lastModifiedDate":"2023-04-09"},{"lineNumber":218,"author":{"gitId":"slackernoob"},"content":"* `)`","lastModifiedDate":"2023-04-09"},{"lineNumber":219,"author":{"gitId":"slackernoob"},"content":"* `-`","lastModifiedDate":"2023-04-09"},{"lineNumber":220,"author":{"gitId":"slackernoob"},"content":"* `+`","lastModifiedDate":"2023-04-09"},{"lineNumber":221,"author":{"gitId":"slackernoob"},"content":"* `,`","lastModifiedDate":"2023-04-09"},{"lineNumber":222,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":223,"author":{"gitId":"slackernoob"},"content":"The following characters (non-exhaustive) are allowed:","lastModifiedDate":"2023-04-09"},{"lineNumber":224,"author":{"gitId":"slackernoob"},"content":"* `~`","lastModifiedDate":"2023-04-09"},{"lineNumber":225,"author":{"gitId":"slackernoob"},"content":"* \u003ccode\u003e`\u003c/code\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":226,"author":{"gitId":"slackernoob"},"content":"* `!`","lastModifiedDate":"2023-04-09"},{"lineNumber":227,"author":{"gitId":"slackernoob"},"content":"* `#`","lastModifiedDate":"2023-04-09"},{"lineNumber":228,"author":{"gitId":"slackernoob"},"content":"* `$`","lastModifiedDate":"2023-04-09"},{"lineNumber":229,"author":{"gitId":"slackernoob"},"content":"* `%`","lastModifiedDate":"2023-04-09"},{"lineNumber":230,"author":{"gitId":"slackernoob"},"content":"* `^`","lastModifiedDate":"2023-04-09"},{"lineNumber":231,"author":{"gitId":"slackernoob"},"content":"* `\u0026`","lastModifiedDate":"2023-04-09"},{"lineNumber":232,"author":{"gitId":"slackernoob"},"content":"* `_`","lastModifiedDate":"2023-04-09"},{"lineNumber":233,"author":{"gitId":"slackernoob"},"content":"* `\u003d`","lastModifiedDate":"2023-04-09"},{"lineNumber":234,"author":{"gitId":"slackernoob"},"content":"* \u003ccode\u003e\\\\\u003c/code\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":235,"author":{"gitId":"slackernoob"},"content":"* `|`","lastModifiedDate":"2023-04-09"},{"lineNumber":236,"author":{"gitId":"slackernoob"},"content":"* `;`","lastModifiedDate":"2023-04-09"},{"lineNumber":237,"author":{"gitId":"slackernoob"},"content":"* `:`","lastModifiedDate":"2023-04-09"},{"lineNumber":238,"author":{"gitId":"slackernoob"},"content":"* `\u0027`","lastModifiedDate":"2023-04-09"},{"lineNumber":239,"author":{"gitId":"slackernoob"},"content":"* `\"`","lastModifiedDate":"2023-04-09"},{"lineNumber":240,"author":{"gitId":"slackernoob"},"content":"* `.`","lastModifiedDate":"2023-04-09"},{"lineNumber":241,"author":{"gitId":"slackernoob"},"content":"* `?`","lastModifiedDate":"2023-04-09"},{"lineNumber":242,"author":{"gitId":"slackernoob"},"content":"* `/`","lastModifiedDate":"2023-04-09"},{"lineNumber":243,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":244,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"A non-blank character sequence consisting of only alphanumeric character and all brackets excluding triangle brackets","lastModifiedDate":"2023-03-17"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"(`\u003c` and `\u003e`). The character limit is **30** characters.","lastModifiedDate":"2023-03-17"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":250,"author":{"gitId":"francisyzy"},"content":"#### `\u003cname\u003e`","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"francisyzy"},"content":"A non-blank character sequence consisting of only alphanumeric character. There is no character limit and does not limit the amount of spaces between the words.","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cblood-type\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":255,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"francisyzy"},"content":"The list of blood types are:","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"francisyzy"},"content":"* A+","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"francisyzy"},"content":"* A-","lastModifiedDate":"2023-03-15"},{"lineNumber":260,"author":{"gitId":"francisyzy"},"content":"* B+","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"francisyzy"},"content":"* B-","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"francisyzy"},"content":"* AB+","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"francisyzy"},"content":"* AB-","lastModifiedDate":"2023-03-15"},{"lineNumber":264,"author":{"gitId":"francisyzy"},"content":"* O+","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"francisyzy"},"content":"* O-","lastModifiedDate":"2023-03-15"},{"lineNumber":266,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":267,"author":{"gitId":"francisyzy"},"content":"All other values will be rejected","lastModifiedDate":"2023-03-15"},{"lineNumber":268,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"francisyzy"},"content":"#### `\u003cdate\u003e`","lastModifiedDate":"2023-04-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"francisyzy"},"content":"The supported date formats are:","lastModifiedDate":"2023-02-20"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"* `yyyy-mm-ddThh:mm`\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":274,"author":{"gitId":"francisyzy"},"content":"  eg. 2023-05-03T04:45","lastModifiedDate":"2023-02-20"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"* `yyyy-m-d hhmm` - single and double digit day and months are supported.\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"francisyzy"},"content":"  eg. 2023-5-3 0455","lastModifiedDate":"2023-02-20"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\" id\u003d\"date-limitation-info\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":":information_source: **Day and month restrictions**","lastModifiedDate":"2023-04-05"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"**Month** can only take the values \u003cu\u003e1 to 12 inclusive\u003c/u\u003e. Any other number are not allowed.","lastModifiedDate":"2023-04-05"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"**Days of the month** can take any values from \u003cu\u003e1 to 31 inclusive\u003c/u\u003e. Any other numbers are not allowed. If the entered day of the month is greater than the number of days in that month, the last day of that month will be assumed. Meaning, `2023-2-31` (Feb 31st) will become `2023-2-28` (Feb 28th).","lastModifiedDate":"2023-04-05"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":286,"author":{"gitId":"francisyzy"},"content":"#### `\u003cphone-number\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"francisyzy"},"content":"Any number that is at least three digits long is allowed. So that anyone, regardless of nationality, are allowed to be vaccinated. Only digits are allowed.","lastModifiedDate":"2023-04-03"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cvax-retriever\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"`\u003cvax-retriever\u003e` or vaccination retriever aids in referring to a vaccination stored in the system. Vaccination may be referred to either by their names or the index that they are displayed in.","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"The syntax of a vaccination retriever is as follows:","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"[\u003cvar\u003eRETRIEVER_TYPE\u003c/var\u003e :: ] \u003cvar\u003eRETRIEVER_VALUE\u003c/var\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eRETRIEVER_TYPE\u003c/var\u003e\u003c/code\u003e : `\u003cretriever-type\u003e` - the type of the retriever.","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eRETRIEVER_VALUE\u003c/var\u003e\u003c/code\u003e : `\u003cstring\u003e` - the value of the retriever.","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"If \u003ccode\u003e\u003cvar\u003eRETRIEVER_TYPE\u003c/var\u003e\u003c/code\u003e is omitted, its value will be inferred from \u003ccode\u003e\u003cvar\u003eRETRIEVER_VALUE\u003c/var\u003e\u003c/code\u003e. It will be `INDEX` if \u003ccode\u003e\u003cvar\u003eRETRIEVER_VALUE\u003c/var\u003e\u003c/code\u003e contains only the digits 0 to 9 and `NAME` otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"Specifying the \u003ccode\u003e\u003cvar\u003eRETRIEVER_TYPE\u003c/var\u003e\u003c/code\u003e will override the inference and retrieve the vaccination based on the type specified. Thus, to refer to a vaccination whose name contains only digits, use \u003ccode\u003eNAME :: \u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e to avoid the inference.","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cretriever-type\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"daitenshionyan"},"content":"Only the following values are allowed:","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"daitenshionyan"},"content":"* `INDEX` - to retrieve a vaccination by its index that it is displayed in the vaccination list view.","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"daitenshionyan"},"content":"* `NAME` - to retrieve a vaccination by its name.","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"daitenshionyan"},"content":"These values are not case sensitive.","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":316,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003creq\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":317,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":318,"author":{"gitId":"daitenshionyan"},"content":"Represents a requirement that is used to evaluate if a patient\u0027s vaccination records meets a vaccination history","lastModifiedDate":"2023-04-02"},{"lineNumber":319,"author":{"gitId":"daitenshionyan"},"content":"requirement. It contains a [`\u003creq-type\u003e`](#req-type) and a set of [`\u003cgroup-name\u003e`](#group-name), which represents its requirement set.","lastModifiedDate":"2023-04-02"},{"lineNumber":320,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":321,"author":{"gitId":"daitenshionyan"},"content":"The general syntax is as follows:","lastModifiedDate":"2023-04-02"},{"lineNumber":322,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":323,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":324,"author":{"gitId":"daitenshionyan"},"content":"\u003cvar\u003eREQ_TYPE\u003c/var\u003e :: ...\u003cvar\u003eREQUIREMENT\u003c/var\u003e...","lastModifiedDate":"2023-03-17"},{"lineNumber":325,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":326,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":327,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eREQ_TYPE\u003c/var\u003e\u003c/code\u003e : `\u003creq-type\u003e` - The type of the requirement.","lastModifiedDate":"2023-03-17"},{"lineNumber":328,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eREQUIREMENT\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e` - An element that makes up the requirement set.","lastModifiedDate":"2023-03-17"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003creq-type\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"daitenshionyan"},"content":"Only the following values are allowed:","lastModifiedDate":"2023-03-09"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"daitenshionyan"},"content":"* `ALL` - all groups of the requirement set must be present to pass.","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"daitenshionyan"},"content":"  * **Example**: a vaccination requirement of `G1, G2, G3` will require a patient to have taken a vaccination with all 3 groups. A vaccination with `G1, G2, G3` and `G1, G2, G3, G4` will pass but a vaccination with `G1, G2` groups will not.","lastModifiedDate":"2023-03-30"},{"lineNumber":336,"author":{"gitId":"daitenshionyan"},"content":"  * Displayed as a blue tag (\u003cspan class\u003d\"tag tag-all\"\u003eALL\u003c/span\u003e).","lastModifiedDate":"2023-04-08"},{"lineNumber":337,"author":{"gitId":"daitenshionyan"},"content":"* `ANY` - at least one group within the requirement set must be present to pass.","lastModifiedDate":"2023-03-30"},{"lineNumber":338,"author":{"gitId":"daitenshionyan"},"content":"  * **Example**: a vaccination requirement of `G1, G2, G3` will require the patient to have taken a vaccination that has any of the 3 groups. A vaccination with `G1` and `G1, G3` will pass but a vaccination with `G4, G5` groups will not.","lastModifiedDate":"2023-03-30"},{"lineNumber":339,"author":{"gitId":"daitenshionyan"},"content":"  * Displayed as a green tag (\u003cspan class\u003d\"tag tag-any\"\u003eANY\u003c/span\u003e).","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"daitenshionyan"},"content":"* `NONE` - none of the groups within the requirement set must be present to pass.","lastModifiedDate":"2023-03-30"},{"lineNumber":341,"author":{"gitId":"daitenshionyan"},"content":"  * **Example**: a requirement with `G1, G2, G3` will require the patient to not have taken any vaccination that are classified as any of the 3 groups. A vaccination with `G1` and `G1, G3` will fail while a vaccination with `G4, G5` will pass. A failure on this type will break the testing process of the patient and the patient will immediately fail the history requirement of the vaccination. In other words, the patient will not be able to take that vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"daitenshionyan"},"content":"  * Displayed as a red tag (\u003cspan class\u003d\"tag tag-none\"\u003eNONE\u003c/span\u003e).","lastModifiedDate":"2023-04-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"daitenshionyan"},"content":"## Components","lastModifiedDate":"2023-03-09"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"daitenshionyan"},"content":"Below shows a list of components, their supported command words and their usage.","lastModifiedDate":"2023-03-09"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"daitenshionyan"},"content":"### `basic` - Application\u0027s basic features","lastModifiedDate":"2023-03-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"daitenshionyan"},"content":"#### `exit` - Exit the program","lastModifiedDate":"2023-03-09"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":353,"author":{"gitId":"francisyzy"},"content":"exit","lastModifiedDate":"2023-02-20"},{"lineNumber":354,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"daitenshionyan"},"content":"#### `help` - Display help page","lastModifiedDate":"2023-03-09"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-09"},{"lineNumber":359,"author":{"gitId":"daitenshionyan"},"content":"help","lastModifiedDate":"2023-03-09"},{"lineNumber":360,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-09"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"slackernoob"},"content":"### `keyword` - Keyword functionalities","lastModifiedDate":"2023-03-30"},{"lineNumber":363,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":364,"author":{"gitId":"slackernoob"},"content":"Keywords are identified by their sub and main keywords. Following is the list of the attributes that a keyword has.","lastModifiedDate":"2023-03-30"},{"lineNumber":365,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":366,"author":{"gitId":"slackernoob"},"content":"* **Keyword name** : `\u003ckeyword\u003e` - the name of the user-defined keyword.","lastModifiedDate":"2023-03-30"},{"lineNumber":367,"author":{"gitId":"slackernoob"},"content":"* **Main Keyword** : `\u003cmain-keyword\u003e` - the main keyword that the user-defined keyword is paired to.","lastModifiedDate":"2023-04-06"},{"lineNumber":368,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":369,"author":{"gitId":"slackernoob"},"content":"Default keywords implemented are shown in the list below.","lastModifiedDate":"2023-03-30"},{"lineNumber":370,"author":{"gitId":"slackernoob"},"content":"* pat--\u003epatient","lastModifiedDate":"2023-03-30"},{"lineNumber":371,"author":{"gitId":"slackernoob"},"content":"* appt--\u003eappointment","lastModifiedDate":"2023-03-30"},{"lineNumber":372,"author":{"gitId":"slackernoob"},"content":"* vacc--\u003evaccination","lastModifiedDate":"2023-03-30"},{"lineNumber":373,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":374,"author":{"gitId":"slackernoob"},"content":"`\u003cmain-keyword\u003e` is limited to the following values (case sensitive):","lastModifiedDate":"2023-04-06"},{"lineNumber":375,"author":{"gitId":"slackernoob"},"content":"* `patient`","lastModifiedDate":"2023-04-06"},{"lineNumber":376,"author":{"gitId":"slackernoob"},"content":"* `vaccination`","lastModifiedDate":"2023-04-06"},{"lineNumber":377,"author":{"gitId":"slackernoob"},"content":"* `appointment`","lastModifiedDate":"2023-04-06"},{"lineNumber":378,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":379,"author":{"gitId":"slackernoob"},"content":"The following values (case sensitive) are not allowed for `\u003ckeyword\u003e`:","lastModifiedDate":"2023-04-06"},{"lineNumber":380,"author":{"gitId":"slackernoob"},"content":"* `patient`","lastModifiedDate":"2023-04-06"},{"lineNumber":381,"author":{"gitId":"slackernoob"},"content":"* `vaccination`","lastModifiedDate":"2023-04-06"},{"lineNumber":382,"author":{"gitId":"slackernoob"},"content":"* `appointment`","lastModifiedDate":"2023-04-06"},{"lineNumber":383,"author":{"gitId":"slackernoob"},"content":"* `keyword`","lastModifiedDate":"2023-04-06"},{"lineNumber":384,"author":{"gitId":"slackernoob"},"content":"* `basic`","lastModifiedDate":"2023-04-06"},{"lineNumber":385,"author":{"gitId":"slackernoob"},"content":"* `help`","lastModifiedDate":"2023-04-06"},{"lineNumber":386,"author":{"gitId":"slackernoob"},"content":"* `exit`","lastModifiedDate":"2023-04-06"},{"lineNumber":387,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":388,"author":{"gitId":"slackernoob"},"content":"#### `add` - Add a keyword","lastModifiedDate":"2023-03-30"},{"lineNumber":389,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"slackernoob"},"content":"Adds a new keyword as defined in the command into the system.","lastModifiedDate":"2023-03-30"},{"lineNumber":391,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":392,"author":{"gitId":"slackernoob"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"slackernoob"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"slackernoob"},"content":"keyword add --k \u003cvar\u003eMAIN_KEYWORD\u003c/var\u003e --n \u003cvar\u003eKEYWORD\u003c/var\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"slackernoob"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":397,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMAIN_KEYWORD\u003c/var\u003e\u003c/code\u003e : `\u003cmain-keyword\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":399,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eKEYWORD\u003c/var\u003e\u003c/code\u003e : `\u003cstring\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":400,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"slackernoob"},"content":"##### Example","lastModifiedDate":"2023-03-30"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":403,"author":{"gitId":"slackernoob"},"content":"Example assumes that the keyword does not exist yet.","lastModifiedDate":"2023-03-30"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":405,"author":{"gitId":"slackernoob"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":406,"author":{"gitId":"slackernoob"},"content":"keyword add --k patient --n pa","lastModifiedDate":"2023-03-30"},{"lineNumber":407,"author":{"gitId":"slackernoob"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":409,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":411,"author":{"gitId":"slackernoob"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":412,"author":{"gitId":"slackernoob"},"content":"[INFO] New keyword added: pa--\u003epatient","lastModifiedDate":"2023-03-30"},{"lineNumber":413,"author":{"gitId":"slackernoob"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":415,"author":{"gitId":"slackernoob"},"content":"#### `delete` - Delete a keyword","lastModifiedDate":"2023-03-30"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":417,"author":{"gitId":"slackernoob"},"content":"Deletes a keyword as defined in the command in the system.","lastModifiedDate":"2023-03-30"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":419,"author":{"gitId":"slackernoob"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":421,"author":{"gitId":"slackernoob"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":422,"author":{"gitId":"slackernoob"},"content":"keyword delete \u003cvar\u003eKEYWORD\u003c/var\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":423,"author":{"gitId":"slackernoob"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":425,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eKEYWORD\u003c/var\u003e\u003c/code\u003e : `\u003cstring\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":426,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":427,"author":{"gitId":"slackernoob"},"content":"##### Example","lastModifiedDate":"2023-03-30"},{"lineNumber":428,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":429,"author":{"gitId":"slackernoob"},"content":"Example assumes that the keyword already exists.","lastModifiedDate":"2023-03-30"},{"lineNumber":430,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":431,"author":{"gitId":"slackernoob"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"slackernoob"},"content":"keyword delete pa","lastModifiedDate":"2023-04-06"},{"lineNumber":433,"author":{"gitId":"slackernoob"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":435,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":436,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":437,"author":{"gitId":"slackernoob"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":438,"author":{"gitId":"slackernoob"},"content":"[INFO] Deleted keyword: pa--\u003epatient","lastModifiedDate":"2023-03-30"},{"lineNumber":439,"author":{"gitId":"slackernoob"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":440,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":441,"author":{"gitId":"daitenshionyan"},"content":"### `patient` - Patient functionalities","lastModifiedDate":"2023-03-09"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"francisyzy"},"content":"A patient is uniquely identified by a generated `PATIENT_ID`. Duplicate patients are **allowed** in the system as there might be patients with the exact same attributes that want to be vaccinated.","lastModifiedDate":"2023-04-04"},{"lineNumber":444,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":445,"author":{"gitId":"francisyzy"},"content":"##### Patient data","lastModifiedDate":"2023-03-15"},{"lineNumber":446,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":447,"author":{"gitId":"francisyzy"},"content":"| Variable      | Is needed | Type                   | Accept multiple |","lastModifiedDate":"2023-03-15"},{"lineNumber":448,"author":{"gitId":"daitenshionyan"},"content":"| ------------- | --------- | ---------------------- | --------------- |","lastModifiedDate":"2023-03-18"},{"lineNumber":449,"author":{"gitId":"francisyzy"},"content":"| `name`        | YES       | `\u003cname\u003e`               | NO              |","lastModifiedDate":"2023-03-15"},{"lineNumber":450,"author":{"gitId":"francisyzy"},"content":"| `phone`       | YES       | `\u003cphone-number\u003e`       | NO              |","lastModifiedDate":"2023-03-15"},{"lineNumber":451,"author":{"gitId":"francisyzy"},"content":"| `dateOfBirth` | YES       | `\u003cdate\u003e`               | NO              |","lastModifiedDate":"2023-04-04"},{"lineNumber":452,"author":{"gitId":"daitenshionyan"},"content":"| `bloodType`   | YES       | `\u003cblood-type\u003e`         | NO              |","lastModifiedDate":"2023-04-05"},{"lineNumber":453,"author":{"gitId":"francisyzy"},"content":"| `allergies`   | NO        | list of `\u003cgroup-name\u003e` | YES             |","lastModifiedDate":"2023-03-24"},{"lineNumber":454,"author":{"gitId":"francisyzy"},"content":"| `vaccines`    | NO        | list of `\u003cgroup-name\u003e` | YES             |","lastModifiedDate":"2023-03-24"},{"lineNumber":455,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":456,"author":{"gitId":"francisyzy"},"content":"###### dateOfBirth","lastModifiedDate":"2023-04-04"},{"lineNumber":457,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":458,"author":{"gitId":"francisyzy"},"content":"It accepts any `\u003cdate\u003e` that is before current system time.","lastModifiedDate":"2023-04-04"},{"lineNumber":459,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":460,"author":{"gitId":"daitenshionyan"},"content":"#### `add` - Add a patient","lastModifiedDate":"2023-03-09"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"francisyzy"},"content":"Adds a new Patient type as defined in the command into the system. If any of the optional arguments are omitted, the list will be empty.","lastModifiedDate":"2023-03-23"},{"lineNumber":463,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":464,"author":{"gitId":"francisyzy"},"content":"`vaccines` and `vaccinations` are different. The Patient allows any vaccines to be added as they may want to include other vaccinations that they have taken to check for conflicts during the new vaccination. Patients are **allowed** to have vaccines that are not offered in this vaccination center.","lastModifiedDate":"2023-04-03"},{"lineNumber":465,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":466,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-03-23"},{"lineNumber":467,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":468,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":469,"author":{"gitId":"francisyzy"},"content":"patient add --n \u003cvar\u003ePATIENT_NAME\u003c/var\u003e --p \u003cvar\u003ePHONE\u003c/var\u003e --d \u003cvar\u003eDATE_OF_BIRTH\u003c/var\u003e \\","lastModifiedDate":"2023-03-24"},{"lineNumber":470,"author":{"gitId":"francisyzy"},"content":"    --b \u003cvar\u003eBLOODTYPE\u003c/var\u003e [--a ...\u003cvar\u003eALLERGIES\u003c/var\u003e...]... [--v ...\u003cvar\u003eVACCINES\u003c/var\u003e...]...","lastModifiedDate":"2023-03-30"},{"lineNumber":471,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cname\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":474,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePHONE\u003c/var\u003e\u003c/code\u003e : `\u003cphone\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":475,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eDATE_OF_BIRTH\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":476,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eBLOODTYPE\u003c/var\u003e\u003c/code\u003e : `\u003cblood-type\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":477,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eALLERGIES\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":478,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINES\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":479,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":480,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":483,"author":{"gitId":"daitenshionyan"},"content":"patient add --n John Doe --p 98765432 --d 2001-03-19 \\","lastModifiedDate":"2023-04-05"},{"lineNumber":484,"author":{"gitId":"daitenshionyan"},"content":"    --b B+ --a catfur --a pollen --v covax","lastModifiedDate":"2023-04-05"},{"lineNumber":485,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":486,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":487,"author":{"gitId":"francisyzy"},"content":"\u003csub\u003e:clipboard: : \u003ccode\u003epatient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax\u003c/code\u003e\u003c/sub\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":488,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":489,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-04-05"},{"lineNumber":490,"author":{"gitId":"francisyzy"},"content":"patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+","lastModifiedDate":"2023-04-04"},{"lineNumber":491,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":494,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":495,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":496,"author":{"gitId":"francisyzy"},"content":"[INFO] New patient added: John Doe","lastModifiedDate":"2023-03-30"},{"lineNumber":497,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":498,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":499,"author":{"gitId":"francisyzy"},"content":"![Patient Add Detail Card](images/patient/ug/PatientAddDetailCard.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":500,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":501,"author":{"gitId":"daitenshionyan"},"content":"#### `detail` - View details of a patient","lastModifiedDate":"2023-04-08"},{"lineNumber":502,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":503,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":504,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":505,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":506,"author":{"gitId":"francisyzy"},"content":"patient detail \u003cvar\u003ePATIENT_ID\u003c/var\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":507,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":508,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":509,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-03-30"},{"lineNumber":510,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":511,"author":{"gitId":"francisyzy"},"content":"Example assumes none of the default start-up patients are deleted yet.","lastModifiedDate":"2023-03-30"},{"lineNumber":512,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":513,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":514,"author":{"gitId":"francisyzy"},"content":"patient detail 1","lastModifiedDate":"2023-03-30"},{"lineNumber":515,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":516,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":517,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":518,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":519,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":520,"author":{"gitId":"francisyzy"},"content":"[INFO] Detailing patient: #0001 Alex Yeoh","lastModifiedDate":"2023-03-30"},{"lineNumber":521,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":522,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":523,"author":{"gitId":"francisyzy"},"content":"![Patient Detail Example](images/patient/ug/PatientDetailExample.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":524,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":525,"author":{"gitId":"francisyzy"},"content":"##### Restrictions","lastModifiedDate":"2023-04-04"},{"lineNumber":526,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":527,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e must exist in the system.","lastModifiedDate":"2023-04-04"},{"lineNumber":528,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":529,"author":{"gitId":"francisyzy"},"content":"#### `list` - List all patients","lastModifiedDate":"2023-03-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"francisyzy"},"content":"Resets the view of the patient pane to display all the Patients. Useful command after using the find command.","lastModifiedDate":"2023-03-23"},{"lineNumber":532,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":533,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-03-23"},{"lineNumber":534,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":535,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":536,"author":{"gitId":"francisyzy"},"content":"patient list","lastModifiedDate":"2023-03-23"},{"lineNumber":537,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":540,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":541,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":542,"author":{"gitId":"francisyzy"},"content":"[INFO] Listed all patients","lastModifiedDate":"2023-03-30"},{"lineNumber":543,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":544,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":545,"author":{"gitId":"francisyzy"},"content":"![Patient List Example](images/patient/ug/PatientListExample.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":546,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":547,"author":{"gitId":"daitenshionyan"},"content":"#### `find` - Locate a patient","lastModifiedDate":"2023-03-09"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"francisyzy"},"content":"Finds patients whose names contain the given keywords. You can also include flags to search based on the patient\u0027s attributes. If no flags are given, the search string given will be assumed to be searching the patient\u0027s name. Multiple flags can be used concurrently! At least one flag or `PATIENT_NAME` must be present.","lastModifiedDate":"2023-04-03"},{"lineNumber":550,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":551,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-03-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":554,"author":{"gitId":"francisyzy"},"content":"patient find {\u003cvar\u003ePATIENT_NAME\u003c/var\u003e | [--\u003cvar\u003eATTRIBUTE_FLAG\u003c/var\u003e \u003cvar\u003eFLAG_ARGUMENT\u003c/var\u003e]+}","lastModifiedDate":"2023-04-04"},{"lineNumber":555,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cstring\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":558,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":559,"author":{"gitId":"francisyzy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":560,"author":{"gitId":"francisyzy"},"content":":exclamation: **WARNING**: If both \u003ccode\u003e\u003cvar\u003ePATIENT_NAME\u003c/var\u003e\u003c/code\u003e and \u003ccode\u003e\u003cvar\u003eATTRIBUTE_FLAG\u003c/var\u003e\u003c/code\u003e are used in the same command, it will ignore \u003ccode\u003e\u003cvar\u003ePATIENT_NAME\u003c/var\u003e\u003c/code\u003e and warn the user that \u003ccode\u003e\u003cvar\u003ePATIENT_NAME\u003c/var\u003e\u003c/code\u003e is not being used.","lastModifiedDate":"2023-04-08"},{"lineNumber":561,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":563,"author":{"gitId":"daitenshionyan"},"content":"##### Find by flag","lastModifiedDate":"2023-04-05"},{"lineNumber":564,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":565,"author":{"gitId":"daitenshionyan"},"content":"\u003ccode\u003e\u003cvar\u003eATTRIBUTE_FLAG\u003c/var\u003e\u003c/code\u003e and their corresponding \u003ccode\u003e\u003cvar\u003eFLAG_ARGUMENT\u003c/var\u003e\u003c/code\u003e have similar mappings and requirements to to patient\u0027s [`add`](#add---add-a-patient). That is,","lastModifiedDate":"2023-04-05"},{"lineNumber":566,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":567,"author":{"gitId":"daitenshionyan"},"content":"* `--n` -\u003e \u003ccode\u003e\u003cvar\u003ePATIENT_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cname\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":568,"author":{"gitId":"daitenshionyan"},"content":"* `--p` -\u003e \u003ccode\u003e\u003cvar\u003ePHONE\u003c/var\u003e\u003c/code\u003e : `\u003cphone\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":569,"author":{"gitId":"daitenshionyan"},"content":"* `--d` -\u003e \u003ccode\u003e\u003cvar\u003eDATE_OF_BIRTH\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":570,"author":{"gitId":"daitenshionyan"},"content":"* `--b` -\u003e \u003ccode\u003e\u003cvar\u003eBLOODTYPE\u003c/var\u003e\u003c/code\u003e : `\u003cblood-type\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":571,"author":{"gitId":"daitenshionyan"},"content":"* `--a` -\u003e \u003ccode\u003e\u003cvar\u003eALLERGIES\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":572,"author":{"gitId":"daitenshionyan"},"content":"* `--v` -\u003e \u003ccode\u003e\u003cvar\u003eVACCINES\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":573,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":574,"author":{"gitId":"daitenshionyan"},"content":"Where the right side of `-\u003e` represents \u003ccode\u003e\u003cvar\u003eATTRIBUTE_FLAG\u003c/var\u003e\u003c/code\u003e and the left represent \u003ccode\u003e\u003cvar\u003eFLAG_ARGUMENT\u003c/var\u003e\u003c/code\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":575,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":576,"author":{"gitId":"daitenshionyan"},"content":"However, the following exceptions apply:","lastModifiedDate":"2023-04-05"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":578,"author":{"gitId":"daitenshionyan"},"content":"* Only one `ALLERGIES` flag can be used at one find command.","lastModifiedDate":"2023-04-05"},{"lineNumber":579,"author":{"gitId":"daitenshionyan"},"content":"* Only one `VACCINES` flag can be used at one find command.","lastModifiedDate":"2023-04-05"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":581,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":584,"author":{"gitId":"francisyzy"},"content":"patient find john","lastModifiedDate":"2023-04-04"},{"lineNumber":585,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":587,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-04-05"},{"lineNumber":588,"author":{"gitId":"francisyzy"},"content":"patient find --n john --b B+","lastModifiedDate":"2023-04-04"},{"lineNumber":589,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":593,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":594,"author":{"gitId":"francisyzy"},"content":"[INFO] 1 patients listed!","lastModifiedDate":"2023-03-30"},{"lineNumber":595,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":597,"author":{"gitId":"francisyzy"},"content":"![Patient Find Example](images/patient/ug/PatientFindExample.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":599,"author":{"gitId":"francisyzy"},"content":"#### `edit` - Edit a patient","lastModifiedDate":"2023-03-30"},{"lineNumber":600,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":601,"author":{"gitId":"francisyzy"},"content":"Updates the Patient using it\u0027s PATIENT_ID. It will update the attributes of the specified patient to the attributes provided. If any of the optional arguments are omitted, the values will not be updated.","lastModifiedDate":"2023-03-30"},{"lineNumber":602,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":603,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":604,"author":{"gitId":"daitenshionyan"},"content":":exclamation: **WARNING**: VMS does not re-check if the edited patient is still able to take the vaccinations of the active appointments that they have been scheduled if any. As such if the patient is updated such that they are now ineligible to take the vaccination of their upcoming appointment, no warning or error messages will show and the state of all appointment will remain.","lastModifiedDate":"2023-04-08"},{"lineNumber":605,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":607,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-03-23"},{"lineNumber":608,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":609,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":610,"author":{"gitId":"francisyzy"},"content":"patient edit \u003cvar\u003ePATIENT_ID\u003c/var\u003e [--n \u003cvar\u003ePATIENT_NAME\u003c/var\u003e] [--p \u003cvar\u003ePHONE\u003c/var\u003e] [--d \u003cvar\u003eDATE_OF_BIRTH\u003c/var\u003e] \\","lastModifiedDate":"2023-04-03"},{"lineNumber":611,"author":{"gitId":"francisyzy"},"content":"    [--b \u003cvar\u003eBLOODTYPE\u003c/var\u003e] [--a ...\u003cvar\u003eALLERGIES\u003c/var\u003e...]... [--v ...\u003cvar\u003eVACCINES\u003c/var\u003e...]...","lastModifiedDate":"2023-04-03"},{"lineNumber":612,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":613,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":614,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cname\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":615,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePHONE\u003c/var\u003e\u003c/code\u003e : `\u003cphone\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":616,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eDATE_OF_BIRTH\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":617,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eBLOODTYPE\u003c/var\u003e\u003c/code\u003e : `\u003cblood-type\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":618,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eALLERGIES\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":619,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINES\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":620,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eIS_SET\u003c/var\u003e\u003c/code\u003e : `\u003cboolean\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":621,"author":{"gitId":"francisyzy"},"content":"  * `true` to replace all list-like patient attributes (**ALLERGIES**, and **VACCINES**) with the one specified in the command or `false` to append them.","lastModifiedDate":"2023-03-30"},{"lineNumber":622,"author":{"gitId":"francisyzy"},"content":"  * It is `false` by default.","lastModifiedDate":"2023-03-30"},{"lineNumber":623,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":624,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":625,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":626,"author":{"gitId":"francisyzy"},"content":"Basic edit, changing patient\u0027s attributes that is not related to list-like attributes","lastModifiedDate":"2023-03-30"},{"lineNumber":627,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":628,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":629,"author":{"gitId":"francisyzy"},"content":"patient edit 7 --n John Deer","lastModifiedDate":"2023-04-04"},{"lineNumber":630,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":631,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":632,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":633,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":634,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":635,"author":{"gitId":"francisyzy"},"content":"[INFO] Edited Patient: John Deer","lastModifiedDate":"2023-03-30"},{"lineNumber":636,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":637,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":638,"author":{"gitId":"francisyzy"},"content":"![Patient Edit Detail Card Default](images/patient/ug/PatientEditDetailCardDefault.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":639,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":640,"author":{"gitId":"francisyzy"},"content":"###### Append example","lastModifiedDate":"2023-03-30"},{"lineNumber":641,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":642,"author":{"gitId":"francisyzy"},"content":"Appending patient\u0027s allergies and vaccination details","lastModifiedDate":"2023-03-30"},{"lineNumber":643,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":644,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":645,"author":{"gitId":"daitenshionyan"},"content":"patient edit 7 --n John Deere --p 98765432 --d 2001-03-19 --b B+ \\","lastModifiedDate":"2023-04-05"},{"lineNumber":646,"author":{"gitId":"daitenshionyan"},"content":"    --a dogfur --a fern --v norovax","lastModifiedDate":"2023-04-05"},{"lineNumber":647,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":648,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":649,"author":{"gitId":"daitenshionyan"},"content":"\u003csub\u003e:clipboard: : \u003ccode\u003epatient edit 7 --n John Deere --p 98765432 --d 2001-03-19 --b B+ --a dogfur --a fern --v norovax\u003c/code\u003e\u003c/sub\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":651,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":653,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":654,"author":{"gitId":"francisyzy"},"content":"[INFO] Edited Patient: John Deere","lastModifiedDate":"2023-03-30"},{"lineNumber":655,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":657,"author":{"gitId":"francisyzy"},"content":"![Patient Edit Detail Card Append](images/patient/ug/PatientEditDetailCardAppend.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":659,"author":{"gitId":"francisyzy"},"content":"###### Set example","lastModifiedDate":"2023-03-30"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":661,"author":{"gitId":"francisyzy"},"content":"Setting patient\u0027s allergies and vaccination details, values prior will be overridden","lastModifiedDate":"2023-03-30"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":663,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":664,"author":{"gitId":"daitenshionyan"},"content":"patient edit 7 --n John Der --p 98765432 --d 2001-03-19 --b B+ \\","lastModifiedDate":"2023-04-05"},{"lineNumber":665,"author":{"gitId":"daitenshionyan"},"content":"    --a nofur --a grass --v protovax --set true","lastModifiedDate":"2023-04-05"},{"lineNumber":666,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":668,"author":{"gitId":"daitenshionyan"},"content":"\u003csub\u003e:clipboard: : \u003ccode\u003epatient edit 7 --n John Der --p 98765432 --d 2001-03-19 --b B+ --a nofur --a grass --v protovax --set true\u003c/code\u003e\u003c/sub\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":670,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":672,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":673,"author":{"gitId":"francisyzy"},"content":"[INFO] Edited Patient: John Der","lastModifiedDate":"2023-03-30"},{"lineNumber":674,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":676,"author":{"gitId":"francisyzy"},"content":"![Patient Edit Detail Card Set](images/patient/ug/PatientEditDetailCardSet.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":678,"author":{"gitId":"francisyzy"},"content":"##### Restrictions","lastModifiedDate":"2023-04-04"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":680,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e must exist in the system.","lastModifiedDate":"2023-04-04"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":682,"author":{"gitId":"francisyzy"},"content":"#### `delete` - Delete a patient","lastModifiedDate":"2023-03-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"francisyzy"},"content":"Deletes the patient using the PATIENT_ID","lastModifiedDate":"2023-03-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":686,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-03-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":688,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":689,"author":{"gitId":"francisyzy"},"content":"patient delete \u003cvar\u003ePATIENT_ID\u003c/var\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":690,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":694,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":695,"author":{"gitId":"francisyzy"},"content":"patient delete 7","lastModifiedDate":"2023-04-04"},{"lineNumber":696,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":698,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":700,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":701,"author":{"gitId":"francisyzy"},"content":"[INFO] Deleted Patient: John Der","lastModifiedDate":"2023-03-30"},{"lineNumber":702,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":704,"author":{"gitId":"francisyzy"},"content":"##### Restrictions","lastModifiedDate":"2023-04-04"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":706,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e must exist in the system.","lastModifiedDate":"2023-04-04"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":708,"author":{"gitId":"daitenshionyan"},"content":"#### `clear` - Clear all patient data","lastModifiedDate":"2023-04-08"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":710,"author":{"gitId":"francisyzy"},"content":"Deletes all Patients from VMS. It is for users to clear the dummy patients out from VMS","lastModifiedDate":"2023-03-26"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":712,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-03-26"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":714,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":715,"author":{"gitId":"francisyzy"},"content":"patient clear","lastModifiedDate":"2023-03-26"},{"lineNumber":716,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":718,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-03-26"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":720,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":721,"author":{"gitId":"francisyzy"},"content":"patient clear","lastModifiedDate":"2023-04-04"},{"lineNumber":722,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":723,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":724,"author":{"gitId":"francisyzy"},"content":"Output:","lastModifiedDate":"2023-03-30"},{"lineNumber":725,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":726,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":727,"author":{"gitId":"francisyzy"},"content":"[INFO] Patients successfully cleared","lastModifiedDate":"2023-03-30"},{"lineNumber":728,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":729,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":730,"author":{"gitId":"nusE0726844"},"content":"### `vaccination` - Vaccination functionalities","lastModifiedDate":"2023-03-30"},{"lineNumber":731,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":732,"author":{"gitId":"daitenshionyan"},"content":"Vaccinations are uniquely identified by their names. The following is a list of the attributes that a vaccination has and their description:","lastModifiedDate":"2023-04-02"},{"lineNumber":733,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":734,"author":{"gitId":"daitenshionyan"},"content":"* **Name** : `\u003cgroup-name\u003e` - the name of the vaccination.","lastModifiedDate":"2023-03-28"},{"lineNumber":735,"author":{"gitId":"daitenshionyan"},"content":"* **Groups** : list of `\u003cgroup-name\u003e` - The groups the vaccination classifies under.","lastModifiedDate":"2023-03-28"},{"lineNumber":736,"author":{"gitId":"daitenshionyan"},"content":"  * Default value \u003d `empty list`.","lastModifiedDate":"2023-03-28"},{"lineNumber":737,"author":{"gitId":"daitenshionyan"},"content":"* **Minimum age** : `\u003cage\u003e` - the minimum age (inclusive) allowed to take the vaccination.","lastModifiedDate":"2023-03-28"},{"lineNumber":738,"author":{"gitId":"daitenshionyan"},"content":"  * Default value \u003d `0`.","lastModifiedDate":"2023-03-28"},{"lineNumber":739,"author":{"gitId":"daitenshionyan"},"content":"* **Maximum age** : `\u003cage\u003e` - the maximum age (inclusive) allowed to take the vaccination.","lastModifiedDate":"2023-03-28"},{"lineNumber":740,"author":{"gitId":"daitenshionyan"},"content":"  * Default value \u003d `200`.","lastModifiedDate":"2023-03-28"},{"lineNumber":741,"author":{"gitId":"daitenshionyan"},"content":"* **Ingredients** : list of `\u003cgroup-name\u003e` - ingredients of the vaccination. Similar to patient\u0027s allergies.","lastModifiedDate":"2023-03-28"},{"lineNumber":742,"author":{"gitId":"daitenshionyan"},"content":"  * Default value \u003d `empty list`.","lastModifiedDate":"2023-03-28"},{"lineNumber":743,"author":{"gitId":"daitenshionyan"},"content":"* **History requirements** : list of `\u003creq\u003e` - the list requirements of vaccination groups to take the vaccination.","lastModifiedDate":"2023-04-02"},{"lineNumber":744,"author":{"gitId":"daitenshionyan"},"content":"  * Default value \u003d `empty list`.","lastModifiedDate":"2023-03-28"},{"lineNumber":745,"author":{"gitId":"daitenshionyan"},"content":"  * Requirements need not be unique, ie. a requirement of 2 `ANY :: grp1, grp2` is allowed. This would mean that to take this vaccination, the patient will have to have taken at least 2 vaccinations that satisfies that requirement.","lastModifiedDate":"2023-03-28"},{"lineNumber":746,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":747,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\" id\u003d\"vaccination-case-sensitive-name-info\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":748,"author":{"gitId":"daitenshionyan"},"content":":bulb: **Vaccination related name are case sensitive**","lastModifiedDate":"2023-04-09"},{"lineNumber":749,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":750,"author":{"gitId":"daitenshionyan"},"content":"Vaccination related names (**name**, **groups** and **allergies**) are case sensitive. This allows you to differentiate case sensitive things within these names like simple chemical formulas.","lastModifiedDate":"2023-04-09"},{"lineNumber":751,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":752,"author":{"gitId":"daitenshionyan"},"content":"Here is an example of how you can use this to differentiate vaccination names:","lastModifiedDate":"2023-04-09"},{"lineNumber":753,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":754,"author":{"gitId":"daitenshionyan"},"content":"* `VAX ABC (No CO)` - \"CO\" for carbon monoxide.","lastModifiedDate":"2023-04-02"},{"lineNumber":755,"author":{"gitId":"daitenshionyan"},"content":"* `VAX ABC (No Co)` - \"Co\" for cobalt.","lastModifiedDate":"2023-04-02"},{"lineNumber":756,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":757,"author":{"gitId":"daitenshionyan"},"content":"Similar things can be done for the other components.","lastModifiedDate":"2023-04-09"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":759,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":761,"author":{"gitId":"daitenshionyan"},"content":"In order for a patient to take a specific vaccination, the patient will have to satisfy \u003cu\u003eALL\u003c/u\u003e of the following:","lastModifiedDate":"2023-04-02"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":763,"author":{"gitId":"daitenshionyan"},"content":"* Patient\u0027s age should be between the vaccination\u0027s **minimum age** and **maximum age** range inclusive.","lastModifiedDate":"2023-04-02"},{"lineNumber":764,"author":{"gitId":"daitenshionyan"},"content":"* The patient should not be allergic to any of the **ingredients** of the vaccination.","lastModifiedDate":"2023-04-02"},{"lineNumber":765,"author":{"gitId":"daitenshionyan"},"content":"* The patient should have a vaccination history record that satisfies \u003cu\u003eALL\u003c/u\u003e requirements of the vaccination\u0027s **history requirements**.","lastModifiedDate":"2023-04-02"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":767,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\" id\u003d\"vaccination-history-requirement-check-info\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":768,"author":{"gitId":"daitenshionyan"},"content":":information_source: **History requirement checks**","lastModifiedDate":"2023-04-03"},{"lineNumber":769,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":770,"author":{"gitId":"daitenshionyan"},"content":"When checking if a patient satisfies the history requirements of a vaccination, the group classifications of the vaccination that the patient has taken will be extracted and tested against the requirement\u0027s group set. The requirement [type](#req-type) of the requirement will decide if the requirement is satisfied.","lastModifiedDate":"2023-04-03"},{"lineNumber":771,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":772,"author":{"gitId":"daitenshionyan"},"content":"In other words, a patient can satisfy a requirement by taking vaccinations with certain group types for `ALL` and `ANY` requirement types or not taking any vaccinations with certain group types for `NONE` requirement types.","lastModifiedDate":"2023-04-03"},{"lineNumber":773,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":774,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":775,"author":{"gitId":"daitenshionyan"},"content":"#### `add` - Add a vaccination","lastModifiedDate":"2023-04-05"},{"lineNumber":776,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":777,"author":{"gitId":"daitenshionyan"},"content":"Adds a new vaccination as defined in the command into the system. If any of the optional arguments are omitted,","lastModifiedDate":"2023-04-05"},{"lineNumber":778,"author":{"gitId":"nusE0726844"},"content":"they will be set to their default values.","lastModifiedDate":"2023-03-30"},{"lineNumber":779,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":780,"author":{"gitId":"nusE0726844"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":781,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":782,"author":{"gitId":"nusE0726844"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":783,"author":{"gitId":"daitenshionyan"},"content":"vaccination add \u003cvar\u003eVAX_NAME\u003c/var\u003e [--g ...\u003cvar\u003eGROUP\u003c/var\u003e...]... \\","lastModifiedDate":"2023-04-03"},{"lineNumber":784,"author":{"gitId":"daitenshionyan"},"content":"    [--lal \u003cvar\u003eMIN_AGE\u003c/var\u003e] [--ual \u003cvar\u003eMAX_AGE\u003c/var\u003e] \\","lastModifiedDate":"2023-04-03"},{"lineNumber":785,"author":{"gitId":"daitenshionyan"},"content":"    [--a ...\u003cvar\u003eINGREDIENT\u003c/var\u003e...]... \\","lastModifiedDate":"2023-04-03"},{"lineNumber":786,"author":{"gitId":"daitenshionyan"},"content":"    [--h \u003cvar\u003eHISTORY_REQ\u003c/var\u003e]...","lastModifiedDate":"2023-04-03"},{"lineNumber":787,"author":{"gitId":"nusE0726844"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":788,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":789,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":790,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eGROUP\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":791,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMIN_AGE\u003c/var\u003e\u003c/code\u003e : `\u003cage\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":792,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMAX_AGE\u003c/var\u003e\u003c/code\u003e : `\u003cage\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":793,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eINGREDIENT\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":794,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eHISTORY_REQ\u003c/var\u003e\u003c/code\u003e : `\u003creq\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":795,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":796,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\" id\u003d\"vaccination-min-max-age-flag\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":797,"author":{"gitId":"daitenshionyan"},"content":":information_source: **Age flags**","lastModifiedDate":"2023-04-05"},{"lineNumber":798,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":799,"author":{"gitId":"daitenshionyan"},"content":"The flags `--lal` and `--ual` for minimum and maximum age stand for **\u003cu\u003eL\u003c/u\u003eower \u003cu\u003eA\u003c/u\u003ege \u003cu\u003eL\u003c/u\u003eimit** and **\u003cu\u003eU\u003c/u\u003epper \u003cu\u003eA\u003c/u\u003ege \u003cu\u003eL\u003c/u\u003eimit** respectively.","lastModifiedDate":"2023-04-05"},{"lineNumber":800,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":801,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":802,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\" id\u003d\"vaccination-add-command-tip\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":803,"author":{"gitId":"daitenshionyan"},"content":":bulb: **Breaking up vaccination creation**","lastModifiedDate":"2023-04-09"},{"lineNumber":804,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":805,"author":{"gitId":"daitenshionyan"},"content":"Attempting to add the entire data of a vaccination may result in very long input which is error prone. Users may and are advised to break the arguments up into smaller and more manageable pieces with the aid of the [`edit`](#edit---edit-a-vaccination) command.","lastModifiedDate":"2023-04-05"},{"lineNumber":806,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":807,"author":{"gitId":"daitenshionyan"},"content":"This can be done by:","lastModifiedDate":"2023-04-03"},{"lineNumber":808,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":809,"author":{"gitId":"daitenshionyan"},"content":"1. Adding a vaccination with only its name and without the rest of its attributes.","lastModifiedDate":"2023-04-03"},{"lineNumber":810,"author":{"gitId":"daitenshionyan"},"content":"2. Editing the added vaccination in step 1 to add an attribute.","lastModifiedDate":"2023-04-03"},{"lineNumber":811,"author":{"gitId":"daitenshionyan"},"content":"3. Repeating step 2 until all desired attributes are added to the vaccination.","lastModifiedDate":"2023-04-03"},{"lineNumber":812,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":813,"author":{"gitId":"daitenshionyan"},"content":"For example, to add the same vaccination as in the \u003ca href\u003d\"#vaccination-add-example\"\u003eexample\u003c/a\u003e, one can execute commands in the following order:","lastModifiedDate":"2023-04-03"},{"lineNumber":814,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":815,"author":{"gitId":"daitenshionyan"},"content":"1. `vaccination add ABC VAX`","lastModifiedDate":"2023-04-03"},{"lineNumber":816,"author":{"gitId":"daitenshionyan"},"content":"2. `vaccination edit ABC VAX --g ABC, VACCINATION`","lastModifiedDate":"2023-04-03"},{"lineNumber":817,"author":{"gitId":"daitenshionyan"},"content":"3. `vaccination edit ABC VAX --lal 5 --ual 50`","lastModifiedDate":"2023-04-03"},{"lineNumber":818,"author":{"gitId":"daitenshionyan"},"content":"4. `vaccination edit ABC VAX --i ALC-0315, ALC-0159`","lastModifiedDate":"2023-04-03"},{"lineNumber":819,"author":{"gitId":"daitenshionyan"},"content":"5. `vaccination edit ABC VAX --h NONE::ABC`","lastModifiedDate":"2023-04-03"},{"lineNumber":820,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":821,"author":{"gitId":"daitenshionyan"},"content":"Efficiency can be further improved by using vaccination [`find`](#find---locate-vaccinations) command. You can learn more \u003ca href\u003d\"#vax-filter-no-reset-usage\"\u003ehere\u003c/a\u003e.","lastModifiedDate":"2023-04-09"},{"lineNumber":822,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":823,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":824,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":825,"author":{"gitId":"daitenshionyan"},"content":"\u003ch5 id\u003d\"vaccination-add-example\"\u003eExample\u003c/h5\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":826,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":827,"author":{"gitId":"daitenshionyan"},"content":"Example assumes that the vaccination `ABC VAX` does not exist yet.","lastModifiedDate":"2023-03-30"},{"lineNumber":828,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":829,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":830,"author":{"gitId":"daitenshionyan"},"content":"vaccination add ABC VAX --g ABC, VACCINATION \\","lastModifiedDate":"2023-04-02"},{"lineNumber":831,"author":{"gitId":"daitenshionyan"},"content":"    --lal 5 --ual 50 \\","lastModifiedDate":"2023-04-02"},{"lineNumber":832,"author":{"gitId":"daitenshionyan"},"content":"    --i ALC-0315, ALC-0159 \\","lastModifiedDate":"2023-04-02"},{"lineNumber":833,"author":{"gitId":"daitenshionyan"},"content":"    --h NONE::ABC","lastModifiedDate":"2023-04-02"},{"lineNumber":834,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":835,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":836,"author":{"gitId":"daitenshionyan"},"content":"\u003csub\u003e:clipboard: : \u003ccode\u003evaccination add ABC VAX --g ABC, VACCINATION --lal 5 --ual 50 --i ALC-0315, ALC-0159 --h NONE::ABC\u003c/code\u003e\u003c/sub\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":837,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":838,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":839,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":840,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":841,"author":{"gitId":"daitenshionyan"},"content":"[INFO] Vaccination: ABC VAX added","lastModifiedDate":"2023-03-30"},{"lineNumber":842,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":843,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":844,"author":{"gitId":"francisyzy"},"content":"![Vaccination Add Detail Card](images/vaccination/ug/VaccinationAddDetailCard.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":845,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":846,"author":{"gitId":"nusE0726844"},"content":"##### Restrictions","lastModifiedDate":"2023-03-30"},{"lineNumber":847,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":848,"author":{"gitId":"nusE0726844"},"content":"* The name of the vaccination being added must not exist in the system.","lastModifiedDate":"2023-03-30"},{"lineNumber":849,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":850,"author":{"gitId":"daitenshionyan"},"content":"#### `detail` - View details of a vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":851,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":852,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-04-04"},{"lineNumber":853,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":854,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":855,"author":{"gitId":"francisyzy"},"content":"vaccination detail \u003cvar\u003eVACCINATION\u003c/var\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":856,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":857,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":858,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e : `\u003cvax-retriever\u003e`","lastModifiedDate":"2023-04-04"},{"lineNumber":859,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":860,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-04-04"},{"lineNumber":861,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":862,"author":{"gitId":"francisyzy"},"content":"Example assumes none of the default start-up vaccinations are deleted yet.","lastModifiedDate":"2023-04-04"},{"lineNumber":863,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":864,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":865,"author":{"gitId":"francisyzy"},"content":"vaccination detail Dose 1 (Moderna)","lastModifiedDate":"2023-04-04"},{"lineNumber":866,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":867,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":868,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":869,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":870,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":871,"author":{"gitId":"francisyzy"},"content":"[INFO] Detailing vaccination: Dose 1 (Moderna)","lastModifiedDate":"2023-04-04"},{"lineNumber":872,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":873,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":874,"author":{"gitId":"francisyzy"},"content":"![Vaccination Detail Example](images/vaccination/ug/VaccinationDetailExample.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":875,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":876,"author":{"gitId":"francisyzy"},"content":"##### Restrictions","lastModifiedDate":"2023-04-04"},{"lineNumber":877,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":878,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e must exist in the system.","lastModifiedDate":"2023-04-04"},{"lineNumber":879,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":880,"author":{"gitId":"daitenshionyan"},"content":"#### `list` - List all vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":881,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":882,"author":{"gitId":"francisyzy"},"content":"Clears previously set filters and list all vaccinations in the list view.","lastModifiedDate":"2023-04-04"},{"lineNumber":883,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":884,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-04-04"},{"lineNumber":885,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":886,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":887,"author":{"gitId":"francisyzy"},"content":"vaccination list","lastModifiedDate":"2023-04-04"},{"lineNumber":888,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":889,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":890,"author":{"gitId":"daitenshionyan"},"content":"#### `find` - Locate vaccinations","lastModifiedDate":"2023-04-08"},{"lineNumber":891,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":892,"author":{"gitId":"francisyzy"},"content":"Given a `\u003cstring\u003e`, search and filter out only vaccination whose names contains the character sequence of the given `\u003cstring\u003e` in the given order. Whitespace characters within the given `\u003cstring\u003e` are ignored and taken to be that any number of characters may between the two character sequences that the whitespace separates. The search is case-insensitive.","lastModifiedDate":"2023-04-04"},{"lineNumber":893,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":894,"author":{"gitId":"francisyzy"},"content":"For example, if given `Dose Dose 1`, the following will match:","lastModifiedDate":"2023-04-04"},{"lineNumber":895,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":896,"author":{"gitId":"francisyzy"},"content":"* `Dose Dose 1`","lastModifiedDate":"2023-04-04"},{"lineNumber":897,"author":{"gitId":"francisyzy"},"content":"* `Dose abc dose abc 1`","lastModifiedDate":"2023-04-04"},{"lineNumber":898,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":899,"author":{"gitId":"francisyzy"},"content":"However, the following will not:","lastModifiedDate":"2023-04-04"},{"lineNumber":900,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":901,"author":{"gitId":"francisyzy"},"content":"* `Dose 1` - Missing a `dose`.","lastModifiedDate":"2023-04-04"},{"lineNumber":902,"author":{"gitId":"francisyzy"},"content":"* `1 Dose Dose` - Wrong order.","lastModifiedDate":"2023-04-04"},{"lineNumber":903,"author":{"gitId":"francisyzy"},"content":"* `Dose dose` - Missing `1`.","lastModifiedDate":"2023-04-04"},{"lineNumber":904,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":905,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\" id\u003d\"vax-filter-no-reset-usage\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":906,"author":{"gitId":"daitenshionyan"},"content":":bulb: **`find` to improve efficiency**","lastModifiedDate":"2023-04-09"},{"lineNumber":907,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":908,"author":{"gitId":"daitenshionyan"},"content":"Filters applied by the last `find` command are designed to only be reset after a vaccination [`list`](#list---list-all-vaccination) command. This is so that you can refer to a vaccination by using the same vaccination. Below are some ways you may utilize this feature.","lastModifiedDate":"2023-04-09"},{"lineNumber":909,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":910,"author":{"gitId":"daitenshionyan"},"content":"**Breaking up vaccination addition**\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":911,"author":{"gitId":"daitenshionyan"},"content":"Adding on to \u003ca href\u003d\"#vaccination-add-command-tip\"\u003ebreaking up vaccination tip\u003c/a\u003e, `find` can be used to filter down to the name of the vaccination that is being created. Then, instead of referring to the vaccination by its name, you can refer to it by its index while using the `edit` command. This can be done before adding or editing the vaccination. So to perform the same action as in the \u003ca href\u003d\"#vaccination-add-command-tip\"\u003etip\u003c/a\u003e one can execute the following sequence of commands:","lastModifiedDate":"2023-04-09"},{"lineNumber":912,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":913,"author":{"gitId":"daitenshionyan"},"content":"1. `vaccination find ABC VAX`","lastModifiedDate":"2023-04-09"},{"lineNumber":914,"author":{"gitId":"daitenshionyan"},"content":"2. `vaccination add ABC VAX`","lastModifiedDate":"2023-04-09"},{"lineNumber":915,"author":{"gitId":"daitenshionyan"},"content":"3. `vaccination edit 1 --g ABC, VACCINATION`","lastModifiedDate":"2023-04-09"},{"lineNumber":916,"author":{"gitId":"daitenshionyan"},"content":"4. The remaining follow a similar pattern by replacing `ABC VAX` with `1`.","lastModifiedDate":"2023-04-09"},{"lineNumber":917,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":918,"author":{"gitId":"daitenshionyan"},"content":"**Adding appointments**\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":919,"author":{"gitId":"daitenshionyan"},"content":"A similar pattern can be followed for appointments as well when scheduling appointments for multiple patient for the the same vaccination. Here is an example of how you can schedule an appointment for the created vaccination \"ABC VAX\" to the first 3 patients on start up:","lastModifiedDate":"2023-04-09"},{"lineNumber":920,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":921,"author":{"gitId":"daitenshionyan"},"content":"1. `vaccination find ABC VAX`","lastModifiedDate":"2023-04-09"},{"lineNumber":922,"author":{"gitId":"daitenshionyan"},"content":"2. `appointment add --p 1 --v 1 --s 2024-3-5 1655 --e 2024-3-5 1700`","lastModifiedDate":"2023-04-09"},{"lineNumber":923,"author":{"gitId":"daitenshionyan"},"content":"3. `appointment add --p 2 --v 1 --s 2024-3-5 1655 --e 2024-3-5 1700`","lastModifiedDate":"2023-04-09"},{"lineNumber":924,"author":{"gitId":"daitenshionyan"},"content":"4. `appointment add --p 3 --v 1 --s 2024-3-5 1655 --e 2024-3-5 1700`","lastModifiedDate":"2023-04-09"},{"lineNumber":925,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":926,"author":{"gitId":"daitenshionyan"},"content":"For more details on appointment `add` you may read up more [here](#add---add-an-appointment).","lastModifiedDate":"2023-04-09"},{"lineNumber":927,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":928,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":929,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":930,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-04-04"},{"lineNumber":931,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":932,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":933,"author":{"gitId":"francisyzy"},"content":"vaccination find \u003cvar\u003eVAX_NAME\u003c/var\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":934,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":935,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":936,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cstring\u003e`","lastModifiedDate":"2023-04-04"},{"lineNumber":937,"author":{"gitId":"francisyzy"},"content":"  * The character sequence in the vaccination\u0027s name to search for.","lastModifiedDate":"2023-04-04"},{"lineNumber":938,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":939,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-04-04"},{"lineNumber":940,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":941,"author":{"gitId":"daitenshionyan"},"content":"Example assumes that none of the start-up vaccination data are deleted yet.","lastModifiedDate":"2023-04-05"},{"lineNumber":942,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":943,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":944,"author":{"gitId":"francisyzy"},"content":"vaccination find dose 1","lastModifiedDate":"2023-04-04"},{"lineNumber":945,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":946,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":947,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":948,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":949,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":950,"author":{"gitId":"francisyzy"},"content":"[INFO] 3 vaccinations listed!","lastModifiedDate":"2023-04-04"},{"lineNumber":951,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":952,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":953,"author":{"gitId":"francisyzy"},"content":"![Vaccination Find Example](images/vaccination/ug/VaccinationFindExample.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":954,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":955,"author":{"gitId":"francisyzy"},"content":"##### Restrictions","lastModifiedDate":"2023-04-04"},{"lineNumber":956,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":957,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e cannot be blank.","lastModifiedDate":"2023-04-04"},{"lineNumber":958,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":959,"author":{"gitId":"daitenshionyan"},"content":"#### `edit` - Edit a vaccination","lastModifiedDate":"2023-04-05"},{"lineNumber":960,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":961,"author":{"gitId":"nusE0726844"},"content":"Updates the attributes of the specified vaccination to the attributes specified. If any of the optional arguments","lastModifiedDate":"2023-03-30"},{"lineNumber":962,"author":{"gitId":"nusE0726844"},"content":"are omitted, they will be set to what they were before.","lastModifiedDate":"2023-03-30"},{"lineNumber":963,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":964,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":965,"author":{"gitId":"daitenshionyan"},"content":":exclamation: **WARNING**: VMS does not re-check the eligibility of patients with active appointments of the edited vaccination. As such, if a vaccination is edited such that a patient with an active appointment is now unable to take that vaccination, no warning or error messages will be shown and the state of all appointments will remain.","lastModifiedDate":"2023-04-08"},{"lineNumber":966,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":967,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":968,"author":{"gitId":"daitenshionyan"},"content":"##### Syntax","lastModifiedDate":"2023-03-28"},{"lineNumber":969,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":970,"author":{"gitId":"nusE0726844"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":971,"author":{"gitId":"daitenshionyan"},"content":"vaccination edit \u003cvar\u003eVACCINATION\u003c/var\u003e [--n \u003cvar\u003eNEW_NAME\u003c/var\u003e] [--g ...\u003cvar\u003eGROUP\u003c/var\u003e...] \\","lastModifiedDate":"2023-04-03"},{"lineNumber":972,"author":{"gitId":"nusE0726844"},"content":"    [--lal \u003cvar\u003eMIN_AGE\u003c/var\u003e] [--ual \u003cvar\u003eMAX_AGE\u003c/var\u003e] \\","lastModifiedDate":"2023-03-30"},{"lineNumber":973,"author":{"gitId":"daitenshionyan"},"content":"    [--a ...\u003cvar\u003eINGREDIENT\u003c/var\u003e...]... [--h \u003cvar\u003eHISTORY_REQ\u003c/var\u003e]... \\","lastModifiedDate":"2023-03-30"},{"lineNumber":974,"author":{"gitId":"daitenshionyan"},"content":"    [--set \u003cvar\u003eIS_SET\u003c/var\u003e]","lastModifiedDate":"2023-03-30"},{"lineNumber":975,"author":{"gitId":"nusE0726844"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":976,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":977,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e : `\u003cvax-retriever\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":978,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eNEW_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":979,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eGROUP\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":980,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMIN_AGE\u003c/var\u003e\u003c/code\u003e : `\u003cage\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":981,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMAX_AGE\u003c/var\u003e\u003c/code\u003e : `\u003cage\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":982,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eINGREDIENT\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":983,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eHISTORY_REQ\u003c/var\u003e\u003c/code\u003e : `\u003creq\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":984,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eIS_SET\u003c/var\u003e\u003c/code\u003e : `\u003cboolean\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":985,"author":{"gitId":"daitenshionyan"},"content":"  * `true` to replace all list-like vaccination attributes (**Groups**, **Ingredients** and **History requirements**) with the one specified in the command or `false` to append them.","lastModifiedDate":"2023-03-30"},{"lineNumber":986,"author":{"gitId":"daitenshionyan"},"content":"  * It is `false` by default.","lastModifiedDate":"2023-03-30"},{"lineNumber":987,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":988,"author":{"gitId":"nusE0726844"},"content":"##### Example","lastModifiedDate":"2023-03-30"},{"lineNumber":989,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":990,"author":{"gitId":"daitenshionyan"},"content":"Following examples are independent of each other and follow after vaccination \u003ca href\u003d\"#vaccination-add-example\"\u003eadd\u003c/a\u003e example and then an execution of [`list`](#list---list-all-vaccination).","lastModifiedDate":"2023-04-09"},{"lineNumber":991,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":992,"author":{"gitId":"daitenshionyan"},"content":"###### Set example","lastModifiedDate":"2023-03-30"},{"lineNumber":993,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":994,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":995,"author":{"gitId":"daitenshionyan"},"content":"vaccination edit INDEX::1 --lal 5 --ual 25 --i NaOH --set true","lastModifiedDate":"2023-03-30"},{"lineNumber":996,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":997,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":998,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":999,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1000,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1001,"author":{"gitId":"daitenshionyan"},"content":"[INFO] Vaccination: ABC VAX updated","lastModifiedDate":"2023-03-30"},{"lineNumber":1002,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1003,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1004,"author":{"gitId":"francisyzy"},"content":"![Vaccination Edit Detail Card 1](images/vaccination/ug/VaccinationEditDetailCard_1.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":1005,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1006,"author":{"gitId":"daitenshionyan"},"content":"###### Append example","lastModifiedDate":"2023-03-30"},{"lineNumber":1007,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1008,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1009,"author":{"gitId":"daitenshionyan"},"content":"vaccination edit INDEX::1 --lal 5 --ual 25 --i NaOH","lastModifiedDate":"2023-03-30"},{"lineNumber":1010,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1011,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1012,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":1013,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1014,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1015,"author":{"gitId":"daitenshionyan"},"content":"[INFO] Vaccination: ABC VAX updated","lastModifiedDate":"2023-03-30"},{"lineNumber":1016,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1017,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1018,"author":{"gitId":"francisyzy"},"content":"![Vaccination Edit Detail Card 2](images/vaccination/ug/VaccinationEditDetailCard_2.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":1019,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1020,"author":{"gitId":"nusE0726844"},"content":"##### Restrictions","lastModifiedDate":"2023-03-30"},{"lineNumber":1021,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1022,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e must exist in the system.","lastModifiedDate":"2023-03-28"},{"lineNumber":1023,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eNEW_NAME\u003c/var\u003e\u003c/code\u003e must be a name that does not yet exist in the system unless it is the same as the vaccination being updated.","lastModifiedDate":"2023-03-28"},{"lineNumber":1024,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1025,"author":{"gitId":"daitenshionyan"},"content":"#### `delete` - Delete a vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":1026,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1027,"author":{"gitId":"daitenshionyan"},"content":"Deletion of a vaccination may cause appointments to be come invalid as the vaccination will no longer exist in the system. `VMS` will check for this and prevent such deletions from happening. However, an additional `--force true` argument will force the change to happen which will delete all invalid appointments after the change.","lastModifiedDate":"2023-03-30"},{"lineNumber":1028,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":1029,"author":{"gitId":"daitenshionyan"},"content":"##### Syntax","lastModifiedDate":"2023-03-28"},{"lineNumber":1030,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1031,"author":{"gitId":"nusE0726844"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":1032,"author":{"gitId":"daitenshionyan"},"content":"vaccination delete \u003cvar\u003eVACCINATION\u003c/var\u003e [--force \u003cvar\u003eIS_FORCE\u003c/var\u003e]","lastModifiedDate":"2023-03-30"},{"lineNumber":1033,"author":{"gitId":"nusE0726844"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":1034,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1035,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e : `\u003cvax-retriever\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":1036,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eIS_FORCE\u003c/var\u003e\u003c/code\u003e : `\u003cboolean\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":1037,"author":{"gitId":"daitenshionyan"},"content":"  * `true` to force the change that the command will make and `false` to not.","lastModifiedDate":"2023-03-30"},{"lineNumber":1038,"author":{"gitId":"daitenshionyan"},"content":"  * By default, its value is `false`.","lastModifiedDate":"2023-03-30"},{"lineNumber":1039,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1040,"author":{"gitId":"nusE0726844"},"content":"##### Example","lastModifiedDate":"2023-03-30"},{"lineNumber":1041,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1042,"author":{"gitId":"daitenshionyan"},"content":"Examples follow after vaccination [`clear`](#clear---clear-all-vaccination-data) and then [`add`](#add---add-a-vaccination) command examples and then [`list`](#list---list-all-vaccination). The are also independent of one another.","lastModifiedDate":"2023-04-09"},{"lineNumber":1043,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1044,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1045,"author":{"gitId":"francisyzy"},"content":"vaccination delete 1","lastModifiedDate":"2023-03-31"},{"lineNumber":1046,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1047,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1048,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1049,"author":{"gitId":"francisyzy"},"content":"vaccination delete INDEX::1","lastModifiedDate":"2023-03-31"},{"lineNumber":1050,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1051,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1052,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1053,"author":{"gitId":"francisyzy"},"content":"vaccination delete ABC VAX","lastModifiedDate":"2023-03-31"},{"lineNumber":1054,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1055,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1056,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1057,"author":{"gitId":"francisyzy"},"content":"vaccination delete NAME::ABC VAX","lastModifiedDate":"2023-03-31"},{"lineNumber":1058,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1059,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1060,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":1061,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1062,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1063,"author":{"gitId":"daitenshionyan"},"content":"vaccination: ABC VAX deleted","lastModifiedDate":"2023-03-30"},{"lineNumber":1064,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1065,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1066,"author":{"gitId":"daitenshionyan"},"content":"##### Restrictions","lastModifiedDate":"2023-03-30"},{"lineNumber":1067,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1068,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e must exist in the system.","lastModifiedDate":"2023-04-04"},{"lineNumber":1069,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1070,"author":{"gitId":"daitenshionyan"},"content":"#### `clear` - Clear all vaccination data","lastModifiedDate":"2023-04-08"},{"lineNumber":1071,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1072,"author":{"gitId":"daitenshionyan"},"content":"Similar to vaccination delete, deletion of vaccinations may cause some appointment to become invalid. Add an additional `--force true` to force the change.","lastModifiedDate":"2023-03-30"},{"lineNumber":1073,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1074,"author":{"gitId":"daitenshionyan"},"content":"##### Syntax","lastModifiedDate":"2023-04-05"},{"lineNumber":1075,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1076,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1077,"author":{"gitId":"daitenshionyan"},"content":"vaccination clear --force \u003cvar\u003eIS_FORCE\u003c/var\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1078,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":1079,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1080,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eIS_FORCE\u003c/var\u003e\u003c/code\u003e : `\u003cboolean\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1081,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1082,"author":{"gitId":"daitenshionyan"},"content":"##### Example","lastModifiedDate":"2023-03-28"},{"lineNumber":1083,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1084,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-28"},{"lineNumber":1085,"author":{"gitId":"daitenshionyan"},"content":"vaccination clear","lastModifiedDate":"2023-03-28"},{"lineNumber":1086,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":1087,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":1088,"author":{"gitId":"daitenshionyan"},"content":"Output:","lastModifiedDate":"2023-04-05"},{"lineNumber":1089,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1090,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-30"},{"lineNumber":1091,"author":{"gitId":"daitenshionyan"},"content":"[INFO] Vaccinations successfully cleared","lastModifiedDate":"2023-03-30"},{"lineNumber":1092,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-30"},{"lineNumber":1093,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":1094,"author":{"gitId":"daitenshionyan"},"content":"### `appointment` - Appointment functionalities","lastModifiedDate":"2023-03-09"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1096,"author":{"gitId":"nusE0726844"},"content":"| Attribute     | Type           | Description                                |","lastModifiedDate":"2023-03-30"},{"lineNumber":1097,"author":{"gitId":"daitenshionyan"},"content":"| ------------- | -------------- | ------------------------------------------ |","lastModifiedDate":"2023-04-05"},{"lineNumber":1098,"author":{"gitId":"daitenshionyan"},"content":"| Patient id    | `\u003cindex\u003e`      | The patient id of the appointment.         |","lastModifiedDate":"2023-04-05"},{"lineNumber":1099,"author":{"gitId":"daitenshionyan"},"content":"| Starting time | `\u003cdate\u003e`       | The starting time of the appointment.      |","lastModifiedDate":"2023-04-05"},{"lineNumber":1100,"author":{"gitId":"daitenshionyan"},"content":"| Ending time   | `\u003cdate\u003e`       | The ending time of the appointment.        |","lastModifiedDate":"2023-04-05"},{"lineNumber":1101,"author":{"gitId":"daitenshionyan"},"content":"| Vaccination   | `\u003cgroup-name\u003e` | The vaccine type used for the appointment. |","lastModifiedDate":"2023-04-05"},{"lineNumber":1102,"author":{"gitId":"daitenshionyan"},"content":"| Status        | `\u003cboolean\u003e`    | The completion status of the appointment.  |","lastModifiedDate":"2023-04-05"},{"lineNumber":1103,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1104,"author":{"gitId":"daitenshionyan"},"content":"#### `add` - Add an appointment","lastModifiedDate":"2023-03-09"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":1106,"author":{"gitId":"nusE0726844"},"content":"Adds a new appointment to the appointment manager","lastModifiedDate":"2023-03-30"},{"lineNumber":1107,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1108,"author":{"gitId":"nusE0726844"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":1109,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1110,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1111,"author":{"gitId":"daitenshionyan"},"content":"appointment add --p \u003cvar\u003ePATIENT_ID\u003c/var\u003e --s \u003cvar\u003eSTARTING_TIME\u003c/var\u003e --e \u003cvar\u003eENDING_TIME\u003c/var\u003e --v \u003cvar\u003eVACCINATION\u003c/var\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1112,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1113,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1114,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cindex\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1115,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eSTARTING_TIME\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1116,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eENDING_TIME\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1117,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e : `\u003cvax-retriever\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1118,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1119,"author":{"gitId":"nusE0726844"},"content":"##### Example","lastModifiedDate":"2023-03-30"},{"lineNumber":1120,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1121,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":1122,"author":{"gitId":"francisyzy"},"content":"appointment add --p 5 --s 2023-05-01 0700 --e 2023-05-01 0800 --v Dose 1 (Moderna)","lastModifiedDate":"2023-04-04"},{"lineNumber":1123,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":1124,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1125,"author":{"gitId":"nusE0726844"},"content":"Output:","lastModifiedDate":"2023-04-09"},{"lineNumber":1126,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1127,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1128,"author":{"gitId":"nusE0726844"},"content":"[INFO] New appointment added: 5 has an appointment at 2023-05-01T07:00","lastModifiedDate":"2023-04-09"},{"lineNumber":1129,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1130,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1131,"author":{"gitId":"nusE0726844"},"content":"![Appointment Add Appointment](images/appointment/ug/appointmentExampleAdd.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1132,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1133,"author":{"gitId":"nusE0726844"},"content":"##### Restrictions","lastModifiedDate":"2023-03-30"},{"lineNumber":1134,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1135,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e must refer to an existing patient in the system.","lastModifiedDate":"2023-04-05"},{"lineNumber":1136,"author":{"gitId":"daitenshionyan"},"content":"* The patient referred to by \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e must not have any upcoming appointments that are not yet completed.","lastModifiedDate":"2023-04-05"},{"lineNumber":1137,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eSTART_TIME\u003c/var\u003e\u003c/code\u003e must be after the current locale time.","lastModifiedDate":"2023-04-05"},{"lineNumber":1138,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eEND_TIME\u003c/var\u003e\u003c/code\u003e must be after the given starting time.","lastModifiedDate":"2023-04-05"},{"lineNumber":1139,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e must refer to an existing vaccination in the system.","lastModifiedDate":"2023-04-05"},{"lineNumber":1140,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1141,"author":{"gitId":"nusE0726844"},"content":"#### `list` - List all appointments","lastModifiedDate":"2023-03-30"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1143,"author":{"gitId":"nusE0726844"},"content":"Resets the view of the appointment pane to display all the appointments. Useful command after using the find command.","lastModifiedDate":"2023-03-30"},{"lineNumber":1144,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1145,"author":{"gitId":"nusE0726844"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":1146,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1147,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1148,"author":{"gitId":"nusE0726844"},"content":"appointment list","lastModifiedDate":"2023-03-30"},{"lineNumber":1149,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1150,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1151,"author":{"gitId":"nusE0726844"},"content":"Output:","lastModifiedDate":"2023-04-09"},{"lineNumber":1152,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1153,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1154,"author":{"gitId":"nusE0726844"},"content":"[INFO] Listed all appointments","lastModifiedDate":"2023-04-09"},{"lineNumber":1155,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1156,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1157,"author":{"gitId":"nusE0726844"},"content":"![Appointment List Appointment](images/appointment/ug/appointmentExampleAdd.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1158,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1159,"author":{"gitId":"daitenshionyan"},"content":"#### `find` - Locate appointments","lastModifiedDate":"2023-04-08"},{"lineNumber":1160,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1161,"author":{"gitId":"nusE0726844"},"content":"List all the appointments that matches the predicates provided.","lastModifiedDate":"2023-03-30"},{"lineNumber":1162,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1163,"author":{"gitId":"francisyzy"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e : List appointments of a specific patient","lastModifiedDate":"2023-04-04"},{"lineNumber":1164,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eSTARTING_TIME\u003c/var\u003e\u003c/code\u003e : List appointments after the starting time","lastModifiedDate":"2023-03-30"},{"lineNumber":1165,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eENDING_TIME\u003c/var\u003e\u003c/code\u003e : List appointments before the ending time","lastModifiedDate":"2023-03-30"},{"lineNumber":1166,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e : List appointments that uses the specific vaccination","lastModifiedDate":"2023-04-05"},{"lineNumber":1167,"author":{"gitId":"nusE0726844"},"content":"* \u003ccode\u003e\u003cvar\u003eKEYWORDS\u003c/var\u003e\u003c/code\u003e : List appointments that matches the keywords","lastModifiedDate":"2023-03-30"},{"lineNumber":1168,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1169,"author":{"gitId":"nusE0726844"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":1170,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1171,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1172,"author":{"gitId":"daitenshionyan"},"content":"appointment find {...\u003cvar\u003eKEYWORDS\u003c/var\u003e... | [--\u003cvar\u003eATTRIBUTE_FLAG\u003c/var\u003e \u003cvar\u003eFLAG_ARGUMENT\u003c/var\u003e]+}","lastModifiedDate":"2023-04-05"},{"lineNumber":1173,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1174,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1175,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eKEYWORD\u003c/var\u003e\u003c/code\u003e : `\u003cstring\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1176,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1177,"author":{"gitId":"daitenshionyan"},"content":"##### Find by flag","lastModifiedDate":"2023-04-05"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1179,"author":{"gitId":"daitenshionyan"},"content":"\u003ccode\u003e\u003cvar\u003eATTRIBUTE_FLAG\u003c/var\u003e\u003c/code\u003e and their corresponding \u003ccode\u003e\u003cvar\u003eFLAG_ARGUMENT\u003c/var\u003e\u003c/code\u003e have similar mappings and requirements to to appointment\u0027s [`add`](#add---add-an-appointment). That is,","lastModifiedDate":"2023-04-05"},{"lineNumber":1180,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1181,"author":{"gitId":"daitenshionyan"},"content":"* `--p` -\u003e \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cinteger\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1182,"author":{"gitId":"daitenshionyan"},"content":"* `--s` -\u003e \u003ccode\u003e\u003cvar\u003eSTARTING_TIME\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1183,"author":{"gitId":"daitenshionyan"},"content":"* `--e` -\u003e \u003ccode\u003e\u003cvar\u003eENDING_TIME\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1184,"author":{"gitId":"daitenshionyan"},"content":"* `--v` -\u003e \u003ccode\u003e\u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1185,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1186,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1188,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":1189,"author":{"gitId":"francisyzy"},"content":"appointment find --p 1","lastModifiedDate":"2023-04-04"},{"lineNumber":1190,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":1191,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1192,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1193,"author":{"gitId":"nusE0726844"},"content":"appointment find --v Dose 1","lastModifiedDate":"2023-04-09"},{"lineNumber":1194,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1195,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1196,"author":{"gitId":"nusE0726844"},"content":"Output:","lastModifiedDate":"2023-04-09"},{"lineNumber":1197,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1198,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1199,"author":{"gitId":"nusE0726844"},"content":"[INFO] 0 appointments listed!","lastModifiedDate":"2023-04-09"},{"lineNumber":1200,"author":{"gitId":"nusE0726844"},"content":"[INFO] 1 appointments listed!","lastModifiedDate":"2023-04-09"},{"lineNumber":1201,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1202,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1203,"author":{"gitId":"nusE0726844"},"content":"![Appointment Find Appointment Flag](images/appointment/ug/appointmentExampleAdd.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1204,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1205,"author":{"gitId":"nusE0726844"},"content":"##### Find by keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1206,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1207,"author":{"gitId":"nusE0726844"},"content":"This feature searches for appointments where either","lastModifiedDate":"2023-04-09"},{"lineNumber":1208,"author":{"gitId":"nusE0726844"},"content":"the appointment\u0027s starting time or the type of vaccine used","lastModifiedDate":"2023-04-09"},{"lineNumber":1209,"author":{"gitId":"nusE0726844"},"content":"matches with the \u003cvar\u003e`KEYWORDS`\u003c/var\u003e provided.","lastModifiedDate":"2023-04-09"},{"lineNumber":1210,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1211,"author":{"gitId":"nusE0726844"},"content":"Priority: Appointment\u0027s starting time \u003e Type of vaccine used","lastModifiedDate":"2023-04-09"},{"lineNumber":1212,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1213,"author":{"gitId":"nusE0726844"},"content":"##### Example","lastModifiedDate":"2023-04-09"},{"lineNumber":1214,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1215,"author":{"gitId":"nusE0726844"},"content":"Finds all appointments that uses \"Dose 1\" vaccines","lastModifiedDate":"2023-04-09"},{"lineNumber":1216,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1217,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-04-05"},{"lineNumber":1218,"author":{"gitId":"francisyzy"},"content":"appointment find Dose 1","lastModifiedDate":"2023-04-04"},{"lineNumber":1219,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1221,"author":{"gitId":"nusE0726844"},"content":"Output:","lastModifiedDate":"2023-04-09"},{"lineNumber":1222,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1223,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1224,"author":{"gitId":"nusE0726844"},"content":"[INFO] 1 appointments listed!","lastModifiedDate":"2023-04-09"},{"lineNumber":1225,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1226,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1227,"author":{"gitId":"nusE0726844"},"content":"![Appointment Find Appointment Keyword](images/appointment/ug/appointmentExampleAdd.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1228,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1229,"author":{"gitId":"nusE0726844"},"content":"##### Remarks","lastModifiedDate":"2023-04-09"},{"lineNumber":1230,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1231,"author":{"gitId":"nusE0726844"},"content":"This feature prioritises the provided flags over the keywords.","lastModifiedDate":"2023-04-09"},{"lineNumber":1232,"author":{"gitId":"nusE0726844"},"content":"If a flag is provided, then the returned list of appointments will use the provided flags","lastModifiedDate":"2023-04-09"},{"lineNumber":1233,"author":{"gitId":"nusE0726844"},"content":"and ignore the keyword even if it were provided.","lastModifiedDate":"2023-04-09"},{"lineNumber":1234,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1235,"author":{"gitId":"francisyzy"},"content":"#### `edit` - Edit an appointment","lastModifiedDate":"2023-04-04"},{"lineNumber":1236,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1237,"author":{"gitId":"francisyzy"},"content":"Edits the details of an existing appointment.","lastModifiedDate":"2023-04-04"},{"lineNumber":1238,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1239,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-04-04"},{"lineNumber":1240,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1241,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1242,"author":{"gitId":"daitenshionyan"},"content":"appointment edit \u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e [--p \u003cvar\u003ePATIENT_ID\u003c/var\u003e] \\","lastModifiedDate":"2023-04-05"},{"lineNumber":1243,"author":{"gitId":"daitenshionyan"},"content":"    [--s \u003cvar\u003eSTARTING_TIME\u003c/var\u003e] [--e \u003cvar\u003eENDING_TIME\u003c/var\u003e] \\","lastModifiedDate":"2023-04-05"},{"lineNumber":1244,"author":{"gitId":"daitenshionyan"},"content":"    [--v \u003cvar\u003eVACCINATION\u003c/var\u003e]","lastModifiedDate":"2023-04-05"},{"lineNumber":1245,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1246,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1247,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cindex\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1248,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cindex\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1249,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eSTARTING_TIME\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1250,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eENDING_TIME\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1251,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e : `\u003cvax-retriever\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1252,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1253,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-04-04"},{"lineNumber":1254,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1255,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":1256,"author":{"gitId":"francisyzy"},"content":"appointment edit 1 --p 5 --s 2024-03-05 0700 --e 2024-03-05 0800 --v Dose 1 (Pfizer)","lastModifiedDate":"2023-04-04"},{"lineNumber":1257,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":1258,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1259,"author":{"gitId":"nusE0726844"},"content":"Output:","lastModifiedDate":"2023-04-09"},{"lineNumber":1260,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1261,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1262,"author":{"gitId":"nusE0726844"},"content":"[INFO] Edited Appointment: 5 has an appointment at 2024-03-05T07:00","lastModifiedDate":"2023-04-09"},{"lineNumber":1263,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1264,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1265,"author":{"gitId":"nusE0726844"},"content":"![Appointment Edit Appointment](images/appointment/ug/appointmentExampleEdit.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1266,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1267,"author":{"gitId":"francisyzy"},"content":"##### Restrictions","lastModifiedDate":"2023-04-04"},{"lineNumber":1268,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1269,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e must be an existing index in the appointment manager.","lastModifiedDate":"2023-04-05"},{"lineNumber":1270,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e must be of an appointment that has not yet passed.","lastModifiedDate":"2023-04-05"},{"lineNumber":1271,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e must refer to an existing patient in the system.","lastModifiedDate":"2023-04-05"},{"lineNumber":1272,"author":{"gitId":"daitenshionyan"},"content":"* The patient referred to by \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e must not have any upcoming appointments that are not yet completed.","lastModifiedDate":"2023-04-05"},{"lineNumber":1273,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eSTART_TIME\u003c/var\u003e\u003c/code\u003e must be after the current locale time.","lastModifiedDate":"2023-04-05"},{"lineNumber":1274,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eEND_TIME\u003c/var\u003e\u003c/code\u003e must be after the given starting time.","lastModifiedDate":"2023-04-05"},{"lineNumber":1275,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e must refer to an existing vaccination in the system.","lastModifiedDate":"2023-04-05"},{"lineNumber":1276,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":1277,"author":{"gitId":"daitenshionyan"},"content":"#### `mark` - Mark an appointment as completed","lastModifiedDate":"2023-04-08"},{"lineNumber":1278,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":1279,"author":{"gitId":"nusE0726844"},"content":"Marks an existing appointment as completed.","lastModifiedDate":"2023-03-30"},{"lineNumber":1280,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1281,"author":{"gitId":"nusE0726844"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":1282,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1283,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1284,"author":{"gitId":"daitenshionyan"},"content":"appointment mark \u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1285,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1286,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1287,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cindex\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1288,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1289,"author":{"gitId":"nusE0726844"},"content":"##### Example","lastModifiedDate":"2023-03-30"},{"lineNumber":1290,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1291,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":1292,"author":{"gitId":"francisyzy"},"content":"appointment mark 1","lastModifiedDate":"2023-04-04"},{"lineNumber":1293,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":1294,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1295,"author":{"gitId":"nusE0726844"},"content":"Output:","lastModifiedDate":"2023-04-09"},{"lineNumber":1296,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1297,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1298,"author":{"gitId":"nusE0726844"},"content":"[INFO] Marked Appointment: 5 has an appointment at 2024-03-05T07:00","lastModifiedDate":"2023-04-09"},{"lineNumber":1299,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1300,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1301,"author":{"gitId":"nusE0726844"},"content":"![Appointment Mark Appointment](images/appointment/ug/appointmentExampleMark.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1302,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1303,"author":{"gitId":"nusE0726844"},"content":"##### Restrictions","lastModifiedDate":"2023-03-30"},{"lineNumber":1304,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1305,"author":{"gitId":"daitenshionyan"},"content":"* The \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e must be an existing index in the appointment manager.","lastModifiedDate":"2023-04-05"},{"lineNumber":1306,"author":{"gitId":"nusE0726844"},"content":"* The specified appointment should not already be done.","lastModifiedDate":"2023-03-30"},{"lineNumber":1307,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1308,"author":{"gitId":"daitenshionyan"},"content":"#### `unmark` - Unmark a completed appointment","lastModifiedDate":"2023-04-08"},{"lineNumber":1309,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1310,"author":{"gitId":"nusE0726844"},"content":"Changes the completion status to not done.","lastModifiedDate":"2023-03-30"},{"lineNumber":1311,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1312,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1313,"author":{"gitId":"daitenshionyan"},"content":":exclamation: **WARNING**: VMS does not check if the patient is still eligible to take the vaccination of the unmarked appointment. Thus, no warming messages or error messages will show if the patient is unable to take the vaccination of the unmarked appointment.","lastModifiedDate":"2023-04-08"},{"lineNumber":1314,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1315,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1316,"author":{"gitId":"nusE0726844"},"content":"##### Syntax","lastModifiedDate":"2023-03-30"},{"lineNumber":1317,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1318,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1319,"author":{"gitId":"daitenshionyan"},"content":"appointment unmark \u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1320,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1321,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":1322,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cindex\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1323,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1324,"author":{"gitId":"nusE0726844"},"content":"##### Example","lastModifiedDate":"2023-03-30"},{"lineNumber":1325,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1326,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":1327,"author":{"gitId":"francisyzy"},"content":"appointment unmark 1","lastModifiedDate":"2023-04-04"},{"lineNumber":1328,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":1329,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1330,"author":{"gitId":"nusE0726844"},"content":"Output:","lastModifiedDate":"2023-04-09"},{"lineNumber":1331,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1332,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1333,"author":{"gitId":"nusE0726844"},"content":"[INFO] Unmarked Appointment: 5 has an appointment at 2024-03-05T07:00","lastModifiedDate":"2023-04-09"},{"lineNumber":1334,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1335,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1336,"author":{"gitId":"nusE0726844"},"content":"![Appointment Unmark Appointment](images/appointment/ug/appointmentExampleUnmark.PNG)","lastModifiedDate":"2023-04-09"},{"lineNumber":1337,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1338,"author":{"gitId":"nusE0726844"},"content":"##### Restrictions","lastModifiedDate":"2023-03-30"},{"lineNumber":1339,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1340,"author":{"gitId":"daitenshionyan"},"content":"* The \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e must be an existing index in the appointment manager.","lastModifiedDate":"2023-04-05"},{"lineNumber":1341,"author":{"gitId":"nusE0726844"},"content":"* The specified appointment should already be done.","lastModifiedDate":"2023-03-30"},{"lineNumber":1342,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1343,"author":{"gitId":"francisyzy"},"content":"#### `delete` - Delete an appointment","lastModifiedDate":"2023-03-31"},{"lineNumber":1344,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1345,"author":{"gitId":"francisyzy"},"content":"Removes the specified appointment from the appointment manager.","lastModifiedDate":"2023-03-31"},{"lineNumber":1346,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1347,"author":{"gitId":"francisyzy"},"content":"##### Syntax","lastModifiedDate":"2023-03-31"},{"lineNumber":1348,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1349,"author":{"gitId":"francisyzy"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1350,"author":{"gitId":"daitenshionyan"},"content":"appointment delete \u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1351,"author":{"gitId":"francisyzy"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":1352,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1353,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cindex\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1354,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1355,"author":{"gitId":"francisyzy"},"content":"##### Example","lastModifiedDate":"2023-03-31"},{"lineNumber":1356,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1357,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-04-04"},{"lineNumber":1358,"author":{"gitId":"nusE0726844"},"content":"appointment delete 1","lastModifiedDate":"2023-04-09"},{"lineNumber":1359,"author":{"gitId":"nusE0726844"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":1360,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1361,"author":{"gitId":"nusE0726844"},"content":"Output:","lastModifiedDate":"2023-04-09"},{"lineNumber":1362,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1363,"author":{"gitId":"nusE0726844"},"content":"```text","lastModifiedDate":"2023-04-09"},{"lineNumber":1364,"author":{"gitId":"nusE0726844"},"content":"[INFO] Deleted Appointment: 5 has an appointment at 2024-03-05T07:00","lastModifiedDate":"2023-04-09"},{"lineNumber":1365,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":1366,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1367,"author":{"gitId":"francisyzy"},"content":"##### Restrictions","lastModifiedDate":"2023-03-31"},{"lineNumber":1368,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1369,"author":{"gitId":"daitenshionyan"},"content":"* The \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e must be an existing index in the appointment manager.","lastModifiedDate":"2023-04-05"},{"lineNumber":1370,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1371,"author":{"gitId":"daitenshionyan"},"content":"## Data files","lastModifiedDate":"2023-04-05"},{"lineNumber":1372,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":1373,"author":{"gitId":"daitenshionyan"},"content":"VMS automatically saves your data after every successful command execution to `[JAR file location]/data`. They are saved as JSON files and users are welcomed to update the data directly by editing these files.","lastModifiedDate":"2023-04-05"},{"lineNumber":1374,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":1375,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1376,"author":{"gitId":"daitenshionyan"},"content":":exclamation: **Errors while editing JSON file**","lastModifiedDate":"2023-04-05"},{"lineNumber":1377,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1378,"author":{"gitId":"daitenshionyan"},"content":"In most cases, if there are errors present in the data file, VMS will ignore these files and start with the default start up data for that component with some exceptions to appointment. However, a warning message will always show and and users should review them to ensure that they are expected before executing any commands.","lastModifiedDate":"2023-04-05"},{"lineNumber":1379,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1380,"author":{"gitId":"daitenshionyan"},"content":"**If any commands were to successfully be executed, \u003cu\u003eALL\u003c/u\u003e previous data in the data folder, if present, will be overwritten and lost forever.**","lastModifiedDate":"2023-04-05"},{"lineNumber":1381,"author":{"gitId":"francisyzy"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":1382,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1383,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":1384,"author":{"gitId":"daitenshionyan"},"content":"**:information_source: JSON syntax presentation**","lastModifiedDate":"2023-04-05"},{"lineNumber":1385,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":1386,"author":{"gitId":"daitenshionyan"},"content":"* The following will have the same meaning as \u003ca href\u003d\"#CLI-presentation-format\"\u003eCLI presentation\u003c/a\u003e.","lastModifiedDate":"2023-04-05"},{"lineNumber":1387,"author":{"gitId":"daitenshionyan"},"content":"  * **Pink italicized bolded capitalized words** (\u003ccode\u003e\u003cvar\u003ePLACEHOLDER_EXAMPLE\u003c/var\u003e\u003c/code\u003e)","lastModifiedDate":"2023-03-18"},{"lineNumber":1388,"author":{"gitId":"daitenshionyan"},"content":"  * **Three dots with no spaces** (\u003ccode\u003e\u003cvar\u003eARG\u003c/var\u003e...\u003c/code\u003e and \u003ccode\u003e...\u003cvar\u003eARG\u003c/var\u003e...\u003c/code\u003e)","lastModifiedDate":"2023-03-18"},{"lineNumber":1389,"author":{"gitId":"daitenshionyan"},"content":"  * **Triangle brackets** (`\u003c` and `\u003e`)","lastModifiedDate":"2023-03-18"},{"lineNumber":1390,"author":{"gitId":"daitenshionyan"},"content":"* **Square brackets** (`[` and `]`) and **braces** (`{` and `}`) will have no unique meaning other than being a required character for JSON syntax.","lastModifiedDate":"2023-04-05"},{"lineNumber":1391,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":1392,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":1393,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":1394,"author":{"gitId":"daitenshionyan"},"content":"### Keyword data files","lastModifiedDate":"2023-04-05"},{"lineNumber":1395,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1396,"author":{"gitId":"daitenshionyan"},"content":"Keyword data are stored in `[JAR file location]/data/keyword.json`.","lastModifiedDate":"2023-04-05"},{"lineNumber":1397,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1398,"author":{"gitId":"daitenshionyan"},"content":"##### Overall file format","lastModifiedDate":"2023-04-05"},{"lineNumber":1399,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1400,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1401,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":1402,"author":{"gitId":"daitenshionyan"},"content":"  \"keywords\": [...\u003cvar\u003eKEYWORD\u003c/var\u003e...]","lastModifiedDate":"2023-04-05"},{"lineNumber":1403,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":1404,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1405,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1406,"author":{"gitId":"daitenshionyan"},"content":"##### `\u003ckeyword\u003e` format","lastModifiedDate":"2023-04-05"},{"lineNumber":1407,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1408,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1409,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":1410,"author":{"gitId":"daitenshionyan"},"content":"  \"keyword\": \u003cvar\u003eKEYWORD\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1411,"author":{"gitId":"daitenshionyan"},"content":"  \"mainKeyword\": \u003cvar\u003eMAIN_KEYWORD\u003c/var\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1412,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":1413,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1414,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1415,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eKEYWORD\u003c/var\u003e\u003c/code\u003e : `\u003ckeyword\u003e`","lastModifiedDate":"2023-04-07"},{"lineNumber":1416,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMAIN_KEYWORD\u003c/var\u003e\u003c/code\u003e : `\u003cmain-keyword\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1417,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1418,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1419,"author":{"gitId":"slackernoob"},"content":"###### Restrictions","lastModifiedDate":"2023-04-09"},{"lineNumber":1420,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1421,"author":{"gitId":"slackernoob"},"content":"On top of the type restrictions of the parameters, if these restrictions are violated, it will render the keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":1422,"author":{"gitId":"slackernoob"},"content":"invalid. In all cases, VMS will ignore the entire keyword data file if an invalid keyword is present.","lastModifiedDate":"2023-04-09"},{"lineNumber":1423,"author":{"gitId":"slackernoob"},"content":"* \u003ccode\u003e\u003cvar\u003ekeyword\u003c/var\u003e\u003c/code\u003e must not contain any newline characters, e.g. `\\n`.","lastModifiedDate":"2023-04-09"},{"lineNumber":1424,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1425,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":1426,"author":{"gitId":"daitenshionyan"},"content":"### Patient data files","lastModifiedDate":"2023-04-05"},{"lineNumber":1427,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1428,"author":{"gitId":"daitenshionyan"},"content":"Patient data are stored in `[JAR file location]/data/patientmanager.json`.","lastModifiedDate":"2023-04-05"},{"lineNumber":1429,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1430,"author":{"gitId":"daitenshionyan"},"content":"##### Overall file format","lastModifiedDate":"2023-04-05"},{"lineNumber":1431,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1432,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1433,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":1434,"author":{"gitId":"daitenshionyan"},"content":"  \"datas\": [...\u003cvar\u003ePATIENT\u003c/var\u003e...]","lastModifiedDate":"2023-04-05"},{"lineNumber":1435,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":1436,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1437,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1438,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT\u003c/var\u003e\u003c/code\u003e : [`\u003cpatient\u003e`](#patient-format)","lastModifiedDate":"2023-04-05"},{"lineNumber":1439,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1440,"author":{"gitId":"daitenshionyan"},"content":"##### `\u003cpatient\u003e` format","lastModifiedDate":"2023-04-05"},{"lineNumber":1441,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1442,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1443,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":1444,"author":{"gitId":"daitenshionyan"},"content":"  \"isActive\": \u003cvar\u003eIS_ACTIVE\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1445,"author":{"gitId":"daitenshionyan"},"content":"  \"id\": \u003cvar\u003ePATIENT_ID\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1446,"author":{"gitId":"daitenshionyan"},"content":"  \"patient\": {","lastModifiedDate":"2023-04-05"},{"lineNumber":1447,"author":{"gitId":"daitenshionyan"},"content":"    \"name\": \u003cvar\u003ePATIENT_NAME\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1448,"author":{"gitId":"daitenshionyan"},"content":"    \"phone\": \u003cvar\u003ePHONE\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1449,"author":{"gitId":"daitenshionyan"},"content":"    \"dob\": \u003cvar\u003eDATE_OF_BIRTH\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1450,"author":{"gitId":"daitenshionyan"},"content":"    \"bloodType\": \u003cvar\u003eBLOODTYPE\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1451,"author":{"gitId":"daitenshionyan"},"content":"    \"allergies\": [...\u003cvar\u003eALLERGY\u003c/var\u003e...],","lastModifiedDate":"2023-04-05"},{"lineNumber":1452,"author":{"gitId":"daitenshionyan"},"content":"    \"vaccines\": [...\u003cvar\u003eVACCINE\u003c/var\u003e...]","lastModifiedDate":"2023-04-05"},{"lineNumber":1453,"author":{"gitId":"daitenshionyan"},"content":"  }","lastModifiedDate":"2023-04-05"},{"lineNumber":1454,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":1455,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1456,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1457,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eIS_ACTIVE\u003c/var\u003e\u003c/code\u003e : `\u003cboolean\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1458,"author":{"gitId":"daitenshionyan"},"content":"  * This value does not do anything but there to aid in future developments.","lastModifiedDate":"2023-04-05"},{"lineNumber":1459,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cinteger\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1460,"author":{"gitId":"daitenshionyan"},"content":"  * **0 based** indexing.","lastModifiedDate":"2023-04-05"},{"lineNumber":1461,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eNAME\u003c/var\u003e\u003c/code\u003e : `\u003cname\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1462,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePHONE\u003c/var\u003e\u003c/code\u003e : `\u003cphone-number\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1463,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eDATE_OF_BIRTH\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1464,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eBLOODTYPE\u003c/var\u003e\u003c/code\u003e : `\u003cblood-type\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1465,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eALLERGY\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1466,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINE\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1467,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1468,"author":{"gitId":"daitenshionyan"},"content":"###### Restrictions","lastModifiedDate":"2023-04-05"},{"lineNumber":1469,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1470,"author":{"gitId":"daitenshionyan"},"content":"On top of the type restrictions of the parameters, if these restrictions are violated, it will render the patient invalid. In all cases, VMS will ignore the entire patient data file if an invalid patient is present.","lastModifiedDate":"2023-04-05"},{"lineNumber":1471,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1472,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eDATE_OF_BIRTH\u003c/var\u003e\u003c/code\u003e must be a date before the time the application is launched.","lastModifiedDate":"2023-04-05"},{"lineNumber":1473,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1474,"author":{"gitId":"daitenshionyan"},"content":"##### Example","lastModifiedDate":"2023-04-05"},{"lineNumber":1475,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1476,"author":{"gitId":"daitenshionyan"},"content":"```json","lastModifiedDate":"2023-04-05"},{"lineNumber":1477,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":1478,"author":{"gitId":"daitenshionyan"},"content":"  \"datas\" : [ {","lastModifiedDate":"2023-04-05"},{"lineNumber":1479,"author":{"gitId":"daitenshionyan"},"content":"    \"isActive\" : true,","lastModifiedDate":"2023-04-05"},{"lineNumber":1480,"author":{"gitId":"daitenshionyan"},"content":"    \"id\" : 0,","lastModifiedDate":"2023-04-05"},{"lineNumber":1481,"author":{"gitId":"daitenshionyan"},"content":"    \"patient\" : {","lastModifiedDate":"2023-04-05"},{"lineNumber":1482,"author":{"gitId":"daitenshionyan"},"content":"      \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1483,"author":{"gitId":"daitenshionyan"},"content":"      \"phone\" : \"87438807\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1484,"author":{"gitId":"daitenshionyan"},"content":"      \"dob\" : \"1983-12-23T00:00:00\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1485,"author":{"gitId":"daitenshionyan"},"content":"      \"bloodType\" : \"A+\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1486,"author":{"gitId":"daitenshionyan"},"content":"      \"allergies\" : [ ],","lastModifiedDate":"2023-04-05"},{"lineNumber":1487,"author":{"gitId":"daitenshionyan"},"content":"      \"vaccines\" : [ \"Dose 1 (Moderna)\" ]","lastModifiedDate":"2023-04-05"},{"lineNumber":1488,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":1489,"author":{"gitId":"daitenshionyan"},"content":"  } ]","lastModifiedDate":"2023-04-05"},{"lineNumber":1490,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":1491,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":1492,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1493,"author":{"gitId":"daitenshionyan"},"content":"### Vaccination data files","lastModifiedDate":"2023-04-05"},{"lineNumber":1494,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1495,"author":{"gitId":"daitenshionyan"},"content":"Vaccination data are stored in `[JAR file location]/data/vaxtype.json`.","lastModifiedDate":"2023-04-05"},{"lineNumber":1496,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1497,"author":{"gitId":"daitenshionyan"},"content":"##### Overall file format","lastModifiedDate":"2023-04-05"},{"lineNumber":1498,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1499,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":1500,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-03-17"},{"lineNumber":1501,"author":{"gitId":"daitenshionyan"},"content":"  \"types\": [...\u003cvar\u003eVACCINATION\u003c/var\u003e...]","lastModifiedDate":"2023-03-17"},{"lineNumber":1502,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":1503,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":1504,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1505,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVACCINATION\u003c/var\u003e\u003c/code\u003e : [`\u003cvaccination\u003e`](#vaccination-format)","lastModifiedDate":"2023-04-05"},{"lineNumber":1506,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1507,"author":{"gitId":"daitenshionyan"},"content":"##### `\u003cvaccination\u003e` format","lastModifiedDate":"2023-04-05"},{"lineNumber":1508,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1509,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":1510,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-03-17"},{"lineNumber":1511,"author":{"gitId":"daitenshionyan"},"content":"  \"name\": \u003cvar\u003eVAX_NAME\u003c/var\u003e,","lastModifiedDate":"2023-03-17"},{"lineNumber":1512,"author":{"gitId":"daitenshionyan"},"content":"  \"groups\": [...\u003cvar\u003eGROUP\u003c/var\u003e...],","lastModifiedDate":"2023-03-17"},{"lineNumber":1513,"author":{"gitId":"daitenshionyan"},"content":"  \"minAge\": \u003cvar\u003eMIN_AGE\u003c/var\u003e,","lastModifiedDate":"2023-03-17"},{"lineNumber":1514,"author":{"gitId":"daitenshionyan"},"content":"  \"maxAge\": \u003cvar\u003eMAX_AGE\u003c/var\u003e,","lastModifiedDate":"2023-03-17"},{"lineNumber":1515,"author":{"gitId":"daitenshionyan"},"content":"  \"ingredients\": [...\u003cvar\u003eINGREDIENT\u003c/var\u003e],","lastModifiedDate":"2023-03-17"},{"lineNumber":1516,"author":{"gitId":"daitenshionyan"},"content":"  \"historyReqs\": [...\u003cvar\u003eREQUIREMENT\u003c/var\u003e...]","lastModifiedDate":"2023-03-17"},{"lineNumber":1517,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":1518,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":1519,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":1520,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":1521,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eGROUP\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":1522,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMIN_AGE\u003c/var\u003e\u003c/code\u003e : `\u003cage\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":1523,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMAX_AGE\u003c/var\u003e\u003c/code\u003e : `\u003cage\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":1524,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eINGREDIENT\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":1525,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eREQUIREMENT\u003c/var\u003e\u003c/code\u003e : [`\u003creq\u003e`](#req-format)","lastModifiedDate":"2023-04-05"},{"lineNumber":1526,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":1527,"author":{"gitId":"daitenshionyan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1528,"author":{"gitId":"daitenshionyan"},"content":":information_source: **INFO**: All nodes are optional except for \"name\". If the optional nodes are omitted, they will be assumed to be their default values as described [here](#vaccination---vaccination-functionalities).","lastModifiedDate":"2023-04-05"},{"lineNumber":1529,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1530,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":1531,"author":{"gitId":"daitenshionyan"},"content":"###### Restrictions","lastModifiedDate":"2023-04-05"},{"lineNumber":1532,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1533,"author":{"gitId":"daitenshionyan"},"content":"On top of the type restrictions of the parameters, if these restrictions are violated, it will render the vaccination invalid. In all cases, VMS will ignore the entire vaccination data file if an invalid vaccination is present.","lastModifiedDate":"2023-04-05"},{"lineNumber":1534,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1535,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eMIN_AGE\u003c/var\u003e\u003c/code\u003e must not be greater than \u003ccode\u003e\u003cvar\u003eMAX_AGE\u003c/var\u003e\u003c/code\u003e.","lastModifiedDate":"2023-04-05"},{"lineNumber":1536,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1537,"author":{"gitId":"daitenshionyan"},"content":"##### `\u003creq\u003e` format","lastModifiedDate":"2023-04-05"},{"lineNumber":1538,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1539,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":1540,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-03-17"},{"lineNumber":1541,"author":{"gitId":"daitenshionyan"},"content":"  \"reqType\": \u003cvar\u003eREQ_TYPE\u003c/var\u003e,","lastModifiedDate":"2023-03-17"},{"lineNumber":1542,"author":{"gitId":"daitenshionyan"},"content":"  \"reqSet\": [...\u003cvar\u003eREQUIREMENT\u003c/var\u003e...]","lastModifiedDate":"2023-03-17"},{"lineNumber":1543,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":1544,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":1545,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":1546,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eREQ_TYPE\u003c/var\u003e\u003c/code\u003e : `\u003creq-type\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":1547,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eREQUIREMENT\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":1548,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1549,"author":{"gitId":"daitenshionyan"},"content":"##### Example","lastModifiedDate":"2023-03-09"},{"lineNumber":1550,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":1551,"author":{"gitId":"daitenshionyan"},"content":"```json","lastModifiedDate":"2023-03-09"},{"lineNumber":1552,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-03-09"},{"lineNumber":1553,"author":{"gitId":"daitenshionyan"},"content":"  \"types\" : [ {","lastModifiedDate":"2023-04-05"},{"lineNumber":1554,"author":{"gitId":"daitenshionyan"},"content":"    \"name\" : \"Dose 3 (Pfizer)\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1555,"author":{"gitId":"daitenshionyan"},"content":"    \"groups\" : [ \"Pfizer\", \"Vaccination\", \"DOSE 3\" ],","lastModifiedDate":"2023-04-05"},{"lineNumber":1556,"author":{"gitId":"daitenshionyan"},"content":"    \"minAge\" : 5,","lastModifiedDate":"2023-03-09"},{"lineNumber":1557,"author":{"gitId":"daitenshionyan"},"content":"    \"maxAge\" : 200,","lastModifiedDate":"2023-04-05"},{"lineNumber":1558,"author":{"gitId":"daitenshionyan"},"content":"    \"ingredients\" : [","lastModifiedDate":"2023-03-17"},{"lineNumber":1559,"author":{"gitId":"daitenshionyan"},"content":"      \"ALC-0159\",","lastModifiedDate":"2023-03-09"},{"lineNumber":1560,"author":{"gitId":"daitenshionyan"},"content":"      \"DSPC\",","lastModifiedDate":"2023-03-09"},{"lineNumber":1561,"author":{"gitId":"daitenshionyan"},"content":"      \"Sucrose\",","lastModifiedDate":"2023-03-09"},{"lineNumber":1562,"author":{"gitId":"daitenshionyan"},"content":"      \"Phosphate\",","lastModifiedDate":"2023-03-09"},{"lineNumber":1563,"author":{"gitId":"daitenshionyan"},"content":"      \"ALC-0315\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1564,"author":{"gitId":"daitenshionyan"},"content":"      \"Tromethamine hydrochloride\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1565,"author":{"gitId":"daitenshionyan"},"content":"      \"Cholesterol\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1566,"author":{"gitId":"daitenshionyan"},"content":"      \"Tromethamine\" ],","lastModifiedDate":"2023-04-05"},{"lineNumber":1567,"author":{"gitId":"daitenshionyan"},"content":"    \"historyReqs\" : [ {","lastModifiedDate":"2023-04-05"},{"lineNumber":1568,"author":{"gitId":"daitenshionyan"},"content":"      \"reqType\" : \"NONE\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1569,"author":{"gitId":"daitenshionyan"},"content":"      \"reqSet\" : [ \"DOSE 3\" ]","lastModifiedDate":"2023-04-05"},{"lineNumber":1570,"author":{"gitId":"daitenshionyan"},"content":"    }, {","lastModifiedDate":"2023-04-05"},{"lineNumber":1571,"author":{"gitId":"daitenshionyan"},"content":"      \"reqType\" : \"ANY\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1572,"author":{"gitId":"daitenshionyan"},"content":"      \"reqSet\" : [ \"DOSE 2\" ]","lastModifiedDate":"2023-04-05"},{"lineNumber":1573,"author":{"gitId":"daitenshionyan"},"content":"    } ]","lastModifiedDate":"2023-04-05"},{"lineNumber":1574,"author":{"gitId":"daitenshionyan"},"content":"  } ]","lastModifiedDate":"2023-04-05"},{"lineNumber":1575,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":1576,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":1577,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1578,"author":{"gitId":"daitenshionyan"},"content":"### Appointment data files","lastModifiedDate":"2023-04-05"},{"lineNumber":1579,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1580,"author":{"gitId":"daitenshionyan"},"content":"Appointment data are stored in `[JAR file location]/data/appointment.json`.","lastModifiedDate":"2023-04-05"},{"lineNumber":1581,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1582,"author":{"gitId":"daitenshionyan"},"content":"##### Overall file format","lastModifiedDate":"2023-04-05"},{"lineNumber":1583,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1584,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1585,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":1586,"author":{"gitId":"daitenshionyan"},"content":"  \"datas\": [...\u003cvar\u003eAPPOINTMENT\u003c/var\u003e...]","lastModifiedDate":"2023-04-05"},{"lineNumber":1587,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":1588,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1589,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1590,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT\u003c/var\u003e\u003c/code\u003e : [`\u003cappointment\u003e`](#appointment-format)","lastModifiedDate":"2023-04-05"},{"lineNumber":1591,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1592,"author":{"gitId":"daitenshionyan"},"content":"##### `\u003cappointment\u003e` format","lastModifiedDate":"2023-04-05"},{"lineNumber":1593,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1594,"author":{"gitId":"daitenshionyan"},"content":"\u003cpre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1595,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":1596,"author":{"gitId":"daitenshionyan"},"content":"  \"isActive\": \u003cvar\u003eIS_ACTIVE\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1597,"author":{"gitId":"daitenshionyan"},"content":"  \"id\": \u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1598,"author":{"gitId":"daitenshionyan"},"content":"  \"appointment\": {","lastModifiedDate":"2023-04-05"},{"lineNumber":1599,"author":{"gitId":"daitenshionyan"},"content":"    \"patientId\": \u003cvar\u003ePATIENT_ID\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1600,"author":{"gitId":"daitenshionyan"},"content":"    \"startTime\": \u003cvar\u003eSTART_TIME\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1601,"author":{"gitId":"daitenshionyan"},"content":"    \"endTime\": \u003cvar\u003eEND_TIME\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1602,"author":{"gitId":"daitenshionyan"},"content":"    \"vaccine\": \u003cvar\u003eVAX_NAME\u003c/var\u003e,","lastModifiedDate":"2023-04-05"},{"lineNumber":1603,"author":{"gitId":"daitenshionyan"},"content":"    \"isComplete\": \u003cvar\u003eIS_COMPLETE\u003c/var\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1604,"author":{"gitId":"daitenshionyan"},"content":"  }","lastModifiedDate":"2023-03-09"},{"lineNumber":1605,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":1606,"author":{"gitId":"daitenshionyan"},"content":"\u003c/pre\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1607,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1608,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eIS_ACTIVE\u003c/var\u003e\u003c/code\u003e : `\u003cboolean\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1609,"author":{"gitId":"daitenshionyan"},"content":"  * This value does not do anything but there to aid in future developments.","lastModifiedDate":"2023-04-05"},{"lineNumber":1610,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cinteger\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1611,"author":{"gitId":"daitenshionyan"},"content":"  * **0 based** indexing.","lastModifiedDate":"2023-04-05"},{"lineNumber":1612,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e : `\u003cinteger\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1613,"author":{"gitId":"daitenshionyan"},"content":"  * **1 based** indexing.","lastModifiedDate":"2023-04-05"},{"lineNumber":1614,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eSTART_TIME\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1615,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eEND_TIME\u003c/var\u003e\u003c/code\u003e : `\u003cdate\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1616,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e : `\u003cgroup-name\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1617,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eIS_COMPLETE\u003c/var\u003e\u003c/code\u003e : `\u003cboolean\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":1618,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1619,"author":{"gitId":"daitenshionyan"},"content":"###### Restrictions","lastModifiedDate":"2023-04-05"},{"lineNumber":1620,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1621,"author":{"gitId":"daitenshionyan"},"content":"On top of the type restrictions of the parameters, if these restrictions are violated, it will render the appointment invalid. In all cases unless specified, VMS will ignore the entire appointment data file if an invalid appointment is present.","lastModifiedDate":"2023-04-05"},{"lineNumber":1622,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1623,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e must not be negative.","lastModifiedDate":"2023-04-05"},{"lineNumber":1624,"author":{"gitId":"daitenshionyan"},"content":"* Within the entire data file, there should not be a case where there are duplicated \u003ccode\u003e\u003cvar\u003eAPPOINTMENT_ID\u003c/var\u003e\u003c/code\u003e.","lastModifiedDate":"2023-04-05"},{"lineNumber":1625,"author":{"gitId":"daitenshionyan"},"content":"* Within the entire data file, there should not be a case where a patient has 2 active appointments.","lastModifiedDate":"2023-04-05"},{"lineNumber":1626,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003ePATIENT_ID\u003c/var\u003e\u003c/code\u003e must map to an existing patient.","lastModifiedDate":"2023-04-05"},{"lineNumber":1627,"author":{"gitId":"daitenshionyan"},"content":"  * This error will only cause that appointment to not be loaded.","lastModifiedDate":"2023-04-05"},{"lineNumber":1628,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eVAX_NAME\u003c/var\u003e\u003c/code\u003e must map to an existing vaccination.","lastModifiedDate":"2023-04-05"},{"lineNumber":1629,"author":{"gitId":"daitenshionyan"},"content":"  * This error will only cause that appointment to not be loaded.","lastModifiedDate":"2023-04-05"},{"lineNumber":1630,"author":{"gitId":"daitenshionyan"},"content":"* \u003ccode\u003e\u003cvar\u003eSTART_TIME\u003c/var\u003e\u003c/code\u003e must be before \u003ccode\u003e\u003cvar\u003eEND_TIME\u003c/var\u003e\u003c/code\u003e.","lastModifiedDate":"2023-04-05"},{"lineNumber":1631,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1632,"author":{"gitId":"daitenshionyan"},"content":"##### Example","lastModifiedDate":"2023-04-05"},{"lineNumber":1633,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1634,"author":{"gitId":"daitenshionyan"},"content":"```json","lastModifiedDate":"2023-04-05"},{"lineNumber":1635,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":1636,"author":{"gitId":"daitenshionyan"},"content":"  \"datas\" : [ {","lastModifiedDate":"2023-04-05"},{"lineNumber":1637,"author":{"gitId":"daitenshionyan"},"content":"    \"isActive\" : true,","lastModifiedDate":"2023-04-05"},{"lineNumber":1638,"author":{"gitId":"daitenshionyan"},"content":"    \"id\" : 1,","lastModifiedDate":"2023-04-05"},{"lineNumber":1639,"author":{"gitId":"daitenshionyan"},"content":"    \"appointment\" : {","lastModifiedDate":"2023-04-05"},{"lineNumber":1640,"author":{"gitId":"daitenshionyan"},"content":"      \"patientId\" : 1,","lastModifiedDate":"2023-04-05"},{"lineNumber":1641,"author":{"gitId":"daitenshionyan"},"content":"      \"startTime\" : \"2024-03-05T16:00:00\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1642,"author":{"gitId":"daitenshionyan"},"content":"      \"endTime\" : \"2024-03-05T16:30:00\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1643,"author":{"gitId":"daitenshionyan"},"content":"      \"vaccine\" : \"Dose 2 (Moderna)\",","lastModifiedDate":"2023-04-05"},{"lineNumber":1644,"author":{"gitId":"daitenshionyan"},"content":"      \"isCompleted\" : false","lastModifiedDate":"2023-04-05"},{"lineNumber":1645,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":1646,"author":{"gitId":"daitenshionyan"},"content":"  } ]","lastModifiedDate":"2023-04-05"},{"lineNumber":1647,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":1648,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-09"},{"lineNumber":1649,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1650,"author":{"gitId":"daitenshionyan"},"content":"## Planned features","lastModifiedDate":"2023-04-07"},{"lineNumber":1651,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1652,"author":{"gitId":"daitenshionyan"},"content":"1. Delete and edit specific elements in list like attributes such as patient\u0027s **allergies** or vaccination\u0027s **history requirements**.","lastModifiedDate":"2023-04-07"},{"lineNumber":1653,"author":{"gitId":"daitenshionyan"},"content":"2. Auto add vaccination to the patient\u0027s vaccination records when marking appointments as complete.","lastModifiedDate":"2023-04-07"},{"lineNumber":1654,"author":{"gitId":"daitenshionyan"},"content":"3. Validations and warning to check if the patient can still take the vaccination on these scenarios:","lastModifiedDate":"2023-04-07"},{"lineNumber":1655,"author":{"gitId":"daitenshionyan"},"content":"   1. Unmarking a previously marked appointment.","lastModifiedDate":"2023-04-07"},{"lineNumber":1656,"author":{"gitId":"daitenshionyan"},"content":"   2. Changing the requirements of a vaccination while there are still patients with appointments for that vaccination.","lastModifiedDate":"2023-04-07"},{"lineNumber":1657,"author":{"gitId":"daitenshionyan"},"content":"   3. Changing the patients records while that patient still has upcoming appointments.","lastModifiedDate":"2023-04-07"},{"lineNumber":1658,"author":{"gitId":"daitenshionyan"},"content":"4. Command to clear all marked appointments.","lastModifiedDate":"2023-04-07"},{"lineNumber":1659,"author":{"gitId":"daitenshionyan"},"content":"5. Command to clear all appointments.","lastModifiedDate":"2023-04-07"},{"lineNumber":1660,"author":{"gitId":"daitenshionyan"},"content":"6. Schedule multiple active appointments for the same patient.","lastModifiedDate":"2023-04-09"},{"lineNumber":1661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1662,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-04-05"},{"lineNumber":1663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1664,"author":{"gitId":"daitenshionyan"},"content":"### How do I delete/edit a specific element in list like attributes?","lastModifiedDate":"2023-04-05"},{"lineNumber":1665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1666,"author":{"gitId":"daitenshionyan"},"content":"At the moment, VMS does not offer a quick CLI way to delete/edit specific elements in such lists. However, this is a \u003cu\u003eplanned feature\u003c/u\u003e in future updates!","lastModifiedDate":"2023-04-05"},{"lineNumber":1667,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1668,"author":{"gitId":"daitenshionyan"},"content":"A work around this is to **edit the data files directly**.","lastModifiedDate":"2023-04-05"},{"lineNumber":1669,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1670,"author":{"gitId":"daitenshionyan"},"content":"### I added a vaccination but it does not appear in the the vaccination list panel","lastModifiedDate":"2023-04-07"},{"lineNumber":1671,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1672,"author":{"gitId":"daitenshionyan"},"content":"The filters applied from your last [`find`](#find---locate-vaccinations) command are most likely still active. Use vaccination\u0027s [`list`](#list---list-all-vaccination) command to clear the filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":1673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1674,"author":{"gitId":"daitenshionyan"},"content":"This feature is intended to increase the efficiency of vaccination\u0027s [`edit`](#edit---edit-a-vaccination). Specifically the referring to vaccinations by indexes. You can learn more about this \u003ca href\u003d\"#vax-filter-no-reset-usage\"\u003ehere\u003c/a\u003e.","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"daitenshionyan":860,"slackernoob":115,"-":123,"francisyzy":374,"nusE0726844":202}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"var {","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"  color: #C62184;","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"  font-style: italic;","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"  font-weight: bold;","lastModifiedDate":"2023-04-08"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"    -webkit-print-color-adjust: exact;","lastModifiedDate":"2023-04-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":300,"author":{"gitId":"francisyzy"},"content":"    content: \"VMS\";","lastModifiedDate":"2023-02-21"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"daitenshionyan":9,"-":294,"francisyzy":1}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" .site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"  h1, h2, h3 { margin-bottom: $spacing-unit }","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"  h4 { margin-bottom: $spacing-unit * 0.5 }","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"  h5 {margin-bottom: 5px}","lastModifiedDate":"2023-04-05"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"  h6 {margin-bottom: 0px}","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  h1, h2, h3 { margin-top: $spacing-unit * 2 }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"  h5, h6 {","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"    @include relative-font-size(1.0);","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    a, div {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":6,"-":257}},{"path":"docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"h1, h2, h3, h5 {","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"  font-weight: bold;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"h2 {","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"  background-color: #e46c0a;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"  color: white;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"  padding-left: 10px;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"h2::after {","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"  width: 100%;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"h3, h4 {","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  color: #e46c0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"h5, h6 {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"  color: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"h6 {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"  text-decoration: underline;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":".circled-number {","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"  background-color: #ff0000;","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"  color: #ffffff;","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"  font-weight: bold;","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"  display: inline-block;","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"  text-align: center;","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"  border-radius: 50%;","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"  line-height: 30px;","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"  width: 30px;","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"// Vaccination requirement tags","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":".tag {","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"  background-color: #3e7b91;","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"  color: white;","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"  padding: 0px 4px;","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"  display: inline-block;","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"  text-align: center;","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"  border-radius: 3px;","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"  font-size: 11;","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":".tag.tag-all {","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"  background-color: #151790;","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":".tag.tag-any {","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"  background-color: #119654;","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":".tag.tag-none {","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"  background-color: #901515;","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"// Bootstrap style alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":".alert {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  border-radius : $alert-border-radius;","lastModifiedDate":"2022-12-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"// Headings for larger alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":".alert-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":".alert-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  .alert-#{$color} {","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":59,"-":33}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml ArchitectureSequenceDiagram","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"user -[USER_COLOR]\u003e ui : \"patient delete 1\"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"ui -[UI_COLOR]\u003e logic : processCommand(\"patient delete 1\")","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePatient(1)","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"logic -[LOGIC_COLOR]\u003e storage : Save model state","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"francisyzy":5,"-":33}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"Vms *-right-\u003e \"1\" UniquePatientList","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"Vms *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"UniqueTagList -[hidden]down- UniquePatientList","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"UniqueTagList -[hidden]down- UniquePatientList","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"UniquePatientList -right-\u003e Patient","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"Patient -up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Name","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Email","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Address","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":11,"francisyzy":10}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"if () then ([command commits Vms])","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    :Save Vms to","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    patientManagerStateList;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"francisyzy":3}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"participant \":VmsParser\" as VmsParser LOGIC_COLOR","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"LogicManager -\u003e VmsParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"activate VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"VmsParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"DeleteCommandParser --\u003e VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"VmsParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"DeleteCommandParser --\u003e VmsParser : d","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"DeleteCommandParser -[hidden]-\u003e VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"VmsParser --\u003e LogicManager : d","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"deactivate VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"DeleteCommand -\u003e Model : deletePatient(1)","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":58,"francisyzy":11}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml LogicClassDiagram","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"hide \u003c\u003chidden\u003e\u003e stereotype","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"\u003cstyle\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    .hidden {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"        BackGroundColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"        BorderColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"        FontColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        LineColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        StereotypeFontColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"\u003c/style\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    Class CommandMessage","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    Class ParseResult","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"package Model {","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    Class Hidden1 \u003c\u003chidden\u003e\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"package Storage {","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    Class Hidden2 \u003c\u003chidden\u003e\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"Class HiddenOut \u003c\u003chidden\u003e\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"HiddenOut .left.\u003e Logic","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"LogicManager ..\u003e Command : executes \u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"Command .left.\u003e CommandMessage : produces \u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -down-\u003e Model","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -right-\u003e Storage","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"Model ..\u003e ParseResult : creates \u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"ParseResult -up-\u003e \"1\" Command","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"ParseResult -\u003e \"0..1\" CommandMessage","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"Command ..\u003e Model","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"LogicManager ..\u003e CommandMessage","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"daitenshionyan":36,"-":23}},{"path":"docs/diagrams/LogicExecutionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml LogicCommandExecutionSequenceDiagram","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    participant \":Thread\" as ExecThread LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    participant \"completionHandler:Consumer\" as CompletionHandler LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    participant \":Command\" as Command LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"end box","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"end box","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"[-\u003e ExecThread : run()","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"activate ExecThread","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"ExecThread -\u003e LogicManager : processCommand(cmdInput)","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"activate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -\u003e Model : parseCommand(cmdInput)","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"activate Model","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"create Command","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"Model -\u003e Command","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"activate Command","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"Command --\u003e Model","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"deactivate Command","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"Model --\u003e LogicManager : parseResult","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"deactivate Model","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -\u003e Command : execute(model)","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"activate Command","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"ref over Command, Model : command execution","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"Command --\u003e LogicManager : cmdMessage","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"deactivate Command","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -\u003e LogicManager : saveModel()","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"activate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"LogicManager --\u003e LogicManager : saveMsgs","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -\u003e LogicManager : completeExecution(messages)","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"activate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -\u003e CompletionHandler : accept(messages)","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"activate CompletionHandler","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"CompletionHandler --\u003e LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"deactivate CompletionHandler","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"ref over LogicManager : start next command","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"LogicManager --\u003e LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"LogicManager --\u003e ExecThread","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"ExecThread --\u003e[","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"deactivate ExecThread","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"daitenshionyan":69}},{"path":"docs/diagrams/LogicQueueSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml LogicQueueSequenceDiagram","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    participant \"cmdQueue:LinkedBlockingDeque\" as CommandQueue LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"end box","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"[-\u003e LogicManager : queue(cmdInput)","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"activate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -\u003e CommandQueue : add(cmdInput)","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"activate CommandQueue","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"CommandQueue --\u003e LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"deactivate CommandQueue","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"ref over LogicManager, CommandQueue : start next command","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"LogicManager --\u003e[","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"daitenshionyan":24}},{"path":"docs/diagrams/LogicStartNextCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml StartNextCommandSequenceDiagram","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"mainframe **sb** start next command","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    participant \"cmdQueue:LinkedBlockingDeque\" as CommandQueue LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    participant \":Thread\" as ExecutionThread LOGIC_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"end box","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"[-\u003e LogicManager : startNext()","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"activate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"opt no commands executing and cmdQueue not empty","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    LogicManager -\u003e CommandQueue : poll()","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    activate CommandQueue","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    CommandQueue --\u003e LogicManager : nextCmdInput","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    deactivate CommandQueue","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    create ExecutionThread","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    LogicManager -\u003e ExecutionThread","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    activate ExecutionThread","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    ExecutionThread --\u003e LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    deactivate ExecutionThread","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    LogicManager -\u003e ExecutionThread : start()","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    activate ExecutionThread","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    ExecutionThread --\u003e LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    deactivate ExecutionThread","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"end","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"LogicManager --\u003e[","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"daitenshionyan":40}},{"path":"docs/diagrams/ModelAppointmentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"!include style.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"Package Appointment\\n \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"Class Appointment","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"Class Index","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"Class LocalDateTime","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"Class GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"Class Boolean","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"AppointmentManager -\u003e \"~* all\" Appointment","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"ModelManager -\u003e \"~* filtered\" Appointment","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"ModelManager -[hidden]down-\u003e AppointmentManager","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"Appointment *--\u003e Index","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"Appointment *-right-\u003e \"startTime\" LocalDateTime","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"Appointment *-right-\u003e \"endTime\" LocalDateTime","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"Appointment *--\u003e GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"Appointment *--\u003e Boolean","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"Index -[hidden]right-\u003e GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"GroupName -[hidden]right-\u003e Boolean","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"nusE0726844":29}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"Package \\nModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    Class PatientManager","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    Class AppointmentManager","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    Class VaxTypeManager","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    Class KeywordManager","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    class Patient MODEL_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        -name: Name","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        -phone: Phone","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        -dateOfBirth: Dob","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        -bloodType: BloodType","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        -allergies: Set\u003cGroupName\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        -vaccines: Set\u003cGroupName\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    class Appointment MODEL_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        -patientId: Index","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        -startTime: LocalDateTime","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        -endTime: LocalDateTime","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        -vaccine: GroupName","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        -isCompleted: Boolean","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    class VaxType MODEL_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        -name: GroupName","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        -groups: HashSet\u003cGroupName\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        -minAge: Age","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        -maxAge: Age","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        -ingredients: HashSet\u003cGroupName\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        -historyReqs: List\u003cRequirement\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    class Keyword MODEL_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        -keyword: String","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        -mainKeyword: String","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"HiddenOutside .down.\u003e Model","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"ModelManager *--\u003e \"1\" PatientManager","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"ModelManager *--\u003e \"1\" AppointmentManager","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"ModelManager *--\u003e \"1\" VaxTypeManager","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"ModelManager *--\u003e \"1\" KeywordManager","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"PatientManager *-down-\u003e \"0..1000\" Patient","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"AppointmentManager *-down-\u003e \"0..1000\" Appointment","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"VaxTypeManager *-down-\u003e \"0..30\" VaxType","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"KeywordManager *-down-\u003e \"0..*\" Keyword","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"show Patient fields","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"show Appointment fields","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"show VaxType fields","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"show Keyword fields","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":23,"nusE0726844":52}},{"path":"docs/diagrams/ModelKeywordClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"!include style.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"Package Keyword\\n \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"Class Keyword","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"Class String","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"KeywordManager -\u003e \"~* all\" Keyword","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"Keyword *--\u003e \"keyword 1\" String","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"Keyword *--\u003e \"1 mainKeyword\" String","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"nusE0726844":18}},{"path":"docs/diagrams/ModelPatientClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"!include style.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"Package Patient\\n \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"Class Patient","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"Class Name","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"Class Phone","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"Class Dob","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"Class BloodType","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"Class GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"PatientManager -\u003e \"~* all\" Patient","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"ModelManager -\u003e \"~* filtered\" Patient","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"ModelManager -[hidden]down-\u003e PatientManager","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"Patient *--\u003e Name","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"Patient *--\u003e Dob","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"Patient *--\u003e BloodType","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"Patient *-right-\u003e \"~* allergies\" GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"Patient *-right-\u003e \"~* vaccines\" GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"Phone -[hidden]right-\u003e Dob","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"Dob -[hidden]right-\u003e BloodType","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"nusE0726844":31}},{"path":"docs/diagrams/ModelVaxTypeClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"!include style.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"Package VaxType\\n \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"Class VaxType","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"Class GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"Class Age","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"Class Requirement","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"VaxTypeManager -\u003e \"~* all\" VaxType","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"ModelManager -\u003e \"~* filtered\" VaxType","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"ModelManager -[hidden]down-\u003e VaxTypeManager","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"VaxType *---\u003e \"name\" GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"VaxType *---\u003e \"~* groups\" GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"VaxType *---\u003e \"~* ingredients\" GroupName","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"VaxType *-right-\u003e \"minAge\" Age","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"VaxType *-right-\u003e \"maxAge\" Age","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"VaxType *--\u003e \"~* historyReqs\" Requirement","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"nusE0726844":26}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"Class VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"HiddenOutside ..\u003e VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"VmsParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"VmsParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"francisyzy":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"skinparam arrowThickness 1.05","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"hide \u003c\u003chidden\u003e\u003e stereotype","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"\u003cstyle\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"    .hidden {","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"        BackGroundColor transparent","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        BorderColor transparent","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"        FontColor transparent","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"        LineColor transparent","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"        StereotypeFontColor transparent","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"\u003c/style\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    Class StorageManager","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as StorageInterface","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"    package \"Appointment Storage\" #F4F6F6{","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"        Class \"\u003c\u003cinterface\u003e\u003e\\nAppointmentStorage\" as AppointmentStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"        Class JsonAppointmentStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"        Class JsonSerializableAppointmentManager","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"        Class JsonAdaptedAppointmentData","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"        Class JsonAdaptedAppointment","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"    package \"Keyword Storage\" #F4F6F6{","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"        Class \"\u003c\u003cinterface\u003e\u003e\\nKeywordStorage\" as KeywordStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        Class JsonKeywordStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"        Class KeywordLoader","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"        Class JsonAdaptedKeyword","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"    package \"PatientManager Storage\" #F4F6F6{","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"        Class \"\u003c\u003cinterface\u003e\u003e\\nPatientManagerStorage\" as PatientManagerStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"        Class JsonPatientManagerStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"        Class JsonSerializablePatientManager","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"        Class JsonAdaptedPatientData","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"        Class JsonAdaptedPatient","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"    package \"VaxType Storage\" #F4F6F6{","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"        Class \"\u003c\u003cinterface\u003e\u003e\\nVaxTypeStorage\" as VaxTypeStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"        Class JsonVaxTypeStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"        Class VaxTypeLoader","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"        Class JsonAdaptedVaxType","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"Class HiddenOutside \u003c\u003chidden\u003e\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"slackernoob"},"content":"HiddenOutside .right.\u003e StorageInterface","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"slackernoob"},"content":"StorageInterface -down-|\u003e UserPrefsStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"slackernoob"},"content":"StorageInterface -down-|\u003e PatientManagerStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"slackernoob"},"content":"StorageInterface -down-|\u003e KeywordStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"slackernoob"},"content":"StorageInterface -down-|\u003e AppointmentStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"slackernoob"},"content":"StorageInterface -down-|\u003e VaxTypeStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"slackernoob"},"content":"StorageManager .up.|\u003e StorageInterface","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"slackernoob"},"content":"StorageManager ---\u003e UserPrefsStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"slackernoob"},"content":"StorageManager ---\u003e PatientManagerStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"slackernoob"},"content":"StorageManager ---\u003e KeywordStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"slackernoob"},"content":"StorageManager ---\u003e AppointmentStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"slackernoob"},"content":"StorageManager ---\u003e VaxTypeStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"slackernoob"},"content":"JsonPatientManagerStorage .up.|\u003e PatientManagerStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"slackernoob"},"content":"JsonAppointmentStorage .up.|\u003e AppointmentStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"slackernoob"},"content":"JsonKeywordStorage .up.|\u003e KeywordStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"slackernoob"},"content":"JsonVaxTypeStorage .up.|\u003e VaxTypeStorage","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"slackernoob"},"content":"JsonPatientManagerStorage .down.\u003e JsonSerializablePatientManager","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"slackernoob"},"content":"JsonSerializablePatientManager -down-\u003e JsonAdaptedPatientData","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"slackernoob"},"content":"JsonAdaptedPatientData -down-\u003e \"1\" JsonAdaptedPatient","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"slackernoob"},"content":"JsonAppointmentStorage .down.\u003e JsonSerializableAppointmentManager","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"slackernoob"},"content":"JsonSerializableAppointmentManager -down-\u003e JsonAdaptedAppointmentData","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"slackernoob"},"content":"JsonAdaptedAppointmentData -down-\u003e \"1\" JsonAdaptedAppointment","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"slackernoob"},"content":"JsonKeywordStorage .down.\u003e KeywordLoader","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"slackernoob"},"content":"KeywordLoader .down.\u003e \"*\" JsonAdaptedKeyword","lastModifiedDate":"2023-04-09"},{"lineNumber":93,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"slackernoob"},"content":"JsonVaxTypeStorage .down.\u003e VaxTypeLoader","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"slackernoob"},"content":"VaxTypeLoader --\u003e JsonAdaptedVaxType","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"slackernoob":72,"-":25}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiClassDiagram","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"hide \u003c\u003chidden\u003e\u003e stereotype","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"\u003cstyle\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    .hidden {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"        BackGroundColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"        BorderColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"        FontColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"        LineColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        StereotypeFontColor transparent","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"\u003c/style\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"Class HiddenOut \u003c\u003chidden\u003e\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"package Ui {","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui UI_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    Class UiManager UI_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    Class MainWindow UI_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        ~fillInnerParts()","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    Class ListViewPanel UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    Class DetailedView UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    Class HelpWindow UI_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    Class CommandBox UI_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    Class ResultDisplay UI_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    Class ResultMessageBox UI_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"show MainWindow members","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"package Logic {","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic LOGIC_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    Class CommandMessage LOGIC_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"HiddenOut .right.\u003e Ui","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"UiManager -\u003e MainWindow","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"UiManager .down.\u003e Logic","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"MainWindow *-up- \"0..3\" ListViewPanel","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"MainWindow *-up- \"0..2\" DetailedView","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"MainWindow *-up- \"0..1\" CommandBox","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"MainWindow *-up- \"0..1\" HelpWindow","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"MainWindow *-up- \"0..1\" ResultDisplay","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -down-\u003e Logic","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"ResultDisplay .right.\u003e ResultMessageBox : uses \u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"ResultDisplay .down.\u003e CommandMessage : displays \u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"ResultMessageBox .down.\u003e CommandMessage","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"daitenshionyan":50,"-":10}},{"path":"docs/diagrams/UiDetailedViewClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiDetailedViewClassDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"package Ui {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    Class DetailedView\u003cT\u003e UI_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"        -isUpdated: boolean","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"        -value: T","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"show DetailedView fields","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"package JavaFX {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nObjectProperty\u003cT\u003e\" as ObjectProperty #000000","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nChangeListener\u003c? super T\u003e\" as ChangeListener #000000","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    Class VBox #000000","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"package Java {","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nFunction\u003cT, Node\u003e\" as Function #000000","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"DetailedView --|\u003e VBox","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"DetailedView -\u003e Function","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"DetailedView ..\u003e ObjectProperty","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"DetailedView ..\u003e ChangeListener","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"ObjectProperty .right.\u003e ChangeListener","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":33}},{"path":"docs/diagrams/UiDetailedViewPatientObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiDetailedViewPatientObjectDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003edetailedPatientView:DetailedView\u003c/u\u003e\" as DetailedView UI_COLOR {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    -isUpdated: boolean","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    -value: IdData\u003cPatient\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"show DetailedView fields","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:ChangeListener\u003c/u\u003e\" as ChangeListener UI_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003edetailPatientProperty:ObjectProperty\u003c/u\u003e\" as ObjectProperty MODEL_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:ModelManager\u003c/u\u003e\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"ModelManager -down-\u003e ObjectProperty","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"ObjectProperty -down-\u003e ChangeListener : updates \u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"ChangeListener -down-\u003e DetailedView : updates \u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":23}},{"path":"docs/diagrams/UiDetailedViewRefreshActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiDetailedViewRefreshActivityDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"start","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"if () then ([is not updated])","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    :Clear display;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    if () then ([value is not null])","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"        :Update display with value;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    else ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    endif","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"else ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"endif","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"stop","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":15}},{"path":"docs/diagrams/UiListViewPanelActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiListViewPanelActivityDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"start","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":":Get value of changeProperty;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"note right","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    value referred to as","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    \"change\" from now","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    onwards","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"end note","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"if () then ([change not null])","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    :Get map from change;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    :Get values of map;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    :Reset items list with values from map;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    :Sort new item list;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    :Set changeProperty value to null;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"else ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"endif","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"stop","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":21}},{"path":"docs/diagrams/UiListViewPanelApptObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiListViewPanelApptObjectDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"hide \u003c\u003chidden\u003e\u003e stereotype","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"\u003cstyle\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    .hidden {","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"        BackGroundColor transparent","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"        BorderColor transparent","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"        FontColor transparent","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"        LineColor transparent","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        StereotypeFontColor transparent","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"\u003c/style\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003eappointmentListPanel:ListViewPanel\u003c/u\u003e\" as ListViewPanel UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003echangeProperty:ObjectProperty\u003c/u\u003e\" as ChangeProperty UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:MapChangeListener\u003c/u\u003e\" as MapChangeListener UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003efilteredAppointmentMap:FilteredIdDataMap\u003c/u\u003e\" as FilteredIdDataMap MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:ModelManager\u003c/u\u003e\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"ListViewPanel -up-\u003e ChangeProperty","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"MapChangeListener -down-\u003e ChangeProperty : updates \u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"FilteredIdDataMap -down-\u003e MapChangeListener : updates \u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"ModelManager -down-\u003e FilteredIdDataMap","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":35}},{"path":"docs/diagrams/UiListViewPanelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiListViewPanelClassDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"package Ui {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    Class ListViewPanel\u003cT extends Comparable\u003cT\u003e\u003e UI_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    -displayFunction: BiFunction\u003cInteger, T, Node\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    -changeProperty: ObjectProperty\u003cChange\u003cObject, IdData\u003cAppointment\u003e\u003e\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    -comparatorProperty: ObjectProperty\u003cComparator\u003cIdData\u003cAppointment\u003e\u003e\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"show ListViewPanel fields","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"package JavaFX {","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nObservableMap\u003c?, T\u003e\" as ObservableMap #000000","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nMapChangeListener\u003c? super Object, ? super T\u003e\" as MapChangeListener #000000","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    Class ListView\u003cT\u003e #000000","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"ListViewPanel --|\u003e ListView","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"ListViewPanel ..\u003e ObservableMap","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"ListViewPanel ..\u003e MapChangeListener","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"ObservableMap .right.\u003e MapChangeListener","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":29}},{"path":"docs/diagrams/UiListViewPanelVaxObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiListViewPanelVaxObjectDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003evaxTypeListPanel:ListViewPanel\u003c/u\u003e\" as ListViewPanel UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003echangeProperty:ObjectProperty\u003c/u\u003e\" as ChangeProperty UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"class \"\u003cu\u003e:ObservableList\u003c/u\u003e\" as DisplayList UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:MapChangeListener\u003c/u\u003e\" as MapChangeListener UI_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003efilteredAppointmentMap:FilteredIdDataMap\u003c/u\u003e\" as FilteredIdDataMap MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:ModelManager\u003c/u\u003e\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003evaxDisplayList:ObservableList\u003c/u\u003e\" as ModelList MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"ListViewPanel --\u003e ChangeProperty","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"ListViewPanel --\u003e DisplayList","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"MapChangeListener --\u003e ChangeProperty : updates \u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"FilteredIdDataMap --\u003e MapChangeListener : updates \u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"ModelManager --\u003e ModelList","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"ModelManager --\u003e FilteredIdDataMap","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"DisplayList --\u003e ModelList : updates \u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":30}},{"path":"docs/diagrams/UiObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiObjectDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:MainWindow\u003c/u\u003e\" as MainWindow UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003epatientListPanel:ListViewPanel\u003c/u\u003e\" as PatientList UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003evaxTypeListPanel:ListViewPanel\" as VaccinationList UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003eappointmentListPanel:ListViewPanel\u003c/u\u003e\" as AppointmentList UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003edetailedPatientView:DetailedView\u003c/u\u003e\" as PatientDetail UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003edetailedVaxTypeView:DetailedView\u003c/u\u003e\" as VaccinationDetail UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:CommandBox\u003c/u\u003e\" as CommandBox UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:ResultDisplay\u003c/u\u003e\" as ResultDisplay UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:HelpWindow\u003c/u\u003e\" as HelpWindow UI_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:LogicManager\u003c/u\u003e\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -up-\u003e \"patient\\nlist panel\" PatientList","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -up-\u003e \"vaccination\\nlist panel\" VaccinationList","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -up-\u003e \"appointment\\nlist panel\" AppointmentList","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -down-\u003e \"patient\\ndetail panel\" PatientDetail","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -right-\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -down-\u003e \"vaccination\\ndetail panel\" VaccinationDetail","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -up-\u003e HelpWindow","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -down-\u003e CommandBox","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"MainWindow -down-\u003e ResultDisplay","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":33}},{"path":"docs/diagrams/UiResultDisplayActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiResultDisplayActivityDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"start","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"while () is ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    :Dequeue CommandMessage;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    :Convert CommandMessage\\nto ResultMessageBox;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    :Create Node;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    :Display Node;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    if () then ([messages displayed \u003e 30])","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"        :Remove earliest displayed message;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    else ([else])","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    endif","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"endwhile ([queue empty])","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"stop","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":17}},{"path":"docs/diagrams/UiResultDisplayClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiResultDisplayClassDiagram","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"package Ui {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    Class ResultDisplay UI_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"        -messageQueue: LinkedBlockingDeque\u003cCommandMessage\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"        +queueMessages(messages: List\u003cCommandMessage\u003e)","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    Class ResultMessageBox UI_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"show ResultDisplay members","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"package Logic {","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    Class CommandMessage LOGIC_COLOR","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"ResultDisplay .down.\u003e ResultMessageBox : uses \u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"ResultDisplay .left.\u003e CommandMessage : displays \u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"ResultMessageBox .left.\u003e CommandMessage","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"daitenshionyan":26}},{"path":"docs/diagrams/UiResultDisplayObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"@startuml UiResultDisplayObjectDiagram","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"skinparam RoundCorner 0","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:ResultDisplay\u003c/u\u003e\" as ResultDisplay UI_COLOR {","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    -messageQueue: LinkedBlockingDeque\u003cCommandMessage\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"show ResultDisplay fields","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003e:LogicManager\u003c/u\u003e\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"Class \"\u003cu\u003ecompletionHandler:Consumer\u003c/u\u003e\" as Consumer LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"LogicManager -down-\u003e Consumer","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"Consumer -down-\u003e ResultDisplay : queues messages \u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":18}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab3:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"francisyzy":3}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"participant \":VmsParser\" as VmsParser LOGIC_COLOR","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"participant \":VersionedVms\" as VersionedVms MODEL_COLOR","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"LogicManager -\u003e VmsParser : parseCommand(undo)","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"activate VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"VmsParser -\u003e UndoCommand","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"UndoCommand --\u003e VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"VmsParser --\u003e LogicManager : u","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"deactivate VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"UndoCommand -\u003e Model : undoVms()","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"Model -\u003e VersionedVms : undo()","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"activate VersionedVms","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"VersionedVms -\u003e VersionedVms :resetData(ReadOnlyVms)","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"VersionedVms --\u003e Model :","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"deactivate VersionedVms","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"francisyzy":14}},{"path":"docs/diagrams/keyword/AddKeywordActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"@startuml AddKeywordActivityDiagram","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"start","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"if() then ([valid input])","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    :Create new keyword;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"    if() then ([existing keyword exists])","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"        :Throw CommandExeception;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    else ([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"        :Store keyword into KeywordManager;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    endif;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"else ([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"endif;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":":Display message to user;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"stop","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"slackernoob":15}},{"path":"docs/diagrams/keyword/AddParseActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"@startuml AddKeywordParseActivityDiagram","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"start","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":":Check if prefixes are present;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"if () then ([prefixes present])","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"  :Parse main keyword;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"  :Parse keyword;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"  if () then ([all prefixes valid])","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"    :Create Keyword object;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    :Return AddCommand object with Keyword;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"  else ([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"  endif","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"else ([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"  :Throw ParseException;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"endif","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"stop","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"slackernoob":17}},{"path":"docs/diagrams/keyword/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"@startuml AddKeywordSequenceDiagram","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"!include ../style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"participant \":Model\" as Model LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"participant \":VmsParser\" as VmsParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"participant \":KeywordParser\" as KeywordParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"participant \":Keyword\" as Keyword LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"participant \":AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"[-\u003e Model : processCommand(\"keyword add \\n--k patient \\n˗˗n p\")","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"activate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"Model -\u003e VmsParser : parseCommand(\"keyword add \\n--k patient \\n˗˗n p\")","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"activate VmsParser","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"VmsParser -\u003e KeywordParser : parse(\"add \\n--k patient \\n˗˗n p\")","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"activate KeywordParser","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"create AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"KeywordParser -\u003e AddCommandParser : parse(\"--k patient \\n˗˗n p\")","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"activate AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"note right of AddCommandParser: ParseUtil details ommited,\\n see activity diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"create Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"AddCommandParser -\u003e Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"activate Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"Keyword --\u003e AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"deactivate Keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"create AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"activate AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"AddCommand --\u003e AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"deactivate AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"AddCommandParser --\u003e KeywordParser : command","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"AddCommandParser -[hidden]-\u003e KeywordParser","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"KeywordParser --\u003e VmsParser : command","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"deactivate KeywordParser","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"VmsParser --\u003e Model : parseResult","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"deactivate VmsParser","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"[\u003c--Model : parseResult","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"deactivate Model","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"slackernoob":56}},{"path":"docs/diagrams/keyword/DeleteKeywordActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"@startuml DeleteKeywordActivityDiagram","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"start","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"if() then ([valid input])","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"    :Create new keyword;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"    if() then ([keyword does not exist])","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"        :Throw CommandExeception;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    else ([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"        :Delete keyword from KeywordManager;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    endif;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"else ([else])","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"endif;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":":Display message to user;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"stop","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"slackernoob":15}},{"path":"docs/diagrams/patient/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml AddPatientActivityDiagram","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"start","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"if() then ([valid input])","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"    :Create new patient;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"    if() then ([within patient limit])","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"        :Store patient into PatientManager;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"    else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"        :Throw CommandExeception;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    endif;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":":Display message to user;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"stop","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"francisyzy":15}},{"path":"docs/diagrams/patient/AddParseActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml AddPatientParseActivityDiagram","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"start","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":":Check if prefixes are present;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"if () then ([prefixes present])","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"  :Parse name;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"  :Parse phone;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"  :Parse date of birth;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"  :Parse blood type;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"  :Parse allergies;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"  :Parse vaccines;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"  if () then ([all prefixes valid])","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    :Create patient object;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    :Return AddCommand object with patient;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"  else ([else])","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"  endif","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"else ([else])","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"  :Throw ParseException;","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"endif","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"stop","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"francisyzy":21}},{"path":"docs/diagrams/patient/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml AddPatientParsingSequenceDiagram","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"participant \":Model\" as Model LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"participant \":VmsParser\" as VmsParser LOGIC_COLOR","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"participant \":PatientParser\" as PatientParser LOGIC_COLOR","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"participant \":Patient\" as Patient LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"participant \":AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"end box","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"\u0027 box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"\u0027 participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"\u0027 end box","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"[-\u003e Model : processCommand(\"patient add \\n˗˗n John Doe \\n˗˗p 98765432...\")","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"activate Model","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"Model -\u003e VmsParser : parseCommand(\"patient add \\n˗˗n John Doe \\n˗˗p 98765432...\")","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"activate VmsParser","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"VmsParser -\u003e PatientParser : parse(\"add \\n˗˗n John Doe \\n˗˗p 98765432...\")","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"activate PatientParser","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"create AddCommandParser","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"PatientParser -\u003e AddCommandParser : parse(\"˗˗n John Doe \\n˗˗p 98765432...\")","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"activate AddCommandParser","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"note right of AddCommandParser: ParseUtil details ommited,\\n see activity diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"create Patient","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"AddCommandParser -\u003e Patient","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"activate Patient","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"Patient --\u003e AddCommandParser","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"deactivate Patient","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"create AddCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"activate AddCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"AddCommand --\u003e AddCommandParser","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"AddCommandParser --\u003e PatientParser : command","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"AddCommandParser -[hidden]-\u003e PatientParser","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"PatientParser --\u003e VmsParser : command","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"deactivate PatientParser","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"VmsParser --\u003e Model : parseResult","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"deactivate VmsParser","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"\u0027 Model -\u003e AddCommand : execute()","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"\u0027 activate AddCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"\u0027 AddCommand -\u003e Model : addPatient()","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"\u0027 activate Model","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"\u0027 Model --\u003e AddCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"deactivate Model","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"\u0027 AddCommand --\u003e Model : commandMessage","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"\u0027 deactivate AddCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"[\u003c--Model : parseResult","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"deactivate Model","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"francisyzy":70}},{"path":"docs/diagrams/patient/ClearActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml ClearPatientActivityDiagram","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"start","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":":Set PatientManager to empty;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":":Update patient pane to show no patients;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":":Display message to user;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"stop","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"francisyzy":7}},{"path":"docs/diagrams/patient/DeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml DeletePatientActivityDiagram","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"start","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"if() then ([valid input])","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"    if() then ([valid id])","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"        :Remove patient from PatientManager;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"    else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"        :Throw CommandExeception;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"    endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":":Display message to user;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"stop","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"francisyzy":14}},{"path":"docs/diagrams/patient/DetailActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml DetailPatientActivityDiagram","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"start","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"if() then ([valid input])","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"    if() then ([valid id])","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"        :Show patient in UI;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"    else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"        :Throw CommandExeception;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"    endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":":Display message to user;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"stop","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"francisyzy":14}},{"path":"docs/diagrams/patient/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml EditPatientActivityDiagram","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"start","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"if() then ([valid input])","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"    if() then ([valid id])","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"        :Create new patient using user input and previous patient;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"        :Set new patient in PatientManager at given id;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"    else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"        :Throw CommandExeception;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":":Display message to user;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"stop","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"francisyzy":15}},{"path":"docs/diagrams/patient/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml FindPatientActivityDiagram","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"start","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"if() then ([valid input])","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"    :Update patient pane to show found patients;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"    \u0027 https://plantuml.com/activity-diagram-beta#9d3afea73e90192d","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"    \u0027 do I want to deal with if there is flags or not? hmm","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"    \u0027 if() then ([has flags])","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"    \u0027     :Create new findPatientDescriptor;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    \u0027 elseif() then ([has query string])","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    \u0027     :Create new findPatientDescriptor using name;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    \u0027 else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    \u0027     :Throw ParseExeception;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    \u0027 endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    :Throw ParseException;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"endif;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":":Display message to user;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"stop","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"francisyzy":19}},{"path":"docs/diagrams/patient/ListActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml ListPatientActivityDiagram","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"start","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":":Update patient pane to show all patients;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":":Display message to user;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"stop","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"francisyzy":6}},{"path":"docs/diagrams/patient/PatientParseActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"@startuml PatientParseSequenceDiagram","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"!include ../style.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"participant \":VmsParser\" as VmsParser LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"participant \":PatientParser\" as PatientParser LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"participant \"a:XYZCommandParser\" as XYZCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"end box","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"[-\u003e LogicManager : processCommand(\"patient XYZ \\n˗˗n John Doe \\n˗˗p 98765432 \\n˗˗d 2001-03-19 \\n˗˗b B+ \\n˗˗a catfur, pollen \\n˗˗v covax\")","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"activate LogicManager","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"LogicManager -\u003e VmsParser : parseCommand(\"patient XYZ \\n˗˗n John Doe \\n˗˗p 98765432 \\n˗˗d 2001-03-19 \\n˗˗b B+ \\n˗˗a catfur, pollen \\n˗˗v covax\")","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"activate VmsParser","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"VmsParser -\u003e PatientParser : parse(\"XYZ \\n˗˗n John Doe \\n˗˗p 98765432 \\n˗˗d 2001-03-19 \\n˗˗b B+ \\n˗˗a catfur, pollen \\n˗˗v covax\")","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"activate PatientParser","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"create XYZCommandParser","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"PatientParser -\u003e XYZCommandParser : parse(\"˗˗n John Doe \\n˗˗p 98765432 \\n˗˗d 2001-03-19 \\n˗˗b B+ \\n˗˗a catfur, pollen \\n˗˗v covax\")","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"activate XYZCommandParser","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"XYZCommandParser --\u003e PatientParser : a","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"deactivate XYZCommandParser","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"XYZCommandParser -[hidden]-\u003e PatientParser : a","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"PatientParser --\u003e VmsParser : a","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"deactivate PatientParser","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"VmsParser --\u003e LogicManager : a","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"deactivate VmsParser","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"francisyzy":37}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    BorderColor black","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    StereotypeFontColor #000000","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    ReferenceBackgroundColor #FFFFFF","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"daitenshionyan":5,"-":73}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"Participant \":VmsParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"ecp -\u003e ec ++: index, editPatientDescriptor","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":19,"francisyzy":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"title: Vaccination Management System","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F11-3/tp/actions)","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-F11-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103-F11-3/tp)","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"An increasing number of vaccinations now have more complicated prerequisites to take them, and Vaccination Management System (VMS) aims to make this validation easier. **VMS is a desktop application for validating and keeping track of vaccination appointments**; its operations are **optimized for fast typists who prefer using a Command Line Interface (CLI)** while maintaining the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"* If you are interested in using VMS, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"* If you are interested about developing VMS, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"francisyzy":6}},{"path":"docs/team/daitenshionyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"title: daitenshionyan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"### Project: Vaccination Management System","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"An increasing number of vaccinations now have more complicated prerequisites to take them, and Vaccination Management System (VMS) aims to make this validation easier. **VMS is a desktop application for validating and keeping track of vaccination appointments**; its operations are **optimized for fast typists who prefer using a Command Line Interface (CLI)** while maintaining the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"Given below are my contributions to the project","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"* **New Feature**:","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"  * Added `vaccination` feature.","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    * CRUD features.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    * Clear feature.","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    * Patient eligibility validation feature.","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    * Find feature.","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    * Referencing vaccination by index.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    * Sample vaccination data.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"  * Enhanced message presentation of application.","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    * Colorize messages based on severity.","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    * Allow past messages to be seen.","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"  * Separate GUI and application processes into different threads.","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003ddaitenshionyan\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"* **Project management**:","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"  * Managed project issue tracker.","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"  * Coordinated integration of code between team members.","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"  * Managed various version releases.","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"  * Edited the theme of the documentation.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"  * User Guide:","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    * Added documentation for the `vaccination` features and its attributes.","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    * Added documentation for data files for all features.","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    * Did cosmetic tweaks to documentation made by others to standardize syntax presentation.","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    * Added documentation details for `UI` component.","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    * Added implementation details for the `Logic` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    * Added test cases for `vaccination`","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"* **Tools**:","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"  * Set up CodeCov.","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"daitenshionyan":46}},{"path":"docs/team/francisyzy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"title: Francis\u0027 Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"### Project: Vaccination Management System","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"An increasing number of vaccinations now have more complicated prerequisites to take them, and Vaccination Management System (VMS) aims to make this validation easier. **VMS is a desktop application for validating and keeping track of vaccination appointments**; its operations are **optimized for fast typists who prefer using a Command Line Interface (CLI)** while maintaining the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"Given below are my contributions to the project","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"* **New Feature**: Refactor person code into patient and updated its attributes","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"  * What it does: Patients now have Blood Type, Date of Birth, Allergies, and Vaccinations. New and attributes important to a patient at a vaccination center. Removed address and email fields.","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"  * Justification: Our product needs to be used by a vaccine center, this are the attributes that would be more important for one to keep track of.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"* **Enhancement to existing features**: Modified `findCommand` to allow specific searches based on attributes.","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"  * What it does: Allows users to search using the flags that are similar to the ones used for `addCommand`","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"  * Justification: This will allow the user to easily identify the patients that have specific allergy or vaccine to easily identify if they would have any problems with the vaccination.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"  * Highlights: This enchancement still retain the older find command feature of searching using name if the flags are not present. Does not impact users that were once used to the previous command.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dfrancisyzy\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dfrancisyzy\u0026tabRepo\u003dAY2223S2-CS2103-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"  * Managed group coordination and communication on Telegram.","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"  * Managed the allocation, and tagging for PE-D.","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"  * Started the use of Github [project board](https://github.com/orgs/AY2223S2-CS2103-F11-3/projects/1/views/1) for user stories.","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"  * Managed reviewing some PRs.","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"  * Set up Github team org/repo for F11-3.","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"  * Managed team meetings by updating meeting notes on Google Drive, and organising the Zoom link.","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"  * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    * Added documentation for the `patient` features and its attributes.","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    * Did cosmetic tweaks to documentation made by others to standardise feature order.","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    * Added implementation details for the `patient` features.","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    * Added UML diagrams for the `patient` features.","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    * Added instructions for manual testing for the `patient` features.","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    * Updated architecture components. [\\#380](https://github.com/AY2223S2-CS2103-F11-3/tp/issues/380)","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"  * Demo:","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    * Added [v1.2 Demo](https://drive.google.com/drive/folders/18t3j1zrud4M8GuwkIIH2xhgmB5X2Ue-z).","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    * Added [v1.3 Demo](https://drive.google.com/drive/folders/19Fovaw6w0l5GH4gBA6gQPlqvdpoVHfXS).","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"  * Ip PRs reviewed (with non-trivial review comments): [\\#145](https://github.com/nus-cs2103-AY2223S2/ip/pull/145), [\\#253](https://github.com/nus-cs2103-AY2223S2/ip/pull/253)","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"  * Tp PRs reviewed (with non-trivial review comments): [\\#49](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/49), [\\#204](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/204), [\\#211](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/211), [\\#260](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/260), [\\#344](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/344).","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"  * Contributed to [forum discussions](https://github.com/nus-cs2103-AY2223S2/forum/issues?q\u003dfrancisyzy). Details also @ [dashboard](https://nus-cs2103-ay2223s2.github.io/dashboards/contents/forum-activities.html#3-fran-yik-francisyzy-46-posts).","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"  * Reported 8 bugs and suggestions for other teams in the class during the PE-D. The reports can be found in [Team\u0027s Github Issue(s)](https://github.com/AY2223S2-CS2103-F10-2/tp/issues?q\u003dfrancisyzy)","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"  * Updated the CI to not run on draft PRs. This is to improve group awareness of member\u0027s activities (lets people push non working code to a PR without it failing and notifying). ([\\#205](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/205))","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"francisyzy":52}},{"path":"docs/team/nuse0726844.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"title: nusE0726844s\u0027 Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"### Project: VaccinationManagementSystem","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"The Vaccination Management System (VMS) is a Java desktop application used for **managing and keeping track of vaccination appointments**.","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"VMS is **optimised for users that can type fast and prefer Command Line Interface (CLI)**.","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"VMS has both CLI, for users to input commands, and a Graphical User Interface (GUI) created with JavaFX, that is used primarily to give visual feedback to the user.","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"Given below are my contributions to the project","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"* **New Feature**: Added an `Appointment` class to VMS","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"  * What it does: allows the users to **manage and keep track of vaccination appointments**.","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"* **New Feature**: Added basic CRUD commands for the `Appointment` class","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"  * What it does: allows the user to","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    * C - add a new `Appointment` object to VMS.","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    * R - list all existing `Appointment` object in VMS.","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    * U - edit an existing `Appointment` object in VMS.","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    * D - delete an existing `Appointment` object from VMS.","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"  * Justification: this feature enables users to **manage and keep track of vaccination appointments**.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"* **New Feature**: Added find command for the `Appointment` class","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"  * What it does: allows the user to find existing `Appointment` objects in VMS that matches the specified keyword(s).","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"  * Justification: this feature enables users to better **manage and keep track of vaccination appointments**.","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"  * Highlights: this feature allows for optional flags to further specify the appointments to be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"* **New Feature**: Added (un)mark commands for the `Appointment` class","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"  * What it does: allows the user to","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    * mark existing `Appointment` objects in VMS as completed.","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    * changes the status existing `Appointment` objects in VMS from completed to not completed.","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"  * Justification: this feature enables users to better **manage and keep track of vaccination appointments**.","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnuse0726844\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"  * Contributed to the releases `v0.1` - `v1.4` (7 releases) on GitHub","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"  * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    * Added documentation for the `Appointment` Class [\\#278](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/278)","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    * Added documentation for the `Appointment` Class [\\##228](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/228)","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    * Added documentation for the Model Component [\\#355](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/355)","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    * Updated the class diagram for the Model Component [\\#355](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/355), [\\#364](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/355)","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"nusE0726844":47}},{"path":"docs/team/slackernoob.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"title: slackernoob\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"### Project: Vaccination Management System","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"An increasing number of vaccinations now have more complicated prerequisites to take them, and Vaccination Management System (VMS) aims to make this validation easier. **VMS is a desktop application for validating and keeping track of vaccination appointments**; its operations are **optimized for fast typists who prefer using a Command Line Interface (CLI)** while maintaining the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"* **New Feature**: Keyword","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"  * What it does: Keywords now have Keyword and MainKeyword attributes. Allows users to create their own mappings for `patient`, `appointment`, and `vaccination` components.","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"  * Highlights: ","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"* **New Feature**: Keyword commands","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"  * What it does: Allows user to ","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    * add a new `Keyword` object to VMS","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    * delete an existing `Keyword` object from VMS","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"  * Justification: Our product is used by users who type fast and work fast, hence by allowing them to create their own shortcuts for important component words, input can be shortened.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dslackernoob\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dslackernoob\u0026tabRepo\u003dAY2223S2-CS2103-F11-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"  * Attended team meetings on zoom punctually.","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"  * Discussed with and consulted teammates on keyword feature implementation details and bug fixes.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"  * Managed reviewing some PRs.","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"  * Contributed to the releases on GitHub.","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"    * Added documentation for the `keyword` class and its attributes. [\\#359](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/359)","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"    * Added implementation details for the `keyword` features. [\\#387](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/387/)","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"    * Updated the class diagram for the Storage Component. [\\#387](https://github.com/AY2223S2-CS2103-F11-3/tp/pull/387/)","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"slackernoob":20,"-":14}},{"path":"src/main/java/seedu/vms/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"daitenshionyan":3,"-":61}},{"path":"src/main/java/seedu/vms/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"daitenshionyan":1,"-":24}},{"path":"src/main/java/seedu/vms/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.concurrent.ScheduledThreadPoolExecutor;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Config;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Version;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.ConfigUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.Logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.LogicManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.StorageManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.UserPrefsStorage;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.storage.appointment.AppointmentStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.storage.appointment.JsonAppointmentStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.storage.keyword.JsonKeywordStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.storage.keyword.KeywordStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.patient.JsonPatientManagerStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.patient.PatientManagerStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.JsonVaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.VaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.UiManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public static final Version VERSION \u003d new Version(0, 3, 0, false);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    private static final int FPS \u003d 30;","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    private final ScheduledThreadPoolExecutor executor \u003d new ScheduledThreadPoolExecutor(1);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PatientManager ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage();","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        PatientManagerStorage patientManagerStorage \u003d new JsonPatientManagerStorage();","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeStorage vaxTypeStorage \u003d new JsonVaxTypeStorage();","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        AppointmentStorage appointmentStorage \u003d new JsonAppointmentStorage();","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"slackernoob"},"content":"        KeywordStorage keywordStorage \u003d new JsonKeywordStorage();","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"slackernoob"},"content":"        storage \u003d new StorageManager(patientManagerStorage, vaxTypeStorage,","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"slackernoob"},"content":"                appointmentStorage, userPrefsStorage, keywordStorage);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s patient manager and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     * The data from the sample patient manager will be used instead if {@code storage}\u0027s patient manager is not found,","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * or an empty patient manager will be used instead if errors occur when reading {@code storage}\u0027s patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        return new ModelManager(","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"                new PatientManager(),","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                new VaxTypeManager(),","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"                new AppointmentManager(),","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"slackernoob"},"content":"                new KeywordManager(),","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"                userPrefs);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"            initializedConfig \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"            logger.warning(\"Default config will be used due to: \" + ioEx.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"            initializedPrefs \u003d storage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"            logger.warning(\"Default user preference will be used due to: \" + e.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"        logger.info(\"Starting PatientManager \" + MainApp.VERSION);","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        startRefreshLoop();","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        logic.loadManagers(ui::showErrorDialogAndShutdown);","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"    private void startRefreshLoop() {","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"        executor.scheduleAtFixedRate(","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e Platform.runLater(() -\u003e ui.refresh()),","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"                0,","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"                1000 / FPS,","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"                TimeUnit.MILLISECONDS);","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping VMS ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"        executor.shutdown();","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":57,"slackernoob":7,"-":108,"nusE0726844":4,"francisyzy":6}},{"path":"src/main/java/seedu/vms/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.equals(logLevel, o.logLevel);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(logLevel);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":3,"-":49}},{"path":"src/main/java/seedu/vms/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private static final double DEFAULT_HEIGHT \u003d 700;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private static final double DEFAULT_WIDTH \u003d 1280;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":3,"-":76}},{"path":"src/main/java/seedu/vms/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private static final String LOG_FILE \u003d \"vms.log\";","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":110,"francisyzy":1}},{"path":"src/main/java/seedu/vms/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_MISSING_PARAMETER_FORMAT \u003d \"Missing parameters! \\n%1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_INVALID_PATIENT_ID \u003d \"The PATIENT_ID provided is invalid\";","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d \"The appointment index provided is \"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"            + \"invalid\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_VACCINATION_LISTED_OVERVIEW \u003d \"%d vaccinations listed!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_INVALID_KEYWORD_DISPLAYED_INDEX \u003d \"The keyword index provided is invalid\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_EXISTING_KEYWORD_EXISTS \u003d \"There is an existing keyword mapping for %s! \"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"            + \"Please delete before creating a new keyword mapping with %s. \\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_INVALID_MAIN_KEYWORD \u003d \"Invalid main keyword! \"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"            + \"Only %s, %s, and %s are allowed. \\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_INVALID_SUB_KEYWORD \u003d \"Invalid new keyword! %s, %s, %s, %s, %s, %s,\"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"            + \"and %s are NOT allowed. \\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_KEYWORD_DOES_NOT_EXIST \u003d \"There is not a existing \"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"            + \"keyword mapping for %s!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_KEYWORD_IS_EMPTY \u003d \"New keyword cannot be empty. Please try again.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public static final String FORMAT_UNEXPECTED_APPOINTMENT_CHANGE \u003d \"Unexpected change detected!\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            + \"The following appointments will become invalid if the change were to happen:%s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_USE_FORCE \u003d \"Add [--force true] to the command to force the change\";","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public static final String FORMAT_LIMIT_EX \u003d \"Limit of %d reached\";","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":9,"slackernoob":11,"-":9,"francisyzy":3,"nusE0726844":3}},{"path":"src/main/java/seedu/vms/commons/core/Retriever.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * Represents a retriever of data from its key in a map or its index in a list.","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cK\u003e the type of the key the data may be mapped to.","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cV\u003e the type of the data being retrieved.","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public abstract class Retriever\u003cK, V\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * Creates a {@code Retriever} that will retrieve the data mapped to the","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * specified key.","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param key - the key of the data to retrieve.","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @return a {@code Retriever} that retrieves data from maps.","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public static \u003cK, V\u003e Retriever\u003cK, V\u003e of(K key) {","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        return new Retriever\u003cK, V\u003e() {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            public V retrieve(Map\u003c? extends K, V\u003e map, List\u003cV\u003e list) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"                return retrieveFromMap(map, key);","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        };","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * Creates a {@code Retriever} that will retrieve the data at the specified","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * index in a list.","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * @param index - the index of the data in a list to retrieve.","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * @return a {@code Retriever} that retrieves data from lists.","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    public static \u003cK, V\u003e Retriever\u003cK, V\u003e of(int index) {","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        return new Retriever\u003cK, V\u003e() {","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            public V retrieve(Map\u003c? extends K, V\u003e map, List\u003cV\u003e list) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                return retrieveFromList(list, index);","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        };","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    private static \u003cK, V\u003e V retrieveFromMap(Map\u003c? extends K, V\u003e map, K key) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        if (!map.containsKey(key)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(String.format(\"%s does not exist\", key.toString()));","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return map.get(key);","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    private static \u003cV\u003e V retrieveFromList(List\u003cV\u003e list, int index) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            return list.get(index);","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IndexOutOfBoundsException oobEx) {","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(String.format(\"Index %d out of bounds for length %d\",","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                    index + 1, list.size()));","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * Retrieves data from the given data structures. The data structure that","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * the retriever retrieves from is determined by the retriever.","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * @param map - the map from which data may be retrieved from.","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * @param list - the list from which data may be retrieved from.","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the data cannot be retrieved.","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    public abstract V retrieve(Map\u003c? extends K, V\u003e map, List\u003cV\u003e list) throws IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"daitenshionyan":77}},{"path":"src/main/java/seedu/vms/commons/core/ValueChange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * Represents a change in state of a value.","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e the type of value being changed.","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public class ValueChange\u003cT\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_ADDITION \u003d \"%s added\";","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_DELETION \u003d \"%s deleted\";","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_UPDATE \u003d \"%s updated\";","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"Nothing changed\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cT\u003e oldValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cT\u003e newValue;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ValueChange}.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param oldValue - the initial state of the value.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param newValue - the new state of the value (can be {@code null}).","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange(T oldValue, T newValue) {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        this.oldValue \u003d Optional.ofNullable(oldValue);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        this.newValue \u003d Optional.ofNullable(newValue);","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the old value wrapped in an {@code Optional}. If the change is","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * only an addition, the change will not contain an old value and","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional.empty} will be returned instead.","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * @return the initial state of the value being changed wrapped in an","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Optional}.","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cT\u003e getOldValue() {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        return oldValue;","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the new value wrapped in an {@code Optional}. If the change is a","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     * deletion, the change will not contain a new value and","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional.empty} will be returned instead.","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     * @return the new value wrapped in an {@code Optional}.","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cT\u003e getNewValue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return newValue;","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        if (oldValue.equals(newValue)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            return MESSAGE_NO_CHANGE;","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        } else if (oldValue.isPresent() \u0026\u0026 newValue.isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            return String.format(MESSAGE_UPDATE, oldValue.get().toString());","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        } else if (oldValue.isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            return String.format(MESSAGE_DELETION, oldValue.get().toString());","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            return String.format(MESSAGE_ADDITION, newValue.get().toString());","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"daitenshionyan":70}},{"path":"src/main/java/seedu/vms/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":115}},{"path":"src/main/java/seedu/vms/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core.index;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"daitenshionyan":1,"-":53}},{"path":"src/main/java/seedu/vms/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":10}},{"path":"src/main/java/seedu/vms/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"-":20}},{"path":"src/main/java/seedu/vms/commons/exceptions/LimitExceededException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"/** Signals that a limit has been exceeded. */","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"public class LimitExceededException extends RuntimeException {","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code LimitExceededException} without a message or cause.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    public LimitExceededException() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code LimitExceededException} without a cause.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @param message - message of the exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public LimitExceededException(String message) {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        super(message);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code LimitExceededException} without a cause.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public LimitExceededException(Throwable cause) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        super(cause);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code LimitExceededException}.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * @param message - the message of the exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public LimitExceededException(String message, Throwable cause) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":41}},{"path":"src/main/java/seedu/vms/commons/exceptions/UnexpectedChangeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":" * Signals that an unexpected change has occurred.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"public class UnexpectedChangeException extends Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code UnexpectedChangeException} without a message or cause.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    public UnexpectedChangeException() {}","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code UnexpectedChangeException} without a cause.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * @param message - message of the exception.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public UnexpectedChangeException(String message) {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        super(message);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code UnexpectedChangeException} without a cause.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public UnexpectedChangeException(Throwable cause) {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        super(cause);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code UnexpectedChangeException}.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * @param message - the message of the exception.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    public UnexpectedChangeException(String message, Throwable cause) {","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"daitenshionyan":43}},{"path":"src/main/java/seedu/vms/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.MainApp;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     * Checks that {@code collection} is within the limit provided","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * @param collection","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     * @param limit","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * @return TRUE if it is within the limits","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    public static boolean isWithinLimit(Collection\u003c?\u003e collection, int limit) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        return collection.size() \u003c\u003d limit;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":2,"-":40,"francisyzy":14}},{"path":"src/main/java/seedu/vms/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"-":34}},{"path":"src/main/java/seedu/vms/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Config;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     * Loads the specified config file.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * @param configFilePath - the path of the config file to load.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static Config readConfig(Path configFilePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        return JsonUtil.deserializeFromFile(configFilePath, Config.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Saves the specified config instance to the specified file path.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param config - the config instance to save.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param configFilePath - the path to save the config file to.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(config);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        FileUtil.createIfMissing(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        JsonUtil.serializeToFile(configFilePath, config);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":22,"-":15}},{"path":"src/main/java/seedu/vms/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import java.io.Reader;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final int BUFFER_SIZE \u003d 2097152; // 2MB","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FORMAT_RESOURCE_FILE_NOT_FOUND \u003d \"Could not find resource file: %s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the buffered reader of the specified file relative to the","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     * application\u0027s resource folder.","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     * @param pathString - the path to the file in the resource folder as a","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"     *      String.","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     * @throws FileNotFoundException if the file could not be found.","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@param pathString} is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    public static BufferedReader getResourceFileReader(String pathString) throws FileNotFoundException {","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        InputStream inStream \u003d FileUtil.class.getResourceAsStream(pathString);","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        if (inStream \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"            throw new FileNotFoundException(","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                    String.format(FORMAT_RESOURCE_FILE_NOT_FOUND, pathString));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        Reader reader \u003d new InputStreamReader(inStream);","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        return new BufferedReader(reader, BUFFER_SIZE);","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the buffered reader of the specified file.","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"     * @throws FileNotFoundException if the file cannot be found.","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code path} is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    public static BufferedReader getFileReader(Path path) throws FileNotFoundException {","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        return new BufferedReader(new FileReader(path.toFile()), BUFFER_SIZE);","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the buffered writer to the specified file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O exception occurs","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"     *      (see {@link #FileWriter(java.io.File)}).","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code path} is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    public static BufferedWriter getFileWriter(Path path) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        return new BufferedWriter(new FileWriter(path.toFile()), BUFFER_SIZE);","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":59,"-":65}},{"path":"src/main/java/seedu/vms/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.core.JsonLocation;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FORMAT_INVALID_JSON_FILE \u003d \"%s [%s] (Unexpected JSON format)\";","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * Deserializes a JSON file in the resource folder to an object instance.","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * @param \u003cT\u003e - the type of the object to deserialize to.","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * @param pathString - the path to the file to deserialize in the resource","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     *      folder as a String.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * @param valueType - the type of the object to deserialize to.","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    public static \u003cT\u003e T deserializeFromResource(String pathString, Class\u003cT\u003e valueType)","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        try (BufferedReader reader \u003d FileUtil.getResourceFileReader(pathString)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            return objectMapper.readValue(reader, valueType);","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     * Deserializes a JSON file to an object instance.","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     * @param \u003cT\u003e - the type of the object to deserialize to.","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     * @param path - path to the file to deserialize from.","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * @param valueType - the type of the object to deserialize to.","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O exception occurs.","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public static \u003cT\u003e T deserializeFromFile(Path path, Class\u003cT\u003e valueType)","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        try (BufferedReader reader \u003d FileUtil.getFileReader(path)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            return objectMapper.readValue(reader, valueType);","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        } catch (JsonProcessingException jsonEx) {","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            throw new IOException(","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                    String.format(FORMAT_INVALID_JSON_FILE,","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                            path.toString(),","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                            formatJsonException(jsonEx)));","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    private static String formatJsonException(JsonProcessingException ex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        JsonLocation loc \u003d ex.getLocation();","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        int lineNum \u003d loc.getLineNr();","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        int colNum \u003d loc.getColumnNr();","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        return String.format(\"line: %d, col: %d\", lineNum, colNum);","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     * Serializes the given object instance to the specified file.","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     * @param path - path to serialize to.","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"     * @param instance - the object instance to serialize.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if any parameter is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    public static void serializeToFile(Path path, Object instance) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        try (BufferedWriter writer \u003d FileUtil.getFileWriter(path)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"            objectMapper.writerWithDefaultPrettyPrinter()","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"                    .writeValue(writer, instance);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":69,"-":61}},{"path":"src/main/java/seedu/vms/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * Checks if the given text contains all the character sequence in the","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * given list of patterns. The order of the pattern given is also checked","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * for but the case does not matter.","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param text - the text to test.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param patterns - the patterns to search for.","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the given text matches the given list of","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     *         patterns and {@code false} otherwise or patterns are empty.","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isMatching(String text, Collection\u003cString\u003e patterns) {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        if (patterns.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"            return false;","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        return text.toUpperCase().matches(compilePattern(patterns));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    private static String compilePattern(Collection\u003cString\u003e patterns) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        for (String pattern : patterns) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(\".*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(convertRegexChars(pattern));","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        builder.append(\".*\");","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    private static String convertRegexChars(String pattern) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        return pattern","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                .toUpperCase()","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\[\", \"\\\\\\\\[\")","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\]\", \"\\\\\\\\]\")","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\(\", \"\\\\\\\\(\")","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\)\", \"\\\\\\\\)\")","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\{\", \"\\\\\\\\{\")","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\}\", \"\\\\\\\\}\")","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\\u003c\", \"\\\\\\\\\u003c\")","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\\u003e\", \"\\\\\\\\\u003e\")","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\+\", \"\\\\\\\\+\")","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\-\", \"\\\\\\\\-\")","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\|\", \"\\\\\\\\|\")","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\?\", \"\\\\\\\\?\")","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\*\", \"\\\\\\\\*\")","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\.\", \"\\\\\\\\.\")","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\^\", \"\\\\\\\\^\")","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\$\", \"\\\\\\\\$\")","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\\u0026\", \"\\\\\\\\\u0026\")","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\!\", \"\\\\\\\\!\")","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\\u003d\", \"\\\\\\\\\u003d\")","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                .replaceAll(\"\\\\:\", \"\\\\\\\\:\");","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"     * Formats the error messages in a nice string","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"     * @param errMessages","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"     * @param formatInvalidMessage","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"     * @return formatted Strings","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"    public static String formatErrorMessage(List\u003cString\u003e errMessages, String formatInvalidMessage) {","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"        final String formatConstrain \u003d \"- %s\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"        for (String message : errMessages) {","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"            builder.append(String.format(formatConstrain, message));","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"        return String.format(formatInvalidMessage, builder.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"     * Formats the given collection of appointment data.","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"    public static String formatAppointmentListing(Collection\u003cIdData\u003cAppointment\u003e\u003e appointments) {","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        for (IdData\u003cAppointment\u003e appointment : appointments) {","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"            // Magic number to display 25 appointments a line.","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"            if (count % 25 \u003d\u003d 0) {","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(String.format(\" #%04d,\", appointment.getId() + 1));","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"            count++;","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        String message \u003d builder.toString().stripTrailing();","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"        return message.substring(0, message.length() - 1);","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"     * Wraps the text to the specified length.","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"    public static String wrapText(String text, int wrapAt) {","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        String[] lines \u003d text.split(\"[\\n\\r]\");","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(wrapLine(line, wrapAt));","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"        return builder.toString().strip();","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"     * Wraps the line to the specified length. An additional new line will","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"     * always be present at the end.","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"    public static String wrapLine(String line, int wrapAt) {","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        int cur \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"        while (cur \u003c line.length()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"            int nextCur \u003d Math.min(cur + wrapAt, line.length());","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(line.substring(cur, nextCur));","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"            cur \u003d nextCur;","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":105,"-":66,"francisyzy":26}},{"path":"src/main/java/seedu/vms/logic/CommandMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public class CommandMessage {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    private final String message;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private final State state;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code CommandResult} with {@code showHelp} and {@code exit}","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * set to their default value.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage(String message, State state) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        this(message, false, false, state);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code CommandResult} with {@code state} set to","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * {@link State#INFO}.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage(String message, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this(message, showHelp, exit, State.INFO);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code CommandResult}.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage(String message, boolean showHelp, boolean exit, State state) {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        this.message \u003d requireNonNull(message);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        this.state \u003d state;","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage(String feedbackToUser) {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    public String getMessage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        return message;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public State getState() {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        return state;","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof CommandMessage)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        CommandMessage otherCommandResult \u003d (CommandMessage) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        return message.equals(otherCommandResult.message)","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 state.equals(otherCommandResult.state)","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(message, showHelp, exit);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     * Represents the state of a {@code CommandResult}.","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    public static enum State {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        INFO, WARNING, ERROR, DEATH","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":50,"-":58}},{"path":"src/main/java/seedu/vms/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Queues the command text for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param commandText - the command text to queue.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    void queue(String commandText);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the action to be performed when a command completes its execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param onExecutionComplete - the {@code Consumer} to be called after a","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     *      command completes its execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    void setOnExecutionCompletion(Consumer\u003cList\u003cCommandMessage\u003e\u003e onExecutionComplete);","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * Loads all managers for {@code Model}.","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * @param beyondDeathErrHandler - the {@code BiConsumer} that will be","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     *      called if an error that cannot be handled occurs. The first","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     *      parameter is the title of the error while the second is the","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     *      description.","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    void loadManagers(BiConsumer\u003cString, String\u003e beyondDeathErrHandler);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * Returns the PatientManager.","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     * @see seedu.vms.model.Model#getPatientManager()","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    ReadOnlyPatientManager getPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientMap();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    /** Returns an unmodifiable view of the filtered map of vaccination types. */","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap();","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    /** Returns an unmodifiable view of the filtered map of Appointments. */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    ObservableMap\u003cInteger, IdData\u003cAppointment\u003e\u003e getFilteredAppointmentMap();","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code ObjectProperty} of the patient to be detailed.","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    ObjectProperty\u003cIdData\u003cPatient\u003e\u003e detailedPatientProperty();","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code ObjectProperty} of the vaccination to be detailed.","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    ObjectProperty\u003cVaxType\u003e detailedVaxTypeProperty();","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     * Binds the given {@code ObservableList} to the {@code Model} within this","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Logic}. The list is used to refer to {@code VaxType} by index if","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"     * needed.","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"     * @param displayList - the {@code ObservableList} to bind to","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Model}.","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    void bindVaccinationDisplayList(ObservableList\u003cVaxType\u003e displayList);","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the action that should be performed if a exit command is received.","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     * @param closeAction - a {@code Runnable} that defines the close action.","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    void setCloseAction(Runnable closeAction);","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the action that should be performed if a help command is received.","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"     * @param showHelpAction - a {@code Runnable} that defines the show help","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"     *      action.","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    void setShowHelpAction(Runnable showHelpAction);","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daitenshionyan":78,"-":25,"nusE0726844":4,"francisyzy":7}},{"path":"src/main/java/seedu/vms/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.concurrent.LinkedBlockingDeque;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParseResult;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":" * The concrete implementation of {@code Logic}. Responsible for initializing","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":" * {@code Model} state and command executions.","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    private static final String LOAD_SUCCESS_FORMAT \u003d \"Save data for %s found\";","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    private static final String LOAD_DEFAULT_FORMAT \u003d \"Default data for %s will be loaded\";","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    private static final String LOAD_EMPTY_FORMAT \u003d \"Empty data for %s will be loaded\";","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    private static final String LOAD_ERROR_FORMAT \u003d \"Unable to load %s: %s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    private static final String LOAD_DEATH_FORMAT \u003d \"Died loading %s: %s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    private Consumer\u003cList\u003cCommandMessage\u003e\u003e completionHandler \u003d results -\u003e {};","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    private final LinkedBlockingDeque\u003cString\u003e cmdQueue \u003d new LinkedBlockingDeque\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    private volatile boolean isExecuting \u003d true;","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    private Runnable closeAction \u003d () -\u003e {};","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    private Runnable showHelpAction \u003d () -\u003e {};","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    public void queue(String commandText) {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        cmdQueue.add(commandText);","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        startNext();","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void startNext() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        if (isExecuting || cmdQueue.isEmpty()) {","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        isExecuting \u003d true;","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        String commandText \u003d cmdQueue.poll();","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        new Thread(() -\u003e attemptProcess(","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e processCommand(commandText))).start();","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     * Attempts the given process command process. All uncaught runtime","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"     * exceptions will be handled by displaying a {@code Death} state","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"     * {@code CommandMessage} of the thrown exception.","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"     * @param process - the process to run.","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    private void attemptProcess(Runnable process) {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            process.run();","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        } catch (Throwable deathEx) {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"            completeExecution(List.of(new CommandMessage(","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                    deathEx.toString(),","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"                    CommandMessage.State.DEATH)));","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    private void processCommand(String commandText) {","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"            execute(model.parseCommand(commandText));","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"            completeExecution(List.of(new CommandMessage(","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                    parseEx.getMessage(),","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"                    CommandMessage.State.ERROR)));","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"    private void execute(ParseResult parseResult) {","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cCommandMessage\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        parseResult.getMessage().ifPresent(results::add);","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        Command command \u003d parseResult.getCommand();","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"            results.add(command.execute(model));","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        } catch (CommandException ex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"            results.add(new CommandMessage(ex.getMessage(), CommandMessage.State.ERROR));","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"            completeExecution(results);","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"        results.addAll(saveModel());","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"        completeExecution(results, command.getFollowUp());","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    private void execute(Command command) {","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        execute(new ParseResult(command));","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003cCommandMessage\u003e saveModel() {","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cCommandMessage\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"            storage.savePatientManager(model.getPatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"            results.add(new CommandMessage(FILE_OPS_ERROR_MESSAGE + ioe, CommandMessage.State.WARNING));","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"            storage.saveVaxTypes(model.getVaxTypeManager());","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"            results.add(new CommandMessage(FILE_OPS_ERROR_MESSAGE + ioe, CommandMessage.State.WARNING));","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"nusE0726844"},"content":"            storage.saveAppointments(model.getAppointmentManager());","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"            results.add(new CommandMessage(FILE_OPS_ERROR_MESSAGE + ioe, CommandMessage.State.WARNING));","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"slackernoob"},"content":"            storage.saveKeywords(model.getKeywordManager());","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"slackernoob"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"slackernoob"},"content":"            results.add(new CommandMessage(FILE_OPS_ERROR_MESSAGE + ioe, CommandMessage.State.WARNING));","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        return results;","lastModifiedDate":"2023-04-04"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"    private void completeExecution(List\u003cCommandMessage\u003e results) {","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        completeExecution(results, Optional.empty());","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void completeExecution(List\u003cCommandMessage\u003e messages, Optional\u003cCommand\u003e followUp) {","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"        completionHandler.accept(messages);","lastModifiedDate":"2023-04-04"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        if (performActions(messages)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"        if (followUp.isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"            new Thread(() -\u003e attemptProcess(","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"                    () -\u003e execute(followUp.get()))).start();","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"        isExecuting \u003d false;","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"        startNext();","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"     * Performs the actions as given in the given list of messages. Returns if","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"     * the application should stop.","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the application should stop and {@code false}","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"     *      otherwise.","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"    private boolean performActions(List\u003cCommandMessage\u003e messages) {","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"        for (CommandMessage message : messages) {","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"            if (message.isExit()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"                closeAction.run();","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"                return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"            if (message.isShowHelp()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"                showHelpAction.run();","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"        return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"    public void loadManagers(BiConsumer\u003cString, String\u003e beyondDeathErrHandler) {","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"        if (Path.of(\"data\").toFile().isFile()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"            beyondDeathErrHandler.accept(","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"                    \"[data] already exists and is not a directory\",","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"                    \"Close the application and remove [data] file before restarting.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-04-08"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"francisyzy"},"content":"        // @@author francisyzy","lastModifiedDate":"2023-04-08"},{"lineNumber":223,"author":{"gitId":"francisyzy"},"content":"        // load patients","lastModifiedDate":"2023-04-08"},{"lineNumber":224,"author":{"gitId":"francisyzy"},"content":"        ReadOnlyPatientManager patientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-18"},{"lineNumber":225,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":226,"author":{"gitId":"francisyzy"},"content":"            patientManager \u003d storage.readPatientManager();","lastModifiedDate":"2023-03-18"},{"lineNumber":227,"author":{"gitId":"francisyzy"},"content":"            sendLoadInfo(String.format(LOAD_SUCCESS_FORMAT, \"patients\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":228,"author":{"gitId":"francisyzy"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-18"},{"lineNumber":229,"author":{"gitId":"francisyzy"},"content":"            sendLoadWarning(String.format(LOAD_ERROR_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":230,"author":{"gitId":"francisyzy"},"content":"                    \"patients\", ioEx.getMessage()));","lastModifiedDate":"2023-03-18"},{"lineNumber":231,"author":{"gitId":"francisyzy"},"content":"            patientManager \u003d SampleDataUtil.getSamplePatientManager();","lastModifiedDate":"2023-03-18"},{"lineNumber":232,"author":{"gitId":"francisyzy"},"content":"            sendLoadInfo(String.format(LOAD_DEFAULT_FORMAT, \"patients\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":233,"author":{"gitId":"francisyzy"},"content":"        } catch (Throwable deathEx) {","lastModifiedDate":"2023-03-18"},{"lineNumber":234,"author":{"gitId":"francisyzy"},"content":"            sendLoadDeath(String.format(LOAD_DEATH_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":235,"author":{"gitId":"francisyzy"},"content":"                    \"patients\", deathEx.toString()));","lastModifiedDate":"2023-04-05"},{"lineNumber":236,"author":{"gitId":"francisyzy"},"content":"            sendLoadInfo(String.format(LOAD_EMPTY_FORMAT, \"patients\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"francisyzy"},"content":"        model.setPatientManager(patientManager);","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"        // @@author daitenshionyan","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"        // load vaccinations","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager vaxTypeManager \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-18"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"            vaxTypeManager \u003d storage.loadUserVaxTypes();","lastModifiedDate":"2023-03-18"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"            sendLoadInfo(String.format(LOAD_SUCCESS_FORMAT, \"vaccinations\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-18"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"            sendLoadWarning(String.format(LOAD_ERROR_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"                    \"vaccinations\", ioEx.getMessage()));","lastModifiedDate":"2023-03-18"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"            vaxTypeManager \u003d storage.loadDefaultVaxTypes();","lastModifiedDate":"2023-03-18"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"            sendLoadInfo(String.format(LOAD_DEFAULT_FORMAT, \"vaccinations\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"        } catch (Throwable deathEx) {","lastModifiedDate":"2023-03-18"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"            sendLoadDeath(String.format(LOAD_DEATH_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"                    \"vaccinations\", deathEx.toString()));","lastModifiedDate":"2023-04-05"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"            sendLoadInfo(String.format(LOAD_EMPTY_FORMAT, \"vaccinations\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"        model.setVaxTypeManager(vaxTypeManager);","lastModifiedDate":"2023-03-18"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":258,"author":{"gitId":"nusE0726844"},"content":"        // @@author nusE0726844","lastModifiedDate":"2023-04-08"},{"lineNumber":259,"author":{"gitId":"nusE0726844"},"content":"        // load appointments","lastModifiedDate":"2023-04-08"},{"lineNumber":260,"author":{"gitId":"nusE0726844"},"content":"        AppointmentManager appointmentManager \u003d new AppointmentManager();","lastModifiedDate":"2023-03-18"},{"lineNumber":261,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":262,"author":{"gitId":"nusE0726844"},"content":"            appointmentManager \u003d storage.loadAppointments();","lastModifiedDate":"2023-03-18"},{"lineNumber":263,"author":{"gitId":"nusE0726844"},"content":"            sendLoadInfo(String.format(LOAD_SUCCESS_FORMAT, \"appointments\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":264,"author":{"gitId":"nusE0726844"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-18"},{"lineNumber":265,"author":{"gitId":"nusE0726844"},"content":"            sendLoadWarning(String.format(LOAD_ERROR_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":266,"author":{"gitId":"nusE0726844"},"content":"                    \"appointments\", ioEx.getMessage()));","lastModifiedDate":"2023-03-18"},{"lineNumber":267,"author":{"gitId":"nusE0726844"},"content":"            sendLoadInfo(String.format(LOAD_EMPTY_FORMAT, \"appointments\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":268,"author":{"gitId":"nusE0726844"},"content":"        } catch (Throwable deathEx) {","lastModifiedDate":"2023-03-18"},{"lineNumber":269,"author":{"gitId":"nusE0726844"},"content":"            sendLoadDeath(String.format(LOAD_DEATH_FORMAT,","lastModifiedDate":"2023-03-18"},{"lineNumber":270,"author":{"gitId":"nusE0726844"},"content":"                    \"appointments\", deathEx.toString()));","lastModifiedDate":"2023-04-05"},{"lineNumber":271,"author":{"gitId":"nusE0726844"},"content":"            sendLoadInfo(String.format(LOAD_EMPTY_FORMAT, \"appointments\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":272,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":273,"author":{"gitId":"nusE0726844"},"content":"        validateAppointments(appointmentManager, patientManager, vaxTypeManager);","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"nusE0726844"},"content":"        model.setAppointmentManager(appointmentManager);","lastModifiedDate":"2023-03-18"},{"lineNumber":275,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":276,"author":{"gitId":"slackernoob"},"content":"        // @@author slackernoob","lastModifiedDate":"2023-04-08"},{"lineNumber":277,"author":{"gitId":"slackernoob"},"content":"        // load keywords","lastModifiedDate":"2023-04-08"},{"lineNumber":278,"author":{"gitId":"slackernoob"},"content":"        KeywordManager keywordManager \u003d new KeywordManager();","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"slackernoob"},"content":"            keywordManager \u003d storage.loadKeywords();","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"slackernoob"},"content":"            sendLoadInfo(String.format(LOAD_SUCCESS_FORMAT, \"keywords\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"slackernoob"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"slackernoob"},"content":"            sendLoadWarning(String.format(LOAD_ERROR_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"slackernoob"},"content":"                   \"keywords\", ioEx.getMessage()));","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"slackernoob"},"content":"            keywordManager \u003d storage.loadEmptyKeywords();","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"slackernoob"},"content":"            sendLoadInfo(String.format(LOAD_DEFAULT_FORMAT, \"keywords\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"slackernoob"},"content":"        } catch (Throwable deathEx) {","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"slackernoob"},"content":"            sendLoadDeath(String.format(LOAD_DEATH_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"slackernoob"},"content":"                    \"keywords\", deathEx.toString()));","lastModifiedDate":"2023-04-05"},{"lineNumber":290,"author":{"gitId":"slackernoob"},"content":"            sendLoadInfo(String.format(LOAD_EMPTY_FORMAT, \"keywords\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"slackernoob"},"content":"        model.setKeywordManager(keywordManager);","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"slackernoob"},"content":"        // @@author","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"        isExecuting \u003d false;","lastModifiedDate":"2023-03-18"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"    private void validateAppointments(AppointmentManager manager,","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"                ReadOnlyPatientManager patientManager, VaxTypeManager vaxTypeManager) {","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cIdData\u003cAppointment\u003e\u003e invalidAppointments \u003d manager.validate(patientManager, vaxTypeManager);","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"        if (invalidAppointments.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"            sendLoadInfo(\"Appointments validated\");","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"        sendLoadWarning(String.format(\"The following appointments are invalid and have been deleted:%s\",","lastModifiedDate":"2023-03-29"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"                StringUtil.formatAppointmentListing(invalidAppointments)));","lastModifiedDate":"2023-03-29"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"daitenshionyan"},"content":"    private void sendLoadInfo(String message) {","lastModifiedDate":"2023-03-18"},{"lineNumber":312,"author":{"gitId":"daitenshionyan"},"content":"        logger.info(message);","lastModifiedDate":"2023-03-18"},{"lineNumber":313,"author":{"gitId":"daitenshionyan"},"content":"        completionHandler.accept(List.of(new CommandMessage(message)));","lastModifiedDate":"2023-04-04"},{"lineNumber":314,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":315,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":316,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":317,"author":{"gitId":"daitenshionyan"},"content":"    private void sendLoadWarning(String message) {","lastModifiedDate":"2023-03-18"},{"lineNumber":318,"author":{"gitId":"daitenshionyan"},"content":"        logger.warning(message);","lastModifiedDate":"2023-03-18"},{"lineNumber":319,"author":{"gitId":"daitenshionyan"},"content":"        completionHandler.accept(List.of(new CommandMessage(","lastModifiedDate":"2023-04-04"},{"lineNumber":320,"author":{"gitId":"daitenshionyan"},"content":"                message, CommandMessage.State.WARNING)));","lastModifiedDate":"2023-03-20"},{"lineNumber":321,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":322,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":323,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":324,"author":{"gitId":"daitenshionyan"},"content":"    private void sendLoadDeath(String message) {","lastModifiedDate":"2023-03-18"},{"lineNumber":325,"author":{"gitId":"daitenshionyan"},"content":"        logger.severe(message);","lastModifiedDate":"2023-03-18"},{"lineNumber":326,"author":{"gitId":"daitenshionyan"},"content":"        completionHandler.accept(List.of(new CommandMessage(","lastModifiedDate":"2023-04-04"},{"lineNumber":327,"author":{"gitId":"daitenshionyan"},"content":"                message, CommandMessage.State.DEATH)));","lastModifiedDate":"2023-03-20"},{"lineNumber":328,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":329,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":330,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":331,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":332,"author":{"gitId":"daitenshionyan"},"content":"    public void setOnExecutionCompletion(Consumer\u003cList\u003cCommandMessage\u003e\u003e onExecutionComplete) {","lastModifiedDate":"2023-03-17"},{"lineNumber":333,"author":{"gitId":"daitenshionyan"},"content":"        this.completionHandler \u003d onExecutionComplete;","lastModifiedDate":"2023-04-04"},{"lineNumber":334,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":335,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":336,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":338,"author":{"gitId":"francisyzy"},"content":"    public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":339,"author":{"gitId":"francisyzy"},"content":"        return model.getPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":343,"author":{"gitId":"francisyzy"},"content":"    public ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientMap() {","lastModifiedDate":"2023-03-03"},{"lineNumber":344,"author":{"gitId":"francisyzy"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":347,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":348,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap() {","lastModifiedDate":"2023-03-04"},{"lineNumber":349,"author":{"gitId":"daitenshionyan"},"content":"        return model.getFilteredVaxTypeMap();","lastModifiedDate":"2023-03-04"},{"lineNumber":350,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":351,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":352,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":353,"author":{"gitId":"nusE0726844"},"content":"    public ObservableMap\u003cInteger, IdData\u003cAppointment\u003e\u003e getFilteredAppointmentMap() {","lastModifiedDate":"2023-03-14"},{"lineNumber":354,"author":{"gitId":"nusE0726844"},"content":"        return model.getFilteredAppointmentMap();","lastModifiedDate":"2023-03-13"},{"lineNumber":355,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":356,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":366,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":367,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":368,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":369,"author":{"gitId":"daitenshionyan"},"content":"    public ObjectProperty\u003cIdData\u003cPatient\u003e\u003e detailedPatientProperty() {","lastModifiedDate":"2023-03-25"},{"lineNumber":370,"author":{"gitId":"daitenshionyan"},"content":"        return model.detailedPatientProperty();","lastModifiedDate":"2023-04-07"},{"lineNumber":371,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":372,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":373,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":374,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":375,"author":{"gitId":"daitenshionyan"},"content":"    public ObjectProperty\u003cVaxType\u003e detailedVaxTypeProperty() {","lastModifiedDate":"2023-03-25"},{"lineNumber":376,"author":{"gitId":"daitenshionyan"},"content":"        return model.detailedVaccinationProperty();","lastModifiedDate":"2023-04-07"},{"lineNumber":377,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":378,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":379,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":380,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":381,"author":{"gitId":"daitenshionyan"},"content":"    public void bindVaccinationDisplayList(ObservableList\u003cVaxType\u003e displayList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":382,"author":{"gitId":"daitenshionyan"},"content":"        model.bindVaccinationDisplayList(displayList);","lastModifiedDate":"2023-03-26"},{"lineNumber":383,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":384,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":385,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":386,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":387,"author":{"gitId":"daitenshionyan"},"content":"    public void setCloseAction(Runnable closeAction) {","lastModifiedDate":"2023-03-26"},{"lineNumber":388,"author":{"gitId":"daitenshionyan"},"content":"        this.closeAction \u003d closeAction;","lastModifiedDate":"2023-03-26"},{"lineNumber":389,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":390,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":391,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":392,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":393,"author":{"gitId":"daitenshionyan"},"content":"    public void setShowHelpAction(Runnable showHelpAction) {","lastModifiedDate":"2023-03-27"},{"lineNumber":394,"author":{"gitId":"daitenshionyan"},"content":"        this.showHelpAction \u003d showHelpAction;","lastModifiedDate":"2023-03-27"},{"lineNumber":395,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"daitenshionyan":268,"slackernoob":26,"-":48,"nusE0726844":29,"francisyzy":25}},{"path":"src/main/java/seedu/vms/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public abstract CommandMessage execute(Model model) throws CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the follow up command to be executed after this if its execution","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * was successful. Returned result is wrapped in an {@code Optional}. If","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * there are no follow up commands, {@code Optional.empty} is returned","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * instead.","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @return the follow up command to be executed after this, wrapped in an","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Optional}.","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cCommand\u003e getFollowUp() {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":21,"-":16}},{"path":"src/main/java/seedu/vms/logic/commands/appointment/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.commands.appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.vaccination.VaxChecker;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":" * Adds an appointment to the patient manager.","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public static final String COMMAND_GROUP \u003d \"appointment\";","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            + \": Adds an appointment to the patient manager.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"            + \"Syntax: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_PATIENT + \" PATIENT_ID \"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_STARTTIME + \" START_TIME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_ENDTIME + \" END_TIME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_VACCINATION + \" VAX_GROUP\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_PATIENT + \" 1 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_STARTTIME + \" 2024-01-01 1330 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_ENDTIME + \" 2024-01-01 1400 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_VACCINATION + \" Dose 1 (Moderna)\\n\";","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists\"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"            + \" in the appointment manager\";","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_MISSING_VAX_TYPE \u003d \"The given vaccine is not in the vaccine manager\";","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_MISSING_VAX_REQ \u003d \"The Patient does not have previous appointments for the\"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"            + \"needed vaccine\";","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_EXIST_VAX_REQ \u003d \"The Patient already has an appointment for this vaccine dose\";","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_EXISTING_APPOINTMENT \u003d \"This patient already has an upcoming appointment\";","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    private final Index patientId;","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    private final Retriever\u003cString, VaxType\u003e vaxTypeRetriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     * Creates an AddCommand to add the specified {@code Appointment}","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public AddCommand(Index patientId, Retriever\u003cString, VaxType\u003e vaxTypeRetriever,","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"                LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        this.patientId \u003d requireNonNull(patientId);","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        this.vaxTypeRetriever \u003d requireNonNull(vaxTypeRetriever);","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        this.startTime \u003d requireNonNull(startTime);","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        this.endTime \u003d requireNonNull(endTime);","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        // Checks if patient manager contains the given index","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        Map\u003cInteger, IdData\u003cPatient\u003e\u003e patientList \u003d model.getPatientManager().getMapView();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        if (!patientList.containsKey(patientId.getZeroBased())) {","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"        // Checks for no existing next appointment","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"        for (Map.Entry\u003cInteger, IdData\u003cAppointment\u003e\u003e entry : model.getAppointmentManager().getMapView().entrySet()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"            Appointment appointment \u003d entry.getValue().getValue();","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"            if (appointment.getPatient().equals(patientId)","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 appointment.getAppointmentEndTime().isAfter(LocalDateTime.now())","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 !appointment.getStatus()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"                throw new CommandException(MESSAGE_EXISTING_APPOINTMENT);","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        Patient patient \u003d patientList.get(patientId.getZeroBased()).getValue();","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        // Checks if the given patient can take the vaccination","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        VaxType toTake;","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"            toTake \u003d model.getVaccination(vaxTypeRetriever);","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(ive.getMessage());","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        ObservableMap\u003cString, VaxType\u003e vaccinationList \u003d model.getVaxTypeManager().asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"        List\u003cVaxType\u003e patientHistory \u003d patient.getVaccine()","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"                .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"                .map(vaxName -\u003e vaccinationList.get(vaxName.getName()))","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"                .filter(Objects::nonNull)","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"        Age patientAge;","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"            patientAge \u003d new Age(LocalDateTime.now().getYear() - patient.getDob().value.getYear());","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"        } catch (IllegalArgumentException illArgEx) {","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"            // if for some reason the user decide to turn back time on their system","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(\"Patient contains an invalid DOB\");","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"        HashSet\u003cGroupName\u003e allergies \u003d new HashSet\u003c\u003e(patient.getAllergy());","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"        boolean isTakable \u003d VaxChecker.check(toTake, patientAge, allergies, patientHistory);","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"        if (!isTakable) {","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(\"Patient cannot take the vaccination\");","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"        Appointment toAdd \u003d new Appointment(patientId, startTime, endTime, toTake.getGroupName());","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"            model.addAppointment(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        } catch (LimitExceededException limitEx) {","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(String.format(\"Appointment: %s\", limitEx.getMessage()));","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"daitenshionyan":34,"nusE0726844":103,"francisyzy":6}},{"path":"src/main/java/seedu/vms/logic/commands/appointment/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.commands.appointment;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":" * Deletes an appointment identified using it\u0027s displayed index from the appointment manager.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_GROUP \u003d \"appointment\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            + \"Syntax: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        Map\u003cInteger, IdData\u003cAppointment\u003e\u003e appointmentList \u003d model.getAppointmentManager().getMapView();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        if (!appointmentList.containsKey(targetIndex.getZeroBased())) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointmentToDelete \u003d appointmentList.get(targetIndex.getZeroBased()).getValue();","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        model.deleteAppointment(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, appointmentToDelete));","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"daitenshionyan":3,"nusE0726844":54}},{"path":"src/main/java/seedu/vms/logic/commands/appointment/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.commands.appointment;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.vaccination.VaxChecker;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":" * Edits the details of an existing patient in the bloodType book.","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_GROUP \u003d \"appointment\";","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"            + \": Edits the details of the appointment identified \"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"            + \"by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            + \"Syntax: \" + COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"            + \" INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"            + \"[\" + DELIMITER + PREFIX_STARTTIME + \" START_TIME] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            + \"[\" + DELIMITER + PREFIX_ENDTIME + \" END_TIME] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"            + \"[\" + DELIMITER + PREFIX_VACCINATION + \" VAX_GROUP]\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_STARTTIME + \" 2024-01-01 1330 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_ENDTIME + \" 2024-01-01 1400\";","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_EXISTING_PATIENT_ID \u003d \"This patient already has an existing appointment\";","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_MISSING_VAX_TYPE \u003d \"The given vaccine is not in the vaccine manager\";","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_PARSE_DURATION \u003d \"Please give both the starting and ending timings\";","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_PAST_APPOINTMENT \u003d \"The appointment has already passed\";","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_MISSING_VAX_REQ \u003d \"The Patient does not have previous appointments for the\"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"            + \"needed vaccine\";","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_EXIST_VAX_REQ \u003d \"The Patient already has an appointment for this vaccine dose\";","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_EXISTING_APPOINTMENT \u003d \"This patient already has an upcoming appointment\";","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"    private final Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"     * @param index                     of the appointment in the appointment","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"     *                                  list to edit","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"     * @param editAppointmentDescriptor details to edit the appointment with","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"    public EditCommand(Index index, EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        Map\u003cInteger, IdData\u003cAppointment\u003e\u003e lastShownList \u003d model.getAppointmentManager().getMapView();","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"        if (!lastShownList.containsKey(index.getZeroBased())) {","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased()).getValue();","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor, model);","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"        // Checks if patient manager contains the given index","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"        Map\u003cInteger, IdData\u003cPatient\u003e\u003e patientList \u003d model.getPatientManager().getMapView();","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"        if (!patientList.containsKey(editedAppointment.getPatient().getZeroBased())) {","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        // Checks if vaxType manager contains the vaccine to be used in the appointment","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"        ObservableMap\u003cString, VaxType\u003e vaccinationList \u003d model.getVaxTypeManager().asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"        if (!vaccinationList.containsKey(editedAppointment.getVaccination().getName())) {","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(MESSAGE_MISSING_VAX_TYPE);","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"        // Checks if the appointment to be edited has not passed","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"        if (appointmentToEdit.getAppointmentEndTime().isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(MESSAGE_PAST_APPOINTMENT);","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"        // Checks for no existing next appointment","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"        for (Map.Entry\u003cInteger, IdData\u003cAppointment\u003e\u003e entry : model.getAppointmentManager().getMapView().entrySet()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"            Appointment appointment \u003d entry.getValue().getValue();","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"            if (appointment.getPatient().equals(editedAppointment.getPatient())","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 appointment.getAppointmentEndTime().isAfter(LocalDateTime.now())","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 !appointment.getStatus()","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 entry.getKey() !\u003d index.getZeroBased()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"                throw new CommandException(MESSAGE_EXISTING_APPOINTMENT);","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"        // Checks if the given patient can take the vaccination","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"        Patient patient \u003d patientList.get(editedAppointment.getPatient().getZeroBased()).getValue();","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"        VaxType toTake \u003d vaccinationList.get(editedAppointment.getVaccination().getName());","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"        List\u003cVaxType\u003e patientHistory \u003d patient.getVaccine()","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"                .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"                .map(vaxName -\u003e vaccinationList.get(vaxName.getName()))","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"                .filter(Objects::nonNull)","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"        Age patientAge;","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"            patientAge \u003d new Age(LocalDateTime.now().getYear() - patient.getDob().value.getYear());","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"        } catch (IllegalArgumentException illArgEx) {","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"            // if for some reason the user decide to turn back time on their system","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(\"Patient contains an invalid DOB\");","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"        HashSet\u003cGroupName\u003e allergies \u003d new HashSet\u003c\u003e(patient.getAllergy());","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"        boolean isTakable \u003d VaxChecker.check(toTake, patientAge, allergies, patientHistory);","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"        if (!isTakable) {","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(\"Patient cannot take the vaccination\");","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"        model.setAppointment(index.getZeroBased(), editedAppointment);","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"nusE0726844"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment));","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"nusE0726844"},"content":"     * Creates and returns a {@code Appointment} with the details of","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"nusE0726844"},"content":"     * {@code appointmentToEdit}","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"nusE0726844"},"content":"     * edited with {@code editAppointmentDescriptor}.","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"nusE0726844"},"content":"    private static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"                EditAppointmentDescriptor editAppointmentDescriptor,","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"                Model model)","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"                throws CommandException {","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"nusE0726844"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d editAppointmentDescriptor.getPatient().orElse(appointmentToEdit.getPatient());","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime startTime \u003d editAppointmentDescriptor.getStartTime()","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"nusE0726844"},"content":"                .orElse(appointmentToEdit.getAppointmentTime());","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime endTime \u003d editAppointmentDescriptor.getEndTime()","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"nusE0726844"},"content":"                .orElse(appointmentToEdit.getAppointmentEndTime());","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        GroupName vaccine;","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"            vaccine \u003d editAppointmentDescriptor","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"                    .getVaccine(model)","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"                    .orElse(appointmentToEdit.getVaccination());","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(ive.getMessage());","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"nusE0726844"},"content":"        boolean isCompleted \u003d editAppointmentDescriptor.getStatus()","lastModifiedDate":"2023-04-03"},{"lineNumber":181,"author":{"gitId":"nusE0726844"},"content":"                .orElse(appointmentToEdit.getStatus());","lastModifiedDate":"2023-04-03"},{"lineNumber":182,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"nusE0726844"},"content":"        return new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-03"},{"lineNumber":184,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"nusE0726844"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"nusE0726844"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"nusE0726844"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"nusE0726844"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"nusE0726844"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"nusE0726844"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"nusE0726844"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"nusE0726844"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"nusE0726844"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(e.editAppointmentDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"nusE0726844"},"content":"     * Stores the details to edit the appointment with. Each non-empty field value will","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"nusE0726844"},"content":"     * replace the corresponding field value of the appointment.","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"nusE0726844"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"nusE0726844"},"content":"        private Index patientId;","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"nusE0726844"},"content":"        private LocalDateTime startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"nusE0726844"},"content":"        private LocalDateTime endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"        private Retriever\u003cString, VaxType\u003e vaxRetriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":213,"author":{"gitId":"nusE0726844"},"content":"        private boolean isCompleted;","lastModifiedDate":"2023-04-03"},{"lineNumber":214,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"nusE0726844"},"content":"        public EditAppointmentDescriptor() {","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"nusE0726844"},"content":"        /**","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"nusE0726844"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"nusE0726844"},"content":"         * A defensive copy of {@code allergies} is used internally.","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"nusE0726844"},"content":"         */","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"nusE0726844"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"nusE0726844"},"content":"            setPatient(toCopy.patientId);","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"nusE0726844"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"nusE0726844"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"            setVaccine(toCopy.vaxRetriever);","lastModifiedDate":"2023-03-26"},{"lineNumber":227,"author":{"gitId":"nusE0726844"},"content":"            setStatus(toCopy.isCompleted);","lastModifiedDate":"2023-04-03"},{"lineNumber":228,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"nusE0726844"},"content":"        /**","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"nusE0726844"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"nusE0726844"},"content":"         */","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"nusE0726844"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"nusE0726844"},"content":"            return CollectionUtil.isAnyNonNull(patientId, startTime, endTime, vaxRetriever, isCompleted);","lastModifiedDate":"2023-04-03"},{"lineNumber":235,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"nusE0726844"},"content":"        public void setPatient(Index patientId) {","lastModifiedDate":"2023-03-15"},{"lineNumber":238,"author":{"gitId":"nusE0726844"},"content":"            this.patientId \u003d patientId;","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cIndex\u003e getPatient() {","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"nusE0726844"},"content":"            return Optional.ofNullable(patientId);","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":244,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"nusE0726844"},"content":"        public void setStartTime(LocalDateTime startTime) {","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"nusE0726844"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":248,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cLocalDateTime\u003e getStartTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"nusE0726844"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":251,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"nusE0726844"},"content":"        public void setEndTime(LocalDateTime endTime) {","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"nusE0726844"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cLocalDateTime\u003e getEndTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"nusE0726844"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":260,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"        public void setVaccine(Retriever\u003cString, VaxType\u003e vaxRetriever) {","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"            this.vaxRetriever \u003d vaxRetriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":263,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":264,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"        public Optional\u003cGroupName\u003e getVaccine(Model model) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"nusE0726844"},"content":"            return (vaxRetriever !\u003d null) ? Optional.ofNullable(model.getVaccination(vaxRetriever).getGroupName())","lastModifiedDate":"2023-04-03"},{"lineNumber":267,"author":{"gitId":"nusE0726844"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-04-03"},{"lineNumber":268,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":270,"author":{"gitId":"nusE0726844"},"content":"        public void setStatus(boolean isCompleted) {","lastModifiedDate":"2023-04-03"},{"lineNumber":271,"author":{"gitId":"nusE0726844"},"content":"            this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-04-03"},{"lineNumber":272,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":273,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":274,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cBoolean\u003e getStatus() {","lastModifiedDate":"2023-04-03"},{"lineNumber":275,"author":{"gitId":"nusE0726844"},"content":"            return Optional.of(isCompleted);","lastModifiedDate":"2023-04-03"},{"lineNumber":276,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":277,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":278,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"daitenshionyan":22,"nusE0726844":255,"francisyzy":1}},{"path":"src/main/java/seedu/vms/logic/commands/appointment/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.commands.appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.predicates.EndTimePredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.predicates.IndexPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.predicates.StartTimePredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.predicates.VaccineContainsKeywordsPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":" * Finds and lists all appointments in appointment manager where any of the argument keywords match.","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_GROUP \u003d \"appointment\";","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"            + \": Finds all appointments that matches the specified keywords (case-insensitive) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"            + \"Either a keyword or flag must be provided.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            + \"Syntax: \" + COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"            + \" [...KEYWORDS...] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"            + \"[\" + DELIMITER + PREFIX_STARTTIME + \" START_TIME] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"            + \"[\" + DELIMITER + PREFIX_ENDTIME + \" END_TIME] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            + \"[\" + DELIMITER + PREFIX_VACCINATION + \" VAX_GROUP]\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" Dose 1\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"            + \"(List all appointments that uses \\\"Dose 1\u0027)\\\"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    private final Optional\u003cIndexPredicate\u003e indexPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    private final Optional\u003cStartTimePredicate\u003e startTimePredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    private final Optional\u003cEndTimePredicate\u003e endTimePredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    private final Optional\u003cVaccineContainsKeywordsPredicate\u003e vaccinePredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    private final Optional\u003cBoolean\u003e isCompletedPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"     * FindCommand that contains more appointment information that is given by the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"     * Accepts different descriptors when applicable","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"     * @param findAppointmentDescriptor","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"    public FindCommand(FindAppointmentDescriptor findAppointmentDescriptor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        if (findAppointmentDescriptor.getPatient().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            this.indexPredicate \u003d Optional.of(new IndexPredicate(findAppointmentDescriptor.getPatient().get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"            this.indexPredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        if (findAppointmentDescriptor.getAppointmentTime().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"            this.startTimePredicate \u003d Optional","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"                    .of(new StartTimePredicate(findAppointmentDescriptor.getAppointmentTime().get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"            this.startTimePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        if (findAppointmentDescriptor.getAppointmentEndTime().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"            this.endTimePredicate \u003d Optional","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"                    .of(new EndTimePredicate(findAppointmentDescriptor.getAppointmentEndTime().get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"            this.endTimePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        if (findAppointmentDescriptor.getVaccination().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"            this.vaccinePredicate \u003d Optional","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"                    .of(new VaccineContainsKeywordsPredicate(findAppointmentDescriptor.getVaccination().get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"            this.vaccinePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"        if (findAppointmentDescriptor.getStatus().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"            this.isCompletedPredicate \u003d Optional.of(findAppointmentDescriptor.getStatus().get());","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"            this.isCompletedPredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"    public CommandMessage execute(Model model) {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        List\u003cOptional\u003c? extends Predicate\u003cAppointment\u003e\u003e\u003e optionalFilters \u003d List.of(indexPredicate, vaccinePredicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"        List\u003cPredicate\u003cAppointment\u003e\u003e filters \u003d optionalFilters.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"                .filter(Objects::nonNull)","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"                .flatMap(Optional::stream)","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"        model.setAppointmentFilters(filters);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"        return new CommandMessage(","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"                String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, model.getFilteredAppointmentMap().size()));","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof FindCommand // instanceof handles Optional.empty()s","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"                        \u0026\u0026 indexPredicate.equals(((FindCommand) other).indexPredicate) // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"                        \u0026\u0026 vaccinePredicate.equals(((FindCommand) other).vaccinePredicate)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"     * Stores the details to find the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"     * corresponding field value of the appointment.","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"    public static class FindAppointmentDescriptor {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"        private Index patientId;","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"        private LocalDateTime startTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"        private LocalDateTime endTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"        private Set\u003cGroupName\u003e vaccines;","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"        private boolean isCompleted;","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"        public FindAppointmentDescriptor() {}","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"        public FindAppointmentDescriptor(FindAppointmentDescriptor toCopy) {","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"            this.patientId \u003d toCopy.patientId;","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"            this.startTime \u003d toCopy.startTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"            this.endTime \u003d toCopy.endTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"            this.vaccines \u003d toCopy.vaccines;","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"            this.isCompleted \u003d toCopy.isCompleted;","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"            return CollectionUtil.isAnyNonNull(patientId, startTime, endTime, vaccines, isCompleted);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cIndex\u003e getPatient() {","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"nusE0726844"},"content":"            return Optional.ofNullable(patientId);","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"nusE0726844"},"content":"        public void setPatient(Index patientId) {","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"nusE0726844"},"content":"            this.patientId \u003d patientId;","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cLocalDateTime\u003e getAppointmentTime() {","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"nusE0726844"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"nusE0726844"},"content":"        public void setAppointmentTime(LocalDateTime startTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"nusE0726844"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cLocalDateTime\u003e getAppointmentEndTime() {","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"nusE0726844"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"nusE0726844"},"content":"        public void setAppointmentEndTime(LocalDateTime endTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"nusE0726844"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cSet\u003cGroupName\u003e\u003e getVaccination() {","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"nusE0726844"},"content":"            return (vaccines !\u003d null) ? Optional.of(Collections.unmodifiableSet(vaccines)) : Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"nusE0726844"},"content":"        public void setVaccination(Set\u003cGroupName\u003e vaccines) {","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"nusE0726844"},"content":"            this.vaccines \u003d vaccines;","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"nusE0726844"},"content":"        public Optional\u003cBoolean\u003e getStatus() {","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"nusE0726844"},"content":"            return Optional.of(isCompleted);","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"nusE0726844"},"content":"        public void setStatus(boolean isCompleted) {","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"nusE0726844"},"content":"            this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"nusE0726844"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"nusE0726844"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"nusE0726844"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"nusE0726844"},"content":"                return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"nusE0726844"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"nusE0726844"},"content":"            if (!(other instanceof FindAppointmentDescriptor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"nusE0726844"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"nusE0726844"},"content":"            // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"nusE0726844"},"content":"            FindAppointmentDescriptor e \u003d (FindAppointmentDescriptor) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"nusE0726844"},"content":"            return getPatient().equals(e.getPatient())","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 getAppointmentTime().equals(e.getAppointmentTime())","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 getAppointmentEndTime().equals(e.getAppointmentEndTime())","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 getVaccination().equals(e.getVaccination())","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus());","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"nusE0726844":208}},{"path":"src/main/java/seedu/vms/logic/commands/appointment/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.commands.appointment;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Lists all appointment in the appointment manager to the user.","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointments\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"daitenshionyan":3,"nusE0726844":23}},{"path":"src/main/java/seedu/vms/logic/commands/appointment/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.commands.appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":" * Marks an appointment identified using it\u0027s displayed index from the appointment manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_GROUP \u003d \"appointment\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            + \": Marks the appointment identified by the index number used in the displayed appointment list as\"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            + \" completed.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            + \"Syntax: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_MARK_APPOINTMENT_SUCCESS \u003d \"Marked Appointment: %1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    public MarkCommand(Index targetIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        Map\u003cInteger, IdData\u003cAppointment\u003e\u003e appointmentList \u003d model.getAppointmentManager().getMapView();","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        if (!appointmentList.containsKey(targetIndex.getZeroBased())) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointmentToMark \u003d appointmentList.get(targetIndex.getZeroBased()).getValue();","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        model.markAppointment(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        return new CommandMessage(String.format(MESSAGE_MARK_APPOINTMENT_SUCCESS, appointmentToMark));","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof MarkCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 targetIndex.equals(((MarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"nusE0726844":58}},{"path":"src/main/java/seedu/vms/logic/commands/appointment/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.commands.appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":" * Unmarks an appointment identified using it\u0027s displayed index from the appointment manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_GROUP \u003d \"appointment\";","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            + \": Unmarks the appointment identified by the index number used in the displayed appointment list\"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            + \" and change its status to incomplete.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            + \"Syntax: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_UNMARK_APPOINTMENT_SUCCESS \u003d \"Unmarked Appointment: %1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    public UnmarkCommand(Index targetIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        Map\u003cInteger, IdData\u003cAppointment\u003e\u003e appointmentList \u003d model.getAppointmentManager().getMapView();","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        if (!appointmentList.containsKey(targetIndex.getZeroBased())) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointmentToUnmark \u003d appointmentList.get(targetIndex.getZeroBased()).getValue();","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        // @@author nusE0726844","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d appointmentToUnmark.getPatient();","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        for (Map.Entry\u003cInteger, IdData\u003cAppointment\u003e\u003e entry : model.getAppointmentManager().getMapView().entrySet()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"            Appointment appointment \u003d entry.getValue().getValue();","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"            if (appointment.getPatient().equals(patientId)","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 !appointment.getStatus()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                throw new CommandException(String.format(\"Patient #%04d has active appointments\",","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"                        patientId.getOneBased()));","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        model.unmarkAppointment(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        return new CommandMessage(String.format(MESSAGE_UNMARK_APPOINTMENT_SUCCESS, appointmentToUnmark));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof UnmarkCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"daitenshionyan":1,"nusE0726844":69}},{"path":"src/main/java/seedu/vms/logic/commands/basic/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting VMS as requested ...\";","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"daitenshionyan":6,"-":14,"francisyzy":1}},{"path":"src/main/java/seedu/vms/logic/commands/basic/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":6,"-":17}},{"path":"src/main/java/seedu/vms/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"daitenshionyan":1,"-":16}},{"path":"src/main/java/seedu/vms/logic/commands/keyword/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.logic.commands.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_EXISTING_KEYWORD_EXISTS;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_KEYWORD_MAIN;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_KEYWORD_SUB;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":" * Adds a keyword to the patient manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"    public static final String COMMAND_GROUP \u003d \"keyword\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"            + \": Adds a keyword to the keyword manager. \"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"            + DELIMITER + PREFIX_KEYWORD_MAIN + \" MAIN KEYWORD \"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"            + DELIMITER + PREFIX_KEYWORD_SUB + \" SUB KEYWORD \";","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New keyword added: %1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_DUPLICATE_KEYWORD \u003d \"This keyword already exists in the keyword manager\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"    private final Keyword toAdd;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"     * Creates an AddCommand to add the specified {@code Keyword}","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"    public AddCommand(Keyword key) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"        requireNonNull(key);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"        toAdd \u003d key;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"        String keyword \u003d toAdd.getKeyword();","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"        if (KeywordManager.existingMappingExists(keyword)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"            throw new CommandException(String.format(MESSAGE_EXISTING_KEYWORD_EXISTS, keyword, keyword));","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"        model.addKeyword(toAdd);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"        return new CommandMessage(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"                || (other instanceof seedu.vms.logic.commands.keyword.AddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"                \u0026\u0026 toAdd.equals(((seedu.vms.logic.commands.keyword.AddCommand) other).toAdd));","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":59}},{"path":"src/main/java/seedu/vms/logic/commands/keyword/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.logic.commands.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_KEYWORD_DOES_NOT_EXIST;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":" * Deletes a keyword identified using it\u0027s displayed index from the keyword manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    public static final String COMMAND_GROUP \u003d \"keyword\";","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"            + \": Deletes the keyword identified by the string used in the keyword map.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"            + \"Parameters: KEYWORD (must be a string)\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" appt\";","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    public static final String MESSAGE_DELETE_KEYWORD_SUCCESS \u003d \"Deleted keyword: %1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    private final String targetKeyword;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"    public DeleteCommand(String targetKeyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"        this.targetKeyword \u003d Objects.requireNonNull(targetKeyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"        if (!KeywordManager.existingMappingExists(targetKeyword)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"            throw new CommandException(String.format(MESSAGE_KEYWORD_DOES_NOT_EXIST, targetKeyword));","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"        Keyword keywordToDelete \u003d model.deleteKeyword(targetKeyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"        return new CommandMessage(String.format(MESSAGE_DELETE_KEYWORD_SUCCESS, keywordToDelete));","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"                || (other instanceof seedu.vms.logic.commands.keyword.DeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"                \u0026\u0026 targetKeyword.equals(((DeleteCommand) other)","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"                .targetKeyword)); // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":52}},{"path":"src/main/java/seedu/vms/logic/commands/patient/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":" * Adds a patient to the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public static final String COMMAND_GROUP \u003d \"patient\";","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            + \": Adds a patient to the patient manager. \"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_DOB + \" DATE OF BIRTH \"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_BLOODTYPE + \" BLOOD TYPE \"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_ALLERGY + \" ALLERGY]...\"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_VACCINATION + \" VACCINATION]...\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_DOB + \" 2001-03-19 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_BLOODTYPE + \" B+ \"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_ALLERGY + \" cat fur \"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_ALLERGY + \" pollen \"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_VACCINATION + \" covax\";","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the patient manager\";","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    private final Patient toAdd;","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"            model.addPatient(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        } catch (LimitExceededException limitEx) {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(String.format(\"Patient: %s\", limitEx.toString()));","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                        \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":14,"-":28,"francisyzy":33}},{"path":"src/main/java/seedu/vms/logic/commands/patient/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":" * Clears the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patients successfully cleared\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isForce;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ClearCommand} that forces its changes.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public ClearCommand() {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        // TODO: This should be removed once additoinal test cases are added.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        this(true);","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ClearCommand}.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * @param isForce - {@code true} if the chances should be forced and","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public ClearCommand(boolean isForce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        this.isForce \u003d isForce;","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cInteger\u003e ids \u003d model.getPatientManager()","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                .getMapView()","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                .values()","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                .map(patient -\u003e patient.getId())","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        int totalToClear \u003d ids.size();","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        int numCleared \u003d 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            for (Integer id : ids) {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                model.deletePatient(id, isForce);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                numCleared++;","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        } catch (UnexpectedChangeException uce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            String errMessage \u003d String.format(\"%d of %d patients cleared.\\n%s\\n%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                    numCleared, totalToClear,","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                    uce.getMessage(),","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                    Messages.MESSAGE_USE_FORCE);","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(errMessage);","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        model.resetPatientIds();","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":59,"-":14,"francisyzy":1}},{"path":"src/main/java/seedu/vms/logic/commands/patient/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" * Deletes a patient identified using it\u0027s displayed index from the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public static final String COMMAND_GROUP \u003d \"patient\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            + \": Deletes the patient identified by the PATIENT_ID used in the displayed patient list.\\n\"","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            + \"Parameters: PATIENT_ID (must be a positive integer)\\n\"","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isForce;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code DeleteCommand} that will force the change.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        // TODO: this constructor is just so that test dont break. It should be removed.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        this(targetIndex, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code DeleteCommand}.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     * @param targetIndex - the id of the patient to delete.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * @param isForce - {@code true} if the changes the command will make","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     *      should be forced and {@code false} otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public DeleteCommand(Index targetIndex, boolean isForce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        this.isForce \u003d isForce;","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        Map\u003cInteger, IdData\u003cPatient\u003e\u003e patientList \u003d model.getPatientManager().getMapView();","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        if (!patientList.containsKey(targetIndex.getZeroBased())) {","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDelete \u003d patientList.get(targetIndex.getZeroBased()).getValue();","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            model.deletePatient(targetIndex.getZeroBased(), isForce);","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        } catch (UnexpectedChangeException uce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(String.format(\"%s\\n%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                    uce.getMessage(),","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"                    Messages.MESSAGE_USE_FORCE));","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":38,"-":33,"francisyzy":12}},{"path":"src/main/java/seedu/vms/logic/commands/patient/DetailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" * Command to show the details of a patient.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"public class DetailCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public static final String COMMAND_WORD \u003d \"detail\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public static final String COMMAND_GROUP \u003d \"patient\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"            + \": Gets the detail of the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Detailing patient: #%04d %s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_FAILURE \u003d \"The patient does not exist\";","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    private final Index index;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code DetailCommand}.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public DetailCommand(Index index) {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        IdData\u003cPatient\u003e patient \u003d model","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"                .getPatientManager()","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"                .getMapView()","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"                .get(index.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        model.setDetailedPatient(patient);","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        return new CommandMessage(","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"                String.format(MESSAGE_SUCCESS, patient.getId() + 1, patient.getValue().getName().fullName));","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof DetailCommand // instanceof handles nulls","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 index.equals(((DetailCommand) other).index)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"francisyzy":58}},{"path":"src/main/java/seedu/vms/logic/commands/patient/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_SET;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.CollectionUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":" * Edits the details of an existing patient in the bloodType book.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public static final String COMMAND_GROUP \u003d \"patient\";","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            + \": Edits the details of the patient identified \"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            + \"by the PATIENT_ID used in the displayed patient list. \"","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            + \"Parameters: PATIENT_ID (must be a positive integer) \"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_DOB + \" Date of Birth] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_BLOODTYPE + \" BLOODTYPE] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_ALLERGY + \" ALLERGY]... \"","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_VACCINATION + \" VACCINE]...\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_SET + \" BOOLEAN] If true, it will replace all the list-like attributes \"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            + \"(ALLERGY, VACCINE) with the specified. If false, it will append the values. False by default.\\n\"","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            + DELIMITER + PREFIX_DOB + \" 2000-02-18\";","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the patient manager.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code EditCommand} that clears and replaces list like","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     * attributes.","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public EditCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        // TODO: this should be removed","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        this(index, editPatientDescriptor, true);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     * @param index                 of the patient in the filtered patient list to","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     *                              edit","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public EditCommand(Index index, EditPatientDescriptor editPatientDescriptor, boolean isSet) {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        this.isSet \u003d isSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        Map\u003cInteger, IdData\u003cPatient\u003e\u003e patientList \u003d model.getPatientManager().getMapView();","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        if (!patientList.containsKey(index.getZeroBased())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        Patient patientToEdit \u003d patientList.get(index.getZeroBased()).getValue();","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        model.setPatient(index.getZeroBased(), editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient));","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"     * Creates and returns a {@code Patient} with the details of","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"     * {@code patientToEdit}","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    private Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        Dob updatedDob \u003d editPatientDescriptor.getDob().orElse(patientToEdit.getDob());","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        BloodType updatedBloodType \u003d editPatientDescriptor.getBloodType().orElse(patientToEdit.getBloodType());","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e updatedAllergies \u003d new HashSet\u003c\u003e(patientToEdit.getAllergy());","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e updatedVaccines \u003d new HashSet\u003c\u003e(patientToEdit.getVaccine());","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        if (isSet) {","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"            editPatientDescriptor.getAllergies().ifPresent(allergies -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"                updatedAllergies.clear();","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                updatedAllergies.addAll(allergies);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"            });","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"            editPatientDescriptor.getVaccines().ifPresent(vaccines -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                updatedVaccines.clear();","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"                updatedVaccines.addAll(vaccines);","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"            });","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"            editPatientDescriptor.getAllergies()","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"                    .ifPresent(allergies -\u003e updatedAllergies.addAll(allergies));","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"            editPatientDescriptor.getVaccines()","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"                    .ifPresent(vaccines -\u003e updatedVaccines.addAll(vaccines));","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"        return new Patient(updatedName, updatedPhone, updatedDob, updatedBloodType, updatedAllergies, updatedVaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 editPatientDescriptor.equals(e.editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"        private Dob dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"        private BloodType bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"        private Set\u003cGroupName\u003e allergies;","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"        private Set\u003cGroupName\u003e vaccines;","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"        public EditPatientDescriptor() {","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code allergies} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code vaccines} is used internally.","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"            setDob(toCopy.dob);","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"            setBloodType(toCopy.bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"            setAllergies(toCopy.allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"            setVaccines(toCopy.vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, dob, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"francisyzy"},"content":"        public void setDob(Dob dob) {","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"            this.dob \u003d dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cDob\u003e getDob() {","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"francisyzy"},"content":"            return Optional.ofNullable(dob);","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"francisyzy"},"content":"        public void setBloodType(BloodType bloodType) {","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"francisyzy"},"content":"            this.bloodType \u003d bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cBloodType\u003e getBloodType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"francisyzy"},"content":"            return Optional.ofNullable(bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"francisyzy"},"content":"         * Sets {@code allergies} to this object\u0027s {@code allergies}.","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code allergies} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"francisyzy"},"content":"        public void setAllergies(Set\u003cGroupName\u003e allergies) {","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"francisyzy"},"content":"            this.allergies \u003d (allergies !\u003d null) ? new HashSet\u003c\u003e(allergies) : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"francisyzy"},"content":"         * Returns an unmodifiable allergy set, which throws","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"francisyzy"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"francisyzy"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"francisyzy"},"content":"         * Returns {@code Optional#empty()} if {@code allergies} is null.","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cSet\u003cGroupName\u003e\u003e getAllergies() {","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"francisyzy"},"content":"            return (allergies !\u003d null) ? Optional.of(Collections.unmodifiableSet(allergies)) : Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"francisyzy"},"content":"         * Sets {@code vaccines} to this object\u0027s {@code vaccines}.","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code vaccines} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"francisyzy"},"content":"        public void setVaccines(Set\u003cGroupName\u003e vaccines) {","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"francisyzy"},"content":"            this.vaccines \u003d (vaccines !\u003d null) ? new HashSet\u003c\u003e(vaccines) : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"francisyzy"},"content":"         * Returns an unmodifiable vaccine set, which throws","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"francisyzy"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"francisyzy"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"francisyzy"},"content":"         * Returns {@code Optional#empty()} if {@code vaccines} is null.","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cSet\u003cGroupName\u003e\u003e getVaccines() {","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"francisyzy"},"content":"            return (vaccines !\u003d null) ? Optional.of(Collections.unmodifiableSet(vaccines)) : Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":265,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"francisyzy"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"francisyzy"},"content":"            EditPatientDescriptor e \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-08"},{"lineNumber":283,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getDob().equals(e.getDob())","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getBloodType().equals(e.getBloodType())","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getAllergies().equals(e.getAllergies())","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getVaccines().equals(e.getVaccines());","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"daitenshionyan":47,"-":111,"francisyzy":131}},{"path":"src/main/java/seedu/vms/logic/commands/patient/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.AllergyContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.BloodTypePredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.DobPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.PhoneNumberPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.VaccineContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":" * Finds and lists all patients in patient manager whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public static final String COMMAND_GROUP \u003d \"patient\";","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_GROUP + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            + \": Finds all patients whose names contain \"","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with PATIENT_ID.\\n\"","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            + \"Parameters: PATIENT_NAME  |  --ATTRIBUTE_FLAG   FLAG_ARGUMENT\\n\"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            + \"ATTRIBUTE_FLAGs: \"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_DOB + \" Date of Birth] \"","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_BLOODTYPE + \" BLOODTYPE] \"","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_ALLERGY + \" ALLERGY] \"","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + DELIMITER + PREFIX_VACCINATION + \" VACCINE]\\n\"","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            + \"Example: \" + COMMAND_GROUP + \" \" + COMMAND_WORD + \" alex\\n\";","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    private final Optional\u003cNameContainsKeywordsPredicate\u003e namePredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    private final Optional\u003cPhoneNumberPredicate\u003e phonePredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    private final Optional\u003cDobPredicate\u003e dobPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    private final Optional\u003cBloodTypePredicate\u003e bloodTypePredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    private final Optional\u003cAllergyContainsKeywordsPredicate\u003e allergyPredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    private final Optional\u003cVaccineContainsKeywordsPredicate\u003e vaccinePredicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"     * Existing FindCommand that was previously used to search using name only","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     * @param namePredicate","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    public FindCommand(NameContainsKeywordsPredicate namePredicate) {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        this.namePredicate \u003d Optional.of(namePredicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        this.phonePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        this.dobPredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        this.bloodTypePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        this.allergyPredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        this.vaccinePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"     * New FindCommand that contains more patient information that is given by the user.","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"     * Accepts different descriptors when applicable","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     * @param findPatientDescriptor","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    public FindCommand(FindPatientDescriptor findPatientDescriptor) {","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        if (findPatientDescriptor.getNameSearch().isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"            String[] nameKeywords \u003d findPatientDescriptor.getNameSearch().get().split(\"\\\\s+\");","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"            this.namePredicate \u003d Optional.of(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"            this.namePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        if (findPatientDescriptor.getPhone().isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            this.phonePredicate \u003d Optional.of(new PhoneNumberPredicate(findPatientDescriptor.getPhone().get()));","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"            this.phonePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        if (findPatientDescriptor.getDob().isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"            this.dobPredicate \u003d Optional.of(new DobPredicate(findPatientDescriptor.getDob().get()));","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"            this.dobPredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"        if (findPatientDescriptor.getBloodType().isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"            this.bloodTypePredicate \u003d Optional.of(new BloodTypePredicate(findPatientDescriptor.getBloodType().get()));","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"            this.bloodTypePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        if (findPatientDescriptor.getAllergies().isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"            this.allergyPredicate \u003d Optional","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"                    .of(new AllergyContainsKeywordsPredicate(findPatientDescriptor.getAllergies().get()));","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"            this.allergyPredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        if (findPatientDescriptor.getVaccines().isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"            this.vaccinePredicate \u003d Optional","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"                    .of(new VaccineContainsKeywordsPredicate(findPatientDescriptor.getVaccines().get()));","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"            this.vaccinePredicate \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        List\u003cOptional\u003c? extends Predicate\u003cPatient\u003e\u003e\u003e optionalFilters \u003d List.of(namePredicate, phonePredicate,","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"                dobPredicate, bloodTypePredicate, allergyPredicate, vaccinePredicate);","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        List\u003cPredicate\u003cPatient\u003e\u003e filters \u003d optionalFilters.stream()","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"                .filter(Objects::nonNull)","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"                .flatMap(Optional::stream)","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"        model.setPatientFilters(filters);","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof FindCommand // instanceof handles Optional.empty()s","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 namePredicate.equals(((FindCommand) other).namePredicate) // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 phonePredicate.equals(((FindCommand) other).phonePredicate) // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 dobPredicate.equals(((FindCommand) other).dobPredicate) // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 bloodTypePredicate.equals(((FindCommand) other).bloodTypePredicate) // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 allergyPredicate.equals(((FindCommand) other).allergyPredicate) // state check","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 vaccinePredicate.equals(((FindCommand) other).vaccinePredicate)); // state check","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"    public static class FindPatientDescriptor {","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"        private String nameSearch;","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"        private Dob dob;","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"        private BloodType bloodType;","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"        private Set\u003cGroupName\u003e allergies;","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"        private Set\u003cGroupName\u003e vaccines;","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"        public FindPatientDescriptor() {}","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code allergies} is used internally.","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code vaccines} is used internally.","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"        public FindPatientDescriptor(FindPatientDescriptor toCopy) {","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"            setNameSearch(toCopy.nameSearch);","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"            setDob(toCopy.dob);","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"            setBloodType(toCopy.bloodType);","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"            setAllergies(toCopy.allergies);","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"            setVaccines(toCopy.vaccines);","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"            return CollectionUtil.isAnyNonNull(nameSearch, phone, dob, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"        public void setNameSearch(String nameSearch) {","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"            this.nameSearch \u003d nameSearch;","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cString\u003e getNameSearch() {","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"            return Optional.ofNullable(nameSearch);","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-22"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"        public void setDob(Dob dob) {","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"francisyzy"},"content":"            this.dob \u003d dob;","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cDob\u003e getDob() {","lastModifiedDate":"2023-03-22"},{"lineNumber":211,"author":{"gitId":"francisyzy"},"content":"            return Optional.ofNullable(dob);","lastModifiedDate":"2023-03-22"},{"lineNumber":212,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"francisyzy"},"content":"        public void setBloodType(BloodType bloodType) {","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"            this.bloodType \u003d bloodType;","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cBloodType\u003e getBloodType() {","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"francisyzy"},"content":"            return Optional.ofNullable(bloodType);","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":221,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":222,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"francisyzy"},"content":"         * Sets {@code allergies} to this object\u0027s {@code allergies}.","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code allergies} is used internally.","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"francisyzy"},"content":"        public void setAllergies(Set\u003cGroupName\u003e allergies) {","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"francisyzy"},"content":"            this.allergies \u003d (allergies !\u003d null) ? new HashSet\u003c\u003e(allergies) : null;","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"francisyzy"},"content":"         * Returns an unmodifiable allergy set, which throws","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"francisyzy"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"francisyzy"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"francisyzy"},"content":"         * Returns {@code Optional#empty()} if {@code allergies} is null.","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cSet\u003cGroupName\u003e\u003e getAllergies() {","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"francisyzy"},"content":"            return (allergies !\u003d null) ? Optional.of(Collections.unmodifiableSet(allergies)) : Optional.empty();","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"francisyzy"},"content":"         * Sets {@code vaccines} to this object\u0027s {@code vaccines}.","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code vaccines} is used internally.","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"francisyzy"},"content":"        public void setVaccines(Set\u003cGroupName\u003e vaccines) {","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"francisyzy"},"content":"            this.vaccines \u003d (vaccines !\u003d null) ? new HashSet\u003c\u003e(vaccines) : null;","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":247,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"francisyzy"},"content":"         * Returns an unmodifiable vaccine set, which throws","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"francisyzy"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-22"},{"lineNumber":251,"author":{"gitId":"francisyzy"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"francisyzy"},"content":"         * Returns {@code Optional#empty()} if {@code vaccines} is null.","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cSet\u003cGroupName\u003e\u003e getVaccines() {","lastModifiedDate":"2023-03-22"},{"lineNumber":255,"author":{"gitId":"francisyzy"},"content":"            return (vaccines !\u003d null) ? Optional.of(Collections.unmodifiableSet(vaccines)) : Optional.empty();","lastModifiedDate":"2023-03-22"},{"lineNumber":256,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":257,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"francisyzy"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":259,"author":{"gitId":"francisyzy"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"francisyzy"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":261,"author":{"gitId":"francisyzy"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-22"},{"lineNumber":262,"author":{"gitId":"francisyzy"},"content":"                return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":263,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":264,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":265,"author":{"gitId":"francisyzy"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":266,"author":{"gitId":"francisyzy"},"content":"            if (!(other instanceof FindPatientDescriptor)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":267,"author":{"gitId":"francisyzy"},"content":"                return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":268,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":269,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":270,"author":{"gitId":"francisyzy"},"content":"            // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":271,"author":{"gitId":"francisyzy"},"content":"            FindPatientDescriptor e \u003d (FindPatientDescriptor) other;","lastModifiedDate":"2023-03-22"},{"lineNumber":272,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":273,"author":{"gitId":"francisyzy"},"content":"            return getNameSearch().equals(e.getNameSearch())","lastModifiedDate":"2023-03-22"},{"lineNumber":274,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-22"},{"lineNumber":275,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getDob().equals(e.getDob())","lastModifiedDate":"2023-03-22"},{"lineNumber":276,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getBloodType().equals(e.getBloodType())","lastModifiedDate":"2023-03-22"},{"lineNumber":277,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getAllergies().equals(e.getAllergies())","lastModifiedDate":"2023-03-22"},{"lineNumber":278,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getVaccines().equals(e.getVaccines());","lastModifiedDate":"2023-03-22"},{"lineNumber":279,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":280,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"daitenshionyan":7,"-":24,"francisyzy":250}},{"path":"src/main/java/seedu/vms/logic/commands/patient/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" * Lists all patients in the patient manager to the user.","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":6,"-":14,"francisyzy":4}},{"path":"src/main/java/seedu/vms/logic/commands/vaccination/AddVaxTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" * Command to add a vaccination type.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class AddVaxTypeCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Vaccination: %s\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final GroupName name;","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final VaxTypeBuilder builder;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code AddVaxTypeCommand}.","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public AddVaxTypeCommand(GroupName name, VaxTypeBuilder builder) {","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        this.builder \u003d Objects.requireNonNull(builder);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            VaxType vaxType \u003d builder.create(name);","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            ValueChange\u003cVaxType\u003e change \u003d model.addVaccination(vaxType);","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            return new CommandMessage(String.format(MESSAGE_SUCCESS, change.toString()));","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(ive.getMessage(), ive);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        } catch (LimitExceededException limitEx) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(String.format(\"Vaccination: %s\", limitEx.getMessage()));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":50}},{"path":"src/main/java/seedu/vms/logic/commands/vaccination/ClearVaxTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" * Command to clear all vaccinations.","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class ClearVaxTypeCommand extends Command {","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isForce;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public ClearVaxTypeCommand(boolean isForce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        this.isForce \u003d isForce;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cGroupName\u003e names \u003d model.getVaxTypeManager()","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                .asUnmodifiableObservableMap()","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"                .values()","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                .map(vaxType -\u003e vaxType.getGroupName())","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        int totalToClear \u003d names.size();","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        int numCleared \u003d 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            for (GroupName name : names) {","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                model.deleteVaccination(name, isForce);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                numCleared++;","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            return new CommandMessage(ive.getMessage(), CommandMessage.State.DEATH);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        } catch (UnexpectedChangeException uce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            String errMessage \u003d String.format(\"%d of %d vaccination cleared.\\n%s\\n%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                    numCleared, totalToClear,","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                    uce.getMessage(),","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                    Messages.MESSAGE_USE_FORCE);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(errMessage);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(\"Vaccinations successfully cleared\");","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"daitenshionyan":56}},{"path":"src/main/java/seedu/vms/logic/commands/vaccination/DeleteVaxTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" * Command to delete a vaccination type.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class DeleteVaxTypeCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Vaccination: %s\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final Retriever\u003cString, VaxType\u003e retriever;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isForce;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code DeleteVaxTypeCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public DeleteVaxTypeCommand(Retriever\u003cString, VaxType\u003e retriever, boolean isForce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        this.retriever \u003d Objects.requireNonNull(retriever);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        this.isForce \u003d isForce;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            VaxType vaxType \u003d model.getVaccination(retriever);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            ValueChange\u003cVaxType\u003e change \u003d model.deleteVaccination(vaxType.getGroupName(), isForce);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            return new CommandMessage(String.format(MESSAGE_SUCCESS, change.toString()));","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(ive.getMessage(), ive);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        } catch (UnexpectedChangeException uce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(String.format(\"%s\\n%s\",","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                    uce.getMessage(),","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                    Messages.MESSAGE_USE_FORCE));","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":52}},{"path":"src/main/java/seedu/vms/logic/commands/vaccination/DetailVaxTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * Command to show the details of a vaccination.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class DetailVaxTypeCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private final Retriever\u003cString, VaxType\u003e retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code DetailVaxTypeCommand}.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public DetailVaxTypeCommand(Retriever\u003cString, VaxType\u003e retriever) {","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        this.retriever \u003d retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        VaxType vaxType;","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            vaxType \u003d model.getVaccination(retriever);","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(ive.getMessage());","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        model.setDetailedVaxType(vaxType);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(\"Detailing vaccination: %s\", vaxType.getName()));","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"daitenshionyan":38}},{"path":"src/main/java/seedu/vms/logic/commands/vaccination/EditVaxTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" * Command to edit a vaccination type.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class EditVaxTypeCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Vaccination: %s\";","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final Retriever\u003cString, VaxType\u003e retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final VaxTypeBuilder builder;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code EditVaxTypeCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param retriever - the retriever to retrieve the vaccination to edit.","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * @param builder - the builder to use to update the vaccination type.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public EditVaxTypeCommand(Retriever\u003cString, VaxType\u003e retriever, VaxTypeBuilder builder, boolean isSet) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this.retriever \u003d Objects.requireNonNull(retriever);","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        this.builder \u003d Objects.requireNonNull(builder);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this.isSet \u003d isSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            VaxType toUpdate \u003d model.getVaccination(retriever);","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            VaxType newValue \u003d builder.update(toUpdate, isSet);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            ValueChange\u003cVaxType\u003e change \u003d model.editVaccination(toUpdate.getName(), newValue);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            return new CommandMessage(String.format(MESSAGE_SUCCESS, change.toString()));","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(ive.getMessage(), ive);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":54}},{"path":"src/main/java/seedu/vms/logic/commands/vaccination/FilterVaxTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" * Command to filter vaccination types.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class FilterVaxTypeCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cString\u003e namePatterns;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public FilterVaxTypeCommand(List\u003cString\u003e namePatterns) {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        this.namePatterns \u003d namePatterns;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        Predicate\u003cVaxType\u003e nameFilter \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                vaxType -\u003e StringUtil.isMatching(vaxType.getName(), namePatterns);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        model.setVaccinationFilters(List.of(nameFilter));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        int numListed \u003d model.getFilteredVaxTypeMap().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(Messages.MESSAGE_VACCINATION_LISTED_OVERVIEW,","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                numListed));","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"daitenshionyan":35}},{"path":"src/main/java/seedu/vms/logic/commands/vaccination/ListVaxTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * Command to list all vaccinations.","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class ListVaxTypeCommand extends Command {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public CommandMessage execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        model.setVaccinationFilters(List.of());","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        int numListed \u003d model.getFilteredVaxTypeMap().size();","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        return new CommandMessage(String.format(Messages.MESSAGE_VACCINATION_LISTED_OVERVIEW, numListed));","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"daitenshionyan":21}},{"path":"src/main/java/seedu/vms/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private final HashSet\u003cPrefix\u003e usedPrefixes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e argValues \u003d get(prefix);","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * Returns all values of {@code prefix}. If the prefix does not exist or","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * has no values, this will return an empty list.","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        usedPrefixes.add(prefix);","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        return get(prefix);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     * Returns a list of {@code Map.Entry} representing the list of unused","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     * arguments.","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cMap.Entry\u003cPrefix, List\u003cString\u003e\u003e\u003e getUnusedArgs() {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cMap.Entry\u003cPrefix, List\u003cString\u003e\u003e\u003e unusedArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        for (Map.Entry\u003cPrefix, List\u003cString\u003e\u003e entry : argMultimap.entrySet()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            if (!usedPrefixes.contains(entry.getKey())) {","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                unusedArgs.add(entry);","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        return unusedArgs;","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003cString\u003e get(Prefix prefix) {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"daitenshionyan":31,"-":52}},{"path":"src/main/java/seedu/vms/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_MISSING_FLAG \u003d \"Argument flag missing\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final String DELIMITER_PATTERN \u003d \"\\\\s*\" + CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * Parses an argument String to an {@link ArgumentMultimap}.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if a flag name is blank.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public static ArgumentMultimap tokenize(String argString) throws ParseException {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        argString \u003d argString.strip() + \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d new ArgumentMultimap();","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        String[] args \u003d argString.split(DELIMITER_PATTERN);","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        // preamble","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        argMap.put(new Prefix(\"\"), args[0].strip());","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            addArgument(args[i].strip(), argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        return argMap;","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private static void addArgument(String input, ArgumentMultimap argMap) throws ParseException {","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        String[] inputs \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        String flagName \u003d inputs[0];","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        if (flagName.isBlank()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(MESSAGE_MISSING_FLAG);","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        Prefix flag \u003d new Prefix(flagName);","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        String argValue \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            argValue \u003d inputs[1];","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        argMap.put(flag, argValue);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"daitenshionyan":28,"-":29}},{"path":"src/main/java/seedu/vms/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    public static final String DELIMITER \u003d \"--\";","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    /*","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"     * Misc","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_FORCE \u003d new Prefix(\"force\");","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_SET \u003d new Prefix(\"set\");","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n\");","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p\");","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"d\");","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public static final Prefix PREFIX_BLOODTYPE \u003d new Prefix(\"b\");","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public static final Prefix PREFIX_ALLERGY \u003d new Prefix(\"a\");","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public static final Prefix PREFIX_VACCINATION \u003d new Prefix(\"v\");","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Vaccination","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_VAX_GROUPS \u003d new Prefix(\"g\");","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_MIN_AGE \u003d new Prefix(\"lal\");","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_MAX_AGE \u003d new Prefix(\"ual\");","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_INGREDIENTS \u003d new Prefix(\"i\");","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_HISTORY_REQ \u003d new Prefix(\"h\");","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * Appointment","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    public static final Prefix PREFIX_PATIENT \u003d new Prefix(\"p\");","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    public static final Prefix PREFIX_STARTTIME \u003d new Prefix(\"s\");","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    public static final Prefix PREFIX_ENDTIME \u003d new Prefix(\"e\");","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    public static final Prefix PREFIX_COMPLETED \u003d new Prefix(\"c\");","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"    /*","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"     * Keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"    public static final Prefix PREFIX_KEYWORD_MAIN \u003d new Prefix(\"k\");","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"    public static final Prefix PREFIX_KEYWORD_SUB \u003d new Prefix(\"n\");","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"daitenshionyan":25,"slackernoob":8,"-":9,"francisyzy":4,"nusE0726844":11}},{"path":"src/main/java/seedu/vms/logic/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * A parser to parse commands from {@link ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public interface CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"     * Parses the command from the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     * @param args - the {@code ArgumentMultimap} to parse the command from.","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException - if the command cannot be parsed.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public Command parse(ArgumentMultimap args) throws ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"daitenshionyan":18}},{"path":"src/main/java/seedu/vms/logic/parser/FeatureParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/** A parser to parse the command of a feature. */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public abstract class FeatureParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Parses the given CLI input to a {@code Command}.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param commandInput - the command input to parse.","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException - if a command cannot be parsed.","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public ParseResult parse(String commandInput) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(commandInput.trim());","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        String argString \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap args \u003d ArgumentTokenizer.tokenize(argString);","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        Command command \u003d parseCommand(commandWord, args);","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        Optional\u003cCommandMessage\u003e message \u003d formParseMessage(args);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        return message.map(msg -\u003e new ParseResult(command, msg))","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                .orElseGet(() -\u003e new ParseResult(command));","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cCommandMessage\u003e formParseMessage(ArgumentMultimap args) {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cMap.Entry\u003cPrefix, List\u003cString\u003e\u003e\u003e unusedArgs \u003d args.getUnusedArgs();","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        for (Map.Entry\u003cPrefix, List\u003cString\u003e\u003e entry : unusedArgs) {","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"            Prefix prefix \u003d entry.getKey();","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            for (String arg : entry.getValue()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                if (prefix.equals(new Prefix(\"\")) \u0026\u0026 arg.isBlank()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                    continue;","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                } else if (prefix.equals(new Prefix(\"\"))) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                    builder.append(String.format(\"\\n[PREAMBLE] %s\",","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"                            arg));","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                    builder.append(String.format(\"\\n%s%s %s\",","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                            CliSyntax.DELIMITER,","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                            prefix.toString(),","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                            arg));","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        String messageContent \u003d builder.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        if (messageContent.isBlank()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        String message \u003d String.format(\"The following arguments are unused:%s\", messageContent);","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(new CommandMessage(message, CommandMessage.State.WARNING));","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    protected abstract Command parseCommand(String commandWord, ArgumentMultimap argument) throws ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":76}},{"path":"src/main/java/seedu/vms/logic/parser/ParseResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * An association class between a parsed {@code Command} and its parse message.","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class ParseResult {","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private final Command command;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cCommandMessage\u003e parseMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ParseResult} without a message.","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public ParseResult(Command command) {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        this(command, null);","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ParseResult}.","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public ParseResult(Command command, CommandMessage parseMessage) {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        this.parseMessage \u003d Optional.ofNullable(parseMessage);","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        return command;","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cCommandMessage\u003e getMessage() {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        return parseMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"daitenshionyan":42}},{"path":"src/main/java/seedu/vms/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_MAIN_KEYWORD;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_SUB_KEYWORD;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_KEYWORD_IS_EMPTY;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.model.keyword.Keyword.MAIN_APPOINTMENT_STRING;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.model.keyword.Keyword.MAIN_BASIC_STRING;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.model.keyword.Keyword.MAIN_EXIT_STRING;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.model.keyword.Keyword.MAIN_HELP_STRING;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.model.keyword.Keyword.MAIN_KEYWORD_STRING;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.model.keyword.Keyword.MAIN_PATIENT_STRING;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.model.keyword.Keyword.MAIN_VACCINATION_STRING;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":" * classes.","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date is of an invalid format\";","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_BLANK_ELEMENT \u003d \"Trailing or leading delimiters are not allowed\";","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_BLANK_ARGUMENT \u003d \"Argument is blank\";","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public static final String KEYWORD_EMPTY_LIST \u003d \"\u003cEMPTY\u003e\";","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public static final String RETRIEVER_TYPE_NAME \u003d \"NAME\";","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public static final String RETRIEVER_TYPE_INDEX \u003d \"INDEX\";","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    private static final String DEFAULT_DATE_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    private static final String FULL_DATE_REGEX \u003d \"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2} \\\\d{4}\";","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    private static final String DATE_ONLY_REGEX \u003d \"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}\";","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    private static final String FULL_DATE_PATTERN \u003d \"yyyy-M-d HHmm\";","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    private static final String DELIMITER_PART \u003d \"::\";","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    private static final String DELIMITER_LIST \u003d \",\";","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"     * Parses a {@code String dob} into an {@code Dob}.","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the given {@code dob} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"    public static Dob parseDob(String dob) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(dob);","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        String trimmedDob \u003d dob.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime date \u003d parseDate(trimmedDob);","lastModifiedDate":"2023-04-03"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        if (!Dob.isValidDob(date)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(Dob.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        return new Dob(date);","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"     * Parses a {@code String bloodType} into an {@code BloodType}.","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the given {@code bloodType} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"    public static BloodType parseBloodType(String bloodType) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"        String trimmedBloodType \u003d bloodType.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        if (!BloodType.isValidBloodType(trimmedBloodType)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"        return new BloodType(trimmedBloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"     * Parses a String date to a {@code LocalDateTime}.","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"     * The following formats are supported:","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cli\u003e{@code yyyy-MM-dd\u0027T\u0027hh:mm}","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cli\u003e{@code yyyy-M-d hhmm}","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"     * @param dateString - the String date to parse.","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"     * @return the parsed {@code LocalDateTime}.","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if the given String cannot be parsed.","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"    public static LocalDateTime parseDate(String dateString) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"            return parseCustomDate(dateString);","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        } catch (DateTimeParseException dateParseEx) {","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(dateParseEx.getMessage());","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"nusE0726844"},"content":"     * Checks if given string is a valid datetime format","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"nusE0726844"},"content":"     * @param dateString - the String to check.","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"nusE0726844"},"content":"     * @return True if {@code dateString} is a valid datetime format","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"nusE0726844"},"content":"    public static boolean isValidDateTimeFormat(String dateString) {","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"nusE0726844"},"content":"            parseDate(dateString);","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"nusE0726844"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"nusE0726844"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"nusE0726844"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"    private static LocalDateTime parseCustomDate(String dateString) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"        if (dateString.matches(DEFAULT_DATE_REGEX)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"            // yyyy-MM-dd\u0027T\u0027hh:mm format","lastModifiedDate":"2023-02-27"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"            return LocalDateTime.parse(dateString);","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"        } else if (dateString.matches(FULL_DATE_REGEX)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"            // yyyy-MM-dd hhmm format","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"            return LocalDateTime.parse(","lastModifiedDate":"2023-02-27"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"                    dateString,","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"                    DateTimeFormatter.ofPattern(FULL_DATE_PATTERN));","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"        } else if (dateString.matches(DATE_ONLY_REGEX)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"            return LocalDateTime.parse(","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"                    dateString + \" 0000\",","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"                    DateTimeFormatter.ofPattern(FULL_DATE_PATTERN));","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"        throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"     * Vaccination","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a requirement.","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"    public static Requirement parseReq(String reqString) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e parts \u003d parseParts(reqString);","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"        if (parts.size() !\u003d 2) {","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Requirements require 2 and only 2 parts\");","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"        Requirement.RequirementType reqType \u003d parseReqType(parts.get(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e reqSet \u003d new HashSet\u003c\u003e(parseGroups(parts.get(1)));","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"        if (!Requirement.isValidReqSet(reqSet)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(Requirement.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"        return new Requirement(reqType, reqSet);","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a requirement type.","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"    public static Requirement.RequirementType parseReqType(String reqTypeString)","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"                throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"            return Requirement.RequirementType.valueOf(reqTypeString.toUpperCase());","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalArgumentException illArgEx) {","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Unknown requirement type\", illArgEx);","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a vaccination retriever.","lastModifiedDate":"2023-03-26"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"    public static Retriever\u003cString, VaxType\u003e parseVaxRetriever(String inputString)","lastModifiedDate":"2023-03-26"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"                throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e argParts \u003d parseParts(inputString);","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"        if (argParts.size() \u003e 2) {","lastModifiedDate":"2023-03-26"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Only a maximum of 2 parts is allowed\");","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"        String retrieverType \u003d RETRIEVER_TYPE_NAME;","lastModifiedDate":"2023-03-26"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"        String retrieverValue \u003d argParts.get(0);","lastModifiedDate":"2023-03-26"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"        if (retrieverValue.isBlank()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Retriever value cannot be empty\");","lastModifiedDate":"2023-03-26"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"        if (argParts.size() \u003e 1) {","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"            // if 2 parts","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"            retrieverType \u003d argParts.get(0);","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"            retrieverValue \u003d argParts.get(1);","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"        } else if (retrieverValue.matches(\"\\\\d+\")) {","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"            // if one part and is digits","lastModifiedDate":"2023-04-08"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"            retrieverType \u003d RETRIEVER_TYPE_INDEX;","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"        return formVaxRetriever(retrieverType.strip(), retrieverValue.strip());","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"    private static Retriever\u003cString, VaxType\u003e formVaxRetriever(String retrieverType, String retrieverValue)","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"                throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"        switch (retrieverType.toUpperCase()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"        case RETRIEVER_TYPE_NAME:","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"            return Retriever.of(retrieverValue);","lastModifiedDate":"2023-03-26"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"        case RETRIEVER_TYPE_INDEX:","lastModifiedDate":"2023-03-26"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"            Index index \u003d parseIndex(retrieverValue);","lastModifiedDate":"2023-03-26"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"            return Retriever.of(index.getZeroBased());","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-03-26"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Unknown retriever type\");","lastModifiedDate":"2023-03-26"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":271,"author":{"gitId":"slackernoob"},"content":"    /*","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"slackernoob"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"slackernoob"},"content":"     * Keyword","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"slackernoob"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"slackernoob"},"content":"     * Parses a {@code String keyword} into a {@code String keyword}.","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"slackernoob"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"slackernoob"},"content":"     * @throws ParseException if the given {@code keyword} is invalid.","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"slackernoob"},"content":"    public static String parseKeyword(String keyword) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"slackernoob"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"slackernoob"},"content":"        String trimmedKeyword \u003d keyword.strip();","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"slackernoob"},"content":"        if (trimmedKeyword.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"slackernoob"},"content":"            throw new ParseException(MESSAGE_KEYWORD_IS_EMPTY);","lastModifiedDate":"2023-03-30"},{"lineNumber":288,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":289,"author":{"gitId":"slackernoob"},"content":"        if (!Keyword.isNotMainKeyword(trimmedKeyword)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"slackernoob"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_SUB_KEYWORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":291,"author":{"gitId":"slackernoob"},"content":"            MAIN_APPOINTMENT_STRING, MAIN_PATIENT_STRING, MAIN_VACCINATION_STRING,","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"slackernoob"},"content":"            MAIN_HELP_STRING, MAIN_BASIC_STRING, MAIN_EXIT_STRING, MAIN_KEYWORD_STRING));","lastModifiedDate":"2023-04-06"},{"lineNumber":293,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"slackernoob"},"content":"        return trimmedKeyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":299,"author":{"gitId":"slackernoob"},"content":"     * Parses a {@code String keyword} into a {@code String keyword}.","lastModifiedDate":"2023-03-30"},{"lineNumber":300,"author":{"gitId":"slackernoob"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-30"},{"lineNumber":301,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":302,"author":{"gitId":"slackernoob"},"content":"     * @throws ParseException if the given {@code keyword} is invalid.","lastModifiedDate":"2023-03-30"},{"lineNumber":303,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":304,"author":{"gitId":"slackernoob"},"content":"    public static String parseDeleteKeyword(String keyword) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"slackernoob"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":306,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":307,"author":{"gitId":"slackernoob"},"content":"        String trimmedKeyword \u003d keyword.strip();","lastModifiedDate":"2023-03-30"},{"lineNumber":308,"author":{"gitId":"slackernoob"},"content":"        if (trimmedKeyword.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":309,"author":{"gitId":"slackernoob"},"content":"            throw new ParseException(MESSAGE_KEYWORD_IS_EMPTY);","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":311,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":312,"author":{"gitId":"slackernoob"},"content":"        return trimmedKeyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"slackernoob"},"content":"     * Parses a {@code String keyword} into a {@code String keyword}.","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"slackernoob"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"slackernoob"},"content":"     * @throws ParseException if the given {@code keyword} is invalid.","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"slackernoob"},"content":"    public static String parseMainKeyword(String mainKeyword) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"slackernoob"},"content":"        requireNonNull(mainKeyword);","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"slackernoob"},"content":"        String trimmedMainKeyword \u003d mainKeyword.strip();","lastModifiedDate":"2023-03-30"},{"lineNumber":324,"author":{"gitId":"slackernoob"},"content":"        if (!Keyword.isValidMainKeyword(trimmedMainKeyword)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"slackernoob"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_MAIN_KEYWORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"slackernoob"},"content":"            MAIN_APPOINTMENT_STRING, MAIN_PATIENT_STRING, MAIN_VACCINATION_STRING));","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"slackernoob"},"content":"        return trimmedMainKeyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"daitenshionyan"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":332,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":333,"author":{"gitId":"daitenshionyan"},"content":"     * Basic","lastModifiedDate":"2023-03-09"},{"lineNumber":334,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":335,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":336,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":337,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":338,"author":{"gitId":"daitenshionyan"},"content":"     * Parses an integer.","lastModifiedDate":"2023-03-09"},{"lineNumber":339,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":340,"author":{"gitId":"daitenshionyan"},"content":"    public static int parseInteger(String intString) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":341,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":342,"author":{"gitId":"daitenshionyan"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2023-03-09"},{"lineNumber":343,"author":{"gitId":"daitenshionyan"},"content":"        } catch (NumberFormatException numEx) {","lastModifiedDate":"2023-03-09"},{"lineNumber":344,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Must be an integer between -2147483647 to 2147483647\");","lastModifiedDate":"2023-03-09"},{"lineNumber":345,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":346,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":347,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":348,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":349,"author":{"gitId":"daitenshionyan"},"content":"     * Parses the argument into parts according to {@link #DELIMITER_PART}","lastModifiedDate":"2023-03-09"},{"lineNumber":350,"author":{"gitId":"daitenshionyan"},"content":"     * delimiter pattern.","lastModifiedDate":"2023-03-09"},{"lineNumber":351,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":352,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cString\u003e parseParts(String arg) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":353,"author":{"gitId":"daitenshionyan"},"content":"        return splitArgs(arg, DELIMITER_PART);","lastModifiedDate":"2023-03-09"},{"lineNumber":354,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":355,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":356,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":357,"author":{"gitId":"daitenshionyan"},"content":"     * Parses the argument into a list according to {@link #DELIMITER_LIST}","lastModifiedDate":"2023-03-09"},{"lineNumber":358,"author":{"gitId":"daitenshionyan"},"content":"     * delimiter pattern.","lastModifiedDate":"2023-03-09"},{"lineNumber":359,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":360,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cString\u003e parseList(String arg) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":361,"author":{"gitId":"daitenshionyan"},"content":"        if (arg.strip().toUpperCase().equals(KEYWORD_EMPTY_LIST)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":362,"author":{"gitId":"daitenshionyan"},"content":"            return List.of();","lastModifiedDate":"2023-03-09"},{"lineNumber":363,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":364,"author":{"gitId":"daitenshionyan"},"content":"        return splitArgs(arg, DELIMITER_LIST);","lastModifiedDate":"2023-03-09"},{"lineNumber":365,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":366,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":367,"author":{"gitId":"daitenshionyan"},"content":"    private static List\u003cString\u003e splitArgs(String arg, String delimiter) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":368,"author":{"gitId":"daitenshionyan"},"content":"        if (arg.isBlank()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":369,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(MESSAGE_BLANK_ARGUMENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":370,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":371,"author":{"gitId":"daitenshionyan"},"content":"        arg \u003d \" \" + arg + \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":372,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e rawArgs \u003d List.of(arg.split(delimiter));","lastModifiedDate":"2023-03-09"},{"lineNumber":373,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cString\u003e splitArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":374,"author":{"gitId":"daitenshionyan"},"content":"        for (String rawArg : rawArgs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":375,"author":{"gitId":"daitenshionyan"},"content":"            if (rawArg.isBlank()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":376,"author":{"gitId":"daitenshionyan"},"content":"                throw new ParseException(MESSAGE_BLANK_ELEMENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":377,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":378,"author":{"gitId":"daitenshionyan"},"content":"            splitArgs.add(rawArg.strip());","lastModifiedDate":"2023-03-09"},{"lineNumber":379,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":380,"author":{"gitId":"daitenshionyan"},"content":"        return splitArgs;","lastModifiedDate":"2023-03-09"},{"lineNumber":381,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":382,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":383,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":384,"author":{"gitId":"francisyzy"},"content":"     * Parses group names.","lastModifiedDate":"2023-03-15"},{"lineNumber":385,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":386,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - name to parse.","lastModifiedDate":"2023-03-08"},{"lineNumber":387,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if the name cannot be parsed.","lastModifiedDate":"2023-03-08"},{"lineNumber":388,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":389,"author":{"gitId":"daitenshionyan"},"content":"    public static GroupName parseGroupName(String name) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":390,"author":{"gitId":"daitenshionyan"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":391,"author":{"gitId":"daitenshionyan"},"content":"        if (!GroupName.isValidName(name)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":392,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":393,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":394,"author":{"gitId":"daitenshionyan"},"content":"        return new GroupName(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":395,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":396,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":397,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":398,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a String representing a list of groups.","lastModifiedDate":"2023-03-09"},{"lineNumber":399,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":400,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if any of the groups cannot be parsed.","lastModifiedDate":"2023-03-09"},{"lineNumber":401,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":402,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cGroupName\u003e parseGroups(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":403,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e grpStrings \u003d parseList(args);","lastModifiedDate":"2023-03-09"},{"lineNumber":404,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":405,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cGroupName\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":406,"author":{"gitId":"daitenshionyan"},"content":"        for (String grpString : grpStrings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":407,"author":{"gitId":"francisyzy"},"content":"            groups.add(parseGroupName(grpString));","lastModifiedDate":"2023-03-15"},{"lineNumber":408,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":409,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":410,"author":{"gitId":"francisyzy"},"content":"        return groups;","lastModifiedDate":"2023-03-15"},{"lineNumber":411,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":412,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":413,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":414,"author":{"gitId":"francisyzy"},"content":"     * Parses a String representing a list of groups.","lastModifiedDate":"2023-03-15"},{"lineNumber":415,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":416,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if any of the groups cannot be parsed.","lastModifiedDate":"2023-03-15"},{"lineNumber":417,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":418,"author":{"gitId":"daitenshionyan"},"content":"    public static HashSet\u003cGroupName\u003e parseGroups(Collection\u003cString\u003e args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":419,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":420,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":421,"author":{"gitId":"daitenshionyan"},"content":"        final HashSet\u003cGroupName\u003e groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":422,"author":{"gitId":"francisyzy"},"content":"        for (String grpString : args) {","lastModifiedDate":"2023-03-15"},{"lineNumber":423,"author":{"gitId":"francisyzy"},"content":"            groups.addAll(parseGroups(grpString));","lastModifiedDate":"2023-03-16"},{"lineNumber":424,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":425,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":426,"author":{"gitId":"francisyzy"},"content":"        return groups;","lastModifiedDate":"2023-03-15"},{"lineNumber":427,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":428,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":429,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":430,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":431,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a String to a boolean.","lastModifiedDate":"2023-03-28"},{"lineNumber":432,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":433,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean parseBoolean(String input) {","lastModifiedDate":"2023-03-28"},{"lineNumber":434,"author":{"gitId":"daitenshionyan"},"content":"        return Boolean.parseBoolean(input);","lastModifiedDate":"2023-03-28"},{"lineNumber":435,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":436,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"daitenshionyan":212,"slackernoob":71,"-":53,"francisyzy":84,"nusE0726844":16}},{"path":"src/main/java/seedu/vms/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"daitenshionyan":1,"-":38}},{"path":"src/main/java/seedu/vms/logic/parser/VmsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.appointment.AppointmentParser;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.basic.BasicParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.keyword.KeywordParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.patient.PatientParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.vaccination.VaccinationParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"/** Parsers user input.  */","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class VmsParser {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            Pattern.compile(\"(?\u003cfeatureName\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final BasicParser basicParser \u003d new BasicParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final PatientParser patientParser \u003d new PatientParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    private final AppointmentParser appointmentParser \u003d new AppointmentParser();","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private final VaccinationParser vaccinationParser \u003d new VaccinationParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    private final KeywordParser keywordParser \u003d new KeywordParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    private final KeywordManager keywordManager \u003d new KeywordManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public ParseResult parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        final String featureName \u003d matcher.group(\"featureName\");","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"        switch (keywordManager.getKeyword(featureName)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        case PatientParser.FEATURE_NAME:","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            return patientParser.parse(arguments);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        case AppointmentParser.FEATURE_NAME:","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            return appointmentParser.parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        case VaccinationParser.FEATURE_NAME:","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            return vaccinationParser.parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"        case KeywordParser.FEATURE_NAME:","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"            return keywordParser.parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        case BasicParser.FEATURE_NAME:","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            return basicParser.parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            return basicParser.parse(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":53,"slackernoob":8,"nusE0726844":5}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_MISSING_PARAMETER_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.AddCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.Prefix;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"// @@author nusE0726844","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"public class AddCommandParser implements CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public AddCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        if (!arePrefixesPresent(argsMap, PREFIX_PATIENT, PREFIX_STARTTIME, PREFIX_ENDTIME, PREFIX_VACCINATION)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_PARAMETER_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d ParserUtil.parseIndex(argsMap.getValue(PREFIX_PATIENT).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime startTime \u003d ParserUtil.parseDate(argsMap.getValue(PREFIX_STARTTIME).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime endTime \u003d ParserUtil.parseDate(argsMap.getValue(PREFIX_ENDTIME).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        Retriever\u003cString, VaxType\u003e vaxTypeRetriever \u003d ParserUtil","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"                .parseVaxRetriever(argsMap.getValue(PREFIX_VACCINATION).get());","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        if (Appointment.isInvalidAppointmentTime(startTime)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(Appointment.MESSAGE_START_TIME_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        if (!Appointment.isValidDuration(startTime, endTime)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(Appointment.MESSAGE_DURATION_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        return new AddCommand(patientId, vaxTypeRetriever, startTime, endTime);","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"daitenshionyan":3,"nusE0726844":60,"francisyzy":1}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/AppointmentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.AddCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.DeleteCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.EditCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.FindCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.ListCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.MarkCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.UnmarkCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":" * Parses appointment feature commands.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"public class AppointmentParser extends FeatureParser {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public static final String FEATURE_NAME \u003d \"appointment\";","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public Command parseCommand(String commandWord, ArgumentMultimap arguments) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"            return new ListCommand();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        default:","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"daitenshionyan":2,"nusE0726844":53}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.DeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class DeleteCommandParser implements CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public DeleteCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            Index index \u003d ParserUtil.parseIndex(argsMap.getPreamble());","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"daitenshionyan":6,"nusE0726844":27}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.EditCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.EditCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"public class EditCommandParser implements CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public EditCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        requireNonNull(argsMap);","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            index \u003d ParserUtil.parseIndex(argsMap.getPreamble());","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        if (argsMap.getValue(PREFIX_PATIENT).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"            editAppointmentDescriptor.setPatient(ParserUtil","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                    .parseIndex(argsMap.getValue(PREFIX_PATIENT).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        if (argsMap.getValue(PREFIX_STARTTIME).isPresent() || argsMap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"            if (argsMap.getValue(PREFIX_STARTTIME).isPresent() ^ argsMap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"                throw new ParseException(EditCommand.MESSAGE_PARSE_DURATION);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"            LocalDateTime startTime \u003d ParserUtil.parseDate(argsMap.getValue(PREFIX_STARTTIME).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"            LocalDateTime endTime \u003d ParserUtil.parseDate(argsMap.getValue(PREFIX_ENDTIME).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"            if (Appointment.isInvalidAppointmentTime(startTime)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"                throw new ParseException(Appointment.MESSAGE_START_TIME_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"            if (!Appointment.isValidDuration(startTime, endTime)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"                throw new ParseException(Appointment.MESSAGE_DURATION_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            editAppointmentDescriptor.setStartTime(startTime);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"            editAppointmentDescriptor.setEndTime(endTime);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        if (argsMap.getValue(PREFIX_VACCINATION).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"            editAppointmentDescriptor.setVaccine(ParserUtil","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                    .parseVaxRetriever(argsMap.getValue(PREFIX_VACCINATION).get()));","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        return new EditCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"daitenshionyan":10,"nusE0726844":70}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_COMPLETED;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.FindCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.FindCommand.FindAppointmentDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"public class FindCommandParser implements CommandParser {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    public FindCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(argsMap);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        boolean flagsPresent \u003d false;","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        FindAppointmentDescriptor findAppointmentDescriptor \u003d new FindAppointmentDescriptor();","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        if (argsMap.getValue(PREFIX_PATIENT).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            findAppointmentDescriptor.setPatient(ParserUtil.parseIndex(argsMap.getValue(PREFIX_PATIENT).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        if (argsMap.getValue(PREFIX_STARTTIME).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            findAppointmentDescriptor","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"                    .setAppointmentTime(ParserUtil.parseDate(argsMap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        if (argsMap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"            findAppointmentDescriptor.setAppointmentEndTime(ParserUtil","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"                    .parseDate(argsMap.getValue(PREFIX_ENDTIME).get()));","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        if (argsMap.getValue(PREFIX_VACCINATION).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"            parseGroupNamesForEdit(argsMap.getAllValues(PREFIX_VACCINATION))","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"                    .ifPresent(findAppointmentDescriptor::setVaccination);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        if (argsMap.getValue(PREFIX_COMPLETED).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"            findAppointmentDescriptor.setStatus(ParserUtil.parseBoolean(argsMap.getValue(PREFIX_COMPLETED).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        if (!flagsPresent) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"            String trimmedArgs \u003d argsMap.getPreamble().trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"            } else if (ParserUtil.isValidDateTimeFormat(trimmedArgs)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"                findAppointmentDescriptor.setAppointmentTime(ParserUtil.parseDate(trimmedArgs));","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"                parseGroupNamesForEdit(Collections.singleton(trimmedArgs))","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"                        .ifPresent(findAppointmentDescriptor::setVaccination);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"        return new FindCommand(findAppointmentDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"     * Parses {@code Collection\u003cString\u003e groupNames} into a {@code Set\u003cGroupName\u003e} if {@code groupNames} is non-empty.","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"    private Optional\u003cSet\u003cGroupName\u003e\u003e parseGroupNamesForEdit(Collection\u003cString\u003e groupNames) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        assert groupNames !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        if (groupNames.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"        Collection\u003cString\u003e groupNamesSet \u003d groupNames.size() \u003d\u003d 1 \u0026\u0026 groupNames.contains(\"\") ? Collections.emptySet()","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"                : groupNames;","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        return Optional.of(ParserUtil.parseGroups(groupNamesSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"nusE0726844":96}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.MarkCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"public class MarkCommandParser implements CommandParser {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    public MarkCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            Index index \u003d ParserUtil.parseIndex(argsMap.getPreamble());","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"nusE0726844":33}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.UnmarkCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":" * Parses input arguments and creates a new UnmarkCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"public class UnmarkCommandParser implements CommandParser {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * and returns a UnmarkCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    public UnmarkCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            Index index \u003d ParserUtil.parseIndex(argsMap.getPreamble());","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"nusE0726844":33}},{"path":"src/main/java/seedu/vms/logic/parser/basic/BasicParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/** Parser for base level commands. */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class BasicParser extends FeatureParser {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final String FEATURE_NAME \u003d \"basic\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public Command parseCommand(String commandWord, ArgumentMultimap args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":30}},{"path":"src/main/java/seedu/vms/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"daitenshionyan":2,"-":15}},{"path":"src/main/java/seedu/vms/logic/parser/keyword/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.logic.parser.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_KEYWORD_MAIN;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_KEYWORD_SUB;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.keyword.AddCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.Prefix;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"public class AddCommandParser implements CommandParser {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"    public AddCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"        if (!arePrefixesPresent(argsMap, PREFIX_KEYWORD_MAIN, PREFIX_KEYWORD_SUB)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        String keywordMain \u003d ParserUtil.parseMainKeyword(argsMap.getValue(PREFIX_KEYWORD_MAIN).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"        String keywordSub \u003d ParserUtil.parseKeyword(argsMap.getValue(PREFIX_KEYWORD_SUB).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"        if (keywordSub.matches(\".*[\\\\s(--)]+.*\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"            throw new ParseException(\"Subkeyword must be 1 word.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"        Keyword keyword \u003d new Keyword(keywordMain, keywordSub);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"        return new AddCommand(keyword);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":51}},{"path":"src/main/java/seedu/vms/logic/parser/keyword/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.logic.parser.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.keyword.DeleteCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":" * Parses input arguments and deletes a Keyword object.","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"public class DeleteCommandParser implements CommandParser {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    public DeleteCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"            String keyword \u003d ParserUtil.parseDeleteKeyword(argsMap.getPreamble());","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"            return new DeleteCommand(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"                    String.format(\"invalid command format \\n%s\", pe.getMessage()), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":28}},{"path":"src/main/java/seedu/vms/logic/parser/keyword/KeywordParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.logic.parser.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.keyword.AddCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.commands.keyword.DeleteCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":" * Parser of vaccination feature commands.","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"public class KeywordParser extends FeatureParser {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    public static final String FEATURE_NAME \u003d \"keyword\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    public Command parseCommand(String commandWord, ArgumentMultimap arguments) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":33}},{"path":"src/main/java/seedu/vms/logic/parser/patient/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_MISSING_PARAMETER_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.Prefix;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"// @@author francisyzy","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"public class AddCommandParser implements CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public AddCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        if (!arePrefixesPresent(argsMap, PREFIX_NAME, PREFIX_PHONE, PREFIX_DOB, PREFIX_BLOODTYPE)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_PARAMETER_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        Name name \u003d ParserUtil.parseName(argsMap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argsMap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        Dob dateOfBirth \u003d ParserUtil.parseDob(argsMap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        BloodType bloodType \u003d ParserUtil.parseBloodType(argsMap.getValue(PREFIX_BLOODTYPE).get());","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e allergies \u003d ParserUtil.parseGroups(argsMap.getAllValues(PREFIX_ALLERGY));","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e vaccines \u003d ParserUtil.parseGroups(argsMap.getAllValues(PREFIX_VACCINATION));","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        Optional\u003cString\u003e errMessage \u003d Patient.validateParams(Optional.of(allergies), Optional.of(vaccines));","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        if (errMessage.isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(errMessage.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d new Patient(name, phone, dateOfBirth, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"daitenshionyan":10,"-":6,"francisyzy":55}},{"path":"src/main/java/seedu/vms/logic/parser/patient/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.ClearCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" * Parser for {@link ClearCommand}.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"public class ClearCommandParser implements CommandParser {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public ClearCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        boolean isForce \u003d argsMap.getValue(CliSyntax.PREFIX_FORCE)","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"                .map(input -\u003e ParserUtil.parseBoolean(input))","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        return new ClearCommand(isForce);","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"daitenshionyan":6,"francisyzy":15}},{"path":"src/main/java/seedu/vms/logic/parser/patient/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"// @@author francisyzy","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"public class DeleteCommandParser implements CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public DeleteCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            Index index \u003d ParserUtil.parseIndex(argsMap.getPreamble());","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            boolean isForce \u003d argsMap.getValue(CliSyntax.PREFIX_FORCE)","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"                    .map(input -\u003e ParserUtil.parseBoolean(input))","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"                    .orElse(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            return new DeleteCommand(index, isForce);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"daitenshionyan":10,"-":3,"francisyzy":26}},{"path":"src/main/java/seedu/vms/logic/parser/patient/DetailCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.DetailCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Parser for {@link DetailCommand}.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class DetailCommandParser implements CommandParser {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public DetailCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            Index index \u003d ParserUtil.parseIndex(argsMap.getPreamble());","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"            return new DetailCommand(index);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DetailCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"daitenshionyan":14,"francisyzy":12}},{"path":"src/main/java/seedu/vms/logic/parser/patient/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"public class EditCommandParser implements CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    public EditCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        requireNonNull(argsMap);","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            index \u003d ParserUtil.parseIndex(argsMap.getPreamble());","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        if (argsMap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argsMap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        if (argsMap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argsMap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        if (argsMap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            editPatientDescriptor.setDob(ParserUtil.parseDob(argsMap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        if (argsMap.getValue(PREFIX_BLOODTYPE).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            editPatientDescriptor.setBloodType(ParserUtil.parseBloodType(argsMap.getValue(PREFIX_BLOODTYPE).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        parseGroupNamesForEdit(argsMap.getAllValues(PREFIX_ALLERGY)).ifPresent(editPatientDescriptor::setAllergies);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        parseGroupNamesForEdit(argsMap.getAllValues(PREFIX_VACCINATION)).ifPresent(editPatientDescriptor::setVaccines);","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        Optional\u003cString\u003e errMessage \u003d Patient.validateParams(editPatientDescriptor.getAllergies(),","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"                editPatientDescriptor.getVaccines());","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        if (errMessage.isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(errMessage.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        boolean isSet \u003d argsMap.getValue(CliSyntax.PREFIX_SET)","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                .map(input -\u003e ParserUtil.parseBoolean(input))","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(false);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        return new EditCommand(index, editPatientDescriptor, isSet);","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"     * Parses {@code Collection\u003cString\u003e groupNames} into a {@code Set\u003cGroupName\u003e} if {@code groupNames} is non-empty.","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     * If {@code groupNames} contain only one element which is an empty string, it","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * will be parsed into a {@code Set\u003cGroupName\u003e} containing zero allergies.","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    private Optional\u003cSet\u003cGroupName\u003e\u003e parseGroupNamesForEdit(Collection\u003cString\u003e groupNames) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        assert groupNames !\u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        if (groupNames.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        Collection\u003cString\u003e groupNamesSet \u003d groupNames.size() \u003d\u003d 1 \u0026\u0026 groupNames.contains(\"\") ? Collections.emptySet()","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"                : groupNames;","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        return Optional.of(ParserUtil.parseGroups(groupNamesSet));","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"daitenshionyan":29,"-":29,"francisyzy":42}},{"path":"src/main/java/seedu/vms/logic/parser/patient/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.FindCommand.FindPatientDescriptor;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"public class FindCommandParser implements CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public FindCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(argsMap);","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        Boolean flagsPresent \u003d false;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        FindPatientDescriptor findPatientDescriptor \u003d new FindPatientDescriptor();","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        if (argsMap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            findPatientDescriptor.setNameSearch(ParserUtil.parseName(argsMap.getValue(PREFIX_NAME).get()).toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        if (argsMap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            findPatientDescriptor.setPhone(ParserUtil.parsePhone(argsMap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        if (argsMap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            findPatientDescriptor.setDob(ParserUtil.parseDob(argsMap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        if (argsMap.getValue(PREFIX_BLOODTYPE).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            findPatientDescriptor.setBloodType(ParserUtil.parseBloodType(argsMap.getValue(PREFIX_BLOODTYPE).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        if (argsMap.getValue(PREFIX_ALLERGY).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            parseGroupNamesForFind(argsMap.getAllValues(PREFIX_ALLERGY))","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                    .ifPresent(findPatientDescriptor::setAllergies);","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        if (argsMap.getValue(PREFIX_VACCINATION).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            flagsPresent \u003d true;","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"            parseGroupNamesForFind(argsMap.getAllValues(PREFIX_VACCINATION))","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"                    .ifPresent(findPatientDescriptor::setVaccines);","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        if (!flagsPresent) {","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"            String trimmedArgs \u003d argsMap.getPreamble().trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"            if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"                throw new ParseException(","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"            findPatientDescriptor.setNameSearch(trimmedArgs);","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        return new FindCommand(findPatientDescriptor);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"     * Parses {@code Collection\u003cString\u003e groupNames} into a {@code Set\u003cGroupName\u003e} if {@code groupNames} is non-empty.","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"     * If {@code groupNames} contain only one element which is an empty string, it","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"     * will be parsed into a {@code Set\u003cGroupName\u003e} containing zero allergies.","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"    private Optional\u003cSet\u003cGroupName\u003e\u003e parseGroupNamesForFind(Collection\u003cString\u003e groupNames) throws ParseException {","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        assert groupNames !\u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        if (groupNames.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        Collection\u003cString\u003e groupNamesSet \u003d groupNames.size() \u003d\u003d 1 \u0026\u0026 groupNames.contains(\"\") ? Collections.emptySet()","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"                : groupNames;","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        return Optional.of(ParserUtil.parseGroups(groupNamesSet));","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"daitenshionyan":9,"-":16,"francisyzy":73}},{"path":"src/main/java/seedu/vms/logic/parser/patient/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.ListCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Parser for {@link ListCommand}.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class ListCommandParser implements CommandParser {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    public ListCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"        return new ListCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"francisyzy":16}},{"path":"src/main/java/seedu/vms/logic/parser/patient/PatientParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.ClearCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.DetailCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.ListCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" * Parses patient feature commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class PatientParser extends FeatureParser {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public static final String FEATURE_NAME \u003d \"patient\";","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public Command parseCommand(String commandWord, ArgumentMultimap arguments) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        case DetailCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            return new DetailCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":18,"-":31,"francisyzy":5}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/AddVaxTypeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.vaccination.AddVaxTypeCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * Parser of vaccination type add command arguments.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class AddVaxTypeParser extends VaxTypeBuilderParser {","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_USAGE \u003d VaccinationParser.FEATURE_NAME + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            + \": Adds a vaccination to the system\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            + \"Syntax: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination add VAX_NAME [--g ...GROUP...] [--lal MIN_AGE] [--ual MAX_AGE] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            + \"[--i ...INGREDIENT...]... [--h HISTORY_REQ]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            + \"Example: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination add ABC VAX --g ABC, VACCINATION --lal 5 --ual 50 --i ALC-0315, ALC-0159 --h NONE::ABC\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public AddVaxTypeCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            GroupName name;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                name \u003d ParserUtil.parseGroupName(argsMap.getPreamble());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                throw new ParseException(String.format(\"VAX_NAME: %s\", parseEx.getMessage()));","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeBuilder builder \u003d parseBuilderNoRename(argsMap);","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            return new AddVaxTypeCommand(name, builder);","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s\\n%s\", parseEx.getMessage(), MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":41}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/ClearVaxTypeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.vaccination.ClearVaxTypeCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * Parser to for {@link ClearVaxTypeCommand}.","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class ClearVaxTypeParser implements CommandParser {","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public ClearVaxTypeCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        boolean isForce \u003d argsMap","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"                .getValue(CliSyntax.PREFIX_FORCE)","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"                .map(input -\u003e ParserUtil.parseBoolean(input))","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        return new ClearVaxTypeCommand(isForce);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"daitenshionyan":26}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/DeleteVaxTypeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.vaccination.DeleteVaxTypeCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * Parser of vaccination type delete command.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class DeleteVaxTypeParser implements CommandParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_USAGE \u003d VaccinationParser.FEATURE_NAME + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            + \": Deletes the specified vaccination\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            + \"Syntax: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination delete VACCINATION [--force IS_FORCE]\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            + \"Example: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination delete INDEX::1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public DeleteVaxTypeCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        Retriever\u003cString, VaxType\u003e retriever;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            retriever \u003d ParserUtil.parseVaxRetriever(argsMap.getPreamble());","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"VACCINATION: %s\\n%s\", parseEx.getMessage(), MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        boolean isForce \u003d argsMap","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                .getValue(CliSyntax.PREFIX_FORCE)","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                .map(input -\u003e ParserUtil.parseBoolean(input))","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        return new DeleteVaxTypeCommand(retriever, isForce);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":41}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/DetailVaxTypeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.vaccination.DetailVaxTypeCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * Parser for {@link DetailVaxTypeCommand}.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class DetailVaxTypeParser implements CommandParser {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final String COMMAND_WORD \u003d \"detail\";","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_USAGE \u003d VaccinationParser.FEATURE_NAME + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            + \": Details the specified vaccination\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            + \"Syntax: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination detail VACCINATION\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            + \"Example: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination detail Dose 1 (Moderna)\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public DetailVaxTypeCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        Retriever\u003cString, VaxType\u003e retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            retriever \u003d ParserUtil.parseVaxRetriever(argsMap.getPreamble());","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"VACCINATION: %s\\n%s\", parseEx.getMessage(), MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        return new DetailVaxTypeCommand(retriever);","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"daitenshionyan":36}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/EditVaxTypeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.vaccination.EditVaxTypeCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * Parser of vaccination type edit command.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class EditVaxTypeParser extends VaxTypeBuilderParser {","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_USAGE \u003d VaccinationParser.FEATURE_NAME + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            + \": Updates a vaccination in the system\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            + \"Syntax: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination edit VACCINATION [--n VAX_NAME] [--g ...GROUP...] [--lal MIN_AGE] [--ual MAX_AGE] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            + \"[--i ...INGREDIENT...]... [--h HISTORY_REQ]... [--set IS_SET]\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            + \"Example: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination edit INDEX::1 --lal 5 --ual 25 --i NaOH --set true\";","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public EditVaxTypeCommand parse(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            Retriever\u003cString, VaxType\u003e retriever;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                retriever \u003d ParserUtil.parseVaxRetriever(argsMap.getPreamble());","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                throw new ParseException(String.format(\"VACCINATION: %s\", parseEx.getMessage()));","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeBuilder builder \u003d parseBuilder(argsMap);","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            boolean isSet \u003d argsMap.getValue(CliSyntax.PREFIX_SET)","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                    .map(input -\u003e ParserUtil.parseBoolean(input))","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                    .orElse(false);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            return new EditVaxTypeCommand(retriever, builder, isSet);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s\\n%s\", parseEx.getMessage(), MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":46}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/FilterVaxTypeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.vaccination.FilterVaxTypeCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" * Parser of vaccination filter command.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class FilterVaxTypeParser implements CommandParser {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_USAGE \u003d VaccinationParser.FEATURE_NAME + \" \" + COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            + \": Finds a vaccination by its name\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            + \"Syntax: \"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            + \"vaccination find VAX_NAME\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            + \"Example: vaccination find dose 1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public Command parse(ArgumentMultimap args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e namePatterns \u003d parseNamePatterns(args.getPreamble());","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        return new FilterVaxTypeCommand(namePatterns);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003cString\u003e parseNamePatterns(String namePatternString) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        if (namePatternString.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"VAX_NAME: Argument is blank\\n%s\", MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cString\u003e namePatterns \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        try (Scanner scanner \u003d new Scanner(namePatternString)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                namePatterns.add(scanner.next());","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        return namePatterns;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"daitenshionyan":46}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/ListVaxTypeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.vaccination.ListVaxTypeCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * Parser of vaccination list command.","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class ListVaxTypeParser implements CommandParser {","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public Command parse(ArgumentMultimap args) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        return new ListVaxTypeCommand();","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"daitenshionyan":21}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/VaccinationParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * Parser of vaccination feature commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class VaccinationParser extends FeatureParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final String FEATURE_NAME \u003d \"vaccination\";","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public Command parseCommand(String commandWord, ArgumentMultimap arguments) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        case AddVaxTypeParser.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            return new AddVaxTypeParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        case DeleteVaxTypeParser.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            return new DeleteVaxTypeParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        case EditVaxTypeParser.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            return new EditVaxTypeParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        case FilterVaxTypeParser.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            return new FilterVaxTypeParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        case ListVaxTypeParser.COMMAND_WORD:","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            return new ListVaxTypeParser().parse(arguments);","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        case DetailVaxTypeParser.COMMAND_WORD:","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            return new DetailVaxTypeParser().parse(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        case ClearVaxTypeParser.COMMAND_WORD:","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            return new ClearVaxTypeParser().parse(arguments);","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":46}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/VaxTypeBuilderParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CommandParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":" * A command parser to parse commands that require {@link VaxTypeBuilder}.","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"public abstract class VaxTypeBuilderParser implements CommandParser {","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_VAX_NAME \u003d \"VAX_NAME\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_GRP_SET \u003d \"GROUP\";","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_MIN_AGE \u003d \"MIN_AGE\";","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_MAX_AGE \u003d \"MAX_AGE\";","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_INGREDIENTS \u003d \"INGREDIENT\";","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_HISTORY \u003d \"HISTORY_REQ\";","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a {@link VaxTypeBuilder} from the given argument map. However,","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * unlike {@link #parseBuilder(ArgumentMultimap)}, the rename parameters","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * are ignored.","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * @param argsMap - the argument map to parse.","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * @return the parsed builder.","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if the builder cannot be parsed.","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    protected VaxTypeBuilder parseBuilderNoRename(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeBuilder builder \u003d VaxTypeBuilder.of();","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapGroupSet(argsMap.getAllValues(CliSyntax.PREFIX_VAX_GROUPS), FIELD_NAME_GRP_SET)","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setGroups)","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapAge(argsMap.getValue(CliSyntax.PREFIX_MIN_AGE), FIELD_NAME_MIN_AGE)","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setMinAge)","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapAge(argsMap.getValue(CliSyntax.PREFIX_MAX_AGE), FIELD_NAME_MAX_AGE)","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setMaxAge)","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapGroupSet(argsMap.getAllValues(CliSyntax.PREFIX_INGREDIENTS), FIELD_NAME_INGREDIENTS)","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setIngredients)","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapReqList(argsMap.getAllValues(CliSyntax.PREFIX_HISTORY_REQ), FIELD_NAME_HISTORY)","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setHistoryReqs)","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        return builder;","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a {@link VaxTypeBuilder} from the given argument map.","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * @param argsMap - the argument map to parse.","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     * @return the parsed builder.","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if the builder cannot be parsed.","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    protected VaxTypeBuilder parseBuilder(ArgumentMultimap argsMap) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeBuilder builder \u003d parseBuilderNoRename(argsMap);","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapRenamedName(argsMap.getValue(CliSyntax.PREFIX_NAME))","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setName)","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        return builder;","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    private GroupName mapName(String nameArg) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            return ParserUtil.parseGroupName(nameArg);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s: %s\", FIELD_NAME_VAX_NAME, parseEx.getMessage()));","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cGroupName\u003e mapRenamedName(Optional\u003cString\u003e newName) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        if (!newName.isPresent()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(mapName(newName.get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cHashSet\u003cGroupName\u003e\u003e mapGroupSet(Collection\u003cString\u003e grpArgs, String fieldName)","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        if (grpArgs.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.ofNullable(ParserUtil.parseGroups(grpArgs));","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s: %s\", fieldName, parseEx.getMessage()));","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cInteger\u003e mapInteger(Optional\u003cString\u003e intArg, String fieldName) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"        if (!intArg.isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        int value;","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"            value \u003d ParserUtil.parseInteger(intArg.get());","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"            if (value \u003c 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"                throw new ParseException(\"Number must be positive\");","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s: %s\", fieldName, parseEx.getMessage()));","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(ParserUtil.parseInteger(intArg.get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cAge\u003e mapAge(Optional\u003cString\u003e intArg, String fieldName) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"        return mapInteger(intArg, fieldName)","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                .map(Age::new);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cList\u003cRequirement\u003e\u003e mapReqList(List\u003cString\u003e reqStrings, String fieldName)","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"                throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        if (reqStrings.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cRequirement\u003e reqs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"            for (String reqString : reqStrings) {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"                reqs.add(ParserUtil.parseReq(reqString));","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s: %s\", fieldName, parseEx.getMessage()));","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(reqs);","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":150}},{"path":"src/main/java/seedu/vms/model/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * Represents an age. Ensures that its value is between {@link #MIN_VALUE} and","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * {@link #MAX_VALUE} inclusive.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public class Age implements Comparable\u003cAge\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    public static final int MIN_VALUE \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    public static final int MAX_VALUE \u003d 200;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MIN_AGE \u003d new Age(MIN_VALUE);","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MAX_AGE \u003d new Age(MAX_VALUE);","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STRING_MIN \u003d \"MIN\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STRING_MAX \u003d \"MAX\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Age must be a positive integer\";","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final int value;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code Age}.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value of the age.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalArgumentException if {@code value \u003c 0}.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public Age(int value) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        AppUtil.checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this.value \u003d getAgeValue(value);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValid(int value) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        return value \u003e\u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    private static int getAgeValue(int value) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        if (value \u003e\u003d MAX_VALUE) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            return MAX_VALUE;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public int getValue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(Age other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        return value - other.value;","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        if (value \u003d\u003d MIN_VALUE) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            return STRING_MIN;","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        } else if (value \u003d\u003d MAX_VALUE) {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            return STRING_MAX;","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        return String.valueOf(value);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        return other instanceof Age","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 value \u003d\u003d ((Age) other).value;","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":84,"francisyzy":2}},{"path":"src/main/java/seedu/vms/model/FilteredIdDataMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * An extension of {@link FilteredMapView} to provide a filtered view for Id","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * maps.","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - the type of value being stored.","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class FilteredIdDataMap\u003cT\u003e extends FilteredMapView\u003cInteger, IdData\u003cT\u003e\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code FilteredIdDataMap} that is bound to the given map.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param source - the map to bind to.","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public FilteredIdDataMap(ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e source) {","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        super(source);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Applies a filter.","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param filter - the filter function.","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public void filter(Predicate\u003cT\u003e filter) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(filter);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        filter(List.of(filter));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Applies a collection of filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * @param filters - the list of filters to use.","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public void filter(Collection\u003cPredicate\u003cT\u003e\u003e filters) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(filters);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        setFilters(filters.stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                .map(this::convertFilter)","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    private Predicate\u003cIdData\u003cT\u003e\u003e convertFilter(Predicate\u003cT\u003e filter) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return idData -\u003e filter.test(idData.getValue());","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"daitenshionyan":55,"francisyzy":1}},{"path":"src/main/java/seedu/vms/model/FilteredMapView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.MapChangeListener;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * A map that is a filtered view of its bounded map.","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cK\u003e the key of the map.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cV\u003e the value of the map.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class FilteredMapView\u003cK, V\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cK, V\u003e source;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cK, V\u003e internalMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cK, V\u003e unmodifiableMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final ArrayList\u003cPredicate\u003cV\u003e\u003e filters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code FilteredMapView}.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param source - the map to provide a filtered view of.","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public FilteredMapView(ObservableMap\u003cK, V\u003e source) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this.source \u003d FXCollections.unmodifiableObservableMap(source);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this.source.addListener(this::handleChange);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        internalMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        unmodifiableMap \u003d FXCollections.unmodifiableObservableMap(internalMap);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        filterSource();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    private void handleChange(MapChangeListener.Change\u003c? extends K, ? extends V\u003e change) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        if (change.wasRemoved()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            internalMap.remove(change.getKey());","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        if (change.wasAdded() \u0026\u0026 test(change.getValueAdded())) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            internalMap.put(change.getKey(), change.getValueAdded());","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    private boolean test(V value) {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        for (Predicate\u003cV\u003e filter : filters) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            if (!filter.test(value)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    private void filterSource() {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.clear();","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        for (K key : source.keySet()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            V value \u003d source.get(key);","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            if (test(value)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                internalMap.put(key, value);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the filters to use to the single specified filter.","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     * @param filter - the filter to use.","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    public void setFilters(Predicate\u003cV\u003e filter) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        setFilters(List.of(filter));","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the filters to use.","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"     * @param filters - a collection of filters to use.","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    public void setFilters(Collection\u003cPredicate\u003cV\u003e\u003e filters) {","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        this.filters.clear();","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        this.filters.addAll(filters);","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        filterSource();","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an unmodifiable map view of the filtered map.","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     * @return an unmodifiable map view of the filtered map.","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cK, V\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        return unmodifiableMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"daitenshionyan":103}},{"path":"src/main/java/seedu/vms/model/GroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.text.Collator;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" * Represents a group name. Ensures that the name is valid.","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public class GroupName implements Comparable\u003cGroupName\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group name should not be blank, must be less than 30 characters \"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"            + \"and should only contain alphanumeric characters including brackets and dashes\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\\\\-_ ]{1,30}\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private final Collator collator;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private final String name;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code GroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - name of the group.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public GroupName(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name.strip();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        collator \u003d Collator.getInstance();","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        collator.setStrength(Collator.TERTIARY);","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValidName(String name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        return name.strip().matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public String getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(GroupName other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        return collator.compare(name, other.name);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        return other instanceof GroupName","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 name.equals(((GroupName) other).name);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        return name.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":63,"francisyzy":2}},{"path":"src/main/java/seedu/vms/model/IdData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":" * Represents an association of an ID with a value.","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - the type of value stored.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public class IdData\u003cT\u003e implements Comparable\u003cIdData\u003cT\u003e\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isActive;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    private final int id;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private final T value;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code IdData} with its active state set as {@code true}.","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the ID of this data.","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value of this data.","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public IdData(int id, T value) {","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        this(true, id, value);","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code IdData}.","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param isActive - if the data is active.","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the ID of this data.","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value of this data.","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public IdData(boolean isActive, int id, T value) {","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        this.isActive \u003d isActive;","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if the data is active.","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the data is active and {@code false} otherwise.","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    public boolean isActive() {","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        return isActive;","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public int getId() {","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        return id;","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public T getValue() {","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(IdData\u003cT\u003e other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        return id - other.id;","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof IdData)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003c?\u003e o \u003d (IdData\u003c?\u003e) other;","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        return this.isActive \u003d\u003d o.isActive \u0026\u0026 this.id \u003d\u003d o.id","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 this.value.equals(o.value);","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(isActive, id, value);","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        return value.toString();","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"daitenshionyan":92}},{"path":"src/main/java/seedu/vms/model/IdDataMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * Represents a map to store ID - data value pairs.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" * \u003cp\u003eID of values are auto generated within the class.","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - type of data stored.","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class IdDataMap\u003cT\u003e {","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final int DEFAULT_LIMIT \u003d 1000;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final int STARTING_INDEX \u003d 0;","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private final int limit;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e internalMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e internalUnmodifiableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    private int nextId \u003d STARTING_INDEX;","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs an empty {@code IdDataMap} that uses the default limit. */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public IdDataMap() {","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this(DEFAULT_LIMIT);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an empty {@code IdDataMap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * @param limit - the size limit of this data map.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public IdDataMap(int limit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        internalMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        internalUnmodifiableMap \u003d FXCollections.unmodifiableObservableMap(internalMap);","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the value to the map.","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value to add.","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * @return the data added.","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LimitExceededException if the number of data has reached its","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     *      limit.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    public IdData\u003cT\u003e add(T value) throws LimitExceededException {","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(value);","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cT\u003e data \u003d new IdData\u003c\u003e(getNextId(), value);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        nextId++;","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        return add(data);","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the data to the map. If there is already a mapping to the given","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     * data\u0027s ID, that ID associated value is replaced with the given.","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * @param data - the data to add.","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     * @return the data added.","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LimitExceededException if the ID limit has been reached.","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalArgumentException if the given ID of the data is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public IdData\u003cT\u003e add(IdData\u003cT\u003e data) throws LimitExceededException {","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(data);","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        if (!isWithinLimit(data.getId())) {","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            // if ID exceeds limit","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            throw new LimitExceededException(String.format(Messages.FORMAT_LIMIT_EX, limit));","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        } else if (!isValidId(data.getId())) {","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            // all other cases of invalid ID","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalArgumentException(\"Invalid ID\");","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.put(data.getId(), data);","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        nextId \u003d Math.max(nextId, data.getId() + 1);","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        return data;","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the specified ID\u0027s value to the given value. If there is already a","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"     * mapping to the given ID, that ID associated value is replaced with the","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"     * given.","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id to set.","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value to set.","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code ValueChange} that describes the change that","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     *      has occurred.","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cIdData\u003cT\u003e\u003e set(int id, T value) {","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cT\u003e newValue \u003d new IdData\u003c\u003e(id, value);","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cT\u003e oldValue \u003d internalMap.put(id, newValue);","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        return new ValueChange\u003c\u003e(oldValue, newValue);","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"     * Removes the data associated to the specified ID.","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the ID of the data to remove.","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code ValueChange} that describes the change that","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"     *      has occurred.","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cIdData\u003cT\u003e\u003e remove(int id) {","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cT\u003e removedData \u003d internalMap.remove(id);","lastModifiedDate":"2023-04-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        return new ValueChange\u003c\u003e(removedData, null);","lastModifiedDate":"2023-04-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"     * Resets the ID count.","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    public void resetIdCount() {","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        nextId \u003d STARTING_INDEX;","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if there is a mapping to the specified ID.","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id to check.","lastModifiedDate":"2023-02-21"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if a mapping is present to the ID and {@code false}","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"     *      otherwise.","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"    public boolean contains(int id) {","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        return internalMap.containsKey(id);","lastModifiedDate":"2023-02-21"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"     * Clears and sets the stored data to the given collection of datas.","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"     * @param datas - the collection of data to set to.","lastModifiedDate":"2023-02-21"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LimitExceededException if there exists a data whose ID is over","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"     *      the limit of this {@code IdDataMap}.","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalArgumentException if there exists a data whose ID is","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"     *      invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    public void setDatas(Collection\u003cIdData\u003cT\u003e\u003e datas) {","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.clear();","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"        nextId \u003d STARTING_INDEX;","lastModifiedDate":"2023-02-21"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        for (IdData\u003cT\u003e data : datas) {","lastModifiedDate":"2023-02-21"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"            add(data);","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"     * Clears and sets the stored value to the given collection of values.","lastModifiedDate":"2023-02-21"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cp\u003eThe ID will be reset as well.","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"     * @param values - the collection of values to set to.","lastModifiedDate":"2023-02-21"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LimitExceededException if the limit has been reached. The first","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"     *      few values before the limit is reached will still be added.","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"    public void setValues(Collection\u003cT\u003e values) {","lastModifiedDate":"2023-02-21"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.clear();","lastModifiedDate":"2023-02-21"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        nextId \u003d STARTING_INDEX;","lastModifiedDate":"2023-02-21"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        for (T value : values) {","lastModifiedDate":"2023-02-21"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"            add(value);","lastModifiedDate":"2023-02-21"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the data mapped to the specified ID or {@code null} if there are","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"     * no mappings.","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"    public IdData\u003cT\u003e get(int id) {","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"        return internalMap.get(id);","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an unmodifiable map view of this data map.","lastModifiedDate":"2023-02-21"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"     * @return an unmodifiable map view of this data map.","lastModifiedDate":"2023-02-21"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2023-02-21"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"    private int getNextId() throws LimitExceededException {","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"        if (internalMap.size() \u003e\u003d limit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"            throw new LimitExceededException(String.format(Messages.FORMAT_LIMIT_EX, limit));","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"        while (contains(nextId) || !isValidId(nextId)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"            if (isValidId(nextId)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"                nextId++;","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"            } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"                nextId \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"        return nextId;","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"    /** Returns if the given ID is valid. */","lastModifiedDate":"2023-04-07"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"    private boolean isValidId(int id) {","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"        return 0 \u003c\u003d id \u0026\u0026 id \u003c limit;","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"    /** Returns if the given ID is within the set limit. */","lastModifiedDate":"2023-04-07"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"    private boolean isWithinLimit(int id) {","lastModifiedDate":"2023-04-07"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"        return id \u003c limit;","lastModifiedDate":"2023-04-07"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"daitenshionyan":220}},{"path":"src/main/java/seedu/vms/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParseResult;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.ReadOnlyVaxTypeManage;","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"    Predicate\u003cKeyword\u003e PREDICATE_SHOW_ALL_KEYWORDS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     * Validates if a patient change will result in appointments to be deleted.","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     * Returns a list of messages of the deletion change that will happen if","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     * the specified change were to occur. If no deletion change in appointment","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     * will happen, an empty {@code List} will be returned.","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * @param change - the change in state of a patient to check.","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     * @return a list of messages describing the deletion change that will","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     *      occur if the specified change were to happen.","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    List\u003cIdData\u003cAppointment\u003e\u003e validatePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change);","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     * Handles the specified change in state of a patient.","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     * @param change - the change to handle.","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    void handlePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change);","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     * Validates if a vaccination change will result in appointments to be","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     * deleted. Returns a list of messages of the deletion change that will","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     * happen if the specified change where to occur. If no deletion change in","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"     * appointment will happen, an empty {@code List} will be returned.","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"     * @param change - the change in state of vaccination to check.","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     * @return a list of messages describing the deletion change that will","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"     *      occur if the specified change were to happen.","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    List\u003cIdData\u003cAppointment\u003e\u003e validateVaccinationChange(ValueChange\u003cVaxType\u003e change);","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     * Handles the specified change in state of a vaccination.","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     * @param change - the change to handle.","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    void handleVaccinationChange(ValueChange\u003cVaxType\u003e change);","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"slackernoob"},"content":"    // @@author slackernoob","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"slackernoob"},"content":"    /*","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"slackernoob"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"slackernoob"},"content":"     * Keywords","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"slackernoob"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"slackernoob"},"content":"    /** Returns the {@code KeywordManager} the model is using. */","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"slackernoob"},"content":"    KeywordManager getKeywordManager();","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"slackernoob"},"content":"    void setKeywordManager(KeywordManager manager);","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"slackernoob"},"content":"     * Parses the specified user command.","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"slackernoob"},"content":"     * @param userCommand - the user command to parse.","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"slackernoob"},"content":"     * @return the {@code ParseResult} that results from the parsed user","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"slackernoob"},"content":"     *      command.","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"slackernoob"},"content":"     * @throws ParseException if the user command cannot be parsed.","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"slackernoob"},"content":"    ParseResult parseCommand(String userCommand) throws ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"slackernoob"},"content":"     * Adds the given keyword.","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"slackernoob"},"content":"     * {@code keyword} must not already exist in the keyword manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"slackernoob"},"content":"    void addKeyword(Keyword keyword);","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"slackernoob"},"content":"     * Deletes the given keyword.","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"slackernoob"},"content":"     * The keyword must exist in the keyword manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"slackernoob"},"content":"    Keyword deleteKeyword(String keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"    // @@author francisyzy","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"    /*","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"     * Patients","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"     * Replaces patient manager data with the data in {@code patientManager}.","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"    void setPatientManager(ReadOnlyPatientManager patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"    /** Returns the PatientManager */","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"    ReadOnlyPatientManager getPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"    boolean hasPatient(int id);","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"     * The patient must exist in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"    void deletePatient(int id, boolean isForce) throws UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"     * Resets patient manager\u0027s ID count.","lastModifiedDate":"2023-04-06"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"    void resetPatientIds();","lastModifiedDate":"2023-04-06"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"     * Adds the given patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"     * {@code patient} must not already exist in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"     * {@code target} must exist in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"     * The patient identity of {@code editedPatient} must not be the same as","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"     * another existing patient in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"    void setPatient(int id, Patient editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"    ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"    void setPatientFilters(Collection\u003cPredicate\u003cPatient\u003e\u003e filters);","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"     * Returns the detailed patient property.","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"    ObjectProperty\u003cIdData\u003cPatient\u003e\u003e detailedPatientProperty();","lastModifiedDate":"2023-04-07"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":200,"author":{"gitId":"francisyzy"},"content":"    void setDetailedPatient(IdData\u003cPatient\u003e patient);","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"    // @@author daitenshionyan","lastModifiedDate":"2023-04-08"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"    /*","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"     * Vaccination","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the state of the {@code VaxTypeManager} to use.","lastModifiedDate":"2023-04-08"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"    void setVaxTypeManager(VaxTypeManager manager);","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code VaxTypeManager} the model is using as a","lastModifiedDate":"2023-04-08"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"     * {@code ReadOnlyVaxTypeManager}.","lastModifiedDate":"2023-04-08"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"    ReadOnlyVaxTypeManage getVaxTypeManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the given {@code VaxType} to the stored {@code VaxTypeManager}.","lastModifiedDate":"2023-04-08"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"     * @return a {@code ValueChange} that describes the change that has","lastModifiedDate":"2023-04-08"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"     *      occurred.","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the name of the given {@code VaxType}","lastModifiedDate":"2023-04-08"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"     *      is already present.","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"    ValueChange\u003cVaxType\u003e addVaccination(VaxType vaxType) throws IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"     * Updates by the {@code VaxType} with the specified name with the","lastModifiedDate":"2023-04-08"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"     * given {@code VaxType}.","lastModifiedDate":"2023-04-08"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"     * @return a {@code ValueChange} that describes the change that has","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"     *      occurred.","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the specified {@code VaxType} cannot be","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"     *      updated to the given.","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"    ValueChange\u003cVaxType\u003e editVaccination(String name, VaxType newValue) throws IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"     * Deletes the {@code VaxType} with the given name.","lastModifiedDate":"2023-04-08"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the specified {@code VaxType} cannot be","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"     *      deleted.","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"     * @throws UnexpectedChangeException if {@code isFalse} and the deletion","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"     *      leads to unexpected changes.","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"    ValueChange\u003cVaxType\u003e deleteVaccination(GroupName vaxName, boolean isForce)","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"            throws IllegalValueException, UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"    /** Sets the filters to use for vaccination. */","lastModifiedDate":"2023-04-08"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"    void setVaccinationFilters(Collection\u003cPredicate\u003cVaxType\u003e\u003e filters);","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"    /** Returns an unmodifiable view of the filtered vaccination type map. */","lastModifiedDate":"2023-03-04"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"    ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap();","lastModifiedDate":"2023-03-04"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an {@code ObjectProperty} of the {@code VaxType} that should","lastModifiedDate":"2023-04-08"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"     * be detailed.","lastModifiedDate":"2023-04-08"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"    ObjectProperty\u003cVaxType\u003e detailedVaccinationProperty();","lastModifiedDate":"2023-04-07"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"    /** Sets {@code VaxType} to be detailed. */","lastModifiedDate":"2023-04-08"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"    void setDetailedVaxType(VaxType vaxType);","lastModifiedDate":"2023-03-25"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"     * Gets the {@code VaxType} that the specified {@code Retriever} refers to.","lastModifiedDate":"2023-04-08"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the {@code VaxType} cannot be","lastModifiedDate":"2023-04-08"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"     *      retrieved.","lastModifiedDate":"2023-04-08"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"    VaxType getVaccination(Retriever\u003cString, VaxType\u003e retriever) throws IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"     * Binds the given {@code ObservableList} of {@code VaxType} to this","lastModifiedDate":"2023-04-08"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Model}.","lastModifiedDate":"2023-04-08"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"    void bindVaccinationDisplayList(ObservableList\u003cVaxType\u003e displayList);","lastModifiedDate":"2023-03-26"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":294,"author":{"gitId":"nusE0726844"},"content":"    // @@author nusE0726844","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"nusE0726844"},"content":"    /*","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"nusE0726844"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"nusE0726844"},"content":"     * Appointment","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"nusE0726844"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":300,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":301,"author":{"gitId":"nusE0726844"},"content":"    void setAppointmentManager(AppointmentManager manager);","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"nusE0726844"},"content":"    /** Returns the {@code AppointmentManager} the model is using. */","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"nusE0726844"},"content":"    AppointmentManager getAppointmentManager();","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":306,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":307,"author":{"gitId":"nusE0726844"},"content":"     * Adds the given appointment.","lastModifiedDate":"2023-03-07"},{"lineNumber":308,"author":{"gitId":"nusE0726844"},"content":"     * {@code appointment} must not already exist in the appointment manager.","lastModifiedDate":"2023-03-07"},{"lineNumber":309,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":310,"author":{"gitId":"nusE0726844"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2023-03-07"},{"lineNumber":311,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":312,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":313,"author":{"gitId":"nusE0726844"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2023-03-15"},{"lineNumber":314,"author":{"gitId":"nusE0726844"},"content":"     * The appointment must exist in the appointment manager.","lastModifiedDate":"2023-03-15"},{"lineNumber":315,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":316,"author":{"gitId":"nusE0726844"},"content":"    void deleteAppointment(int id);","lastModifiedDate":"2023-03-15"},{"lineNumber":317,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":318,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"nusE0726844"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2023-03-24"},{"lineNumber":320,"author":{"gitId":"nusE0726844"},"content":"     * {@code target} must exist in the appointment manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":321,"author":{"gitId":"nusE0726844"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"nusE0726844"},"content":"     * another existing appointment in the appointment manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":324,"author":{"gitId":"nusE0726844"},"content":"    void setAppointment(int id, Appointment editedAppointment);","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":327,"author":{"gitId":"nusE0726844"},"content":"     * Marks the given appointment as completed.","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"nusE0726844"},"content":"     * The appointment must exist in the appointment manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"nusE0726844"},"content":"    void markAppointment(int id);","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"nusE0726844"},"content":"     * Unmarks the given appointment as completed.","lastModifiedDate":"2023-03-23"},{"lineNumber":334,"author":{"gitId":"nusE0726844"},"content":"     * The appointment must exist in the appointment manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":336,"author":{"gitId":"nusE0726844"},"content":"    void unmarkAppointment(int id);","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":339,"author":{"gitId":"nusE0726844"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"nusE0726844"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":342,"author":{"gitId":"nusE0726844"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":344,"author":{"gitId":"nusE0726844"},"content":"    void setAppointmentFilters(Collection\u003cPredicate\u003cAppointment\u003e\u003e filters);","lastModifiedDate":"2023-03-29"},{"lineNumber":345,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"nusE0726844"},"content":"    /** Returns an unmodifiable view of the filtered appointment map. */","lastModifiedDate":"2023-03-24"},{"lineNumber":347,"author":{"gitId":"nusE0726844"},"content":"    ObservableMap\u003cInteger, IdData\u003cAppointment\u003e\u003e getFilteredAppointmentMap();","lastModifiedDate":"2023-03-24"},{"lineNumber":348,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daitenshionyan":151,"slackernoob":39,"-":30,"nusE0726844":59,"francisyzy":69}},{"path":"src/main/java/seedu/vms/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParseResult;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.VmsParser;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":" * Represents the in-memory model of the patient manager data.","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    private final ObjectProperty\u003cIdData\u003cPatient\u003e\u003e detailedPatientProperty \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    private final ObjectProperty\u003cVaxType\u003e detailedVaccinationProperty \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    private final PatientManager patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    private final AppointmentManager appointmentManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    private final VaxTypeManager vaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"    private final KeywordManager keywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    private final FilteredIdDataMap\u003cPatient\u003e filteredPatientMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    private final FilteredMapView\u003cString, VaxType\u003e filteredVaxTypeMap;","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    private final FilteredIdDataMap\u003cAppointment\u003e filteredAppointmentMap;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"    private final VmsParser vmsParser;","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    private ObservableList\u003cVaxType\u003e vaxDisplayList \u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     * Initializes a ModelManager with the given patientManager and userPrefs.","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    public ModelManager(ReadOnlyPatientManager patientManager, VaxTypeManager vaxTypeManager,","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"slackernoob"},"content":"            AppointmentManager appointmentManager, KeywordManager keywordManager, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        requireAllNonNull(patientManager, vaxTypeManager, appointmentManager, userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        logger.fine(\"Initializing with patient manager: \" + patientManager + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        this.patientManager \u003d new PatientManager(patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        filteredPatientMap \u003d new FilteredIdDataMap\u003c\u003e(this.patientManager.getMapView());","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        this.appointmentManager \u003d new AppointmentManager(appointmentManager);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"        filteredAppointmentMap \u003d new FilteredIdDataMap\u003c\u003e(this.appointmentManager.getMapView());","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"slackernoob"},"content":"        this.keywordManager \u003d new KeywordManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        this.vaxTypeManager \u003d vaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        filteredVaxTypeMap \u003d new FilteredMapView\u003c\u003e(this.vaxTypeManager.asUnmodifiableObservableMap());","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"slackernoob"},"content":"        this.vmsParser \u003d new VmsParser();","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     * Convenience constructor to construct a {@code ModelManager} with an","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"     * empty {@code VaxTypeManager} and {@code AppointmentManager}.","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    public ModelManager(ReadOnlyPatientManager patientManager, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"slackernoob"},"content":"        this(patientManager, new VaxTypeManager(), new AppointmentManager(), new KeywordManager(), userPrefs);","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"slackernoob"},"content":"     * Convenience constructor to construct a {@code ModelManager} with an","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"slackernoob"},"content":"     * empty {@code PatientManager}, {@code VaxTypeManager}, {@code AppointmentManager},","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"slackernoob"},"content":"     * and {@code KeywordManager}.","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":100,"author":{"gitId":"slackernoob"},"content":"        this(new PatientManager(), new VaxTypeManager(), new AppointmentManager(),","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"slackernoob"},"content":"                new KeywordManager(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Parsing \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"    public ParseResult parseCommand(String userCommand) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"slackernoob"},"content":"        return vmsParser.parseCommand(userCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PatientManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManager(ReadOnlyPatientManager patientManager) {","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"        this.patientManager.resetData(patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"    public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        return patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"    public boolean hasPatient(int id) {","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"        return patientManager.contains(id);","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"    public void deletePatient(int id, boolean isForce) throws UnexpectedChangeException {","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        // change formation","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cPatient\u003e oldValue \u003d patientManager.get(id);","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        ValueChange\u003cIdData\u003cPatient\u003e\u003e change \u003d new ValueChange\u003c\u003e(oldValue, null);","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        // validation","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cIdData\u003cAppointment\u003e\u003e invalidAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        if (!isForce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"            invalidAppointments.addAll(validatePatientChange(change));","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        if (!invalidAppointments.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"            throw new UnexpectedChangeException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                    Messages.FORMAT_UNEXPECTED_APPOINTMENT_CHANGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"                    StringUtil.formatAppointmentListing(invalidAppointments)));","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        // deletion","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        patientManager.remove(id);","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        handlePatientChange(change);","lastModifiedDate":"2023-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"    public void resetPatientIds() {","lastModifiedDate":"2023-04-06"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        patientManager.resetIdCount();","lastModifiedDate":"2023-04-06"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cPatient\u003e newValue \u003d patientManager.add(patient);","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        handlePatientChange(new ValueChange\u003c\u003e(null, newValue));","lastModifiedDate":"2023-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"    public void setPatient(int id, Patient editedPatient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"        requireAllNonNull(editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"        ValueChange\u003cIdData\u003cPatient\u003e\u003e change \u003d patientManager.set(id, editedPatient);","lastModifiedDate":"2023-03-25"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"        handlePatientChange(change);","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"    public ObjectProperty\u003cIdData\u003cPatient\u003e\u003e detailedPatientProperty() {","lastModifiedDate":"2023-04-07"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"        return detailedPatientProperty;","lastModifiedDate":"2023-04-07"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"    public void setDetailedPatient(IdData\u003cPatient\u003e data) {","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"        detailedPatientProperty.set(data);","lastModifiedDate":"2023-04-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":206,"author":{"gitId":"nusE0726844"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"nusE0726844"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.add(appointment);","lastModifiedDate":"2023-03-07"},{"lineNumber":211,"author":{"gitId":"nusE0726844"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":214,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"nusE0726844"},"content":"    public void deleteAppointment(int id) {","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.remove(id);","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"nusE0726844"},"content":"    public void markAppointment(int id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.mark(id);","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"nusE0726844"},"content":"    public void unmarkAppointment(int id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.unmark(id);","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"nusE0726844"},"content":"    public void setAppointment(int id, Appointment editedAppointment) {","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"nusE0726844"},"content":"        requireAllNonNull(editedAppointment);","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.set(id, editedAppointment);","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"    public void setAppointmentManager(AppointmentManager manager) {","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"        appointmentManager.resetData(manager);","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cIdData\u003cAppointment\u003e\u003e validatePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"        return appointmentManager.validatePatientChange(change);","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"    public void handlePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-25"},{"lineNumber":251,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.handlePatientChange(change);","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"        updatePatientDetail(change);","lastModifiedDate":"2023-03-25"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cIdData\u003cAppointment\u003e\u003e validateVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"        return appointmentManager.validateVaccinationChange(change);","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"    public void handleVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-25"},{"lineNumber":264,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.handleVaccinationChange(change);","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"francisyzy"},"content":"        patientManager.handleVaccinationChange(change);","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"        updateVaccinationDetail(change);","lastModifiedDate":"2023-03-25"},{"lineNumber":267,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cPatient\u003e oldPatient \u003d detailedPatientProperty.get();","lastModifiedDate":"2023-04-07"},{"lineNumber":269,"author":{"gitId":"francisyzy"},"content":"        if (oldPatient \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"francisyzy"},"content":"            return;","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"francisyzy"},"content":"        IdData\u003cPatient\u003e newPatient \u003d patientManager.getMapView().get(oldPatient.getId());","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"francisyzy"},"content":"        ValueChange\u003cIdData\u003cPatient\u003e\u003e patientChange \u003d new ValueChange\u003c\u003e(oldPatient, newPatient);","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"francisyzy"},"content":"        updatePatientDetail(patientChange);","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d VaxTypeManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cVaxType\u003e addVaccination(VaxType vaxType) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeManager.add(vaxType);","lastModifiedDate":"2023-03-26"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"        ValueChange\u003cVaxType\u003e change \u003d new ValueChange\u003c\u003e(null, vaxType);","lastModifiedDate":"2023-03-26"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"        handleVaccinationChange(change);","lastModifiedDate":"2023-03-25"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"        return change;","lastModifiedDate":"2023-03-25"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cVaxType\u003e editVaccination(String name, VaxType newValue) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"        ValueChange\u003cVaxType\u003e change \u003d vaxTypeManager.set(name, newValue);","lastModifiedDate":"2023-03-26"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"        handleVaccinationChange(change);","lastModifiedDate":"2023-03-25"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"        return change;","lastModifiedDate":"2023-03-25"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cVaxType\u003e deleteVaccination(GroupName vaxName, boolean isForce)","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"                throws IllegalValueException, UnexpectedChangeException {","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"        // change formation","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"        VaxType oldValue \u003d vaxTypeManager.get(vaxName.toString())","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new IllegalValueException(String.format(","lastModifiedDate":"2023-03-14"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"                        \"Vaccination type does not exist: %s\", vaxName.toString())));","lastModifiedDate":"2023-03-14"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"        ValueChange\u003cVaxType\u003e change \u003d new ValueChange\u003c\u003e(oldValue, null);","lastModifiedDate":"2023-03-25"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"        // validation","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cIdData\u003cAppointment\u003e\u003e invalidAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"        if (!isForce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"            invalidAppointments.addAll(validateVaccinationChange(change));","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"daitenshionyan"},"content":"        if (!invalidAppointments.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"daitenshionyan"},"content":"            throw new UnexpectedChangeException(String.format(","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"daitenshionyan"},"content":"                    Messages.FORMAT_UNEXPECTED_APPOINTMENT_CHANGE,","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"daitenshionyan"},"content":"                    StringUtil.formatAppointmentListing(invalidAppointments)));","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"daitenshionyan"},"content":"        // deletion","lastModifiedDate":"2023-03-28"},{"lineNumber":316,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeManager.remove(vaxName.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":317,"author":{"gitId":"daitenshionyan"},"content":"        handleVaccinationChange(change);","lastModifiedDate":"2023-03-25"},{"lineNumber":318,"author":{"gitId":"daitenshionyan"},"content":"        return change;","lastModifiedDate":"2023-03-25"},{"lineNumber":319,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":320,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":322,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":323,"author":{"gitId":"daitenshionyan"},"content":"    public void setVaxTypeManager(VaxTypeManager manager) {","lastModifiedDate":"2023-03-18"},{"lineNumber":324,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeManager.resetData(manager);","lastModifiedDate":"2023-03-18"},{"lineNumber":325,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":326,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":327,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":328,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":329,"author":{"gitId":"daitenshionyan"},"content":"    public ObjectProperty\u003cVaxType\u003e detailedVaccinationProperty() {","lastModifiedDate":"2023-04-07"},{"lineNumber":330,"author":{"gitId":"daitenshionyan"},"content":"        return detailedVaccinationProperty;","lastModifiedDate":"2023-04-07"},{"lineNumber":331,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":332,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":333,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":334,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":335,"author":{"gitId":"daitenshionyan"},"content":"    public void setDetailedVaxType(VaxType vaxType) {","lastModifiedDate":"2023-03-25"},{"lineNumber":336,"author":{"gitId":"daitenshionyan"},"content":"        detailedVaccinationProperty.set(vaxType);","lastModifiedDate":"2023-04-07"},{"lineNumber":337,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":338,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":339,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":340,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":341,"author":{"gitId":"daitenshionyan"},"content":"    public void bindVaccinationDisplayList(ObservableList\u003cVaxType\u003e displayList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":342,"author":{"gitId":"daitenshionyan"},"content":"        this.vaxDisplayList \u003d FXCollections.unmodifiableObservableList(displayList);","lastModifiedDate":"2023-04-07"},{"lineNumber":343,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":344,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":345,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":346,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":347,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType getVaccination(Retriever\u003cString, VaxType\u003e retriever) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":348,"author":{"gitId":"daitenshionyan"},"content":"        return retriever.retrieve(vaxTypeManager.asUnmodifiableObservableMap(), vaxDisplayList);","lastModifiedDate":"2023-04-07"},{"lineNumber":349,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":350,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":351,"author":{"gitId":"slackernoob"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d KeywordManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":352,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":354,"author":{"gitId":"slackernoob"},"content":"    public void addKeyword(Keyword keyword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":355,"author":{"gitId":"slackernoob"},"content":"        keywordManager.add(keyword);","lastModifiedDate":"2023-03-23"},{"lineNumber":356,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":357,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":358,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":359,"author":{"gitId":"slackernoob"},"content":"    public Keyword deleteKeyword(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":360,"author":{"gitId":"slackernoob"},"content":"        Keyword deletedKeyword \u003d keywordManager.remove(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":361,"author":{"gitId":"slackernoob"},"content":"        return deletedKeyword;","lastModifiedDate":"2023-03-30"},{"lineNumber":362,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":363,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":364,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":365,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager getKeywordManager() {","lastModifiedDate":"2023-03-23"},{"lineNumber":366,"author":{"gitId":"slackernoob"},"content":"        return keywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":367,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":368,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":370,"author":{"gitId":"slackernoob"},"content":"    public void setKeywordManager(KeywordManager keywordManager) {","lastModifiedDate":"2023-03-23"},{"lineNumber":371,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":372,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":373,"author":{"gitId":"francisyzy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Patient List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":376,"author":{"gitId":"francisyzy"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2023-03-03"},{"lineNumber":377,"author":{"gitId":"francisyzy"},"content":"     * {@code versionedPatientManager}","lastModifiedDate":"2023-03-11"},{"lineNumber":378,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":380,"author":{"gitId":"francisyzy"},"content":"    public ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":381,"author":{"gitId":"francisyzy"},"content":"        return filteredPatientMap.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-03"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":385,"author":{"gitId":"francisyzy"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":387,"author":{"gitId":"francisyzy"},"content":"        filteredPatientMap.filter(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":390,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":391,"author":{"gitId":"francisyzy"},"content":"    public void setPatientFilters(Collection\u003cPredicate\u003cPatient\u003e\u003e filters) {","lastModifiedDate":"2023-03-25"},{"lineNumber":392,"author":{"gitId":"francisyzy"},"content":"        filteredPatientMap.filter(filters);","lastModifiedDate":"2023-03-25"},{"lineNumber":393,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":394,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":395,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered VaxType Map Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":396,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":397,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":398,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap() {","lastModifiedDate":"2023-03-04"},{"lineNumber":399,"author":{"gitId":"daitenshionyan"},"content":"        return filteredVaxTypeMap.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-23"},{"lineNumber":400,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":401,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":402,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":403,"author":{"gitId":"daitenshionyan"},"content":"    public void setVaccinationFilters(Collection\u003cPredicate\u003cVaxType\u003e\u003e filters) {","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"daitenshionyan"},"content":"        filteredVaxTypeMap.setFilters(filters);","lastModifiedDate":"2023-03-23"},{"lineNumber":405,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":406,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":407,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":408,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager getVaxTypeManager() {","lastModifiedDate":"2023-03-06"},{"lineNumber":409,"author":{"gitId":"daitenshionyan"},"content":"        return vaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":410,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":411,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":412,"author":{"gitId":"nusE0726844"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment Map Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":413,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":414,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":415,"author":{"gitId":"nusE0726844"},"content":"    public ObservableMap\u003cInteger, IdData\u003cAppointment\u003e\u003e getFilteredAppointmentMap() {","lastModifiedDate":"2023-03-14"},{"lineNumber":416,"author":{"gitId":"nusE0726844"},"content":"        return filteredAppointmentMap.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-14"},{"lineNumber":417,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":418,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":419,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":420,"author":{"gitId":"nusE0726844"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":421,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":422,"author":{"gitId":"nusE0726844"},"content":"        filteredAppointmentMap.filter(predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":423,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":424,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":425,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":426,"author":{"gitId":"nusE0726844"},"content":"    public void setAppointmentFilters(Collection\u003cPredicate\u003cAppointment\u003e\u003e filters) {","lastModifiedDate":"2023-03-29"},{"lineNumber":427,"author":{"gitId":"nusE0726844"},"content":"        filteredAppointmentMap.filter(filters);","lastModifiedDate":"2023-03-29"},{"lineNumber":428,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":429,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":430,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":431,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager getAppointmentManager() {","lastModifiedDate":"2023-03-13"},{"lineNumber":432,"author":{"gitId":"nusE0726844"},"content":"        return appointmentManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":433,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":434,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":435,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Misc methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":436,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":437,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":438,"author":{"gitId":"daitenshionyan"},"content":"    private void updateVaccinationDetail(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-25"},{"lineNumber":439,"author":{"gitId":"daitenshionyan"},"content":"        boolean isUpdated \u003d change.getOldValue()","lastModifiedDate":"2023-03-25"},{"lineNumber":440,"author":{"gitId":"daitenshionyan"},"content":"                .map(oldValue -\u003e oldValue.equals(detailedVaccinationProperty.get()))","lastModifiedDate":"2023-04-07"},{"lineNumber":441,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(false);","lastModifiedDate":"2023-03-25"},{"lineNumber":442,"author":{"gitId":"daitenshionyan"},"content":"        if (isUpdated || change.getNewValue().isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":443,"author":{"gitId":"daitenshionyan"},"content":"            detailedVaccinationProperty.set(change.getNewValue().orElse(null));","lastModifiedDate":"2023-04-07"},{"lineNumber":444,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":445,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":446,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":447,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":448,"author":{"gitId":"daitenshionyan"},"content":"    private void updatePatientDetail(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-25"},{"lineNumber":449,"author":{"gitId":"daitenshionyan"},"content":"        boolean isUpdated \u003d change.getOldValue()","lastModifiedDate":"2023-03-25"},{"lineNumber":450,"author":{"gitId":"daitenshionyan"},"content":"                .map(oldValue -\u003e oldValue.equals(detailedPatientProperty.get()))","lastModifiedDate":"2023-04-07"},{"lineNumber":451,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(false);","lastModifiedDate":"2023-03-25"},{"lineNumber":452,"author":{"gitId":"daitenshionyan"},"content":"        if (isUpdated || change.getNewValue().isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":453,"author":{"gitId":"daitenshionyan"},"content":"            detailedPatientProperty.set(change.getNewValue().orElse(null));","lastModifiedDate":"2023-04-07"},{"lineNumber":454,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":455,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":456,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":457,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":472,"author":{"gitId":"francisyzy"},"content":"        return patientManager.equals(other.patientManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":473,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":474,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 filteredPatientMap.asUnmodifiableObservableMap()","lastModifiedDate":"2023-03-03"},{"lineNumber":475,"author":{"gitId":"francisyzy"},"content":"                        .equals(other.filteredPatientMap.asUnmodifiableObservableMap());","lastModifiedDate":"2023-03-03"},{"lineNumber":476,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":477,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":478,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":479,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-21"},{"lineNumber":480,"author":{"gitId":"francisyzy"},"content":"        return filteredPatientMap.asUnmodifiableObservableMap().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":483,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":234,"slackernoob":40,"-":96,"nusE0726844":66,"francisyzy":47}},{"path":"src/main/java/seedu/vms/model/ReadOnlyStorageModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * Represents an unmodifiable view of a storage model.","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - the type of values being stored.","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public interface ReadOnlyStorageModel\u003cT\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an unmodifiable map view of the storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @return an unmodifiable map view of the storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e getMapView();","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"daitenshionyan":18}},{"path":"src/main/java/seedu/vms/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"daitenshionyan":2,"-":10}},{"path":"src/main/java/seedu/vms/model/StorageModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * Represents a storage model that manages and stores values that require an ID","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * identifier.","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - the type of values being stored.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public abstract class StorageModel\u003cT\u003e implements ReadOnlyStorageModel\u003cT\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private final IdDataMap\u003cT\u003e dataMap \u003d new IdDataMap\u003c\u003e();","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs an empty {@code StorageModel}. */","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public StorageModel() {}","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code StorageModel} with the same data mapping as the","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * reference given.","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param reference - the storage model to be copied.","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public StorageModel(ReadOnlyStorageModel\u003cT\u003e reference) {","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        this();","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        resetData(reference);","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d Data override methods","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * Clears and sets the value contents of this storage model to the given","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * collection of values.","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cp\u003eIDs are resetted and the values are ID-ed according the their order","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * in the collection given.","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * @param values - the value contents to replace to.","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public void setValues(Collection\u003cT\u003e values) {","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.setValues(values);","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * Clears and resets the data contents of this storage model to match that","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     * of the given storage model.","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cp\u003eThe IDs of the data in the given reference are preserved.","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * @param reference - the storage model to copy from.","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    public void resetData(ReadOnlyStorageModel\u003cT\u003e reference) {","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.setDatas(reference.getMapView().values());","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d Map methods","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if the specified ID has a mapped value.","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id to check.","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if there is a mapped value to the specified ID and","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    public boolean contains(int id) {","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.contains(id);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the specified value to the storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value to add.","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    public IdData\u003cT\u003e add(T value) {","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.add(value);","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the specified data to the storage. If there is already a value","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"     * mapped to the ID of the specified data, that value is replaced with the","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"     * given.","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     * @param data - the data to add.","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"    public IdData\u003cT\u003e add(IdData\u003cT\u003e data) {","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.add(data);","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the specified ID\u0027s value to the given value. If there is already a","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"     * mapping to the given ID, that ID associated value is replaced with the","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"     * given.","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id to set.","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value to set to.","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code value} is {@code null}.","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"     * @throws java.util.NoSuchElementException if there are no mappings to the","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"     *      specified id.","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cIdData\u003cT\u003e\u003e set(int id, T value) {","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(value);","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.set(id, value);","lastModifiedDate":"2023-03-25"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code IdData} that is mapped to the specified id.","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id of the {@code IdData} to return.","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code IdData} that is mapped to the specified id.","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"    public IdData\u003cT\u003e get(int id) {","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.get(id);","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"     * Removes the data associated with the specified ID.","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the ID of the data to remove.","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cIdData\u003cT\u003e\u003e remove(int id) {","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.remove(id);","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"     * Resets the ID count.","lastModifiedDate":"2023-04-06"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"    public void resetIdCount() {","lastModifiedDate":"2023-04-06"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.resetIdCount();","lastModifiedDate":"2023-04-06"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d ReadOnlyStorageModel overrides","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e getMapView() {","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.asUnmodifiableObservableMap();","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d Object class overrides","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.asUnmodifiableObservableMap().toString();","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof StorageModel)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"        StorageModel\u003c?\u003e castedOther \u003d (StorageModel\u003c?\u003e) other;","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.asUnmodifiableObservableMap()","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"                .equals(castedOther.dataMap.asUnmodifiableObservableMap());","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.hashCode();","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"daitenshionyan":188}},{"path":"src/main/java/seedu/vms/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        return guiSettings.equals(o.guiSettings);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(guiSettings);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":4,"-":68}},{"path":"src/main/java/seedu/vms/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":" * Represents an Appointment in the vaccine management system.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_START_TIME_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"            \"Start time must be after the current time\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_DURATION_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"            \"Start time must be before the end time\";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private final Index patientId;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    private final GroupName vaccine;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    private final boolean isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    public Appointment(Index patientId, LocalDateTime startTime, LocalDateTime endTime, GroupName vaccine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        requireAllNonNull(patientId, startTime, endTime, vaccine);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        AppUtil.checkArgument(isValidDuration(startTime, endTime), MESSAGE_DURATION_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        this.vaccine \u003d vaccine;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        isCompleted \u003d false;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public Appointment(Index patientId, LocalDateTime startTime, LocalDateTime endTime, GroupName vaccine,","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"                       Boolean isCompleted) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        requireAllNonNull(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        AppUtil.checkArgument(isValidDuration(startTime, endTime), MESSAGE_DURATION_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        this.vaccine \u003d vaccine;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    public LocalDateTime getAppointmentTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        return startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    public LocalDateTime getAppointmentEndTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        return endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public GroupName getVaccination() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        return vaccine;","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    public Appointment setVaccination(GroupName vaccine) {","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        return new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    public Index getPatient() {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        return patientId;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        return isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"     * Marks the appointment as completed.","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    public Appointment mark() {","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        assert !isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        return new Appointment(patientId, startTime, endTime, vaccine, true);","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"     * Unmarks the appointment as not completed.","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"    public Appointment unmark() {","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"        assert isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"        return new Appointment(patientId, startTime, endTime, vaccine, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"    public static boolean isInvalidAppointmentTime(LocalDateTime startTime) {","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"        return !startTime.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"    public static boolean isValidDuration(LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        return startTime.isBefore(endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"    public int compareTo(Appointment other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"        return startTime.compareTo(other.startTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"     * Returns true if both appointments have the same patient and data fields.","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"     * This defines a stronger notion of equality between two appointments.","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-21"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"            return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"            return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"        return otherAppointment.getPatient() \u003d\u003d (getPatient())","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 otherAppointment.getAppointmentTime().equals(getAppointmentTime())","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 otherAppointment.getAppointmentEndTime().equals(getAppointmentEndTime())","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 otherAppointment.getVaccination().equals(getVaccination())","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 (otherAppointment.isCompleted \u003d\u003d isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"        return Objects.hash(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"        return getPatient().getOneBased()","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"                + \" has an appointment at \"","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"                + startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"nusE0726844":144}},{"path":"src/main/java/seedu/vms/model/appointment/AppointmentBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * A factory class to create, rename or edit {@link Appointment} to its set","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" * {@link AppointmentManager}.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private static final String MESSAGE_DUPLICATE_TYPE \u003d \"Appointment already exist\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private static final String MESSAGE_MISSING_TYPE \u003d \"Appointment does not exist\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    private final Index refId;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private final Index patientId;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    private final GroupName vaccine;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    private final Boolean isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    private AppointmentBuilder(Index refId, Index patientId, LocalDateTime startTime,","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"                               LocalDateTime endTime, GroupName vaccine, Boolean isCompleted) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        this.refId \u003d refId;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        this.vaccine \u003d vaccine;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"     * Factory method to create a {@code AppointmentBuilder}.","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * @param refId - the patient id of the existing appointment to build","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     *      from.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     * @param patientId - the patient id of the {@code Appointment} to create.","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    public static AppointmentBuilder of(Index refId, Index patientId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        return new AppointmentBuilder(refId, patientId,","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"                null, null, null, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     * Factory method to create a {@code AppointmentBuilder} without a reference.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"     * @param patientId - the patient id of the {@code Appointment} to create.","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    public static AppointmentBuilder of(Index patientId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        return AppointmentBuilder.of(patientId, patientId);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentBuilder setPatientId(Index patientId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        return new AppointmentBuilder(refId, patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentBuilder setStartTime(LocalDateTime startTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        return new AppointmentBuilder(refId, patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentBuilder setEndTime(LocalDateTime endTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        return new AppointmentBuilder(refId, patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentBuilder setVaccine(GroupName vaccine) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        return new AppointmentBuilder(refId, patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentBuilder setStatus(Boolean isCompleted) {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        return new AppointmentBuilder(refId, patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"     * Builds the vaccination type and adds it to the specified","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"     * {@code VaxTypeManager}.","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"     * @return the built {@code VaxType}.","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"     * @throws IllegalValueException if the appointment might be replaced.","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"    public Appointment create(AppointmentManager manager) throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        if (manager.contains(refId.getZeroBased()) || manager.contains(patientId.getZeroBased())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(MESSAGE_DUPLICATE_TYPE);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"        return build(manager);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"     * Builds and updates the vaccination type in the specified","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"     * {@code VaxTypeManager}.","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"     * @return the built {@code VaxType}.","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"     * @throws IllegalValueException if the reference vaccination is not","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"     *      present or if the vaccination type is being renamed to one that","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"     *      already exists.","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"    public Appointment update(AppointmentManager manager) throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"        if (!manager.contains(refId.getZeroBased())","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"                    || (!refId.equals(patientId) \u0026\u0026 manager.contains(patientId.getZeroBased()))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(MESSAGE_MISSING_TYPE);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"        return build(manager);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"    private Appointment build(AppointmentManager manager) throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"        manager.add(appointment);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"        return appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nusE0726844":118}},{"path":"src/main/java/seedu/vms/model/appointment/AppointmentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.StorageModel;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":" * Wraps all data at the patient-manager level","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":" * Duplicates are not allowed (by .isSameAppointment comparison)","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"public class AppointmentManager extends StorageModel\u003cAppointment\u003e implements ReadOnlyAppointmentManager {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     * Constructs an empty {@code AppointmentManager}.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     * Creates an AppointmentManager using the appointments in the {@code toBeCopied}","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager(ReadOnlyAppointmentManager toBeCopied) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        super(toBeCopied);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * Marks the appointment at the given id as completed.","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * The appointment must exist in the appointment manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    public void mark(int id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointment \u003d getMapView().get(id).getValue().mark();","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        set(id, appointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     * Unmarks the appointment at the given id as not completed.","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     * The appointment must exist in the appointment manager.","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    public void unmark(int id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointment \u003d getMapView().get(id).getValue().unmark();","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        set(id, appointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"     * Removes all invalid appointments and returns the list of deleted.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    public List\u003cIdData\u003cAppointment\u003e\u003e validate(ReadOnlyPatientManager patientManager, VaxTypeManager vaxTypeManager) {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cInteger\u003e validPatients \u003d new HashSet\u003c\u003e(patientManager","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                .getMapView()","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                .keySet());","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cString\u003e validVaxs \u003d new HashSet\u003c\u003e(vaxTypeManager","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                .asUnmodifiableObservableMap()","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                .keySet());","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cIdData\u003cAppointment\u003e\u003e invalidAppointments \u003d getMapView().entrySet().stream()","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                .map(entry -\u003e entry.getValue())","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                .filter(entry -\u003e !validPatients.contains(entry.getValue().getPatient().getZeroBased())","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                        || !validVaxs.contains(entry.getValue().getVaccination().getName()))","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        for (IdData\u003cAppointment\u003e appointment : invalidAppointments) {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            remove(appointment.getId());","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        return invalidAppointments;","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"     * Validates patient changes in AppointmentManager.","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"     * Does not delete.","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"    public List\u003cIdData\u003cAppointment\u003e\u003e validatePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        List\u003cIdData\u003cAppointment\u003e\u003e invalidAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        if (!change.getOldValue().equals(change.getNewValue())","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 change.getOldValue().isPresent()","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 change.getNewValue().isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"            Index patientToDelete \u003d Index.fromZeroBased(change.getOldValue().get().getId());","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"            getMapView().entrySet().stream()","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"                    .filter(x-\u003ex.getValue().getValue().getPatient().equals(patientToDelete))","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"                    .forEach(x-\u003einvalidAppointments.add(x.getValue()));","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"        return invalidAppointments;","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"     * Handles patient changes in AppointmentManager.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"    public void handlePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        if (!change.getOldValue().equals(change.getNewValue())","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 change.getOldValue().isPresent()","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 change.getNewValue().isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"            List\u003cIdData\u003cAppointment\u003e\u003e invalidAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"            Index patientToDelete \u003d Index.fromZeroBased(change.getOldValue().get().getId());","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"            getMapView().entrySet().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"                    .filter(x-\u003ex.getValue().getValue().getPatient().equals(patientToDelete))","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"                    .forEach(x-\u003einvalidAppointments.add(x.getValue()));","lastModifiedDate":"2023-04-03"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"            invalidAppointments.forEach(x-\u003eremove(x.getId()));","lastModifiedDate":"2023-04-03"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"     * Validates vaccination changes in AppointmentManager.","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"     * Does not delete.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"    public List\u003cIdData\u003cAppointment\u003e\u003e validateVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"        List\u003cIdData\u003cAppointment\u003e\u003e invalidAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"        if (!change.getOldValue().equals(change.getNewValue())","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 change.getOldValue().isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"            GroupName vaxToChange \u003d change.getOldValue().get().getGroupName();","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"            getMapView().entrySet().stream()","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"                    .filter(x-\u003ex.getValue().getValue().getVaccination().equals(vaxToChange))","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"                    .forEach(x-\u003einvalidAppointments.add(x.getValue()));","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"        return invalidAppointments;","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"     * Handles vaccination changes in AppointmentManager.","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"    public void handleVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"        if (!change.getOldValue().equals(change.getNewValue())","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 change.getOldValue().isPresent()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"            List\u003cIdData\u003cAppointment\u003e\u003e invalidAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"            GroupName vaxToChange \u003d change.getOldValue().get().getGroupName();","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"            getMapView().entrySet().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"                    .filter(x-\u003ex.getValue().getValue().getVaccination().equals(vaxToChange))","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"                    .forEach(x-\u003einvalidAppointments.add(x.getValue()));","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"            if (change.getNewValue().isPresent()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"                // update","lastModifiedDate":"2023-04-03"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"                GroupName vaxToEdit \u003d change.getNewValue().get().getGroupName();","lastModifiedDate":"2023-04-03"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"                invalidAppointments.forEach(x-\u003eset(x.getId(), x.getValue().setVaccination(vaxToEdit)));","lastModifiedDate":"2023-04-03"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"            } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"                // delete","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"                invalidAppointments.forEach(x-\u003eremove(x.getId()));","lastModifiedDate":"2023-04-03"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":15,"nusE0726844":135,"francisyzy":1}},{"path":"src/main/java/seedu/vms/model/appointment/ReadOnlyAppointmentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.ReadOnlyStorageModel;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":" * A {@code ReadOnlyStorageModel} of {@code Appointment}.","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" * \u003cp\u003eInterface does not add any new methods but acts as a marker of a read","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * only appointment storage model.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"public interface ReadOnlyAppointmentManager extends ReadOnlyStorageModel\u003cAppointment\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nusE0726844":13}},{"path":"src/main/java/seedu/vms/model/appointment/predicates/EndTimePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment.predicates;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Tests that the given time is not before the {@code Appointment}\u0027s ending time.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class EndTimePredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    public EndTimePredicate(LocalDateTime endTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        return !endTime.isBefore(appointment.getAppointmentEndTime());","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof EndTimePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"                        \u0026\u0026 endTime.equals(((EndTimePredicate) other).endTime)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"nusE0726844":30}},{"path":"src/main/java/seedu/vms/model/appointment/predicates/IndexPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment.predicates;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Tests that a {@code Appointment}\u0027s patient id matches the patient id given.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class IndexPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private final Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    public IndexPredicate(Index index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        return appointment.getPatient().equals(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof IndexPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 index.equals(((IndexPredicate) other).index)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"nusE0726844":30}},{"path":"src/main/java/seedu/vms/model/appointment/predicates/StartTimePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment.predicates;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Tests that the given time is not after the {@code Appointment}\u0027s starting time.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class StartTimePredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"    public StartTimePredicate(LocalDateTime startTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        return !startTime.isAfter(appointment.getAppointmentTime());","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof StartTimePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"                        \u0026\u0026 startTime.equals(((StartTimePredicate) other).startTime)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"nusE0726844":30}},{"path":"src/main/java/seedu/vms/model/appointment/predicates/VaccineContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment.predicates;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":" * Tests that a {@code Appointment}\u0027s {@code Vaccine} matches any of the keywords given.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"public class VaccineContainsKeywordsPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"     * Creates a Predicate that takes in groupNames that will be converted to a list of keywords to match","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     * @param groupNames","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    public VaccineContainsKeywordsPredicate(Set\u003cGroupName\u003e groupNames) {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        this.keywords \u003d groupNames.stream().map(GroupName::toString).collect(Collectors.toList());","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        return StringUtil.isMatching(appointment.getVaccination().toString(), keywords);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof VaccineContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 keywords.equals(((VaccineContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"nusE0726844":39}},{"path":"src/main/java/seedu/vms/model/keyword/AppointmentKeyword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.model.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":" * Represents an AppointmentKeyword in the vaccine management system.","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"public class AppointmentKeyword extends Keyword {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    private static final String MAIN_KEY_NAME \u003d \"appointment\";","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    public AppointmentKeyword(String keyword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"        super(keyword, MAIN_KEY_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":13}},{"path":"src/main/java/seedu/vms/model/keyword/Keyword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.model.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":" * Represents an Keyword in the vaccine management system.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"public class Keyword {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    public static final String MAIN_APPOINTMENT_STRING \u003d \"appointment\";","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"    public static final String MAIN_BASIC_STRING \u003d \"basic\";","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    public static final String MAIN_EXIT_STRING \u003d \"exit\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"    public static final String MAIN_HELP_STRING \u003d \"help\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"    public static final String MAIN_KEYWORD_STRING \u003d \"keyword\";","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"    public static final String MAIN_PATIENT_STRING \u003d \"patient\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    public static final String MAIN_VACCINATION_STRING \u003d \"vaccination\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    private final String mainKeyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"     * Both fields must be present and not null.","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"    public Keyword(String mainKeyword, String keyword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"        this.keyword \u003d Objects.requireNonNull(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"        this.mainKeyword \u003d Objects.requireNonNull(mainKeyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"    public String getKeyword() {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"        return this.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"    public String getMainKeyword() {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        return this.mainKeyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"     * Method to check if the main keyword is valid.","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"     * @param word - the word to check.","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"     * @return {@code true} if the keyword meets the requirements and","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"    public static boolean isValidMainKeyword(String word) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"        assert word !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"        switch (word) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_PATIENT_STRING):","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_APPOINTMENT_STRING):","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_VACCINATION_STRING):","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"slackernoob"},"content":"     * Method to check if the keyword is not a main keyword.","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"slackernoob"},"content":"     * @param word - the word to check.","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"slackernoob"},"content":"     * @return {@code true} if the keyword does not meet the requirements and","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"slackernoob"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"slackernoob"},"content":"    public static boolean isNotMainKeyword(String word) {","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"slackernoob"},"content":"        assert word !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"slackernoob"},"content":"        switch (word) {","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_PATIENT_STRING):","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_APPOINTMENT_STRING):","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_VACCINATION_STRING):","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_BASIC_STRING):","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_EXIT_STRING):","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_HELP_STRING):","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"slackernoob"},"content":"        case (MAIN_KEYWORD_STRING):","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"slackernoob"},"content":"        default:","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"slackernoob"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"slackernoob"},"content":"    public String toString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"slackernoob"},"content":"        return keyword + \"--\u003e\" + mainKeyword;","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":101}},{"path":"src/main/java/seedu/vms/model/keyword/KeywordManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.model.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":" * A manager to handle {@code Keyword}.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"public class KeywordManager {","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"    private static HashMap\u003cString, Keyword\u003e keywordMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"     * Constructs an empty {@code KeywordManager}.","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager() {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"        keywordMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"     * Adds a keyword mapping to the keyword map.","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"     * @param keyword Keyword object to be added.","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"    public void add(Keyword keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"        keywordMap.put(keyword.getKeyword(), keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"     * Removes a keyword mapping in the keyword map.","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"     * @param keyword String of keyword to be removed.","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"    public Keyword remove(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"        Keyword keywordKeyword \u003d keywordMap.get(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        keywordMap.remove(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"        return keywordKeyword;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"    public String getKeyword(String keywordString) {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"        if (!keywordMap.containsKey(keywordString)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"            return keywordString;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"        return keywordMap.get(keywordString).getMainKeyword();","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"    public HashMap\u003cString, Keyword\u003e getKeywordMap() {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"        return keywordMap;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"     * Check if existing mapping exists for given keyword.","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"     * @param keyword Keyword string to be checked.","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"     * @return True if existing mapping exists else false.","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"    public static boolean existingMappingExists(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"        if (keywordMap.containsKey(keyword)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":61}},{"path":"src/main/java/seedu/vms/model/keyword/PatientKeyword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.model.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":" * Represents an PatientKeyword in the vaccine management system.","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"public class PatientKeyword extends Keyword {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    private static final String MAIN_KEY_NAME \u003d \"patient\";","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    public PatientKeyword(String keyword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"        super(keyword, MAIN_KEY_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":13}},{"path":"src/main/java/seedu/vms/model/keyword/VaccinationKeyword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.model.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":" * Represents a VaccinationKeyword in the vaccine management system.","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"public class VaccinationKeyword extends Keyword {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"    private static final String MAIN_KEY_NAME \u003d \"vaccination\";","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"    public VaccinationKeyword(String keyword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"        super(keyword, MAIN_KEY_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":13}},{"path":"src/main/java/seedu/vms/model/patient/BloodType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient\u0027s bloodType in VMS.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBloodType(String)}","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class BloodType {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"     * Blood type enum to ensure only valid blood types are recorded.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * It cannot be saved as \"O-\" as trailing symbols are not valid var names.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public enum BloodTypes {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        oMinus(\"O-\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"        oPlus(\"O+\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        aMinus(\"A-\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        aPlus(\"A+\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        bMinus(\"B-\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        bPlus(\"B+\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        abMinus(\"AB-\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        abPlus(\"AB+\");","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        private final String representation;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        BloodTypes(String representation) {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            this.representation \u003d representation;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        public String getRepresentation() {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            return representation;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"         * Turns a String into a enum type","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"         * @param representation of what the user will view blood type as.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"         * @return Enum value of the matched string representation","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        public static BloodTypes fromRepresentation(String representation) {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            for (BloodTypes i : BloodTypes.values()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"                if (i.representation.equals(representation.toUpperCase())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"                    return i;","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"                }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalArgumentException(\"Bloodtype \" + BloodTypes.class.getCanonicalName()","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"                    + \" with representation \" + representation + \" found\");","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"BloodType can only be A+, A-, B+, B-, AB+, AB-, O+, O-\";","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    /*","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * The first character of the bloodType must not be a whitespace,","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    public final BloodTypes value;","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     * Constructs an {@code BloodType}.","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * @param bloodType A valid bloodType.","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    public BloodType(String bloodType) {","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        checkArgument(isValidBloodType(bloodType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        value \u003d BloodTypes.fromRepresentation(bloodType);","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a given string is a valid blood type.","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidBloodType(String test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"            BloodTypes.fromRepresentation(test);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        return value.getRepresentation();","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof BloodType // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 value.equals(((BloodType) other).value)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"francisyzy":100}},{"path":"src/main/java/seedu/vms/model/patient/Dob.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.ParserUtil.parseDate;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient\u0027s dob in the dob book.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" * It is represented as LocalDateTime with the time set to 0000.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDob(String)}","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"public class Dob {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        \"Date of birth can take any date earlier than today, and it should not be blank\";","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Constructs an {@code Dob}.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param dob A valid date of birth.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    public Dob(String dob) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(dob);","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        checkArgument(isValidDob(dob), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            value \u003d parseDate(dob);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * Constructs an {@code Dob}.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     * @param dob A valid date of birth.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    public Dob(LocalDateTime dob) {","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(dob);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime cleanDob \u003d LocalDateTime.of(dob.getYear(), dob.getMonthValue(), dob.getDayOfMonth(), 0, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        checkArgument(isValidDob(cleanDob), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        value \u003d cleanDob;","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a given string is a valid date that is before than today","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidDob(String test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime testDate;","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            testDate \u003d parseDate(test);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        return testDate.isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a given string is a valid date that is before than today","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidDob(LocalDateTime test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        return test.isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        return value.format(ISO_LOCAL_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof Dob // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 value.equals(((Dob) other).value)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"francisyzy":88}},{"path":"src/main/java/seedu/vms/model/patient/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient\u0027s name in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":3,"-":55}},{"path":"src/main/java/seedu/vms/model/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" * Guarantees: details are present and not null,","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":" * field values are validated,","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":" * immutable.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"public class Patient {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public static final int LIMIT_ALLERGIES \u003d 100;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public static final int LIMIT_VACCINES \u003d 30;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    private static final String FORMAT_IVE_MESSAGE \u003d \"The following patient constraints have been violated\\n%s\";","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_ALLERGIES_CONSTRAINTS \u003d String","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            .format(\"Only a maximum of %d allergies are allowed\", LIMIT_ALLERGIES);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_VACCINES_CONSTRAINTS \u003d String","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"            .format(\"Only a maximum of %d vaccines are allowed\", LIMIT_VACCINES);","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    private final Dob dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    // Medical fields","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    private final BloodType bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    private final Set\u003cGroupName\u003e allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    private final Set\u003cGroupName\u003e vaccines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public Patient(Name name, Phone phone, Dob dob, BloodType bloodType, Set\u003cGroupName\u003e allergies,","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            Set\u003cGroupName\u003e vaccines) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        requireAllNonNull(name, phone, dob, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        AppUtil.checkArgument(AppUtil.isWithinLimit(allergies, LIMIT_ALLERGIES), MESSAGE_ALLERGIES_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        AppUtil.checkArgument(AppUtil.isWithinLimit(vaccines, LIMIT_VACCINES), MESSAGE_VACCINES_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        this.dateOfBirth \u003d dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        this.allergies.addAll(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        this.vaccines.addAll(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    public Dob getDob() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        return dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    public BloodType getBloodType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        return bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"     * Returns an immutable allergies set,","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"     * which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    public Set\u003cGroupName\u003e getAllergy() {","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        return Collections.unmodifiableSet(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"     * Returns an immutable vaccine set,","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"     * which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    public Set\u003cGroupName\u003e getVaccine() {","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        return Collections.unmodifiableSet(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"     * Returns an immutable allergies set,","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"     * which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"    public Set\u003cString\u003e getAllergyAsString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        Set\u003cString\u003e allergyStrings \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        for (GroupName allergy : allergies) {","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"            allergyStrings.add(allergy.toString());","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        return Collections.unmodifiableSet(allergyStrings);","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"     * Returns an immutable vaccine set,","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"     * which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"    public Set\u003cString\u003e getVaccineAsString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        Set\u003cString\u003e vaccineStrings \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        for (GroupName vaccine : vaccines) {","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"            vaccineStrings.add(vaccine.toString());","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        return Collections.unmodifiableSet(vaccineStrings);","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"    public Patient setVaccination(Set\u003cGroupName\u003e updatedVaccines) {","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        return new Patient(name, phone, dateOfBirth, bloodType, allergies, updatedVaccines);","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"     * Returns true if both patients have the same name.","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"     * Validates the parameters and returns the error message if there are any violations","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"     * @param allergies","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"     * @param vaccines","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"     * @return Optional String that contains the errors","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"    public static Optional\u003cString\u003e validateParams(Optional\u003cSet\u003cGroupName\u003e\u003e allergies,","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"            Optional\u003cSet\u003cGroupName\u003e\u003e vaccines) {","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"        ArrayList\u003cString\u003e errMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"        if (allergies.isPresent() \u0026\u0026 !AppUtil.isWithinLimit(allergies.get(), Patient.LIMIT_ALLERGIES)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"            errMessages.add(Patient.MESSAGE_ALLERGIES_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"        if (vaccines.isPresent() \u0026\u0026 !AppUtil.isWithinLimit(vaccines.get(), Patient.LIMIT_VACCINES)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"            errMessages.add(Patient.MESSAGE_VACCINES_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"        if (errMessages.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"        return Optional.ofNullable(StringUtil.formatErrorMessage(errMessages, FORMAT_IVE_MESSAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"     * Returns true if both patients have the same identity and data fields.","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"        return otherPatient.getName().equals(getName())","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getDob().equals(getDob())","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getBloodType().equals(getBloodType())","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getAllergy().equals(getAllergy())","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getVaccine().equals(getVaccine());","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"        return Objects.hash(name,","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"                phone,","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"                dateOfBirth,","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"                bloodType,","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"                allergies,","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"                vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"        builder.append(getName());","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":144,"-":57}},{"path":"src/main/java/seedu/vms/model/patient/PatientManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.StorageModel;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Wraps all data at the patient-manager level","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Duplicates are not allowed (by .isSamePatient comparison)","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class PatientManager extends StorageModel\u003cPatient\u003e implements ReadOnlyPatientManager {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    public PatientManager() {}","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Creates an PatientManager using the Patients in the {@code toBeCopied}","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public PatientManager(ReadOnlyPatientManager toBeCopied) {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        super(toBeCopied);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * Handles vaccination changes in PatientManager.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public void handleVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        if (!change.getOldValue().equals(change.getNewValue())","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 change.getOldValue().isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"            if (change.getNewValue().isPresent()) { // update","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"                GroupName vaxGroupNameOld \u003d change.getOldValue().get().getGroupName();","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"                String vaxNameOld \u003d change.getOldValue().get().getName();","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"                String vaxNameNew \u003d change.getNewValue().get().getName();","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                getMapView().entrySet().stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                        .filter(patient -\u003e patient.getValue().getValue().getVaccine().contains(vaxGroupNameOld))","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                        .forEach(patient -\u003e set(patient.getKey(),","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                                patient.getValue().getValue()","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                                        .setVaccination(updateGroupName(patient.getValue().getValue().getVaccine(),","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"                                                vaxNameOld, vaxNameNew))));","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    private static Set\u003cGroupName\u003e updateGroupName(Set\u003cGroupName\u003e groupNames, String oldName, String newName) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e updatedGroupNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        for (GroupName groupName : groupNames) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            if (groupName.getName().equals(oldName)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"                GroupName updatedGroupName \u003d new GroupName(newName);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"                updatedGroupNames.add(updatedGroupName);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"                updatedGroupNames.add(groupName);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        return updatedGroupNames;","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"francisyzy":59}},{"path":"src/main/java/seedu/vms/model/patient/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient\u0027s phone number in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":2,"-":50}},{"path":"src/main/java/seedu/vms/model/patient/ReadOnlyPatientManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyStorageModel;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * A {@code ReadOnlyStorageModel} of {@code Patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * \u003cp\u003eInterface does not add any new methods but acts as a marker of a read","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * only patient storage model.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public interface ReadOnlyPatientManager extends ReadOnlyStorageModel\u003cPatient\u003e {}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":3,"francisyzy":4,"-":4}},{"path":"src/main/java/seedu/vms/model/patient/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":" * Signals that the operation will result in duplicate Patients (Patients are","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":" * considered duplicates if they have the same identity).","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"public class DuplicatePatientException extends RuntimeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"        super(\"Operation would result in duplicate patients\");","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":11}},{"path":"src/main/java/seedu/vms/model/patient/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"public class PatientNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":6}},{"path":"src/main/java/seedu/vms/model/patient/predicates/AllergyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.predicates;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Tests that a {@code Patient}\u0027s {@code Allergy} matches any of the keywords given.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class AllergyContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Creates a Predicate that takes in groupNames that will be converted to a list of keywords to match","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param groupNames","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public AllergyContainsKeywordsPredicate(Set\u003cGroupName\u003e groupNames) {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        this.keywords \u003d groupNames.stream().map(GroupName::toString).collect(Collectors.toList());","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        return patient.getAllergyAsString().stream()","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"                .anyMatch(allergy -\u003e StringUtil.isMatching(allergy, keywords));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof AllergyContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 keywords.equals(((AllergyContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"francisyzy":40}},{"path":"src/main/java/seedu/vms/model/patient/predicates/BloodTypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.predicates;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Tests that a {@code Patient}\u0027s {@code BloodType} matches the bloodType given.","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class BloodTypePredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private final BloodType bloodType;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    public BloodTypePredicate(BloodType bloodType) {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        return bloodType.equals(patient.getBloodType());","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof BloodTypePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 bloodType.equals(((BloodTypePredicate) other).bloodType)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"francisyzy":30}},{"path":"src/main/java/seedu/vms/model/patient/predicates/DobPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.predicates;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Tests that a {@code Patient}\u0027s {@code Dob} matches the dob given.","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class DobPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private final Dob dob;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    public DobPredicate(Dob dob) {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        return dob.equals(patient.getDob());","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof DobPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 dob.equals(((DobPredicate) other).dob)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"francisyzy":30}},{"path":"src/main/java/seedu/vms/model/patient/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.predicates;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        return StringUtil.isMatching(patient.getName().toString(), keywords);","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":6,"-":24}},{"path":"src/main/java/seedu/vms/model/patient/predicates/PhoneNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.predicates;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Tests that a {@code Patient}\u0027s {@code Phone} matches the phone given.","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class PhoneNumberPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    private final Phone phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    public PhoneNumberPredicate(Phone phone) {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        return phone.equals(patient.getPhone());","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof PhoneNumberPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 phone.equals(((PhoneNumberPredicate) other).phone)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"francisyzy":30}},{"path":"src/main/java/seedu/vms/model/patient/predicates/VaccineContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.predicates;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Tests that a {@code Patient}\u0027s {@code Vaccine} matches any of the keywords given.","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class VaccineContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     * Creates a Predicate that takes in groupNames that will be converted to a list of keywords to match","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param groupNames","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public VaccineContainsKeywordsPredicate(Set\u003cGroupName\u003e groupNames) {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        this.keywords \u003d groupNames.stream().map(GroupName::toString).collect(Collectors.toList());","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        return patient.getVaccineAsString().stream()","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"                .anyMatch(vaccine -\u003e StringUtil.isMatching(vaccine, keywords));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof VaccineContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 keywords.equals(((VaccineContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"francisyzy":40}},{"path":"src/main/java/seedu/vms/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * Contains utility methods for populating {@code PatientManager} with sample data.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        return new Patient[] {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"87438807\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1983-12-23\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"A+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(),","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet(\"Dose 1 (Moderna)\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"99272758\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"2001-03-12\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"B+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(\"seafood\", \"gluten\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet()),","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"93210283\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1997-04-05\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"B-\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(\"gluten\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet(\"Dose 1 (Novavax)\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"David Li\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"91031282\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1999-07-12\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"AB-\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(\"dustmite\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet()),","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"92492021\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1979-09-23\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"AB+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(\"cathair\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet(\"Dose 1 (Pfizer)\")),","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"92624417\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1995-05-29\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"O+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(),","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet())","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    public static ReadOnlyPatientManager getSamplePatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        PatientManager sampleAb \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        for (Patient samplePatient : getSamplePatients()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"            sampleAb.add(samplePatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     * Returns a allergy set containing the list of strings given.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    public static Set\u003cGroupName\u003e getAllergySet(String... strings) {","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"                .map(GroupName::new)","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     * Returns a vaccine set containing the list of strings given.","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    public static Set\u003cGroupName\u003e getVaccineSet(String... strings) {","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"                .map(GroupName::new)","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"daitenshionyan":1,"-":17,"francisyzy":69}},{"path":"src/main/java/seedu/vms/model/vaccination/ReadOnlyVaxTypeManage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" * Represents a vax type manager that supports only read functionalities.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public interface ReadOnlyVaxTypeManage {","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code VaxType} mapped to the specified name wrapped in an","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional}. If there are no mappings to the specified name,","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional.empty} is returned instead.","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the {@code VaxType} to get.","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code VaxType} mapped to the specified name wrapped in an","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Optional}.","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cVaxType\u003e get(String name);","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if the manager contains a mapping to the specified name.","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the {@code VaxType} to check.","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the manager contains a mapping to the","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *      specified name and {@code false} otherwise.","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public boolean contains(String name);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the number of mappings the manager has.","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     * @return the number of mappings the manager has.","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public int size();","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if this manager is empty.","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @returns {@code true} if the manager is empty and {@code false}","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     *      otherwise.","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public boolean isEmpty();","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an unmodifiable map view of this manager.","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * @return an unmodifiable map view of this manager.","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e asUnmodifiableObservableMap();","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"daitenshionyan":57}},{"path":"src/main/java/seedu/vms/model/vaccination/Requirement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.BiPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** Represents a vaccination requirement. */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class Requirement {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"            \"Requirement set cannot be empty and must have no more than 30 elements\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final int LIMIT \u003d 30;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final RequirementType reqType;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private final HashSet\u003cGroupName\u003e reqSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxRequirement}.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param reqType - the requirement type.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param reqSet - the requirement set.","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code reqType} is {@code null}.","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalArgumentException if {@code reqSet} is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public Requirement(RequirementType reqType, HashSet\u003cGroupName\u003e reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(reqType);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(reqSet);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        AppUtil.checkArgument(isValidReqSet(reqSet), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this.reqType \u003d reqType;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        this.reqSet \u003d new HashSet\u003c\u003e(reqSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValidReqSet(HashSet\u003cGroupName\u003e reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        return !reqSet.isEmpty() \u0026\u0026 reqSet.size() \u003c\u003d LIMIT;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * Checks if the given set satisfies the requirements.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * @param grpSet - the group set to check for.","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public boolean check(HashSet\u003cGroupName\u003e grpSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        return reqType.check(reqSet, grpSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public RequirementType getReqType() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        return reqType;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    public HashSet\u003cGroupName\u003e getReqSet() {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        return new HashSet\u003c\u003e(reqSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * Returns a copy of this requirement. Changes to one will not affect","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     * the other.","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * @return a copy of this requirement.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    public Requirement copy() {","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        return new Requirement(reqType, reqSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     * Returns a copy of the given list of {@code VaxRequirements}. Returned","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     * list is immutable and changes to the original will not be reflected in","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"     * the copy.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     * @param reqs - the list of requirements to copy.","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     * @return a copy of the specified list.","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if list given is {@code null}.","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cRequirement\u003e copy(List\u003cRequirement\u003e reqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        return reqs.stream()","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                .map(req -\u003e req.copy())","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof Requirement)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        Requirement casted \u003d (Requirement) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        return reqType \u003d\u003d casted.reqType \u0026\u0026 reqSet.equals(casted.reqSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(reqType, reqSet);","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"    /** Represents the type of a vaccination requirement. */","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"    public static enum RequirementType {","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        /** Ensures all elements in the required set are present. */","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        ALL(RequirementType::checkAll),","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        /** Ensures that at least one element in the required set is present. */","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        ANY(RequirementType::checkAny),","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        /** Ensures that no elements in the required set are present. */","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        NONE(RequirementType::checkNone);","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        private final BiPredicate\u003cHashSet\u003cGroupName\u003e, HashSet\u003cGroupName\u003e\u003e checker;","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"        private RequirementType(BiPredicate\u003cHashSet\u003cGroupName\u003e, HashSet\u003cGroupName\u003e\u003e checker) {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"            this.checker \u003d checker;","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        private boolean check(HashSet\u003cGroupName\u003e reqSet, HashSet\u003cGroupName\u003e checkingSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"            return checker.test(reqSet, checkingSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        private static boolean checkAll(HashSet\u003cGroupName\u003e reqSet, HashSet\u003cGroupName\u003e checkingSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"            for (GroupName grp : reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"                if (!checkingSet.contains(grp)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"                    return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        private static boolean checkAny(HashSet\u003cGroupName\u003e reqSet, HashSet\u003cGroupName\u003e checkingSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"            for (GroupName grp : reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"                if (checkingSet.contains(grp)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"                    return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"            // reqSet is assumed to always NOT be empty","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"        private static boolean checkNone(HashSet\u003cGroupName\u003e reqSet, HashSet\u003cGroupName\u003e checkingSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"            return !checkAny(reqSet, checkingSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":165}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * A utility class to check if a patient meets the requirements to take a","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * vaccination.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class VaxChecker {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * Checks if the given attributes of a patient meets the requirements to","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * take the specified vaccination.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the vaccination type to check.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * @param age - the age ot the patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param takenTypes - the list of {@code VaxRecord} of the patient.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @return {@code true} if the patient meets the requirements and","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean check(VaxType vaxType,","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"                Age age, HashSet\u003cGroupName\u003e allergies, List\u003cVaxType\u003e takenTypes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        boolean isWithinAge \u003d age.compareTo(vaxType.getMinAge()) * vaxType.getMaxAge().compareTo(age) \u003e\u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        boolean isAllergiesSatisfied \u003d checkAllergies(allergies, vaxType.getIngredients());","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        boolean isHistorySatisfied \u003d checkHistReqs(vaxType.getHistoryReqs(), takenTypes);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        return isWithinAge \u0026\u0026 isAllergiesSatisfied \u0026\u0026 isHistorySatisfied;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    private static boolean checkAllergies(HashSet\u003cGroupName\u003e allergies, HashSet\u003cGroupName\u003e ingredients) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        for (GroupName allergy : allergies) {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            if (ingredients.contains(allergy)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    private static boolean checkHistReqs(List\u003cRequirement\u003e reqs, List\u003cVaxType\u003e records) {","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cHistReqChecker\u003e checkers \u003d records.stream()","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                .map(HistReqChecker::new)","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        for (Requirement req : reqs) {","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            if (!checkHistReq(req, checkers)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    private static boolean checkHistReq(Requirement req, List\u003cHistReqChecker\u003e checkers) {","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        for (HistReqChecker checker : checkers) {","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            switch (checker.check(req)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            case SATISFIED:","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            case PASS:","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                continue;","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            case VIOLATED:","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            default:","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                assert false : \"Unexpected satisfaction state\";","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        return req.getReqType().equals(Requirement.RequirementType.NONE);","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    private static class HistReqChecker {","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        private final VaxType vaxType;","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        private final HashSet\u003cRequirement\u003e satisfiedReqs \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        HistReqChecker(VaxType vaxType) {","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"            this.vaxType \u003d vaxType;","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        SatisfactionState check(Requirement req) {","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            SatisfactionState state \u003d SatisfactionState.PASS;","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"            if (satisfiedReqs.contains(req)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"                return state;","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"            if (req.check(vaxType.getGroups())) {","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"                if (!req.getReqType().equals(Requirement.RequirementType.NONE)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"                    state \u003d SatisfactionState.SATISFIED;","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"                    satisfiedReqs.add(req);","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"            } else if (req.getReqType().equals(Requirement.RequirementType.NONE)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"                state \u003d SatisfactionState.VIOLATED;","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"            return state;","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    private static enum SatisfactionState {","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        SATISFIED, PASS, VIOLATED;","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":112,"francisyzy":4}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * Represents a vaccination type.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class VaxType implements Comparable\u003cVaxType\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final int LIMIT_GROUPS \u003d 10;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public static final int LIMIT_INGREDIENTS \u003d 100;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final int LIMIT_HISTORY_REQ \u003d 10;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_GROUPS_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            String.format(\"Only a maximum of %d groups are allowed\", LIMIT_GROUPS);","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_AGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            \"Minimum age must be lesser than or equals to maximum age\";","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_INGREDIENTS_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            String.format(\"Only a maximum of %d ingredients are allowed\", LIMIT_INGREDIENTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_HISTORY_REQ_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            String.format(\"Only a maximum of %d history requirements are allowed\", LIMIT_HISTORY_REQ);","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e DEFAULT_GROUP_SET \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age DEFAULT_MIN_AGE \u003d Age.MIN_AGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age DEFAULT_MAX_AGE \u003d Age.MAX_AGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e DEFAULT_INGREDIENTS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e DEFAULT_HISTORY_REQS \u003d List.of();","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    private final GroupName name;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    private final HashSet\u003cGroupName\u003e groups;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    private final Age minAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private final Age maxAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    private final HashSet\u003cGroupName\u003e ingredients;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cRequirement\u003e historyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxType}.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalArgumentException if {@code minAge \u003e maxAge} or","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code minSpacing \u003c 0}.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType(GroupName name, HashSet\u003cGroupName\u003e groups,","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                Age minAge, Age maxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                HashSet\u003cGroupName\u003e ingredients, List\u003cRequirement\u003e historyReqs) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        AppUtil.checkArgument(AppUtil.isWithinLimit(groups, LIMIT_GROUPS), MESSAGE_GROUPS_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        AppUtil.checkArgument(isValidRange(minAge, maxAge), MESSAGE_AGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        AppUtil.checkArgument(AppUtil.isWithinLimit(ingredients, LIMIT_INGREDIENTS), MESSAGE_INGREDIENTS_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        AppUtil.checkArgument(AppUtil.isWithinLimit(historyReqs, LIMIT_HISTORY_REQ), MESSAGE_HISTORY_REQ_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        this.minAge \u003d minAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        this.maxAge \u003d maxAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        this.ingredients \u003d ingredients;","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        this.historyReqs \u003d historyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValidRange(Age minAge, Age maxAge) {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        return maxAge.compareTo(minAge) \u003e\u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    public String getName() {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        return name.getName();","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    public HashSet\u003cGroupName\u003e getGroups() {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        return new HashSet\u003c\u003e(groups);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    public Age getMinAge() {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        return minAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    public Age getMaxAge() {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        return maxAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cRequirement\u003e getHistoryReqs() {","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        return Requirement.copy(historyReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"    public HashSet\u003cGroupName\u003e getIngredients() {","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        return new HashSet\u003c\u003e(ingredients);","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(VaxType other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        return name.compareTo(other.name);","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        return name.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof VaxType)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        VaxType casted \u003d (VaxType) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        return name.equals(casted.name) \u0026\u0026 groups.equals(casted.groups)","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 minAge.equals(casted.minAge) \u0026\u0026 maxAge.equals(casted.maxAge)","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 ingredients.equals(casted.ingredients)","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 historyReqs.equals(casted.historyReqs);","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(name, groups, minAge, maxAge, ingredients, historyReqs);","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":134,"francisyzy":4}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxTypeBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" * A factory class to create a {@code VaxType}.","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FORMAT_IVE_MESSAGE \u003d \"The following vaccination constraints have been violated\\n%s\";","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cGroupName\u003e setName;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cHashSet\u003cGroupName\u003e\u003e setGrps;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cAge\u003e setMinAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cAge\u003e setMaxAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cHashSet\u003cGroupName\u003e\u003e setIngredients;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cList\u003cRequirement\u003e\u003e setHistoryReqs;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeBuilder(Optional\u003cGroupName\u003e setName, Optional\u003cHashSet\u003cGroupName\u003e\u003e setGrps,","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                Optional\u003cAge\u003e setMinAge, Optional\u003cAge\u003e setMaxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"                Optional\u003cHashSet\u003cGroupName\u003e\u003e setIngredients, Optional\u003cList\u003cRequirement\u003e\u003e setHistoryReqs) {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this.setName \u003d setName;","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this.setGrps \u003d setGrps.map(HashSet::new);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        this.setMinAge \u003d setMinAge;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this.setMaxAge \u003d setMaxAge;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        this.setIngredients \u003d setIngredients.map(HashSet::new);","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        this.setHistoryReqs \u003d setHistoryReqs.map(Requirement::copy);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * Factory method to create a {@code VaxTypeBuilder}.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeBuilder of() {","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(Optional.empty(),","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setName(GroupName setName) {","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(Optional.ofNullable(setName), setGrps,","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                setIngredients, setHistoryReqs);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setGroups(HashSet\u003cGroupName\u003e grps) {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(setName, Optional.ofNullable(grps),","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                setIngredients, setHistoryReqs);","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setMinAge(Age minAge) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(setName, setGrps,","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                Optional.ofNullable(minAge), setMaxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                setIngredients, setHistoryReqs);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setMaxAge(Age maxAge) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(setName, setGrps,","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, Optional.ofNullable(maxAge),","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                setIngredients, setHistoryReqs);","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setIngredients(HashSet\u003cGroupName\u003e allergyReqs) {","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(setName, setGrps,","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"                Optional.ofNullable(allergyReqs), setHistoryReqs);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setHistoryReqs(List\u003cRequirement\u003e historyReqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(setName, setGrps,","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                setIngredients, Optional.ofNullable(historyReqs));","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"     * Creates the a vaccination of the specified name with parameters that the","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     * builder is set to produce. Any unset attributes will result in its","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     * default value to be used.","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     * @return the built {@code VaxType}.","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the vaccination cannot be created due","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"     *      to illegally set parameters.","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType create(GroupName name) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        return build(","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"                new VaxType(","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                        name,","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                        VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                        VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"                        VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"                        VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"                        VaxType.DEFAULT_HISTORY_REQS),","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                true);","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"     * Creates a vaccination based on the given reference and the parameters","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     * that the builder is set to produce.","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"     * @param reference - the reference {@code VaxType} to build from.","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"     * @param isSet - if list like attributes should be SET operation.","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"     * @return the built {@code VaxType}.","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the vaccination cannot be created due","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"     *      to illegally set parameters.","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType update(VaxType reference, boolean isSet) throws IllegalValueException {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        return build(reference, isSet);","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"    private VaxType build(VaxType reference, boolean isSet) throws IllegalValueException {","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"        GroupName name \u003d setName.orElse(reference.getGroupName());","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"        Age minAge \u003d setMinAge.orElse(reference.getMinAge());","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"        Age maxAge \u003d setMaxAge.orElse(reference.getMaxAge());","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e grps \u003d reference.getGroups();","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e ingredients \u003d reference.getIngredients();","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cRequirement\u003e historyReqs \u003d reference.getHistoryReqs();","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        if (isSet) {","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"            setGrps.ifPresent(grpSet -\u003e setAll(grps, grpSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"            setIngredients.ifPresent(ingredientSet -\u003e setAll(ingredients, ingredientSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"            setHistoryReqs.ifPresent(historyReqSet -\u003e setAll(historyReqs, historyReqSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"            setGrps.ifPresent(grpSet -\u003e grps.addAll(grpSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"            setIngredients.ifPresent(ingredientSet -\u003e ingredients.addAll(ingredientSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"            setHistoryReqs.ifPresent(historyReqSet -\u003e historyReqs.addAll(historyReqSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        Optional\u003cString\u003e errMessage \u003d validateParams(grps, minAge, maxAge, ingredients, historyReqs);","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"        if (errMessage.isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(errMessage.get());","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxType(name, grps, minAge, maxAge, ingredients, historyReqs);","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"    private \u003cT\u003e void setAll(Collection\u003cT\u003e to, Collection\u003cT\u003e from) {","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        to.clear();","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"        to.addAll(from);","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cString\u003e validateParams(HashSet\u003cGroupName\u003e groups,","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"                Age minAge, Age maxAge,","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"                HashSet\u003cGroupName\u003e ingredients,","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"                List\u003cRequirement\u003e historyReq) {","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cString\u003e errMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"        if (!AppUtil.isWithinLimit(groups, VaxType.LIMIT_GROUPS)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"            errMessages.add(VaxType.MESSAGE_GROUPS_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"        if (!VaxType.isValidRange(minAge, maxAge)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"            errMessages.add(VaxType.MESSAGE_AGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"        if (!AppUtil.isWithinLimit(ingredients, VaxType.LIMIT_INGREDIENTS)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"            errMessages.add(VaxType.MESSAGE_INGREDIENTS_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"        if (!AppUtil.isWithinLimit(historyReq, VaxType.LIMIT_HISTORY_REQ)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"            errMessages.add(VaxType.MESSAGE_HISTORY_REQ_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        if (errMessages.isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"        return Optional.ofNullable(StringUtil.formatErrorMessage(errMessages, FORMAT_IVE_MESSAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":183,"francisyzy":6}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxTypeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * A manager to handle {@code VaxType}.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" * \u003cp\u003eThe uniqueness of {@code VaxType} names are maintained.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeManager implements ReadOnlyVaxTypeManage {","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public static final int DEFAULT_LIMIT \u003d 30;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final String ERROR_FORMAT_DUPLICATE_VACCINATION \u003d \"Vaccination %s already exist\";","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final String ERROR_FORMAT_NONEXISTENT_VACCINATION \u003d \"Vaccination %s does not exist\";","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final int limit;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cString, VaxType\u003e typeMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cString, VaxType\u003e unmodifiableTypeMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxTypeManager} with the default limit.","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager() {","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this(DEFAULT_LIMIT);","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxTypeManager}.","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * @param limit - the size limit of this {@code VaxTypeManager}.","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager(int limit) {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        typeMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        unmodifiableTypeMap \u003d FXCollections.unmodifiableObservableMap(typeMap);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     * Resets the data of this {@code VaxTypeManager} to the specified manager.","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     * @param manager - the state of the manager to reset to.","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LimitExceededException if the size of the given manager is","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     *      larger than the set limit of this manager.","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public void resetData(VaxTypeManager manager) {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        if (manager.size() \u003e limit) {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            throw new LimitExceededException(String.format(Messages.FORMAT_LIMIT_EX, limit));","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        typeMap.clear();","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        typeMap.putAll(manager.typeMap);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the specified {@code VaxType}.","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the {@code VaxType} to add.","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the a vaccination with the same name","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     *      already exist.","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LimitExceededException if the set limit will be exceeded after","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     *      this addition.","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType add(VaxType vaxType) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        if (typeMap.containsKey(vaxType.getName())) {","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(String.format(ERROR_FORMAT_DUPLICATE_VACCINATION,","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                    vaxType.getName()));","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        if (typeMap.size() \u003e\u003d limit) {","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            throw new LimitExceededException(String.format(Messages.FORMAT_LIMIT_EX, limit));","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        typeMap.put(vaxType.getName(), vaxType);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        return vaxType;","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     * Replaces the {@code VaxType} with the specified name with the given","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"     * {@code VaxType}.","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"     * @return a {@code ValueChange} that describes the change that has","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"     *      occurred.","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the {@code VaxType} with the specified","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"     *      name cannot be found or if the given {@code VaxType} has the same","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     *      name as an already existing {@code VaxType} that is not the","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"     *      specified name.","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cVaxType\u003e set(String name, VaxType newValue) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        if (!typeMap.containsKey(name)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(String.format(ERROR_FORMAT_NONEXISTENT_VACCINATION,","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"                    name));","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        if (!(name.equals(newValue.getName())) \u0026\u0026 typeMap.containsKey(newValue.getName())) {","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(String.format(ERROR_FORMAT_DUPLICATE_VACCINATION,","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                    newValue.getName()));","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        VaxType oldValue \u003d typeMap.remove(name);","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        typeMap.put(newValue.getName(), newValue);","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        return new ValueChange\u003c\u003e(oldValue, newValue);","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"     * Removes the {@code VaxType} with the specified name. The {@code VaxType}","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"     * removed is returned and wrapped in an {@code Optional}. If there are no","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"     * mappings, to the specified name, nothing is done and","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional.empty} is returned.","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the {@code VaxType} to remove.","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code VaxType} removed wrapped in an {@code Optional}.","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cVaxType\u003e remove(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(typeMap.remove(name));","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cVaxType\u003e get(String name) {","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(typeMap.get(name));","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"    public boolean contains(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        return typeMap.containsKey(name);","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"    public int size() {","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"        return typeMap.size();","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        return typeMap.isEmpty();","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        return unmodifiableTypeMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":156}},{"path":"src/main/java/seedu/vms/storage/JsonAdaptedAge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * A JSON friendly representation of {@link Age}.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedAge {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public final Integer value;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code JsonAdaptedAge}.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public JsonAdaptedAge(Integer value) {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Converts an {@code Age} to a {@code JsonAdaptedAge}.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @param age - the age to convert.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code JsonAdaptedAge} representation of the specified","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Age}.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public static JsonAdaptedAge fromModelType(Age age) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        return new JsonAdaptedAge(age.getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    @JsonValue","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public Integer getValue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code Age} that this {@code JsonAdaptedAge} represents.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the age cannot be converted.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public Age toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        if (!Age.isValid(value)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        return new Age(value);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":54,"francisyzy":1}},{"path":"src/main/java/seedu/vms/storage/JsonAdaptedGroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" * A JSON friendly version of {@link GroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedGroupName {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private final String name;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code JsonAdaptedGroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public JsonAdaptedGroupName(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the model type {@code GroupName} to a","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * {@code JsonAdaptedGroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public static JsonAdaptedGroupName fromModelType(GroupName grpName) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        return new JsonAdaptedGroupName(grpName.getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Converts a collection of {@code GroupName} to a list of","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * {@code JsonAdaptedGroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cJsonAdaptedGroupName\u003e fromModelCollection(Collection\u003cGroupName\u003e grpNames) {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        return grpNames.stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                .map(JsonAdaptedGroupName::fromModelType)","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @JsonValue","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public String getName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code GroupName} that this {@code JsonAdaptedGroupName}","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * represents.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the name is not valid.","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    public GroupName toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        if (!GroupName.isValidName(name)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        return new GroupName(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * Converts a collection of {@code JsonAdaptedGroupName} to the","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * {@code GroupName} that the represent.","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if any {@code JsonAdaptedGroupName} is not","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     *      able to be converted.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    public static HashSet\u003cGroupName\u003e toModelSet(Collection\u003cJsonAdaptedGroupName\u003e reqSet)","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e modelReqSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        for (JsonAdaptedGroupName req : reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            modelReqSet.add(req.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        return modelReqSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":85,"francisyzy":1}},{"path":"src/main/java/seedu/vms/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path USER_PREF_FILE_PATH \u003d Path.of(\"data\", \"userprefs.json\");","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public JsonUserPrefsStorage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        this(USER_PREF_FILE_PATH);","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public UserPrefs readUserPrefs() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public UserPrefs readUserPrefs(Path prefsFilePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(prefsFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        return JsonUtil.deserializeFromFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        JsonUtil.serializeToFile(filePath, userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":19,"-":31}},{"path":"src/main/java/seedu/vms/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.storage.appointment.AppointmentStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.storage.keyword.KeywordStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.patient.PatientManagerStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.VaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"public interface Storage extends PatientManagerStorage, UserPrefsStorage,","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"        VaxTypeStorage, AppointmentStorage, KeywordStorage {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daitenshionyan":3,"slackernoob":3,"-":7,"nusE0726844":1}},{"path":"src/main/java/seedu/vms/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.ReadOnlyVaxTypeManage;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.storage.appointment.AppointmentStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.storage.keyword.KeywordStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.patient.PatientManagerStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.VaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":" * Manages storage of PatientManager data in local storage.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    private PatientManagerStorage patientManagerStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeStorage vaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    private AppointmentStorage appointmentStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    private KeywordStorage keywordStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * Creates a {@code StorageManager} with the given {@code PatientManagerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public StorageManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            PatientManagerStorage patientManagerStorage,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeStorage vaxTypeStorage,","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"            AppointmentStorage appointmentStorage,","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"            UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"            KeywordStorage keywordStorage) {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        this.patientManagerStorage \u003d patientManagerStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        this.vaxTypeStorage \u003d vaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        this.appointmentStorage \u003d appointmentStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"        this.keywordStorage \u003d keywordStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public UserPrefs readUserPrefs() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PatientManager methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public ReadOnlyPatientManager readPatientManager() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        return patientManagerStorage.readPatientManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager(ReadOnlyPatientManager patientManager) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        patientManagerStorage.savePatientManager(patientManager);","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Vax Type methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadDefaultVaxTypes() throws RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        logger.fine(\"Attempting to load default vaccination types\");","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        return vaxTypeStorage.loadDefaultVaxTypes();","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadUserVaxTypes() throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        return vaxTypeStorage.loadUserVaxTypes();","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    public void saveVaxTypes(ReadOnlyVaxTypeManage manager) throws IOException {","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeStorage.saveVaxTypes(manager);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Appointment methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager loadAppointments() throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        return appointmentStorage.loadAppointments();","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"    public void saveAppointments(AppointmentManager manager) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"        appointmentStorage.saveAppointments(manager);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"slackernoob"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Keyword methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager loadKeywords() throws IOException {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"slackernoob"},"content":"        return keywordStorage.loadKeywords();","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager loadEmptyKeywords() throws RuntimeException {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"slackernoob"},"content":"        return keywordStorage.loadEmptyKeywords();","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"slackernoob"},"content":"    public void saveKeywords(KeywordManager manager) throws IOException {","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"slackernoob"},"content":"        keywordStorage.saveKeywords(manager);","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":34,"slackernoob":23,"-":36,"nusE0726844":16,"francisyzy":8}},{"path":"src/main/java/seedu/vms/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * Represents a storage for {@link seedu.vms.model.UserPrefs}.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    UserPrefs readUserPrefs() throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Saves the given {@link seedu.vms.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":7,"-":21}},{"path":"src/main/java/seedu/vms/storage/appointment/AppointmentStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.storage.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" * Represents the storage for {@link AppointmentManager}.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"public interface AppointmentStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"     * Loads the {@code AppointmentManager} as defined by the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager loadAppointments() throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"     * Saves the specified {@code AppointmentManager} to hard disk.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public void saveAppointments(AppointmentManager manager) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nusE0726844":25}},{"path":"src/main/java/seedu/vms/storage/appointment/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.storage.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.storage.JsonAdaptedGroupName;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"/** A JSON friendly version of {@link Appointment}. */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    private static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment [%s] is missing\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private final Integer patientId;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    private final JsonAdaptedGroupName vaccine;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    private final Boolean isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    /** Constructs a {@code JsonAdaptedAppointment}. */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    public JsonAdaptedAppointment(","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"                @JsonProperty(\"patientId\") Integer patientId,","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"                @JsonProperty(\"startTime\") LocalDateTime startTime,","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"                @JsonProperty(\"endTime\") LocalDateTime endTime,","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"                @JsonProperty(\"vaccine\") JsonAdaptedGroupName vaccine,","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"                @JsonProperty(\"isCompleted\") Boolean isCompleted) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        this.patientId \u003d patientId;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        this.vaccine \u003d vaccine;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"     * Converts a given {@code Appointment} into a {@code JsonAdaptedAppointment}.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    public JsonAdaptedAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        this.patientId \u003d appointment.getPatient().getOneBased();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        this.startTime \u003d appointment.getAppointmentTime();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        this.endTime \u003d appointment.getAppointmentEndTime();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        this.vaccine \u003d new JsonAdaptedGroupName(appointment.getVaccination().getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        this.isCompleted \u003d appointment.getStatus();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        if (patientId \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"PATIENT ID\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        } else if (patientId \u003c 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(\"Invalid PATIENT ID\");","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        AppointmentBuilder builder \u003d AppointmentBuilder.of(Index.fromOneBased(patientId));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"START TIME\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        builder \u003d builder.setStartTime(startTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"END TIME\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        builder \u003d builder.setEndTime(endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"        if (vaccine \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"VACCINE\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"        builder \u003d builder.setVaccine(vaccine.toModelType());","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        if (isCompleted \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"IS_COMPLETED\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        builder \u003d builder.setStatus(isCompleted);","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"        return builder.create(new AppointmentManager());","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"     * Converts this JSON friendly version to an {@link Appointment} instance. The","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"     * type is added in to the vaccination type map in the process.","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"     * @throws IllegalValueException if name field is missing.","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"    public Appointment toModelType(AppointmentManager manager) throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"        if (patientId \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"PATIENT ID\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"        AppointmentBuilder builder \u003d AppointmentBuilder.of(Index.fromOneBased(patientId));","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"START TIME\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"        builder \u003d builder.setStartTime(startTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"END TIME\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"        builder \u003d builder.setEndTime(endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"        if (vaccine \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"VACCINE\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"        builder \u003d builder.setVaccine(vaccine.toModelType());","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"        return builder.create(manager);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":2,"nusE0726844":120}},{"path":"src/main/java/seedu/vms/storage/appointment/JsonAdaptedAppointmentData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.storage.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" * Jackson-friendly version of {@code IdData\u003cAppointment\u003e}.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"public class JsonAdaptedAppointmentData {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    private final boolean isActive;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private final int id;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    private final JsonAdaptedAppointment appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"     * Constructs a {@code JsonAdaptedAppointmentData} with the given appointment details.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public JsonAdaptedAppointmentData(","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            @JsonProperty(\"isActive\") boolean isActive,","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            @JsonProperty(\"id\") int id,","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            @JsonProperty(\"appointment\") JsonAdaptedAppointment appointment) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        this.isActive \u003d isActive;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"     * Converts a given {@code IdData\u003cAppointment\u003e} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    public JsonAdaptedAppointmentData(IdData\u003cAppointment\u003e appointmentData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        isActive \u003d appointmentData.isActive();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        id \u003d appointmentData.getId();","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        appointment \u003d new JsonAdaptedAppointment(appointmentData.getValue());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"     * Converts this Jackson-friendly adapted appointment data object into the model\u0027s","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     *      {@code IdData\u003cAppointment\u003e} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"     *      adapted appointment data.","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    public IdData\u003cAppointment\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        return new IdData\u003c\u003e(isActive, id, appointment.toModelType());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"nusE0726844":54}},{"path":"src/main/java/seedu/vms/storage/appointment/JsonAppointmentStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.storage.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":" * An {@link AppointmentStorage} to handle read and write operations from and to","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":" * JSON files containing {@link AppointmentManager} data.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"public class JsonAppointmentStorage implements AppointmentStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    public static final Path USER_APPOINTMENT_PATH \u003d Path.of(\"data\", \"appointment.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private final Path filePath;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    public JsonAppointmentStorage() {","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        this(USER_APPOINTMENT_PATH);","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    public JsonAppointmentStorage(Path filePath) {","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager loadAppointments() throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"            return JsonUtil","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"                    .deserializeFromFile(filePath, JsonSerializableAppointmentManager.class)","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"                    .toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"            throw new IOException(illValEx.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public void saveAppointments(AppointmentManager manager) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(manager);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        JsonUtil.serializeToFile(filePath, new JsonSerializableAppointmentManager(manager));","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nusE0726844":50}},{"path":"src/main/java/seedu/vms/storage/appointment/JsonSerializableAppointmentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.storage.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.ReadOnlyAppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":" * An Immutable AppointmentManager that is serializable to JSON format.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"@JsonRootName(value \u003d \"appointmentmanager\")","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"class JsonSerializableAppointmentManager {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    public static final String DUPLICATE_ID \u003d \"Appointment list contains duplicate ID(s).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    private final List\u003cJsonAdaptedAppointmentData\u003e datas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     * Constructs a {@code JsonSerializableAppointmentManager} with the given patients.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    public JsonSerializableAppointmentManager(@JsonProperty(\"datas\") List\u003cJsonAdaptedAppointmentData\u003e datas) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        this.datas.addAll(datas);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * Converts a given {@code ReadOnlyPatientManager} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePatientManager}.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    public JsonSerializableAppointmentManager(ReadOnlyAppointmentManager source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        datas.addAll(source.getMapView()","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"                .values()","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"                .stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"                .map(JsonAdaptedAppointmentData::new)","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     * Converts this patient manager into the model\u0027s {@code PatientManager} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        AppointmentManager appointmentManager \u003d new AppointmentManager();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        for (JsonAdaptedAppointmentData jsonAdaptedAppointmentData : datas) {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"            IdData\u003cAppointment\u003e appointmentData \u003d jsonAdaptedAppointmentData.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            if (isDuplicate(appointmentManager, appointmentData)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                throw new IllegalValueException(String.format(\"Patient #%04d contain multiple active appointments\",","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                        appointmentData.getValue().getPatient().getOneBased()));","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"            if (appointmentManager.contains(appointmentData.getId())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"                throw new IllegalValueException(DUPLICATE_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"            try {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"                appointmentManager.add(appointmentData);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"            } catch (LimitExceededException limitEx) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"                throw new IllegalValueException(\"ID limit reached\");","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            } catch (IllegalArgumentException illArgEx) {","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"                throw new IllegalValueException(illArgEx.getMessage());","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        return appointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"    // @@author nusE0726844","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"    private boolean isDuplicate(AppointmentManager manager, IdData\u003cAppointment\u003e appointmentData) {","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        if (appointmentData.getValue().getStatus()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d appointmentData.getValue().getPatient();","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        for (Map.Entry\u003cInteger, IdData\u003cAppointment\u003e\u003e entry : manager.getMapView().entrySet()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"            Appointment appointment \u003d entry.getValue().getValue();","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"            if (appointment.getPatient().equals(patientId)","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"                    \u0026\u0026 !appointment.getStatus()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"                return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"        return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":11,"nusE0726844":86}},{"path":"src/main/java/seedu/vms/storage/keyword/JsonAdaptedKeyword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.storage.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"/** A JSON friendly version of {@link Keyword}. */","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"public class JsonAdaptedKeyword {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Keyword\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    private final String keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    private final String mainKeyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"     * Constructs a {@code JsonAdaptedKeyword} with the given keyword details.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"    public JsonAdaptedKeyword(@JsonProperty(\"keyword\") String keyword,","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"                              @JsonProperty(\"mainKeyword\") String mainKeyword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"        this.keyword \u003d Objects.requireNonNull(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"        this.mainKeyword \u003d Objects.requireNonNull(mainKeyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"     * Converts a given {@code Keyword} into this class for Jackson use.","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"    public static JsonAdaptedKeyword fromModelType(Keyword source) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        String keyword \u003d source.getKeyword();","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"        String mainKeyword \u003d source.getMainKeyword();","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"        return new JsonAdaptedKeyword(keyword, mainKeyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"     * Converts this Jackson-friendly adapted keyword object into the model\u0027s","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"     * {@code Keyword} object.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"     *                               the adapted keyword.","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"    public Keyword toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"        return new Keyword(mainKeyword, keyword);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":49}},{"path":"src/main/java/seedu/vms/storage/keyword/JsonKeywordStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.storage.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":" * An {@link KeywordStorage} to handle read and write operations from and to","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":" * JSON files containing {@link KeywordManager} data.","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"public class JsonKeywordStorage implements KeywordStorage {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    public static final Path USER_KEYWORD_PATH \u003d Path.of(\"data\", \"keyword.json\");","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager loadKeywords() throws IOException {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"            return KeywordLoader.load(USER_KEYWORD_PATH);","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"            throw new IOException(illValEx.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager loadEmptyKeywords() throws RuntimeException {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"            return KeywordLoader.load();","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        } catch (Throwable ex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"            throw new RuntimeException(\"Unable to load defaults\", ex);","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"    public void saveKeywords(KeywordManager manager) throws IOException {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"        requireNonNull(manager);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"        FileUtil.createIfMissing(USER_KEYWORD_PATH);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"        KeywordLoader.fromModelType(manager).write(USER_KEYWORD_PATH);","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":46}},{"path":"src/main/java/seedu/vms/storage/keyword/KeywordLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.storage.keyword;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":" * KeywordLoader class to load and write keywords.","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"public class KeywordLoader {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"    private static final String JSON_FILE_PATH \u003d \"/data/keywords.json\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"    private final List\u003cJsonAdaptedKeyword\u003e keywords;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"    /** Constructs a {@code KeywordLoader}. */","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    public KeywordLoader(@JsonProperty(\"keywords\") List\u003cJsonAdaptedKeyword\u003e keywords) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"        this.keywords \u003d Objects.requireNonNull(keywords);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"     * Converts the specified {@code KeywordManager} to a {@code KeywordLoader}.","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"    public static KeywordLoader fromModelType(KeywordManager manager) {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"        List\u003cJsonAdaptedKeyword\u003e types \u003d manager","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"                .getKeywordMap()","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"                .values()","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"                .stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"                .map(keyword -\u003e JsonAdaptedKeyword.fromModelType(keyword))","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"        return new KeywordLoader(types);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"slackernoob"},"content":"     * Loads all the keywords contained in the keywords JSON","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"     * file.","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"     * @throws IllegalValueException if there are errors in the fields of the","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"     *      JSON file.","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"    public static KeywordManager load(Path path) throws IllegalValueException, IOException {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"        KeywordLoader loader \u003d JsonUtil.deserializeFromFile(path, KeywordLoader.class);","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"        return loader.toModelType();","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"     * Loads all the keywords contained in the keywords empty JSON","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"     * file.","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"slackernoob"},"content":"     * @throws IllegalValueException if there are errors in the fields of the","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"slackernoob"},"content":"     *      JSON file.","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"slackernoob"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"slackernoob"},"content":"    public static KeywordManager load() throws IllegalValueException, IOException {","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"slackernoob"},"content":"        KeywordLoader loader \u003d JsonUtil.deserializeFromResource(JSON_FILE_PATH, KeywordLoader.class);","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"slackernoob"},"content":"        return loader.toModelType();","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"slackernoob"},"content":"    private KeywordManager toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"slackernoob"},"content":"        KeywordManager manager \u003d new KeywordManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"slackernoob"},"content":"        for (JsonAdaptedKeyword adapted : keywords) {","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"slackernoob"},"content":"            Keyword keyword \u003d adapted.toModelType();","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"slackernoob"},"content":"            if (Keyword.isNotMainKeyword(keyword.getKeyword())","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"slackernoob"},"content":"                    \u0026\u0026 Keyword.isValidMainKeyword(keyword.getMainKeyword())","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"slackernoob"},"content":"                    \u0026\u0026 !keyword.getKeyword().isBlank()","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"slackernoob"},"content":"                    \u0026\u0026 !keyword.getKeyword().matches(\".*[\\\\s(--)]+.*\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"slackernoob"},"content":"                manager.add(keyword);","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"slackernoob"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"slackernoob"},"content":"                throw new IllegalValueException(\"Illegal values present.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"slackernoob"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"slackernoob"},"content":"        return manager;","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"slackernoob"},"content":"     * Writes the data of this {@code KeywordLoader} to the specified file.","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"slackernoob"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"slackernoob"},"content":"    public void write(Path path) throws IOException {","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"slackernoob"},"content":"        JsonUtil.serializeToFile(path, this);","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"slackernoob":95}},{"path":"src/main/java/seedu/vms/storage/keyword/KeywordStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.storage.keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":" * Represents the storage for {@link KeywordManager}.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"public interface KeywordStorage {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"     * Loads the {@code KeywordManager} as defined by the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager loadKeywords() throws IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"     * Loads the {@code KeywordManager} as defined in the application","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"     * resources.","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"     * @throws RuntimeException if an error occurs.","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager loadEmptyKeywords() throws RuntimeException;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"     * Saves the specified {@code KeywordManager} to hard disk.","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"    public void saveKeywords(KeywordManager manager) throws IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"slackernoob":32}},{"path":"src/main/java/seedu/vms/storage/patient/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonAdaptedGroupName;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedPatient {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    private final LocalDateTime dob;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    private final String bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    private final List\u003cJsonAdaptedGroupName\u003e allergies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    private final List\u003cJsonAdaptedGroupName\u003e vaccines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"dob\") LocalDateTime dob,","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"bloodType\") String bloodType,","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"allergies\") List\u003cJsonAdaptedGroupName\u003e allergies,","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"vaccines\") List\u003cJsonAdaptedGroupName\u003e vaccines) {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        if (allergies !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            this.allergies.addAll(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        if (vaccines !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"            this.vaccines.addAll(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        dob \u003d source.getDob().value;","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        bloodType \u003d source.getBloodType().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        allergies.addAll(source.getAllergy().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"                .map(JsonAdaptedGroupName::fromModelType)","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        vaccines.addAll(source.getVaccine().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"                .map(JsonAdaptedGroupName::fromModelType)","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"     * {@code Patient} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     *                               the adapted patient.","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        final List\u003cGroupName\u003e patientAllergies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        for (JsonAdaptedGroupName allergy : allergies) {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"            patientAllergies.add(allergy.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        final List\u003cGroupName\u003e patientVaccines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        for (JsonAdaptedGroupName vaccine : vaccines) {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"            patientVaccines.add(vaccine.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        if (dob \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Dob.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"        if (!Dob.isValidDob(dob)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(Dob.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        final Dob modelDob \u003d new Dob(dob);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        if (bloodType \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, BloodType.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        if (!BloodType.isValidBloodType(bloodType)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"        final BloodType modelBloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"        final Set\u003cGroupName\u003e modelAllergies \u003d new HashSet\u003c\u003e(patientAllergies);","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"        final Set\u003cGroupName\u003e modelVaccines \u003d new HashSet\u003c\u003e(patientVaccines);","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"        return new Patient(modelName, modelPhone, modelDob, modelBloodType, modelAllergies, modelVaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"daitenshionyan":4,"-":53,"francisyzy":72}},{"path":"src/main/java/seedu/vms/storage/patient/JsonAdaptedPatientData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Jackson-friendly version of {@code IdData\u003cPatient\u003e}.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class JsonAdaptedPatientData {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private final boolean isActive;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private final int id;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    private final JsonAdaptedPatient patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code JsonAdaptedPatientData} with the given patient details.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedPatientData(","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"isActive\") boolean isActive,","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"id\") int id,","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"patient\") JsonAdaptedPatient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        this.isActive \u003d isActive;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * Converts a given {@code IdData\u003cPatient\u003e} into this class for Jackson use.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedPatientData(IdData\u003cPatient\u003e patientData) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        isActive \u003d patientData.isActive();","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        id \u003d patientData.getId();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        patient \u003d new JsonAdaptedPatient(patientData.getValue());","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Converts this Jackson-friendly adapted patient data object into the model\u0027s {@code IdData\u003cPatient\u003e} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient data.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public IdData\u003cPatient\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        return new IdData\u003c\u003e(isActive, id, patient.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":51}},{"path":"src/main/java/seedu/vms/storage/patient/JsonPatientManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" * A class to access PatientManager data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"public class JsonPatientManagerStorage implements PatientManagerStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path USER_PATIENT_FILE_PATH \u003d Path.of(\"data\", \"patientmanager.json\");","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public JsonPatientManagerStorage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        this(USER_PATIENT_FILE_PATH);","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public JsonPatientManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public ReadOnlyPatientManager readPatientManager() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            return JsonUtil","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                    .deserializeFromFile(filePath, JsonSerializablePatientManager.class)","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                    .toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            throw new IOException(\"Illegal values present\", ive);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager(ReadOnlyPatientManager patientManager) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        JsonUtil.serializeToFile(filePath, new JsonSerializablePatientManager(patientManager));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":12,"francisyzy":35}},{"path":"src/main/java/seedu/vms/storage/patient/JsonSerializablePatientManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":" * An Immutable PatientManager that is serializable to JSON format.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"@JsonRootName(value \u003d \"patientmanager\")","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"public class JsonSerializablePatientManager {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public static final String DUPLICATE_ID \u003d \"Patients list contains duplicate ID(s).\";","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    private final List\u003cJsonAdaptedPatientData\u003e datas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code JsonSerializablePatientManager} with the given patients.","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    public JsonSerializablePatientManager(@JsonProperty(\"datas\") List\u003cJsonAdaptedPatientData\u003e datas) {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this.datas.addAll(datas);","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * Converts a given {@code ReadOnlyPatientManager} into this class for Jackson use.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePatientManager}.","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public JsonSerializablePatientManager(ReadOnlyPatientManager source) {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        datas.addAll(source.getMapView()","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                .values()","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"                .map(JsonAdaptedPatientData::new)","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * Converts this patient manager into the model\u0027s {@code PatientManager} object.","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public PatientManager toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        PatientManager patientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        for (JsonAdaptedPatientData jsonAdaptedPatientData : datas) {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            IdData\u003cPatient\u003e patientData \u003d jsonAdaptedPatientData.toModelType();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            if (patientManager.contains(patientData.getId())) {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                throw new IllegalValueException(DUPLICATE_ID);","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                patientManager.add(patientData);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            } catch (LimitExceededException limitEx) {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                throw new IllegalValueException(\"ID limit reached\");","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            } catch (IllegalArgumentException illArgEx) {","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                throw new IllegalValueException(illArgEx.getMessage());","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        return patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"daitenshionyan":17,"-":34,"francisyzy":21}},{"path":"src/main/java/seedu/vms/storage/patient/PatientManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Represents a storage for {@link seedu.vms.model.patient.PatientManager}.","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public interface PatientManagerStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * Returns PatientManager data as a {@link ReadOnlyPatientManager}.","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    ReadOnlyPatientManager readPatientManager() throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * Saves the given {@link ReadOnlyPatientManager} to the storage.","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @param patientManager cannot be null.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    void savePatientManager(ReadOnlyPatientManager patientManager) throws IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":2,"francisyzy":24}},{"path":"src/main/java/seedu/vms/storage/vaccination/JsonAdaptedVaxRequirement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonAdaptedGroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** JSON friendly version of {@link Requirement} */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedVaxRequirement {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final Requirement.RequirementType reqType;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedGroupName\u003e reqSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs a {@code JsonAdaptedVaxRequirement}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public JsonAdaptedVaxRequirement(","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"reqType\") Requirement.RequirementType reqType,","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"reqSet\") List\u003cJsonAdaptedGroupName\u003e reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        this.reqType \u003d reqType;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        this.reqSet \u003d reqSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the specified {@code Requirement} to a","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * {@code JsonAdaptedVaxRequirement}.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public static JsonAdaptedVaxRequirement fromModelType(Requirement req) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        Requirement.RequirementType reqType \u003d req.getReqType();","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedGroupName\u003e reqSet \u003d JsonAdaptedGroupName.fromModelCollection(req.getReqSet());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        return new JsonAdaptedVaxRequirement(reqType, reqSet);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Converts this JSON friendly version to an {@link Requirement}","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * instance.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if reqType or grpSet field is of an illegal value.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    public Requirement toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        if (reqType \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(\"Missing requirement type\");","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        if (reqSet \u003d\u003d null || reqSet.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(\"Missing or empty group set\");","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        return new Requirement(reqType, JsonAdaptedGroupName.toModelSet(reqSet));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":55}},{"path":"src/main/java/seedu/vms/storage/vaccination/JsonAdaptedVaxType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonAdaptedAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonAdaptedGroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"/** A JSON friendly version of {@link VaxType}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedVaxType {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Vaccination type [%s] is missing\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final JsonAdaptedGroupName name;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedGroupName\u003e groups;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final JsonAdaptedAge minAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private final JsonAdaptedAge maxAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedGroupName\u003e ingredients;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedVaxRequirement\u003e historyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs a {@code JsonAdaptedVaxType}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public JsonAdaptedVaxType(","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"name\") JsonAdaptedGroupName name,","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"groups\") List\u003cJsonAdaptedGroupName\u003e groups,","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"minAge\") JsonAdaptedAge minAge,","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"maxAge\") JsonAdaptedAge maxAge,","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"ingredients\") List\u003cJsonAdaptedGroupName\u003e ingredients,","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"historyReqs\") List\u003cJsonAdaptedVaxRequirement\u003e historyReqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        this.minAge \u003d minAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        this.maxAge \u003d maxAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        this.ingredients \u003d ingredients;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        this.historyReqs \u003d historyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the specified {@code VaxType} to a","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     * {@code JsonAdaptedVaxType}.","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public static JsonAdaptedVaxType fromModelType(VaxType vaxType) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        JsonAdaptedGroupName name \u003d JsonAdaptedGroupName.fromModelType(vaxType.getGroupName());","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedGroupName\u003e groups \u003d JsonAdaptedGroupName.fromModelCollection(vaxType.getGroups());","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        JsonAdaptedAge minAge \u003d JsonAdaptedAge.fromModelType(vaxType.getMinAge());","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        JsonAdaptedAge maxAge \u003d JsonAdaptedAge.fromModelType(vaxType.getMaxAge());","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedGroupName\u003e allergyReqs \u003d JsonAdaptedGroupName.fromModelCollection(vaxType.getIngredients());","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedVaxRequirement\u003e historyReqs \u003d convertToAdaptedReq(vaxType.getHistoryReqs());","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        return new JsonAdaptedVaxType(name, groups, minAge, maxAge, allergyReqs, historyReqs);","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    private static List\u003cJsonAdaptedVaxRequirement\u003e convertToAdaptedReq(List\u003cRequirement\u003e reqs) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        return reqs.stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                .map(req -\u003e JsonAdaptedVaxRequirement.fromModelType(req))","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * Converts this JSON friendly version to an {@link VaxType} instance.","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if name field is missing.","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"NAME\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeBuilder builder \u003d VaxTypeBuilder.of();","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        if (groups !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setGroups(JsonAdaptedGroupName.toModelSet(groups));","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        if (minAge !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setMinAge(minAge.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        if (maxAge !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setMaxAge(maxAge.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        if (ingredients !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setIngredients(JsonAdaptedGroupName.toModelSet(ingredients));","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        if (historyReqs !\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setHistoryReqs(toReqList(historyReqs));","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        return builder.create(name.toModelType());","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003cRequirement\u003e toReqList(List\u003cJsonAdaptedVaxRequirement\u003e adaptedList)","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cRequirement\u003e reqs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        for (JsonAdaptedVaxRequirement adapted : adaptedList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"            reqs.add(adapted.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        return reqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":114}},{"path":"src/main/java/seedu/vms/storage/vaccination/JsonVaxTypeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.ReadOnlyVaxTypeManage;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * An {@link VaxTypeStorage} to handle read and write operations from and to","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * JSON files containing {@link VaxTypeManager} data.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class JsonVaxTypeStorage implements VaxTypeStorage {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final Path USER_VAX_FILE_PATH \u003d Path.of(\"data\", \"vaxtype.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadUserVaxTypes() throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            return VaxTypeLoader.load(USER_VAX_FILE_PATH);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            throw new IOException(illValEx.getMessage());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadDefaultVaxTypes() throws RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            return VaxTypeLoader.load();","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        } catch (Throwable ex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            throw new RuntimeException(\"Unable to load defaults\", ex);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public void saveVaxTypes(ReadOnlyVaxTypeManage manager) throws IOException {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        FileUtil.createIfMissing(USER_VAX_FILE_PATH);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeLoader.fromModelType(manager).write(USER_VAX_FILE_PATH);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"daitenshionyan":45}},{"path":"src/main/java/seedu/vms/storage/vaccination/VaxTypeLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.ReadOnlyVaxTypeManage;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"/** A JSON file loader of {@code VaxType}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeLoader {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final String JSON_FILE_PATH \u003d \"/data/vaxTypes.json\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedVaxType\u003e types;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs a {@code VaxTypeLoader}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeLoader(@JsonProperty(\"types\") List\u003cJsonAdaptedVaxType\u003e types) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        this.types \u003d types;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the specified {@code VaxTypeManager} to a {@code VaxTypeLoader}.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeLoader fromModelType(ReadOnlyVaxTypeManage manager) {","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedVaxType\u003e types \u003d manager","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                .asUnmodifiableObservableMap()","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                .values()","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                .map(vaxType -\u003e JsonAdaptedVaxType.fromModelType(vaxType))","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeLoader(types);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * Loads all the vaccination types contained in the vaccination type JSON","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     * file.","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if there are errors in the fields of the","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     *      JSON file.","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeManager load() throws IllegalValueException, IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeLoader loader \u003d JsonUtil.deserializeFromResource(JSON_FILE_PATH, VaxTypeLoader.class);","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        return loader.toModelType();","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     * Loads all the vaccination types contained in the specified JSON file.","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if there are errors in the fields of the","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     *      JSON file.","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeManager load(Path path) throws IllegalValueException, IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeLoader loader \u003d JsonUtil.deserializeFromFile(path, VaxTypeLoader.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        return loader.toModelType();","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeManager toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager manager \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        for (JsonAdaptedVaxType adapted : types) {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            VaxType vaxType \u003d adapted.toModelType();","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            manager.add(vaxType);","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        return manager;","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     * Writes the data of this {@code VaxTypeLoader} to the specified file.","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    public void write(Path path) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        JsonUtil.serializeToFile(path, this);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":90,"nusE0726844":1}},{"path":"src/main/java/seedu/vms/storage/vaccination/VaxTypeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.ReadOnlyVaxTypeManage;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * Represents the storage for {@link seedu.vms.model.vaccination.VaxTypeManager}.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public interface VaxTypeStorage {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     * Loads the {@code VaxTypeManager} as defined by the user.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadUserVaxTypes() throws IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Loads the {@code VaxTypeManager} as defined in the application","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * resources.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @throws RuntimeException if an error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadDefaultVaxTypes() throws RuntimeException;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * Saves the specified {@code VaxTypeManager} to hard disk.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public void saveVaxTypes(ReadOnlyVaxTypeManage manager) throws IOException;","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"daitenshionyan":36}},{"path":"src/main/java/seedu/vms/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private final Consumer\u003cString\u003e commandExecutor;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public CommandBox(Consumer\u003cString\u003e commandExecutor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        commandExecutor.accept(commandText);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"daitenshionyan":6,"-":38}},{"path":"src/main/java/seedu/vms/ui/DetailedView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * Graphical display to display the detailed view of a value.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e the type of value to display.","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class DetailedView\u003cT\u003e extends VBox implements Refreshable {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS \u003d \"detailed-view-card\";","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private final Function\u003cT, Node\u003e displayFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private T value \u003d null;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private volatile boolean isUpdated \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code DetailedView}.","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param sourceProperty - value property to bind to.","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @param displayFunction - a function to convert the value to display to","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     *      its graphical representation.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public DetailedView(ObjectProperty\u003cT\u003e sourceProperty, Function\u003cT, Node\u003e displayFunction) {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        getStyleClass().add(STYLE_CLASS);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this.displayFunction \u003d displayFunction;","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        sourceProperty.addListener(this::handleChange);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void handleChange(ObservableValue\u003c? extends T\u003e ob, T oldValue, T newValue) {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        value \u003d newValue;","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        isUpdated \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    public synchronized void refresh() {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        if (isUpdated) {","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        getChildren().clear();","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        if (value !\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            getChildren().add(displayFunction.apply(value));","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        isUpdated \u003d true;","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"daitenshionyan":57}},{"path":"src/main/java/seedu/vms/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103-f11-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        getRoot().setIconified(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":3,"-":99,"francisyzy":1}},{"path":"src/main/java/seedu/vms/ui/ListViewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.MapChangeListener;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"/** An extension of {@link ListView} to display the values of a map. */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class ListViewPanel\u003cT extends Comparable\u003cT\u003e\u003e extends ListView\u003cT\u003e implements Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final BiFunction\u003cInteger, T, Node\u003e displayFunction;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private final ObjectProperty\u003cComparator\u003cT\u003e\u003e comparatorProperty \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            new SimpleObjectProperty\u003c\u003e(Comparator.naturalOrder());","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final ObjectProperty\u003cMapChangeListener.Change\u003c?, ? extends T\u003e\u003e changeProperty \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ListViewPanel} whose data does not require the index","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * within the list view to be displayed.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param dataMap - the map of data to display within this list view.","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * @param displayFunction - factory function to generate the graphical","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     *      representation of the data.","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public ListViewPanel(ObservableMap\u003c?, T\u003e dataMap, Function\u003cT, Node\u003e displayFunction) {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        this(dataMap, (index, data) -\u003e displayFunction.apply(data));","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ListViewPanel}.","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @param dataMap - the map of data to display within this list view.","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @param displayFunction - factory function to generate the graphical","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     *      representation of the data.","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public ListViewPanel(ObservableMap\u003c?, T\u003e dataMap, BiFunction\u003cInteger, T, Node\u003e displayFunction) {","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        this.displayFunction \u003d displayFunction;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        setCellFactory(listView -\u003e new DisplayCell());","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.addListener(this::handleChange);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        updateList(dataMap.values());","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the comparator property of this list view panel.","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    public ObjectProperty\u003cComparator\u003cT\u003e\u003e comparatorProperty() {","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        return comparatorProperty;","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableList\u003cT\u003e getDisplayList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        return itemsProperty().get();","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void handleChange(MapChangeListener.Change\u003c?, ? extends T\u003e change) {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        changeProperty.set(change);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void updateList(Collection\u003c? extends T\u003e updatedDatas) {","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        getItems().setAll(updatedDatas);","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        getItems().sort(comparatorProperty.get());","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        MapChangeListener.Change\u003c?, ? extends T\u003e change \u003d changeProperty.get();","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        if (change \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        updateList(change.getMap().values());","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        changeProperty.set(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    private class DisplayCell extends ListCell\u003cT\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        protected void updateItem(T data, boolean empty) {","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            super.updateItem(data, empty);","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"            if (empty || data \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"                setText(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"            } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"                setGraphic(displayFunction.apply(getIndex() + 1, data));","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"daitenshionyan":106}},{"path":"src/main/java/seedu/vms/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.Logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.ui.appointment.AppointmentCard;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.patient.PatientCard;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.patient.SimplifiedPatientCard;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.vaccination.SimplifiedVaxTypeCard;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.vaccination.VaxTypeCard;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"public class MainWindow extends UiPart\u003cStage\u003e implements Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private ListViewPanel\u003cIdData\u003cPatient\u003e\u003e patientListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    private DetailedView\u003cIdData\u003cPatient\u003e\u003e detailedPatientView;","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    private ListViewPanel\u003cVaxType\u003e vaxTypeListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private DetailedView\u003cVaxType\u003e detailedVaxTypeView;","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    private ListViewPanel\u003cIdData\u003cAppointment\u003e\u003e appointmentListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private StackPane commandBoxPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private MenuItem helpMenuItem;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox detailedPatientPanel;","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private StackPane vaxTypeListPanelPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox detailedVaxTypePanel;","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    @FXML private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox resultDisplayPlaceholder;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        logic.setCloseAction(() -\u003e Platform.runLater(this::handleExit));","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        logic.setShowHelpAction(() -\u003e Platform.runLater(this::handleHelp));","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        resultDisplay.refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        patientListPanel.refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        detailedPatientView.refresh();","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeListPanel.refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        detailedVaxTypeView.refresh();","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"        appointmentListPanel.refresh();","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        // @@author francisyzy","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"        // patients","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"        patientListPanel \u003d new ListViewPanel\u003c\u003e(","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"                logic.getFilteredPatientMap(),","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"                idData -\u003e new SimplifiedPatientCard(idData).getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel);","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"        detailedPatientView \u003d new DetailedView\u003c\u003e(logic.detailedPatientProperty(),","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"                data -\u003e new PatientCard(data.getValue(), data.getId() + 1).getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"        detailedPatientPanel.getChildren().add(detailedPatientView);","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        // @@author daitenshionyan","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeListPanel \u003d new ListViewPanel\u003c\u003e(","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"                logic.getFilteredVaxTypeMap(),","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"                (index, vaxType) -\u003e new SimplifiedVaxTypeCard(index, vaxType).getRoot());","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeListPanelPlaceholder.getChildren().add(vaxTypeListPanel);","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"        detailedVaxTypeView \u003d new DetailedView\u003c\u003e(","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"                logic.detailedVaxTypeProperty(),","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"                vaxType -\u003e new VaxTypeCard(vaxType).getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        detailedVaxTypePanel.getChildren().add(detailedVaxTypeView);","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        logic.bindVaccinationDisplayList(vaxTypeListPanel.getDisplayList());","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"nusE0726844"},"content":"        // @@author nusE0726844","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"nusE0726844"},"content":"        appointmentListPanel \u003d new ListViewPanel\u003c\u003e(","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"nusE0726844"},"content":"                logic.getFilteredAppointmentMap(),","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"nusE0726844"},"content":"                idData -\u003e new AppointmentCard(idData.getValue(), idData.getId() + 1).getRoot());","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"nusE0726844"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel);","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"nusE0726844"},"content":"        // @@author","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        Region resultDisplayRegion \u003d resultDisplay.getRoot();","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplayRegion);","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"        logic.setOnExecutionCompletion(resultDisplay::queueMessages);","lastModifiedDate":"2023-04-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        CommandBox commandBox \u003d new CommandBox(logic::queue);","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":53,"-":135,"nusE0726844":12,"francisyzy":10}},{"path":"src/main/java/seedu/vms/ui/Refreshable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"/** Represents a component that is refreshable. */","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"public interface Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    /** Refreshes the component. */","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"daitenshionyan":8}},{"path":"src/main/java/seedu/vms/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.concurrent.LinkedBlockingDeque;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e implements Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final int DISPLAY_LIMIT \u003d 30;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private ScrollPane scrollPane;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox displayArea;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private LinkedBlockingDeque\u003cCommandMessage\u003e messageQueue \u003d new LinkedBlockingDeque\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ResultDisplay}.","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        scrollPane.viewportBoundsProperty().addListener((ob, o, n) -\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            double width \u003d n.getWidth();","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            double height \u003d n.getHeight();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            // force width of display area to be view port width","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.setMinWidth(width);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.setPrefWidth(width);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.setMaxWidth(width);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.setMinHeight(height);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        displayArea.heightProperty().addListener((ob, o, n) -\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            scrollPane.setVvalue(1D);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     * Displays the given list of {@code CommandMessage}. The order that the","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     * messages are displayed will follow the order of the given list.","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * @param messages - the list of {@code CommandMessage} to display.","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public void queueMessages(List\u003cCommandMessage\u003e messages) {","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        requireNonNull(messages);","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        messageQueue.addAll(messages);","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    private void displayMessage(CommandMessage commandResult) {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        displayArea.getChildren().add(new ResultMessageBox(commandResult).getRoot());","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        if (displayArea.getChildren().size() \u003e DISPLAY_LIMIT) {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.getChildren().remove(0);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh() {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c messageQueue.size(); i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            displayMessage(messageQueue.poll());","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":58,"-":18}},{"path":"src/main/java/seedu/vms/ui/ResultMessageBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** A GUI representation of a command message to the user. */","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class ResultMessageBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FXML_FILE \u003d \"ResultMessageBox.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_DEATH \u003d \"result-message-death-color\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_ERROR \u003d \"result-message-error-color\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_WARNING \u003d \"result-message-warning-color\";","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_INFO \u003d \"result-message-info-color\";","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label stateLabel;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private TextArea messageArea;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ResultMessageBox}.","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public ResultMessageBox(CommandMessage result) {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        super(FXML_FILE);","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        setStateLabel(result.getState().toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        setMessage(result.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        setStyle(result.getState());","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    private void setStateLabel(String state) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        stateLabel.setText(String.format(\"[%s]\", state));","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    private void setMessage(String message) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        String displayMessage \u003d StringUtil.wrapText(message, 180);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        // listener block adapted from https://stackoverflow.com/a/25643696 and modified","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        messageArea.textProperty().addListener((ob, oldText, newText) -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                Text text \u003d new Text(newText);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                text.setFont(messageArea.getFont());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                double height \u003d text.getLayoutBounds().getHeight() * 1.07","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                        + messageArea.getPadding().getTop() + messageArea.getPadding().getBottom()","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                        + 14D;","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                messageArea.setPrefHeight(height);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        messageArea.setText(displayMessage);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    private void setStyle(CommandMessage.State state) {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        String colorStyleClass;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        switch (state) {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        case ERROR:","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            colorStyleClass \u003d STYLE_CLASS_ERROR;","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        case WARNING:","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            colorStyleClass \u003d STYLE_CLASS_WARNING;","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        case DEATH:","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            colorStyleClass \u003d STYLE_CLASS_DEATH;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            break;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            colorStyleClass \u003d STYLE_CLASS_INFO;","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        stateLabel.getStyleClass().add(colorStyleClass);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        messageArea.getStyleClass().add(colorStyleClass);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":83}},{"path":"src/main/java/seedu/vms/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":27}},{"path":"src/main/java/seedu/vms/ui/TagFlowView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * Graphical representation of a list of tags.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class TagFlowView extends FlowPane {","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS_TAG_FLOW_PANE \u003d \"tag-flow-pane\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS_TAG_GREEN \u003d \"tag-color-green\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS_TAG_RED \u003d \"tag-color-red\";","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS_TAG_BLUE \u003d \"tag-color-blue\";","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_TAG \u003d \"tag\";","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code TagFlowView} no additional style classes added to","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * its tags.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param tags - the tags to display.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public TagFlowView(Collection\u003cString\u003e tags) {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this(tags, List.of());","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public TagFlowView(Collection\u003cString\u003e tags, String ... styleClasses) {","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        this(tags, List.of(styleClasses));","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code TagFlowView}.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @param tags - the tags to display.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * @param styleClasses - a list of additional style classes to add to the","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     *      tags.","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public TagFlowView(Collection\u003cString\u003e tags, Collection\u003cString\u003e styleClasses) {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        getStyleClass().add(STYLE_CLASS_TAG_FLOW_PANE);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cString\u003e sortedTags \u003d new ArrayList\u003c\u003e(tags);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        sortedTags.sort(Comparator.naturalOrder());","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        for (String tag : sortedTags) {","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            Label label \u003d formLabel(tag);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            label.getStyleClass().addAll(styleClasses);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            getChildren().add(label);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    private Label formLabel(String text) {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        Label label \u003d new Label(text);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        label.setWrapText(true);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        label.getStyleClass().add(STYLE_CLASS_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        label.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        return label;","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":68}},{"path":"src/main/java/seedu/vms/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"public interface Ui extends Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    /** Show error dialog and close app. */","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    void showErrorDialogAndShutdown(String mainMessage, String additionalMessage);","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daitenshionyan":4,"-":11}},{"path":"src/main/java/seedu/vms/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.MainApp;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.Logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/vms_icon_32.png\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        mainWindow.refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    public void showErrorDialogAndShutdown(String mainMessage, String additionalMessage) {","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            showAlertDialogAndWait(Alert.AlertType.ERROR, \"ERROR\", mainMessage, additionalMessage);","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"            Platform.exit();","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"            System.exit(1);","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":20,"-":82,"francisyzy":1}},{"path":"src/main/java/seedu/vms/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.MainApp;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final T root;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        root \u003d loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        this.root \u003d loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        return root;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    private T loadFxmlFile(URL location, T root) {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            return fxmlLoader.load();","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":9,"-":80}},{"path":"src/main/java/seedu/vms/ui/appointment/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.ui.appointment;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.ui.UiPart;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":" * Graphical representation of an appointment.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private static final String FXML_FILE \u003d \"AppointmentCard.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private Label idLabel;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private Label patientId;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    private Label appointmentTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    private Label vaccine;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    private Label status;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"     * Constructs a {@code AppointmentCard}.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"     * @param appointment - the appointment to display.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"     * @param id - the id of the appointment to display.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentCard(Appointment appointment, int id) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        super(FXML_FILE);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        idLabel.setText(String.format(\"#%04d\", id));","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        patientId.setText(Integer.toString(appointment.getPatient().getOneBased()));","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        appointmentTime.setText(appointment.getAppointmentTime()","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"                .format(DateTimeFormatter.ofPattern(\"h:mm a MMM d yyyy\"))","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"                + \" ~ \"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"                + appointment.getAppointmentEndTime()","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"                .format(DateTimeFormatter.ofPattern(\"h:mm a MMM d yyyy\")));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        vaccine.setText(appointment.getVaccination().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        status.setText(appointment.getStatus() ? \"Completed\" : \"Not Completed\");","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"nusE0726844":48}},{"path":"src/main/java/seedu/vms/ui/patient/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui.patient;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.TagFlowView;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.UiPart;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label idLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label nameLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label dobLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label bloodTypeLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox allergyBox;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox vaccineBox;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label phoneLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public PatientCard(Patient patient, int id) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        idLabel.setText(String.format(\"#%04d\", id));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        nameLabel.setText(patient.getName().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        dobLabel.setText(patient.getDob().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        bloodTypeLabel.setText(patient.getBloodType().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        allergyBox.getChildren().add(new TagFlowView(","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                patient.getAllergyAsString(),","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                TagFlowView.STYLE_CLASS_TAG_RED));","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        vaccineBox.getChildren().add(new TagFlowView(","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                patient.getVaccineAsString(),","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                TagFlowView.STYLE_CLASS_TAG_GREEN));","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        phoneLabel.setText(patient.getPhone().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"daitenshionyan":22,"-":15,"francisyzy":6}},{"path":"src/main/java/seedu/vms/ui/patient/SimplifiedPatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui.patient;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.UiPart;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * Simplified graphical view of a patient.","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class SimplifiedPatientCard extends UiPart\u003cHBox\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FXML_FILE \u003d \"SimplifiedPatientCard.fxml\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label idLabel;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label nameLabel;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code SimplifiedVaxTypeCard}.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param patient - the vaccination to display.","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public SimplifiedPatientCard(IdData\u003cPatient\u003e data) {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        super(FXML_FILE);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        idLabel.setText(String.format(\"#%04d\", data.getId() + 1));","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        nameLabel.setText(data.getValue().getName().toString());","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"daitenshionyan":31}},{"path":"src/main/java/seedu/vms/ui/vaccination/RequirementBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui.vaccination;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.TagFlowView;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.UiPart;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * Graphical representation of a requirement and its associated index.","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class RequirementBox extends UiPart\u003cHBox\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FXML_FILE \u003d \"RequirementBox.fxml\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label indexLabel;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox tagBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code RequirementBox}.","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public RequirementBox(int index, TagFlowView tagView) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        super(FXML_FILE);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        indexLabel.setText(String.format(\"%d.\", index + 1));","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        tagBox.getChildren().add(tagView);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"daitenshionyan":29}},{"path":"src/main/java/seedu/vms/ui/vaccination/SimplifiedVaxTypeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui.vaccination;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.UiPart;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * Simplified view of a vaccination.","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class SimplifiedVaxTypeCard extends UiPart\u003cHBox\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FXML_FILE \u003d \"SimplifiedVaxTypeCard.fxml\";","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label indexLabel;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label nameLabel;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code SimplifiedVaxTypeCard}.","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param index - the index of this card.","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the vaccination to display.","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public SimplifiedVaxTypeCard(int index, VaxType vaxType) {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        super(FXML_FILE);","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        indexLabel.setText(String.valueOf(index));","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        nameLabel.setText(vaxType.getName());","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"daitenshionyan":31}},{"path":"src/main/java/seedu/vms/ui/vaccination/VaxTypeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui.vaccination;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.TagFlowView;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.UiPart;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" * Graphical representation of a vaccination type.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FXML_FILE \u003d \"VaxTypeCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label titleLabel;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label ageRangeLabel;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox groupBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox ingredientBox;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox historyBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxTypeCard}.","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the vaccination type to display.","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeCard(VaxType vaxType) {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        super(FXML_FILE);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        titleLabel.setText(vaxType.getName());","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        ageRangeLabel.setText(String.format(\"%s ~ %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                vaxType.getMinAge(),","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                vaxType.getMaxAge()));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        groupBox.getChildren().add(new TagFlowView(vaxType.getGroups()","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                .map(GroupName::getName)","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList())));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        ingredientBox.getChildren().add(new TagFlowView(","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                vaxType.getIngredients()","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                    .stream()","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                    .map(GroupName::toString)","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                    .collect(Collectors.toList()),","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                TagFlowView.STYLE_CLASS_TAG_RED));","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        addAllReq(historyBox, vaxType.getHistoryReqs());","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    private void addAllReq(VBox box, List\u003cRequirement\u003e reqs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c reqs.size(); i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            Requirement req \u003d reqs.get(i);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            List\u003cString\u003e styleClasses \u003d List.of();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            switch (req.getReqType()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            case ALL:","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                styleClasses \u003d List.of(TagFlowView.STYLE_CLASS_TAG_BLUE);","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            case ANY:","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                styleClasses \u003d List.of(TagFlowView.STYLE_CLASS_TAG_GREEN);","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            case NONE:","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                styleClasses \u003d List.of(TagFlowView.STYLE_CLASS_TAG_RED);","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            default:","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                throw new AssertionError(String.format(\"Unrecognized requirement type\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            TagFlowView tagView \u003d new TagFlowView(","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"                    req.getReqSet()","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"                            .stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                            .map(GroupName::getName)","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"                            .collect(Collectors.toList()),","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                    styleClasses);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            box.getChildren().add(new RequirementBox(i, tagView).getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":82}},{"path":"src/main/resources/view/AppointmentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"\u003cGridPane hgap\u003d\"5.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"400.0\" vgap\u003d\"10.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"        \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"NEVER\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"80.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"        \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"ALWAYS\" prefWidth\u003d\"273.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"        \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"        \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        \u003cVBox alignment\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"25.0\" styleClass\u003d\"card-id-holder\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"                \u003cLabel fx:id\u003d\"idLabel\" styleClass\u003d\"card-sub-title\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Patient id:\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Duration:\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Vaccine:\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Status:\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel fx:id\u003d\"patientId\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"273.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel fx:id\u003d\"appointmentTime\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"273.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel fx:id\u003d\"vaccine\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"273.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        \u003cLabel fx:id\u003d\"status\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"273.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"nusE0726844":40}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":".root {","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"  /* Override of default modena css from https://gist.github.com/maxd/63691840fc372f22f470 */","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"  /* Arrangement follows above as well */","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background: #383838;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"  /* Inside boxes */","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"  -fx-control-inner-background: derive(-fx-base, 10%);","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"  /* For alternate rows */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"  -fx-control-inner-background-alt: derive(-fx-control-inner-background, 3%);","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"  /* Text colors */","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"  -fx-dark-text-color: black;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"  -fx-mid-text-color: #333;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"  -fx-light-text-color: white;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"  /* Highlight fill color */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"  -fx-accent: derive(-fx-base, -10%);","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"  /* Highlight flow for focus */","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"  -fx-focus-color: rgb(167, 138, 173);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"  -fx-faint-focus-color: rgba(167, 138, 173, 0.167);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"  -fx-color: -fx-base;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"  -fx-hover-base: ladder(","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"      -fx-base,","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"      derive(-fx-base, -2%) 20%,","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"      derive(-fx-base, -5%) 35%,","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"      derive(-fx-base, -10%) 50%","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"  );","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-background-color: ladder(","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    -fx-background,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    -fx-light-text-color 45%,","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color  46%,","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color  59%,","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color   60%","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"  );","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-inner-color: ladder(","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    -fx-control-inner-background,","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    -fx-light-text-color 45%,","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color  46%,","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color  59%,","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    -fx-dark-text-color   60%","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"  );","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"  -fx-box-border: derive(-fx-color,-15%);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-box-border: derive(-fx-background, -15%);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"  -fx-shadow-highlight-color: derive(-fx-color, -10%);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"  -fx-outer-border: derive(-fx-color, -10%);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"  -fx-inner-border: derive(-fx-color, -12%);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"  -fx-inner-border-horizontal: -fx-inner-border;","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"  -fx-inner-border-bottomup: -fx-inner-border;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"  -fx-body-color: -fx-color;","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"  -fx-body-color-bottomup: -fx-color;","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"  -fx-body-color-to-right: -fx-color;","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"  -fx-selection-bar: -fx-accent;","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"  -fx-selection-bar-non-focused: derive(-fx-accent, -20%);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TEXT FIELD \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":".text-field {","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"  -fx-prompt-text-fill: gray;","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SCROLL BAR \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .track {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: -fx-background;","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-insets: 1 1 1 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"  -fx-border-color: transparent;","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .increment-button,","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .decrement-button,","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"  -fx-shape: \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"  -fx-padding: 0 5 0 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: derive(-fx-color, 50%);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-radius: 5;","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"  -fx-padding: 5;","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RESULT DISPLAY \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":".result-display {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: -fx-control-inner-background;","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":".result-message-box,","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":".result-message-box .scroll-pane,","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":".result-message-box .scroll-pane .content {","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"  -fx-border-color: transparent;","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 12;","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":".result-message-death-color {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: #7721d2;","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":".result-message-error-color {","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: #bc5050;","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":".result-message-warning-color {","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: #bcb750;","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":".result-message-info-color {","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: #d9d9d9;","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Cards \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":".label.card-title {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 16;","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: rgb(224, 152, 19);","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":".card-id-holder {","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: rgb(224, 152, 19);","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":".label.card-sub-title {","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":".label.card-attribute-label,","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":".label.card-attribute-title-label {","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: #707070;","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":".label.card-attribute-label {","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":".label.card-attribute-title-label {","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 13;","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":".detailed-view-card,","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":".detailed-scroll-pane .viewport {","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: -fx-color;","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d Tag related styles \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":".tag-flow-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"  -fx-hgap: 5;","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"  -fx-vgap: 5;","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":".label.tag {","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"  -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"  -fx-border-radius: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":".label.tag.tag-color-blue {","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #151790;","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":".label.tag.tag-color-green {","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #119654;","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":".label.tag.tag-color-red {","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #901515;","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d Dialog pane \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 14px;","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 18px;","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-style: italic;","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"  -fx-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"daitenshionyan":135,"-":84}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"\u003cfx:root height\u003d\"850.0\" minHeight\u003d\"700.0\" minWidth\u003d\"1280.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Vaccination Management System\" type\u003d\"javafx.stage.Stage\" width\u003d\"1280.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    \u003cImage url\u003d\"@/images/vms_icon_32.png\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" minHeight\u003d\"-Infinity\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"200.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            \u003cHBox alignment\u003d\"TOP_CENTER\" spacing\u003d\"5.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                   \u003cVBox spacing\u003d\"5.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                       \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"200.0\" prefWidth\u003d\"410.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                     \u003cScrollPane hbarPolicy\u003d\"NEVER\" styleClass\u003d\"detailed-scroll-pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                        \u003ccontent\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                           \u003cVBox fx:id\u003d\"detailedPatientPanel\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                        \u003c/content\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                     \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                   \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                   \u003cVBox maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" spacing\u003d\"5.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                       \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                           \u003cStackPane fx:id\u003d\"vaxTypeListPanelPlaceholder\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"200.0\" prefWidth\u003d\"410.0\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                        \u003cScrollPane hbarPolicy\u003d\"NEVER\" styleClass\u003d\"detailed-scroll-pane\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                           \u003ccontent\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                              \u003cVBox fx:id\u003d\"detailedVaxTypePanel\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                           \u003c/content\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                       \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                   \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"                   \u003cVBox maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"                       \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                           \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"410.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"                       \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"                   \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"daitenshionyan":34,"-":42,"francisyzy":1,"nusE0726844":4}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"\u003cGridPane hgap\u003d\"5.0\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" vgap\u003d\"10.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    \u003cColumnConstraints hgrow\u003d\"NEVER\" prefWidth\u003d\"80.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"  \u003crowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"  \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox prefWidth\u003d\"390.0\" spacing\u003d\"5.0\" GridPane.columnSpan\u003d\"2147483647\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox alignment\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"25.0\" styleClass\u003d\"card-id-holder\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel fx:id\u003d\"idLabel\" styleClass\u003d\"card-sub-title\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox minHeight\u003d\"25.0\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel fx:id\u003d\"nameLabel\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"305.0\" styleClass\u003d\"card-title\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"DOB:\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"dobLabel\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Blood type:\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"bloodTypeLabel\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Allergies:\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"allergyBox\" maxWidth\u003d\"305.0\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Phone:\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"phoneLabel\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Vaccines:\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"vaccineBox\" maxWidth\u003d\"305.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":39,"-":14}},{"path":"src/main/resources/view/RequirementBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"390.0\" spacing\u003d\"5.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"indexLabel\" prefWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"tagBox\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"365.0\" HBox.hgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"daitenshionyan":12}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"200.0\" styleClass\u003d\"result-display\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"displayArea\" spacing\u003d\"5.0\" styleClass\u003d\"result-display\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":11,"-":3}},{"path":"src/main/resources/view/ResultMessageBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003cHBox maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"70.0\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"            \u003cLabel fx:id\u003d\"stateLabel\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            \u003cTextArea fx:id\u003d\"messageArea\" editable\u003d\"false\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" styleClass\u003d\"result-message-box\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":24}},{"path":"src/main/resources/view/SimplifiedPatientCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"\u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" spacing\u003d\"5.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox alignment\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"25.0\" prefWidth\u003d\"80.0\" styleClass\u003d\"card-id-holder\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"            \u003cLabel fx:id\u003d\"idLabel\" styleClass\u003d\"card-sub-title\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            \u003cLabel fx:id\u003d\"nameLabel\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"card-title\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"daitenshionyan":25}},{"path":"src/main/resources/view/SimplifiedVaxTypeCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003cHBox alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" spacing\u003d\"5.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"indexLabel\" prefWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"            \u003cLabel fx:id\u003d\"nameLabel\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"card-title\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"daitenshionyan":20}},{"path":"src/main/resources/view/VaxTypeCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"\u003cGridPane hgap\u003d\"5.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" vgap\u003d\"10.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"   \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"      \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"NEVER\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"80.0\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"      \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"titleLabel\" maxWidth\u003d\"390.0\" minHeight\u003d\"-Infinity\" styleClass\u003d\"card-title\" wrapText\u003d\"true\" GridPane.columnSpan\u003d\"2147483647\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Age\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"ageRangeLabel\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Group(s)\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"groupBox\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"305.0\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel minHeight\u003d\"-Infinity\" styleClass\u003d\"card-attribute-label\" text\u003d\"Ingredient(s)\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"ingredientBox\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"305.0\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox spacing\u003d\"5.0\" GridPane.columnSpan\u003d\"2147483647\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            \u003cLabel styleClass\u003d\"card-attribute-title-label\" text\u003d\"History requirement(s)\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox fx:id\u003d\"historyBox\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"390.0\" spacing\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":40}},{"path":"src/test/java/seedu/vms/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"daitenshionyan":1,"-":57}},{"path":"src/test/java/seedu/vms/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\";","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"daitenshionyan":3,"-":24}},{"path":"src/test/java/seedu/vms/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":3,"-":133}},{"path":"src/test/java/seedu/vms/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core.index;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        final Index fifthPatientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        assertTrue(fifthPatientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        assertTrue(fifthPatientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assertTrue(fifthPatientIndex.equals(fifthPatientIndex));","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        assertFalse(fifthPatientIndex.equals(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        assertFalse(fifthPatientIndex.equals(5.0f));","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        assertFalse(fifthPatientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"daitenshionyan":3,"-":51,"francisyzy":7}},{"path":"src/test/java/seedu/vms/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        assertNotNull(AppUtil.getImage(\"/images/vms_icon_32.png\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"daitenshionyan":3,"-":33,"francisyzy":1}},{"path":"src/test/java/seedu/vms/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"daitenshionyan":4,"-":105}},{"path":"src/test/java/seedu/vms/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Config;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public void read_missingFile_emptyResult() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e read(\"NonExistentFile.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public void read_fileInOrder_successfullyRead() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        Config actual \u003d read(\"TypicalConfig.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        Config actual \u003d read(\"EmptyConfig.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    private Config read(String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public void saveConfig_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":16,"-":96}},{"path":"src/test/java/seedu/vms/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":3,"-":21}},{"path":"src/test/java/seedu/vms/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_DATA_DIR \u003d Paths.get(\"src/test/data/JsonUtilTest\");","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_VALID_FILE \u003d PATH_DATA_DIR.resolve(\"ValidFile.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_INVALID_JSON_FORMAT \u003d PATH_DATA_DIR.resolve(\"InvalidJsonFormat.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_INVALID_JSON_MAPPING \u003d PATH_DATA_DIR.resolve(\"InvalidJsonMapping.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_NON_EXISTENT_FILE \u003d PATH_DATA_DIR.resolve(\"PathThatDoesNotExist.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public void deserializeFromFile_validFile_objectCreated() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        StubObject deserialized \u003d deserializeFromFile(PATH_VALID_FILE);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(new StubObject(), deserialized);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public void deserializeFromFile_invalidJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e deserializeFromFile(PATH_INVALID_JSON_FORMAT));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e deserializeFromFile(PATH_INVALID_JSON_MAPPING));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    public void deserializeFromFile_nonExistentFile_exceptionThrown() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e deserializeFromFile(PATH_NON_EXISTENT_FILE));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    private StubObject deserializeFromFile(Path path) throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        return JsonUtil.deserializeFromFile(path, StubObject.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    private static class StubObject {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        private static final int DEFAULT_INT_PROPERTY \u003d 5;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        private static final String DEFAULT_STRING_PROPERTY \u003d \"five\";","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        private final int intProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        private final String stringProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        public StubObject(","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                    @JsonProperty(\"intProperty\") int intProperty,","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                    @JsonProperty(\"stringProperty\") String stringProperty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            this.intProperty \u003d intProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            this.stringProperty \u003d stringProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        public StubObject() {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            this(DEFAULT_INT_PROPERTY, DEFAULT_STRING_PROPERTY);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            if (!(other instanceof StubObject)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            StubObject casted \u003d (StubObject) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"            return intProperty \u003d\u003d casted.intProperty","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                    \u0026\u0026 stringProperty.equals(casted.stringProperty);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":85,"-":7}},{"path":"src/test/java/seedu/vms/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    //---------------- Tests for isMatching --------------------------------------","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public void isMatching() {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        String text \u003d \"John Doe John Alex UNCHI[]{}()\u003ca\u003e\u0026\u0026\u0026\\\\\u003d:\";","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(StringUtil.isMatching(text, List.of(\"\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(StringUtil.isMatching(text, List.of(\"John\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(StringUtil.isMatching(text, List.of(\"John\", \"John\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(StringUtil.isMatching(text, List.of(\"John\", \"unchi\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(StringUtil.isMatching(text, List.of(\"oh\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(StringUtil.isMatching(text, List.of(\"[]\", \"{}\", \"()\", \"\u003ca\u003e\", \"\u0026\u0026\u0026\", \"\\\\\", \"\u003d\", \":\")));","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(StringUtil.isMatching(text, List.of(\"BANANA\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(StringUtil.isMatching(text, List.of(\"Doe\", \"Doe\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(StringUtil.isMatching(text, List.of(\"Alex\", \"doe\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"daitenshionyan":19,"-":142,"francisyzy":2}},{"path":"src/test/java/seedu/vms/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        CommandMessage commandResult \u003d new CommandMessage(\"feedback\");","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(commandResult.equals(new CommandMessage(\"feedback\")));","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(commandResult.equals(new CommandMessage(\"feedback\", false, false)));","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(commandResult.equals(new CommandMessage(\"different\")));","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(commandResult.equals(new CommandMessage(\"feedback\", true, false)));","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(commandResult.equals(new CommandMessage(\"feedback\", false, true)));","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        CommandMessage commandResult \u003d new CommandMessage(\"feedback\");","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(commandResult.hashCode(), new CommandMessage(\"feedback\").hashCode());","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandMessage(\"different\").hashCode());","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandMessage(\"feedback\", true, false).hashCode());","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandMessage(\"feedback\", false, true).hashCode());","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"daitenshionyan":15,"-":42}},{"path":"src/test/java/seedu/vms/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.FindPatientDescriptorBuilder;","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_DOB_AMY \u003d \"1998-05-23\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_DOB_BOB \u003d \"2001-01-29\";","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_BLOODTYPE_AMY \u003d \"A+\";","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_BLOODTYPE_BOB \u003d \"B-\";","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_ALLERGY_SEAFOOD \u003d \"seafood\";","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_ALLERGY_GLUTEN \u003d \"gluten\";","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_VACCINATION \u003d \"moderna\";","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + DELIMITER + PREFIX_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + DELIMITER + PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + DELIMITER + PREFIX_PHONE + \" \" + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + DELIMITER + PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public static final String DOB_DESC_AMY \u003d \" \" + DELIMITER + PREFIX_DOB + \" \" + VALID_DOB_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    public static final String DOB_DESC_BOB \u003d \" \" + DELIMITER + PREFIX_DOB + \" \" + VALID_DOB_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    public static final String BLOODTYPE_DESC_AMY \u003d \" \" + DELIMITER + PREFIX_BLOODTYPE + \" \" + VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public static final String BLOODTYPE_DESC_BOB \u003d \" \" + DELIMITER + PREFIX_BLOODTYPE + \" \" + VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    public static final String ALLERGY_DESC_GLUTEN \u003d \" \" + DELIMITER + PREFIX_ALLERGY + \" \" + VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    public static final String ALLERGY_DESC_SEAFOOD \u003d \" \" + DELIMITER + PREFIX_ALLERGY + \" \" + VALID_ALLERGY_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    public static final String VACCINATION_DESC_MODERNA \u003d \" \" + DELIMITER + PREFIX_VACCINATION + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            + VALID_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + DELIMITER + PREFIX_NAME + \" \" + \"James\u0026\";","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + DELIMITER + PREFIX_PHONE + \" \" + \"911a\";","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    // Date in the future","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    public static final String INVALID_DOB_DESC \u003d \" \" + DELIMITER + PREFIX_DOB + \" \" + \"2090-03-20\";","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    // empty string not allowed for blood type","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    public static final String INVALID_BLOODTYPE_DESC \u003d \" \" + DELIMITER + PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    // \u0027*\u0027 not allowed in allergy","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    public static final String INVALID_ALLERGY_DESC \u003d \" \" + DELIMITER + PREFIX_ALLERGY + \" \" + \"seafood*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    // \u0027*\u0027 not allowed in vaccine","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    public static final String INVALID_VACCINE_DESC \u003d \" \" + DELIMITER + PREFIX_VACCINATION + \" \" + \"moderna*\";","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"    public static final FindCommand.FindPatientDescriptor FIND_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_AMY).withDob(VALID_DOB_AMY).withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_BOB).withDob(VALID_DOB_BOB).withBloodType(VALID_BLOODTYPE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_SEAFOOD, VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        FIND_AMY \u003d new FindPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_AMY).withDob(VALID_DOB_AMY).withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"     * - the returned {@link CommandMessage} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandMessage expectedCommandResult,","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"            CommandMessage result \u003d command.execute(actualModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandMessage, Model)}","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        CommandMessage expectedCommandResult \u003d new CommandMessage(expectedMessage);","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"     * - the patient manager, filtered patient list and selected patient in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"        PatientManager expectedPatientManager \u003d new PatientManager(actualModel.getPatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"        Map\u003cInteger, IdData\u003cPatient\u003e\u003e expectedFilteredList \u003d actualModel.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedPatientManager, actualModel.getPatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPatientList());","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patient at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"     * {@code model}\u0027s patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"    public static void showPatientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"daitenshionyan":25,"-":65,"francisyzy":59}},{"path":"src/test/java/seedu/vms/logic/commands/basic/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.basic.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        CommandMessage expectedCommandResult \u003d new CommandMessage(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"daitenshionyan":7,"-":14}},{"path":"src/test/java/seedu/vms/logic/commands/basic/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.basic.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        CommandMessage expectedCommandResult \u003d new CommandMessage(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"daitenshionyan":7,"-":14}},{"path":"src/test/java/seedu/vms/logic/commands/patient/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public void execute_newPatient_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        expectedModel.addPatient(validPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        assertCommandSuccess(new AddCommand(validPatient), model,","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPatient), expectedModel);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"daitenshionyan":5,"-":23,"francisyzy":10}},{"path":"src/test/java/seedu/vms/logic/commands/patient/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.CommandMessage;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParseResult;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        ModelStubAcceptingPatientAdded modelStub \u003d new ModelStubAcceptingPatientAdded();","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        CommandMessage commandResult \u003d new AddCommand(validPatient).execute(modelStub);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPatient), commandResult.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.patientsAdded);","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        public void setPatientManager(ReadOnlyPatientManager newData) {","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        public void deletePatient(int id, boolean isForce) {","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"        public void deleteAppointment(int id) {","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"        public void markAppointment(int id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"        public void unmarkAppointment(int id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"        public void setPatient(int id, Patient editedPatient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"        public void setAppointment(int id, Appointment editedAppointment) {","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"        public ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"nusE0726844"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"nusE0726844"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"        public boolean hasPatient(int id) {","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"nusE0726844"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"nusE0726844"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"        public ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap() {","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"        public VaxTypeManager getVaxTypeManager() {","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"slackernoob"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"slackernoob"},"content":"        public void addKeyword(Keyword keyword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"slackernoob"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"slackernoob"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"slackernoob"},"content":"        public Keyword deleteKeyword(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"slackernoob"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"slackernoob"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"slackernoob"},"content":"        public void setKeywordManager(KeywordManager manager) {","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"nusE0726844"},"content":"        public ObservableMap\u003cInteger, IdData\u003cAppointment\u003e\u003e getFilteredAppointmentMap() {","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"slackernoob"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"slackernoob"},"content":"        public KeywordManager getKeywordManager() {","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":212,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"nusE0726844"},"content":"        public AppointmentManager getAppointmentManager() {","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":217,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"        public void setVaxTypeManager(VaxTypeManager manager) {","lastModifiedDate":"2023-03-18"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"        public void setAppointmentManager(AppointmentManager manager) {","lastModifiedDate":"2023-03-18"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"        public ParseResult parseCommand(String userCommand) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"francisyzy"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":235,"author":{"gitId":"francisyzy"},"content":"        public void setPatientFilters(Collection\u003cPredicate\u003cPatient\u003e\u003e filters) {","lastModifiedDate":"2023-03-25"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":237,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":238,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"        public void setVaccinationFilters(Collection\u003cPredicate\u003cVaxType\u003e\u003e filters) {","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"nusE0726844"},"content":"        public void setAppointmentFilters(Collection\u003cPredicate\u003cAppointment\u003e\u003e filters) {","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"        public List\u003cIdData\u003cAppointment\u003e\u003e validatePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"        public void handlePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-25"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"        public List\u003cIdData\u003cAppointment\u003e\u003e validateVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"        public void handleVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-25"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"        public ObjectProperty\u003cVaxType\u003e detailedVaccinationProperty() {","lastModifiedDate":"2023-04-07"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"        public void setDetailedVaxType(VaxType vaxType) {","lastModifiedDate":"2023-03-25"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"        public ObjectProperty\u003cIdData\u003cPatient\u003e\u003e detailedPatientProperty() {","lastModifiedDate":"2023-04-07"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"        public void setDetailedPatient(IdData\u003cPatient\u003e patient) {","lastModifiedDate":"2023-03-25"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"        public void bindVaccinationDisplayList(ObservableList\u003cVaxType\u003e displayList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"        public VaxType getVaccination(Retriever\u003cString, VaxType\u003e retriever) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"        public ValueChange\u003cVaxType\u003e addVaccination(VaxType vaxType) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"        public ValueChange\u003cVaxType\u003e editVaccination(String name, VaxType newValue) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"daitenshionyan"},"content":"        public ValueChange\u003cVaxType\u003e deleteVaccination(GroupName vaxName, boolean isForce)","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"daitenshionyan"},"content":"                    throws IllegalValueException, UnexpectedChangeException {","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":312,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":314,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":315,"author":{"gitId":"daitenshionyan"},"content":"        public void resetPatientIds() {","lastModifiedDate":"2023-04-06"},{"lineNumber":316,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":317,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":321,"author":{"gitId":"francisyzy"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-03-03"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":323,"author":{"gitId":"francisyzy"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2023-03-03"},{"lineNumber":324,"author":{"gitId":"francisyzy"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":327,"author":{"gitId":"francisyzy"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":328,"author":{"gitId":"francisyzy"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":329,"author":{"gitId":"francisyzy"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":333,"author":{"gitId":"francisyzy"},"content":"        public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":334,"author":{"gitId":"francisyzy"},"content":"            return new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"daitenshionyan":133,"slackernoob":20,"-":112,"nusE0726844":42,"francisyzy":31}},{"path":"src/test/java/seedu/vms/logic/commands/patient/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    public void execute_emptyPatientManager_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public void execute_nonEmptyPatientManager_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        expectedModel.setPatientManager(new PatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"daitenshionyan":5,"-":20,"francisyzy":7}},{"path":"src/test/java/seedu/vms/logic/commands/patient/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_NINE_NINE_PATIENT;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        expectedModel.deletePatient(INDEX_FIRST_PATIENT.getZeroBased(), true);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @Test void execute_previouslyDeletedIndex_throwsCommandException() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        // Delete patient","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        expectedModel.deletePatient(INDEX_FIRST_PATIENT.getZeroBased(), true);","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        // Attempt to delete the same patient","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validIndexFilteredList_success() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        expectedModel.deletePatient(INDEX_FIRST_PATIENT.getZeroBased(), true);","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        showNoPatient(expectedModel);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d INDEX_NINE_NINE_PATIENT;","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"daitenshionyan":21,"-":67,"francisyzy":36}},{"path":"src/test/java/seedu/vms/logic/commands/patient/DetailCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_NINE_NINE_PATIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":" * {@code DetailCommand}.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"public class DetailCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDetail \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        DetailCommand detailCommand \u003d new DetailCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(DetailCommand.MESSAGE_SUCCESS, INDEX_FIRST_PATIENT.getOneBased(),","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                patientToDetail);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        assertCommandSuccess(detailCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        DetailCommand detailCommand \u003d new DetailCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(detailCommand, model, DetailCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDetail \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        DetailCommand detailCommand \u003d new DetailCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(DetailCommand.MESSAGE_SUCCESS, INDEX_FIRST_PATIENT.getOneBased(),","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                patientToDetail);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        assertCommandSuccess(detailCommand, model, expectedMessage, model);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d INDEX_NINE_NINE_PATIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        DetailCommand detailCommand \u003d new DetailCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(detailCommand, model, DetailCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    public void equals() {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        DetailCommand detailFirstCommand \u003d new DetailCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        DetailCommand detailSecondCommand \u003d new DetailCommand(INDEX_SECOND_PATIENT);","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        assertTrue(detailFirstCommand.equals(detailFirstCommand));","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        DetailCommand detailFirstCommandCopy \u003d new DetailCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        assertTrue(detailFirstCommand.equals(detailFirstCommandCopy));","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        assertFalse(detailFirstCommand.equals(1));","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        assertFalse(detailFirstCommand.equals(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        assertFalse(detailFirstCommand.equals(detailSecondCommand));","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"francisyzy":93}},{"path":"src/test/java/seedu/vms/logic/commands/patient/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(new PatientManager(model.getPatientManager()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        expectedModel.setPatient(INDEX_FIRST_PATIENT.getZeroBased(), editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        Index indexLastPatient \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPatient.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_BOB).withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPatient, descriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(new PatientManager(model.getPatientManager()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        expectedModel.setPatient(indexLastPatient.getZeroBased(), editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, new EditPatientDescriptor());","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(new PatientManager(model.getPatientManager()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased())","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"                .getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d new PatientBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(new PatientManager(model.getPatientManager()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        expectedModel.setPatient(0, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_ID);","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, DESC_AMY);","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PATIENT, copyDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PATIENT, DESC_AMY)));","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PATIENT, DESC_BOB)));","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"daitenshionyan":12,"-":74,"francisyzy":50}},{"path":"src/test/java/seedu/vms/logic/commands/patient/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_SEAFOOD;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        // different bloodType -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withBloodType(VALID_BLOODTYPE_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withDob(VALID_DOB_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        // different allergies -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withAllergies(VALID_ALLERGY_SEAFOOD).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"daitenshionyan":5,"-":38,"francisyzy":15}},{"path":"src/test/java/seedu/vms/logic/commands/patient/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    public void execute_zeroKeywords_noPatientFound() {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        assertEquals(true, model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"daitenshionyan":5,"-":55,"francisyzy":10}},{"path":"src/test/java/seedu/vms/logic/commands/patient/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"daitenshionyan":5,"-":28,"francisyzy":6}},{"path":"src/test/java/seedu/vms/logic/commands/vaccination/AddVaxTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.vaccination.AddVaxTypeParser;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.TestUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"public class AddVaxTypeTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_AGE_RANGE_CMD \u003d String.format(\"UNCHI --%s %d --%s %d\",","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_MIN_AGE.getPrefix(), 100,","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_MAX_AGE.getPrefix(), 99);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_AGE_CMD \u003d String.format(\"UNCHI --%s %d --%s %d\",","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_MIN_AGE.getPrefix(), -100,","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_MAX_AGE.getPrefix(), 99);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_GROUP_CMD \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_VAX_GROUPS.getPrefix(),","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            \"abc,\" + \"123,\" + \"unchi,\" + \"i am invalid ( ^)o(^ )b,\" + \"banana\");","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_TYPE_CMD \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_INGREDIENTS.getPrefix(),","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            \"rUbb15h::UNCHI\");","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_CMD_EMPTY \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_INGREDIENTS.getPrefix(),","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            \"NONE::\" + ParserUtil.KEYWORD_EMPTY_LIST);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_CMD_SYNTAX \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_INGREDIENTS.getPrefix(),","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            \"NONE::UNCHI, i am invalid ( ^)o(^ )b, BANANA\");","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_CMD_TOO_FEW_PARTS \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_HISTORY_REQ.getPrefix(),","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            \"NONE\");","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_CMD_TOO_MANY_PARTS \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_HISTORY_REQ.getPrefix(),","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            \"NONE::UNCHI, BANANA::NONE::pear\");","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validBasic() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validPartial() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_INGREDIENTS_1,","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_1,","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_HISTORY_REQS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1);","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validFull() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        String command \u003d String.join(\" \",","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_NAME_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_MIN_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_HISTORY_REQS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_MAX_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_GROUPS_REAL);","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(command,","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_invalidName_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        // empty","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(\"\", ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        // blank","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(\" \", ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"        // illegal characters","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(\"( ^)o(^ )b \", ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"        // too long","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(\"(15 characters)(15 characters)a\", ParseException.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"        // duplicate","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeModelStub model \u003d new VaxTypeModelStub();","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argsMap1 \u003d ArgumentTokenizer.tokenize(SampleVaxTypeData.CMD_NAME_1);","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        new AddVaxTypeParser().parse(argsMap1).execute(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"            ArgumentMultimap argsMap2 \u003d ArgumentTokenizer.tokenize(SampleVaxTypeData.CMD_NAME_1);","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"            new AddVaxTypeParser().parse(argsMap2).execute(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_invalidAgeRange_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        // min \u003e max","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_AGE_RANGE_CMD, CommandException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        // age \u003c 0","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_AGE_CMD, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_invalidGroup_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_GROUP_CMD, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_invalidReq_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_TYPE_CMD, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_CMD_EMPTY, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_CMD_SYNTAX, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_CMD_TOO_FEW_PARTS, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_CMD_TOO_MANY_PARTS, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_groupOverLimit_exceptionThrown() {","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e overLimitSet \u003d TestUtil.generateGroupSet(VaxType.LIMIT_GROUPS + 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"        String overLimitCmdPart \u003d TestUtil.toCommandString(overLimitSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        String overLimitCmd \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"                CliSyntax.PREFIX_VAX_GROUPS,","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"                overLimitCmdPart);","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(overLimitCmd, CommandException.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_ingredientsOverLimit_exceptionThrown() {","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e overLimitSet \u003d TestUtil.generateGroupSet(VaxType.LIMIT_INGREDIENTS + 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        String overLimitCmdPart \u003d TestUtil.toCommandString(overLimitSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"        String overLimitCmd \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"                CliSyntax.PREFIX_INGREDIENTS,","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"                overLimitCmdPart);","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(overLimitCmd, CommandException.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_historyReqOverLimit_exceptionThrown() {","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c VaxType.LIMIT_HISTORY_REQ + 1; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"            builder.append(String.format(\"--%s %s :: %s\",","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"                    CliSyntax.PREFIX_HISTORY_REQ,","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"                    Requirement.RequirementType.ANY.name(),","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"                    String.valueOf(i)));","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"        String command \u003d String.format(\"UNCHI %s\", builder.toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(command, CommandException.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"    private void checkExecution(String command, GroupName name, HashSet\u003cGroupName\u003e groups,","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"                Age minAge, Age maxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"                HashSet\u003cGroupName\u003e allergyReq, List\u003cRequirement\u003e historyReq) throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"        VaxType expected \u003d new VaxType(name, groups, minAge, maxAge, allergyReq, historyReq);","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeModelStub model \u003d new VaxTypeModelStub();","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argsMap \u003d ArgumentTokenizer.tokenize(command);","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"        new AddVaxTypeParser().parse(argsMap).execute(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"        VaxType actual \u003d model.manager.get(name.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"    private \u003cT extends Throwable\u003e void checkExecutionEx(String command, Class\u003cT\u003e exception) {","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(exception, () -\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"            ArgumentMultimap argsMap \u003d ArgumentTokenizer.tokenize(command);","lastModifiedDate":"2023-03-17"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"            new AddVaxTypeParser().parse(argsMap).execute(new VaxTypeModelStub());","lastModifiedDate":"2023-03-17"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-03-17"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":235}},{"path":"src/test/java/seedu/vms/logic/commands/vaccination/DeleteVaxTypeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.vaccination.DeleteVaxTypeParser;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class DeleteVaxTypeCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TO_DELETE \u003d SampleVaxTypeData.TYPE_REAL;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType NON_EXISTENT \u003d SampleVaxTypeData.TYPE_1;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeModelStub model;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public void addVaxType() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        model \u003d new VaxTypeModelStub();","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        model.manager.add(SampleVaxTypeData.TYPE_REAL);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validName_vaxTypeDeleted() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        attemptDelete(TO_DELETE.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(!model.manager.contains(TO_DELETE.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_nonExistent_exceptionThrown() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(CommandException.class, () -\u003e attemptDelete(NON_EXISTENT.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(model.manager.contains(TO_DELETE.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    private void attemptDelete(String command) throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argsMap \u003d ArgumentTokenizer.tokenize(command);","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        new DeleteVaxTypeParser().parse(argsMap).execute(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":49}},{"path":"src/test/java/seedu/vms/logic/commands/vaccination/EditVaxTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.vaccination.EditVaxTypeParser;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class EditVaxTypeTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType ORIGINAL \u003d SampleVaxTypeData.TYPE_1;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType EDITED_NO_RENAME \u003d new VaxType(","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            ORIGINAL.getGroupName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            ORIGINAL.getMinAge(),","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            ORIGINAL.getMaxAge(),","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            ORIGINAL.getIngredients(),","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            ORIGINAL.getHistoryReqs());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType EDITED_RENAME \u003d SampleVaxTypeData.TYPE_REAL;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private static final String CMD_VALID_NO_RENAME \u003d String.join(\" \",","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_NAME_1,","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_GROUPS_REAL);","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private static final String CMD_VALID_RENAME \u003d String.join(\" \",","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_NAME_1,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            CliSyntax.DELIMITER + CliSyntax.PREFIX_NAME + \" \" + SampleVaxTypeData.CMD_NAME_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_GROUPS_REAL,","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_MIN_AGE_REAL,","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            CliSyntax.DELIMITER + CliSyntax.PREFIX_MAX_AGE + \" \" + Age.MAX_VALUE,","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private static final String CMD_NON_EXISTENT_NAME \u003d String.join(\" \",","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_NAME_REAL,","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_GROUPS_REAL);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    private static final String CMD_EXISTING_RENAME \u003d String.join(\" \",","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.CMD_NAME_1,","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            CliSyntax.DELIMITER + CliSyntax.PREFIX_NAME + \" \" + SampleVaxTypeData.CMD_NAME_REAL);","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeModelStub model;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public void initializeModel() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        model \u003d new VaxTypeModelStub();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        model.manager.add(ORIGINAL);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validEditNoRename_vaxTypeEdited() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        attemptExecution(CMD_VALID_NO_RENAME);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(EDITED_NO_RENAME, model.manager.get(EDITED_NO_RENAME.getName()).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(model.manager.contains(ORIGINAL.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validEdit_vaxTypeEdited() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        attemptExecution(CMD_VALID_RENAME);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(EDITED_RENAME, model.manager.get(EDITED_RENAME.getName()).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(!model.manager.contains(ORIGINAL.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_nonExistentName_exceptionThrown() {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(CommandException.class, () -\u003e attemptExecution(CMD_NON_EXISTENT_NAME));","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_existingRename_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        model.manager.add(EDITED_RENAME);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(CommandException.class, () -\u003e attemptExecution(CMD_EXISTING_RENAME));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    private void attemptExecution(String command) throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argsMap \u003d ArgumentTokenizer.tokenize(command);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        new EditVaxTypeParser().parse(argsMap).execute(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":88,"francisyzy":3}},{"path":"src/test/java/seedu/vms/logic/commands/vaccination/FindVaxTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.vaccination.FilterVaxTypeParser;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class FindVaxTypeTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final String VAX_NAME \u003d \"UNCHI () UNCHI\";","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeModelStub model;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public void addVaxType() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        model \u003d new VaxTypeModelStub();","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        model.manager.add(new VaxType(","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"                new GroupName(VAX_NAME),","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_1,","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1));","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_singlePattern() throws Exception {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        ObservableMap\u003cString, VaxType\u003e filteredMap \u003d model.filteredMapView.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        attemptFind(\"UnchI\");","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(filteredMap.isEmpty());","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        attemptFind(\"nch\");","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(filteredMap.isEmpty());","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        attemptFind(\"BANANA\");","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(filteredMap.isEmpty());","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_multiplePattern() throws Exception {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        ObservableMap\u003cString, VaxType\u003e filteredMap \u003d model.filteredMapView.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        attemptFind(VAX_NAME);","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(filteredMap.isEmpty());","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        attemptFind(\"Unchi unchi\");","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(filteredMap.isEmpty());","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        attemptFind(\"() ()\");","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(filteredMap.isEmpty());","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    private void attemptFind(String command) throws Exception {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argsMap \u003d ArgumentTokenizer.tokenize(command);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        new FilterVaxTypeParser().parse(argsMap).execute(model);","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"daitenshionyan":70}},{"path":"src/test/java/seedu/vms/logic/commands/vaccination/VaxTypeModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Retriever;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.ValueChange;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.UnexpectedChangeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParseResult;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.FilteredMapView;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.Keyword;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.model.keyword.KeywordManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":" * Stub {@code Model} to test vaccination commands.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeModelStub implements Model {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public final VaxTypeManager manager \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public final FilteredMapView\u003cString, VaxType\u003e filteredMapView \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            new FilteredMapView\u003c\u003e(manager.asUnmodifiableObservableMap());","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setUserPrefs\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getUserPrefs\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getGuiSettings\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setGuiSettings\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManager(ReadOnlyPatientManager patientManager) {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setPatientManager\u0027\");","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getPatientManager\u0027\");","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public boolean hasPatient(int id) {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027hasPatient\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"    public void deleteAppointment(int id) {","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027deleteAppointment\u0027\");","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"    public void markAppointment(int id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027markAppointment\u0027\");","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"    public void unmarkAppointment(int id) {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027unmarkAppointment\u0027\");","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027addPatient\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    public void setPatient(int id, Patient editedPatient) {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setPatient\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"    public void setAppointment(int id, Appointment editedAppointment) {","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setAppointment\u0027\");","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getFilteredPatientList\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap() {","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        return filteredMapView.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027updateFilteredPatientList\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027updateFilteredAppointmentList\u0027\");","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"    public void setAppointmentFilters(Collection\u003cPredicate\u003cAppointment\u003e\u003e filters) {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setAppointmentFilters\u0027\");","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager getVaxTypeManager() {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getVaxTypeManager\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027addAppointment\u0027\");","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"    public ObservableMap\u003cInteger, IdData\u003cAppointment\u003e\u003e getFilteredAppointmentMap() {","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getFilteredAppointmentMap\u0027\");","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager getAppointmentManager() {","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getAppointmentManager\u0027\");","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cVaxType\u003e deleteVaccination(GroupName vaxName, boolean isForced) throws IllegalValueException {","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        VaxType oldValue \u003d manager.remove(vaxName.toString())","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"                .orElseThrow(() -\u003e new IllegalValueException(String.format(","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"                        \"Vaccination type does not exist: %s\", vaxName.toString())));","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        return new ValueChange\u003c\u003e(oldValue, null);","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"slackernoob"},"content":"    public void addKeyword(Keyword keyword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"slackernoob"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027addKeyword\u0027\");","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"slackernoob"},"content":"    public Keyword deleteKeyword(String keyword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"slackernoob"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027deleteKeyword\u0027\");","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"slackernoob"},"content":"    public KeywordManager getKeywordManager() {","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"slackernoob"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getKeywordManager\u0027\");","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"slackernoob"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"slackernoob"},"content":"    public void setKeywordManager(KeywordManager manager) {","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"slackernoob"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setKeywordManager\u0027\");","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"    public ParseResult parseCommand(String userCommand) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027parseCommand\u0027\");","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"    public void setVaxTypeManager(VaxTypeManager manager) {","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setVaxTypeManager\u0027\");","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"    public void setAppointmentManager(AppointmentManager manager) {","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setAppointmentManager\u0027\");","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"    public void setPatientFilters(Collection\u003cPredicate\u003cPatient\u003e\u003e filters) {","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setPatientFilters\u0027\");","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"    public void setVaccinationFilters(Collection\u003cPredicate\u003cVaxType\u003e\u003e filters) {","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"        filteredMapView.setFilters(filters);","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cIdData\u003cAppointment\u003e\u003e validatePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027validatePatientChange\u0027\");","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"    public void handlePatientChange(ValueChange\u003cIdData\u003cPatient\u003e\u003e change) {","lastModifiedDate":"2023-03-25"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027handlePatientChange\u0027\");","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cIdData\u003cAppointment\u003e\u003e validateVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027validateVaccinationChange\u0027\");","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"    public void handleVaccinationChange(ValueChange\u003cVaxType\u003e change) {","lastModifiedDate":"2023-03-25"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027handleVaccinationChange\u0027\");","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"    public ObjectProperty\u003cVaxType\u003e detailedVaccinationProperty() {","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027detailVaxTypeProperty\u0027\");","lastModifiedDate":"2023-03-25"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"    public void setDetailedVaxType(VaxType vaxType) {","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setDetailedVaxType\u0027\");","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"    public ObjectProperty\u003cIdData\u003cPatient\u003e\u003e detailedPatientProperty() {","lastModifiedDate":"2023-04-07"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027detailedPatientProperty\u0027\");","lastModifiedDate":"2023-03-25"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"    public void setDetailedPatient(IdData\u003cPatient\u003e patient) {","lastModifiedDate":"2023-03-25"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setDetailedPatient\u0027\");","lastModifiedDate":"2023-03-25"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"    public void bindVaccinationDisplayList(ObservableList\u003cVaxType\u003e displayList) {","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027bindDisplayList\u0027\");","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType getVaccination(Retriever\u003cString, VaxType\u003e retriever) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"        return retriever.retrieve(manager.asUnmodifiableObservableMap(), null);","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cVaxType\u003e addVaccination(VaxType vaxType) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(vaxType);","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"        ValueChange\u003cVaxType\u003e change \u003d new ValueChange\u003c\u003e(null, vaxType);","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"        return change;","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"    public ValueChange\u003cVaxType\u003e editVaccination(String name, VaxType newValue) throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"        ValueChange\u003cVaxType\u003e change \u003d manager.set(name, newValue);","lastModifiedDate":"2023-03-26"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"        return change;","lastModifiedDate":"2023-03-26"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"    public void deletePatient(int id, boolean isForce) throws UnexpectedChangeException {","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027deletePatient\u0027\");","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"    public void resetPatientIds() {","lastModifiedDate":"2023-04-06"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027resetPatientIds\u0027\");","lastModifiedDate":"2023-04-06"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":203,"slackernoob":22,"nusE0726844":41,"francisyzy":10}},{"path":"src/test/java/seedu/vms/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        assertPreambleEmpty(argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_noFlags_allTakenAsPreamble() {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"   ruBb15h aNd m0re rubbish (o w o;)  \";","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        assertPreamblePresent(argMap, arg.strip());","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_oneArgumentWithPreamble() {","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"   PREAMBLE!! --flag argument value \";","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertPreamblePresent(argMap, \"PREAMBLE!!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag\"), \"argument value\");","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_oneArgumentWithoutPreamble() {","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"--flag argument value \";","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        assertPreambleEmpty(argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag\"), \"argument value\");","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"--flag-1 value 1 --flag-2 value2 --flag-3\";","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        assertPreambleEmpty(argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-1\"), \"value 1\");","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-2\"), \"value2\");","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-3\"), \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentAbsent(argMap, new Prefix(\"flag-4\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"--flag-1 value 1 --flag-1 value2 --flag-1\";","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        assertPreambleEmpty(argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-1\"), \"value 1\", \"value2\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentAbsent(argMap, new Prefix(\"flag-2\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_multipleArgumentsAlienSpacing() {","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"gomi--flag-1 value 1--    flag-1         value 2       --flag-1--flag-2\";","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        assertPreamblePresent(argMap, \"gomi\");","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-1\"), \"value 1\", \"value 2\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-2\"), \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentAbsent(argMap, new Prefix(\"flag-3\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_blankFlag_exceptionThrown() {","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"gomi--flag-1 value 1--flag-1         value 2       --flag-1--\";","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"            ArgumentTokenizer.tokenize(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            fail(\"Exception not thrown\");","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception thrown","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"    private ArgumentMultimap tokenizeSuccess(String args) {","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d new ArgumentMultimap();","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"            argMap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        } catch (Throwable ex) {","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"            fail(ex);","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        return argMap;","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"daitenshionyan":103,"-":49}},{"path":"src/test/java/seedu/vms/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static void assertParseSuccess(CommandParser parser, String userInput,","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            ArgumentMultimap argsMap \u003d ArgumentTokenizer.tokenize(userInput);","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            Command command \u003d parser.parse(argsMap);","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public static void assertParseFailure(CommandParser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            ArgumentMultimap argsMap \u003d ArgumentTokenizer.tokenize(userInput);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            parser.parse(argsMap);","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"daitenshionyan":9,"-":32}},{"path":"src/test/java/seedu/vms/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DOB \u003d \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_BLOODTYPE \u003d \"example.com\";","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_GROUPNAME \u003d \"#potato\";","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_DOB \u003d \"2001-02-23\";","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_BLOODTYPE \u003d \"A+\";","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_GROUPNAME_1 \u003d \"moderna\";","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_GROUPNAME_2 \u003d \"chinavax\";","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    private static final LocalDateTime EXPECTED_DATE \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    private static final LocalDateTime EXPECTED_DATE_ONLY \u003d LocalDateTime.of(2023, 3, 5, 0, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_DEFAULT_DATE \u003d \"2023-03-05T04:55\";","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_FULL_DATE \u003d \"2023-03-05 0455\";","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_DATE_ONLY \u003d \"2023-03-05\";","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_DATE_RUBBISH \u003d \"RuBbisH\";","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_MIN_OUT \u003d \"2023-03-05T04:99\";","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_HRS_OUT \u003d \"2023-03-05T99:55\";","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_DAY_OUT \u003d \"2023-03-99T04:55\";","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_MTH_OUT \u003d \"2023-99-99T04:55\";","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_ONLY_MTH_OUT \u003d \"2023-99-99\";","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e EXPECTED_PARSED_LIST \u003d List.of(\"UNCHI\", \"BANANA\", \"APPLE\");","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e VALID_LIST_SYNTAXES \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI, BANANA, APPLE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI,BANANA,APPLE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            \" UNCHI ,     BANANA,     APPLE     \");","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e VALID_PART_SYNTAXES \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI:: BANANA:: APPLE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI::BANANA::APPLE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            \" UNCHI ::     BANANA::     APPLE     \");","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e INVALID_LIST_SYNTAXES \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            \"\",","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            \",\",","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            \", UNCHI\",","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI,\",","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"            \",,\",","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            \",UNCHI,BANANA,\");","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e INVALID_PART_SYNTAXES \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            \"\",","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            \"::\",","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            \":: UNCHI\",","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI::\",","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            \"::::\",","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            \"::UNCHI,BANANA::\");","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX,","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"                () -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"    public void parseDob_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDob((String) null));","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"    public void parseDob_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDob(INVALID_DOB));","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"    public void parseDob_validValueWithoutWhitespace_returnsDob() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"        Dob expectedDob \u003d new Dob(VALID_DOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedDob, ParserUtil.parseDob(VALID_DOB));","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"    public void parseDob_validValueWithWhitespace_returnsTrimmedDob() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"        String dobWithWhitespace \u003d WHITESPACE + VALID_DOB + WHITESPACE;","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"        Dob expectedDob \u003d new Dob(VALID_DOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedDob, ParserUtil.parseDob(dobWithWhitespace));","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"    public void parseBloodType_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBloodType((String) null));","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"    public void parseBloodType_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBloodType(INVALID_BLOODTYPE));","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"    public void parseBloodType_validValueWithoutWhitespace_returnsBloodType() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        BloodType expectedBloodType \u003d new BloodType(VALID_BLOODTYPE);","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedBloodType, ParserUtil.parseBloodType(VALID_BLOODTYPE));","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"    public void parseBloodType_validValueWithWhitespace_returnsTrimmedBloodType() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"        String bloodTypeWithWhitespace \u003d WHITESPACE + VALID_BLOODTYPE + WHITESPACE;","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"        BloodType expectedBloodType \u003d new BloodType(VALID_BLOODTYPE);","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedBloodType, ParserUtil.parseBloodType(bloodTypeWithWhitespace));","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_validDefaultDate_returnDate() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime actualDate \u003d ParserUtil.parseDate(VALID_DEFAULT_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"        assertEquals(EXPECTED_DATE, actualDate);","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_validFullDate_returnDate() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"francisyzy"},"content":"        assertEquals(EXPECTED_DATE, ParserUtil.parseDate(VALID_FULL_DATE));","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_validDateOnly_returnDate() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"        assertEquals(EXPECTED_DATE_ONLY, ParserUtil.parseDate(VALID_DATE_ONLY));","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_rubbishDate_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_RUBBISH));","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_minutesOutOfRange_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_MIN_OUT));","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":220,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_hoursOutOfRange_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_HRS_OUT));","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"    public void parseDate_dayOutOfRange_throwsParseException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_DAY_OUT));","lastModifiedDate":"2023-02-27"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"    public void parseDate_monthOutOfRange_throwsParseException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_MTH_OUT));","lastModifiedDate":"2023-02-27"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":233,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":234,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"francisyzy"},"content":"    public void parseDateOnly_monthOutOfRange_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":236,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_ONLY_MTH_OUT));","lastModifiedDate":"2023-03-04"},{"lineNumber":237,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"    public void parseList_validList_listParsed() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"        for (String listString : VALID_LIST_SYNTAXES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(EXPECTED_PARSED_LIST, ParserUtil.parseList(listString));","lastModifiedDate":"2023-03-09"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"    public void parseParts_validParts_partsParsed() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"        for (String partString : VALID_PART_SYNTAXES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(EXPECTED_PARSED_LIST, ParserUtil.parseParts(partString));","lastModifiedDate":"2023-03-09"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"    public void parseList_invalidList_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"        for (String syntax : INVALID_LIST_SYNTAXES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseList(syntax));","lastModifiedDate":"2023-03-09"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"    public void parseParts_invalidParts_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"        for (String syntax : INVALID_PART_SYNTAXES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseParts(syntax));","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"    public void parseInteger_valid_integerParsed() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"        // small","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(-2147483648, ParserUtil.parseInteger(\"-2147483648\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"        // big","lastModifiedDate":"2023-03-09"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(2147483647, ParserUtil.parseInteger(\"2147483647\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"    public void parseInteger_invalid_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"        // too small","lastModifiedDate":"2023-03-09"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\"-2147483649\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"        // too big","lastModifiedDate":"2023-03-09"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\"2147483648\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"        // empty","lastModifiedDate":"2023-03-09"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\"\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"        // blank","lastModifiedDate":"2023-03-09"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"        // not a number","lastModifiedDate":"2023-03-09"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\"hanya??\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":288,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":289,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":290,"author":{"gitId":"francisyzy"},"content":"    public void parseGroupName_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":291,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroupName(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":292,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":293,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":294,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":295,"author":{"gitId":"francisyzy"},"content":"    public void parseGroupName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":296,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroups(INVALID_GROUPNAME));","lastModifiedDate":"2023-03-15"},{"lineNumber":297,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":298,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":299,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":300,"author":{"gitId":"francisyzy"},"content":"    public void parseGroupName_validValueWithoutWhitespace_returnsGroupName() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":301,"author":{"gitId":"francisyzy"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUPNAME_1);","lastModifiedDate":"2023-03-15"},{"lineNumber":302,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedGroupName, ParserUtil.parseGroupName(VALID_GROUPNAME_1));","lastModifiedDate":"2023-03-15"},{"lineNumber":303,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":304,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":305,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":306,"author":{"gitId":"francisyzy"},"content":"    public void parseGroupName_validValueWithWhitespace_returnsTrimmedGroupName() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":307,"author":{"gitId":"francisyzy"},"content":"        String groupNameWithWhitespace \u003d WHITESPACE + VALID_GROUPNAME_1 + WHITESPACE;","lastModifiedDate":"2023-03-15"},{"lineNumber":308,"author":{"gitId":"francisyzy"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUPNAME_1);","lastModifiedDate":"2023-03-15"},{"lineNumber":309,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedGroupName, ParserUtil.parseGroupName(groupNameWithWhitespace));","lastModifiedDate":"2023-03-15"},{"lineNumber":310,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":311,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":312,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":313,"author":{"gitId":"francisyzy"},"content":"    public void parseGroupNames_collectionWithInvalidGroupNames_throwsParseException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":314,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-03-15"},{"lineNumber":315,"author":{"gitId":"francisyzy"},"content":"                () -\u003e ParserUtil.parseGroups(Arrays.asList(VALID_GROUPNAME_1, INVALID_GROUPNAME)));","lastModifiedDate":"2023-03-15"},{"lineNumber":316,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":317,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":318,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":319,"author":{"gitId":"francisyzy"},"content":"    public void parseGroupNames_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":320,"author":{"gitId":"francisyzy"},"content":"        assertTrue(ParserUtil.parseGroups(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-15"},{"lineNumber":321,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":322,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":323,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":324,"author":{"gitId":"francisyzy"},"content":"    public void parseGroupNames_collectionWithValidGroupNames_returnsGroupNameSet() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":325,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e actualGroupNameSet \u003d ParserUtil.parseGroups(Arrays.asList(VALID_GROUPNAME_1, VALID_GROUPNAME_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":326,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e expectedGroupNameSet \u003d new HashSet\u003cGroupName\u003e(","lastModifiedDate":"2023-03-15"},{"lineNumber":327,"author":{"gitId":"francisyzy"},"content":"                Arrays.asList(new GroupName(VALID_GROUPNAME_1), new GroupName(VALID_GROUPNAME_2)));","lastModifiedDate":"2023-03-15"},{"lineNumber":328,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":329,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedGroupNameSet, actualGroupNameSet);","lastModifiedDate":"2023-03-15"},{"lineNumber":330,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":331,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"daitenshionyan":104,"-":79,"francisyzy":149}},{"path":"src/test/java/seedu/vms/logic/parser/VmsParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"slackernoob"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"slackernoob"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"slackernoob"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"slackernoob"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"slackernoob"},"content":"public class VmsParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"slackernoob"},"content":"    private static final String PATIENT_ADD_STRING \u003d \"add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur \"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"slackernoob"},"content":"            + \"--a pollen --v covax\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"slackernoob"},"content":"    private static final String PATIENT_DELETE_STRING \u003d \"delete --index 5\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"slackernoob"},"content":"    private static final String PATIENT_FIND_STRING \u003d \"find --name john\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"slackernoob"},"content":"    private static final String PATIENT_LIST_STRING \u003d \"list\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"slackernoob"},"content":"    private static final String APPOINTMENT_ADD_STRING \u003d \"add --patient 5 --start 2023-3-5 0700 --end 2023-3-5 0800\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"slackernoob"},"content":"    private static final String APPOINTMENT_DELETE_STRING \u003d \"delete --index 5\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"slackernoob"},"content":"    private static final String APPOINTMENT_LIST_STRING \u003d \"list\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"    private static final String VACCINATION_ADD_STRING \u003d \"add Pfizer (Dose 1) --groups DOSE 1, PFIZER, \"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"slackernoob"},"content":"            + \"VACCINATION --lal 5 --s 56 --a NONE::allergy1, allergy2, allergy3 --h NONE::DOES 1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"slackernoob"},"content":"    private static final String VALID_ALTERNATIVE_PATIENT \u003d \"p\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"slackernoob"},"content":"    private static final String VALID_ALTERNATIVE_APPOINTMENT \u003d \"a\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"slackernoob"},"content":"    private static final String VALID_ALTERNATIVE_VACCINATION \u003d \"v\";","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"slackernoob"},"content":"    private static final String INVALID_ALTERNATIVE_PATIENT \u003d \"patien\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"slackernoob"},"content":"    private static final String INVALID_ALTERNATIVE_APPOINTMENT \u003d \"appointmen\";","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"slackernoob"},"content":"    private static final String INVALID_ALTERNATIVE_VACCINATION \u003d \"vaccinatio\";","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"slackernoob"},"content":"    private final VmsParser parser \u003d new VmsParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"slackernoob"},"content":"    public void parseCommand_patient_addCommand() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(parser.parseCommand(VALID_ALTERNATIVE_PATIENT + PATIENT_ADD_STRING).getCommand()","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"slackernoob"},"content":"                    instanceof seedu.vms.logic.commands.patient.AddCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"slackernoob"},"content":"            parser.parseCommand(INVALID_ALTERNATIVE_PATIENT + PATIENT_ADD_STRING);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"slackernoob"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"            assertEquals(parseException.getMessage(), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"slackernoob"},"content":"    public void parseCommand_patient_deleteCommand() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(parser.parseCommand(VALID_ALTERNATIVE_PATIENT + PATIENT_DELETE_STRING).getCommand()","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"                    instanceof seedu.vms.logic.commands.patient.DeleteCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"            parser.parseCommand(INVALID_ALTERNATIVE_PATIENT + PATIENT_DELETE_STRING);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"slackernoob"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"slackernoob"},"content":"            assertEquals(parseException.getMessage(), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"slackernoob"},"content":"    public void parseCommand_patient_findCommand() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(parser.parseCommand(VALID_ALTERNATIVE_PATIENT + PATIENT_FIND_STRING).getCommand()","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"slackernoob"},"content":"                    instanceof seedu.vms.logic.commands.patient.FindCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"slackernoob"},"content":"            parser.parseCommand(INVALID_ALTERNATIVE_PATIENT + PATIENT_FIND_STRING);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"slackernoob"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"slackernoob"},"content":"            assertEquals(parseException.getMessage(), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"slackernoob"},"content":"    public void parseCommand_patient_listCommand() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(parser.parseCommand(VALID_ALTERNATIVE_PATIENT + PATIENT_LIST_STRING).getCommand()","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"slackernoob"},"content":"                    instanceof seedu.vms.logic.commands.patient.ListCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"slackernoob"},"content":"            parser.parseCommand(INVALID_ALTERNATIVE_PATIENT + PATIENT_LIST_STRING);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"slackernoob"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"slackernoob"},"content":"            assertEquals(parseException.getMessage(), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"slackernoob"},"content":"    public void parseCommand_appointment_addCommand() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(parser.parseCommand(VALID_ALTERNATIVE_APPOINTMENT + APPOINTMENT_ADD_STRING).getCommand()","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"slackernoob"},"content":"                    instanceof seedu.vms.logic.commands.appointment.AddCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"slackernoob"},"content":"            parser.parseCommand(INVALID_ALTERNATIVE_APPOINTMENT + APPOINTMENT_ADD_STRING);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"slackernoob"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"slackernoob"},"content":"            assertEquals(parseException.getMessage(), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"slackernoob"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"slackernoob"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"slackernoob"},"content":"    public void parseCommand_vaccination_addVaxTypeCommand() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"slackernoob"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(parser.parseCommand(VALID_ALTERNATIVE_VACCINATION + VACCINATION_ADD_STRING).getCommand()","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"slackernoob"},"content":"                    instanceof seedu.vms.logic.commands.vaccination.AddVaxTypeCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"slackernoob"},"content":"            parser.parseCommand(INVALID_ALTERNATIVE_VACCINATION + VACCINATION_ADD_STRING);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"slackernoob"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"slackernoob"},"content":"            assertEquals(parseException.getMessage(), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"slackernoob"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"slackernoob"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"slackernoob"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"daitenshionyan":6,"slackernoob":90}},{"path":"src/test/java/seedu/vms/logic/parser/basic/BasicParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public class BasicParserTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    private final BasicParser parser \u003d new BasicParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ExitCommand.COMMAND_WORD).getCommand() instanceof ExitCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ExitCommand.COMMAND_WORD + \" 3\").getCommand() instanceof ExitCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(HelpCommand.COMMAND_WORD).getCommand() instanceof HelpCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(HelpCommand.COMMAND_WORD + \" 3\").getCommand() instanceof HelpCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":26}},{"path":"src/test/java/seedu/vms/logic/parser/patient/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_MISSING_PARAMETER_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.ALLERGY_DESC_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.ALLERGY_DESC_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.BLOODTYPE_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_ALLERGY_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_BLOODTYPE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.TestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        // multiple dobs - last dob accepted","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_AMY + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        // multiple bloodtypees - last bloodtype accepted","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        // multiple allergy - all accepted","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        Patient expectedPatientMultipleAllergies \u003d new PatientBuilder(BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN, VALID_ALLERGY_SEAFOOD)","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN,","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"                new AddCommand(expectedPatientMultipleAllergies));","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        // zero allergy","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withAllergies().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + DOB_DESC_AMY + BLOODTYPE_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MISSING_PARAMETER_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"        // missing dob prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_BLOODTYPE_BOB + BLOODTYPE_DESC_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        // missing bloodtype prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + VALID_BLOODTYPE_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_BLOODTYPE_BOB + VALID_BLOODTYPE_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + DOB_DESC_BOB + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"        // invalid dob","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_DOB_DESC + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN, Dob.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"        // invalid bloodtype","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + INVALID_BLOODTYPE_DESC","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN, BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        // invalid allergy","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"                + INVALID_ALLERGY_DESC + VALID_ALLERGY_GLUTEN, GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + DOB_DESC_BOB + INVALID_BLOODTYPE_DESC,","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"    public void execute_groupOverLimit_exceptionThrown() {","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        HashSet\u003cGroupName\u003e allergyOverLimitSet \u003d TestUtil.generateGroupSet(Patient.LIMIT_ALLERGIES + 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"        Optional\u003cString\u003e allergyErrorMessage \u003d Patient.validateParams(Optional.of(allergyOverLimitSet),","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"                Optional.empty());","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + DOB_DESC_AMY + BLOODTYPE_DESC_AMY","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"                        + TestUtil.toParseStrings(allergyOverLimitSet, PREFIX_ALLERGY),","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"                allergyErrorMessage.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"        HashSet\u003cGroupName\u003e vaccineOverLimitSet \u003d TestUtil.generateGroupSet(Patient.LIMIT_VACCINES + 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"        Optional\u003cString\u003e vaccineErrorMessage \u003d Patient.validateParams(Optional.empty(),","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"                Optional.of(vaccineOverLimitSet));","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + DOB_DESC_AMY + BLOODTYPE_DESC_AMY","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"                        + TestUtil.toParseStrings(vaccineOverLimitSet, PREFIX_VACCINATION),","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"                vaccineErrorMessage.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"        Optional\u003cString\u003e bothErrorMessage \u003d Patient.validateParams(Optional.of(allergyOverLimitSet),","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"                Optional.of(vaccineOverLimitSet));","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"                NAME_DESC_AMY + PHONE_DESC_AMY + DOB_DESC_AMY + BLOODTYPE_DESC_AMY","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"                        + TestUtil.toParseStrings(vaccineOverLimitSet, PREFIX_VACCINATION)","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"                        + TestUtil.toParseStrings(allergyOverLimitSet, PREFIX_ALLERGY),","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"                bothErrorMessage.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"daitenshionyan":14,"francisyzy":100,"-":54}},{"path":"src/test/java/seedu/vms/logic/parser/patient/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PATIENT));","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"daitenshionyan":5,"-":25,"francisyzy":2}},{"path":"src/test/java/seedu/vms/logic/parser/patient/DetailCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.DetailCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" * outside of the DetailCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" * same path through the DetailCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"public class DetailCommandParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private DetailCommandParser parser \u003d new DetailCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public void parse_validArgs_returnsDetailCommand() {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, \"1\", new DetailCommand(INDEX_FIRST_PATIENT));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DetailCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"francisyzy":32}},{"path":"src/test/java/seedu/vms/logic/parser/patient/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.ALLERGY_DESC_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.ALLERGY_DESC_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.BLOODTYPE_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_ALLERGY_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_BLOODTYPE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_VACCINE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.TestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    private static final String ALLERGY_EMPTY \u003d \" \" + DELIMITER + PREFIX_ALLERGY + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"            EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DOB_DESC, Dob.MESSAGE_CONSTRAINTS); // invalid dob","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BLOODTYPE_DESC, BloodType.MESSAGE_CONSTRAINTS); // invalid allergy","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ALLERGY_DESC, GroupName.MESSAGE_CONSTRAINTS); // invalid allergy","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_VACCINE_DESC, GroupName.MESSAGE_CONSTRAINTS); // invalid vaccine","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        // Too many values","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        HashSet\u003cGroupName\u003e allergyOverLimitSet \u003d TestUtil.generateGroupSet(Patient.LIMIT_ALLERGIES + 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        Optional\u003cString\u003e allergyErrorMessage \u003d Patient.validateParams(Optional.of(allergyOverLimitSet),","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"                        Optional.empty());","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + TestUtil.toParseStrings(allergyOverLimitSet, PREFIX_ALLERGY),","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"                        allergyErrorMessage.get()); // invalid allergy","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        HashSet\u003cGroupName\u003e vaccineOverLimitSet \u003d TestUtil.generateGroupSet(Patient.LIMIT_VACCINES + 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"        Optional\u003cString\u003e vaccineErrorMessage \u003d Patient.validateParams(Optional.empty(),","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"                        Optional.of(vaccineOverLimitSet));","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + TestUtil.toParseStrings(vaccineOverLimitSet, PREFIX_VACCINATION),","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"                        vaccineErrorMessage.get()); // invalid vaccine","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        Optional\u003cString\u003e bothErrorMessage \u003d Patient.validateParams(Optional.of(allergyOverLimitSet),","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"                        Optional.of(vaccineOverLimitSet));","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"                        + TestUtil.toParseStrings(vaccineOverLimitSet, PREFIX_VACCINATION)","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"                        + TestUtil.toParseStrings(allergyOverLimitSet, PREFIX_ALLERGY),","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"                        bothErrorMessage.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        // invalid phone followed by valid dob","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + DOB_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"        // while parsing {@code PREFIX_ALLERGY} alone will reset the allergies of the {@code Patient} being edited,","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"        // parsing it together with a valid allergy results in error","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + ALLERGY_DESC_GLUTEN + ALLERGY_DESC_SEAFOOD + ALLERGY_EMPTY,","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"                ParserUtil.MESSAGE_BLANK_ARGUMENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + ALLERGY_DESC_GLUTEN + ALLERGY_EMPTY + ALLERGY_DESC_SEAFOOD,","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"                ParserUtil.MESSAGE_BLANK_ARGUMENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + ALLERGY_EMPTY + ALLERGY_DESC_GLUTEN + ALLERGY_DESC_SEAFOOD,","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"                ParserUtil.MESSAGE_BLANK_ARGUMENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_DOB_DESC + VALID_BLOODTYPE_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ALLERGY_DESC_SEAFOOD","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"                + DOB_DESC_AMY + BLOODTYPE_DESC_AMY + NAME_DESC_AMY + ALLERGY_DESC_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_BOB).withDob(VALID_DOB_AMY).withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_SEAFOOD, VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + DOB_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"                .withDob(VALID_DOB_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        // dob","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"        userInput \u003d targetIndex.getOneBased() + DOB_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withDob(VALID_DOB_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"        // bloodType","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"        userInput \u003d targetIndex.getOneBased() + BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withBloodType(VALID_BLOODTYPE_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"        // allergies","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"        userInput \u003d targetIndex.getOneBased() + ALLERGY_DESC_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + BLOODTYPE_DESC_AMY + DOB_DESC_AMY","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_GLUTEN + PHONE_DESC_AMY + BLOODTYPE_DESC_AMY + DOB_DESC_AMY + ALLERGY_DESC_GLUTEN","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"                + PHONE_DESC_BOB + BLOODTYPE_DESC_BOB + DOB_DESC_BOB + ALLERGY_DESC_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"francisyzy"},"content":"                .withDob(VALID_DOB_BOB).withBloodType(VALID_BLOODTYPE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN, VALID_ALLERGY_SEAFOOD)","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"francisyzy"},"content":"        userInput \u003d targetIndex.getOneBased() + DOB_DESC_BOB + INVALID_PHONE_DESC + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":229,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withDob(VALID_DOB_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"francisyzy"},"content":"                .withBloodType(VALID_BLOODTYPE_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"francisyzy"},"content":"    public void parse_resetAllergies_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":237,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"francisyzy"},"content":"        String userInput \u003d targetIndex.getOneBased() + ALLERGY_EMPTY;","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withAllergies().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"francisyzy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"daitenshionyan":17,"-":103,"francisyzy":125}},{"path":"src/test/java/seedu/vms/logic/parser/patient/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.FIND_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.FindCommand.FindPatientDescriptor;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.FindPatientDescriptorBuilder;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    public void parse_validNameFlag_returnsFindCommand() {","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\")));","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        // name flag","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, \"--n Alice\", expectedFindCommand);","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    public void parse_validAllFlag_returnsFindCommand() {","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        FindPatientDescriptor expectedFindPatientDescriptor \u003d new FindPatientDescriptorBuilder(FIND_AMY).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(expectedFindPatientDescriptor);","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        // AMY Flags","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, \"--n Amy Bee --p 11111111 --d 1998-05-23 --b A+ --a gluten\", expectedFindCommand);","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"daitenshionyan":5,"-":26,"francisyzy":23}},{"path":"src/test/java/seedu/vms/logic/parser/patient/PatientParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.ClearCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.ListCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"public class PatientParserTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private final PatientParser parser \u003d new PatientParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        AddCommand command \u003d (AddCommand) parser.parse(PatientUtil.getAddCommand(patient)).getCommand();","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        assertEquals(new AddCommand(patient), command);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ClearCommand.COMMAND_WORD).getCommand() instanceof ClearCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ClearCommand.COMMAND_WORD + \" 3\").getCommand() instanceof ClearCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parse(","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PATIENT.getOneBased()).getCommand();","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PATIENT), command);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        EditCommand command \u003d (EditCommand) parser.parse(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                + INDEX_FIRST_PATIENT.getOneBased() + \" \" + PatientUtil.getEditPatientDescriptorDetails(descriptor))","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                .getCommand();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PATIENT, descriptor), command);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        FindCommand command \u003d (FindCommand) parser.parse(","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")))","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                .getCommand();","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ListCommand.COMMAND_WORD).getCommand() instanceof ListCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ListCommand.COMMAND_WORD + \" 3\").getCommand() instanceof ListCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            -\u003e parser.parse(\"\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parse(\"unknownCommand\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"daitenshionyan":29,"-":48,"francisyzy":13}},{"path":"src/test/java/seedu/vms/model/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class AgeTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age TEST \u003d Age.MAX_AGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age EQS \u003d new Age(Age.MAX_VALUE);","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age OFF_LIMIT \u003d new Age(Age.MAX_VALUE + 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age LESS \u003d new Age(Age.MAX_VALUE - 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public void getValue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.MIN_VALUE, Age.MIN_AGE.getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.MAX_VALUE, Age.MAX_AGE.getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.MAX_VALUE, OFF_LIMIT.getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public void compareToTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.compareTo(EQS) \u003d\u003d 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.compareTo(LESS) \u003e 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(LESS.compareTo(TEST) \u003c 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.compareTo(OFF_LIMIT) \u003d\u003d 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(String.valueOf(Age.MIN_VALUE + 1), new Age(Age.MIN_VALUE + 1).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(String.valueOf(Age.MAX_VALUE - 1), new Age(Age.MAX_VALUE - 1).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.STRING_MIN, new Age(Age.MIN_VALUE).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.STRING_MAX, new Age(Age.MAX_VALUE).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.STRING_MAX, OFF_LIMIT.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.equals(TEST));","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.equals(EQS));","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.equals(OFF_LIMIT));","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(TEST.equals(LESS));","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(TEST.equals(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cAge\u003e ageSet \u003d new HashSet\u003c\u003e(List.of(TEST, EQS, OFF_LIMIT, LESS));","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(ageSet.size() \u003d\u003d 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(ageSet.contains(OFF_LIMIT));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    public void isValid() {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(Age.isValid(Age.MIN_VALUE - 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(Age.isValid(Age.MAX_VALUE + 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":69}},{"path":"src/test/java/seedu/vms/model/GroupNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class GroupNameTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e INVALID_LIST \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        \"\",","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        \" \",","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        \"a\\n\\ra\",","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        \"abc:\",","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        \"( ^)o(^ )b\");","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final String SAMPLE_NAME \u003d \"UNCHI\";","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cGroupName\u003e LIST_TO_SORT \u003d List.of(","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"a\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"A\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"B\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"b\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"bBB\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"bBb\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cGroupName\u003e EXPECTED_SORTED_LIST \u003d List.of(","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"a\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"A\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"b\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"B\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"bBb\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"bBB\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    public void isValidName_valid_true() {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(GroupName.isValidName(","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            \"   120 - []{}()- Pks niUw LK () k    \"));","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(GroupName.isValidName(\"a\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public void isValidName_invalid_false() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        for (String invalid : INVALID_LIST) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            assertFalse(GroupName.isValidName(invalid), invalid);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        GroupName testing \u003d new GroupName(SAMPLE_NAME);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        GroupName eqs \u003d new GroupName(SAMPLE_NAME + \" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        GroupName diff \u003d new GroupName(SAMPLE_NAME + \"a\");","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        Integer unrelated \u003d Integer.valueOf(0);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(testing.equals(testing));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(testing.equals(eqs));","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(testing.equals(diff));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(testing.equals(unrelated));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        assertEquals(testing, testing);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        assertEquals(testing, eqs);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        assertNotEquals(testing, diff);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        assertNotEquals(testing, unrelated);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    public void compareToTest() {","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cGroupName\u003e toSort \u003d new ArrayList\u003c\u003e(LIST_TO_SORT);","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        toSort.sort(Comparator.naturalOrder());","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(EXPECTED_SORTED_LIST, toSort);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":76,"francisyzy":5}},{"path":"src/test/java/seedu/vms/model/IdDataMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class IdDataMapTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final int TESTING_LIMIT \u003d 10;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cInteger\u003e RANDOM_VALUES \u003d List.of(5, 6, 0, 7, 8, 9, 1, 3, 4, 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private IdDataMap\u003cInteger\u003e idMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public void initializeIdMap() {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        idMap \u003d new IdDataMap\u003c\u003e(TESTING_LIMIT);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public void add_valueWithinLimit_valueAdded() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            idMap.add(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(idMap.contains(i));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public void add_valueOverLimit_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            idMap.add(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e idMap.add(TESTING_LIMIT));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public void add_dataWithinLimit_valueAdded() {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            idMap.add(new IdData\u003c\u003e(true, i, i));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(idMap.contains(i));","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public void add_dataOverLimit_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e idMap.add(new IdData\u003c\u003e(true, TESTING_LIMIT, TESTING_LIMIT)));","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    public void add_mixedUnordered() {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        /* 0 */ idMap.add(new IdData\u003c\u003e(true, RANDOM_VALUES.get(0), RANDOM_VALUES.get(0)));","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        /* 1 */ idMap.add(RANDOM_VALUES.get(1));","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        /* 2 */ idMap.add(new IdData\u003c\u003e(true, RANDOM_VALUES.get(2), RANDOM_VALUES.get(2)));","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        /* 3 */ idMap.add(RANDOM_VALUES.get(3));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        /* 4 */ idMap.add(RANDOM_VALUES.get(4));","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        /* 5 */ idMap.add(RANDOM_VALUES.get(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        /* 6 */ idMap.add(RANDOM_VALUES.get(6));","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        /* 7 */ idMap.add(new IdData\u003c\u003e(true, RANDOM_VALUES.get(7), RANDOM_VALUES.get(7)));","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        /* 8 */ idMap.add(RANDOM_VALUES.get(8));","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        /* 9 */ idMap.add(RANDOM_VALUES.get(9));","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(i, idMap.get(i).getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        // limit","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e idMap.add(new IdData\u003c\u003e(true, TESTING_LIMIT, TESTING_LIMIT)));","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    public void addAndDeleteTest() {","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        /*","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"         * Test ensures that ID increases on an add operation after the recently added","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"         * element was deleted immediately","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"         */","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        // first so 0","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        int idDel \u003d idMap.add(0).getId();","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        idMap.remove(idDel);","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        // second so 1","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        int idNext \u003d idMap.add(2).getId();","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(0, idDel);","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(1, idNext);","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    public void setValues_withinLimit_valuesAdded() {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cInteger\u003e values \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"            values.add(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        idMap.setValues(values);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(i, idMap.get(i).getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    public void setValues_overLimit_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cInteger\u003e values \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT + 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"            values.add(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class, () -\u003e idMap.setValues(values));","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    public void setDatas_withinLimit_valuesAdded() {","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cIdData\u003cInteger\u003e\u003e datas \u003d formRandDataList();","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        idMap.setDatas(datas);","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(i, idMap.get(i).getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"    public void set() {","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        int initial \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        int change \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        idMap.add(initial);","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        idMap.set(0, change);","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(change, idMap.get(0).getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    private ArrayList\u003cIdData\u003cInteger\u003e\u003e formRandDataList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cIdData\u003cInteger\u003e\u003e datas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"            datas.add(new IdData\u003cInteger\u003e(true, RANDOM_VALUES.get(i), RANDOM_VALUES.get(i)));","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"        return datas;","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":159}},{"path":"src/test/java/seedu/vms/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientManagerBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assertEquals(new PatientManager(), new PatientManager(modelManager.getPatientManager()));","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatientList().put(0, null));","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        PatientManager patientManager \u003d new PatientManagerBuilder().withPatient(ALICE).withPatient(BENSON).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        PatientManager differentPatientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        modelManager \u003d new ModelManager(patientManager, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(patientManager, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        // different patientManager -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPatientManager, userPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        modelManager.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        assertFalse(modelManager.equals(new ModelManager(patientManager, userPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        modelManager.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        differentUserPrefs.setGuiSettings(new GuiSettings(0, 0, 0, 0));","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        assertFalse(modelManager.equals(new ModelManager(patientManager, differentUserPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"daitenshionyan":4,"-":66,"francisyzy":19}},{"path":"src/test/java/seedu/vms/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"daitenshionyan":3,"-":12}},{"path":"src/test/java/seedu/vms/model/appointment/AppointmentManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"class AppointmentManagerTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private AppointmentManager appointmentManager;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    void setUp() {","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager \u003d new AppointmentManager();","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    void mark() {","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime startTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime endTime \u003d LocalDateTime.now().plusHours(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        GroupName vaccine \u003d new GroupName(\"Test Vaccine\");","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        Boolean isCompleted \u003d false;","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.set(1, new Appointment(patientId, startTime, endTime, vaccine, isCompleted));","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        assertDoesNotThrow(() -\u003e appointmentManager.mark(1));","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(AssertionError.class, () -\u003e appointmentManager.mark(1));","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    void unmark() {","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime startTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime endTime \u003d LocalDateTime.now().plusHours(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        GroupName vaccine \u003d new GroupName(\"Test Vaccine\");","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        Boolean isCompleted \u003d true;","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.set(1, new Appointment(patientId, startTime, endTime, vaccine, isCompleted));","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        assertDoesNotThrow(() -\u003e appointmentManager.unmark(1));","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(AssertionError.class, () -\u003e appointmentManager.unmark(1));","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nusE0726844":50}},{"path":"src/test/java/seedu/vms/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"public class AppointmentTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    private final Index patientId \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime startTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime endTime \u003d LocalDateTime.now().plusHours(1);","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private final GroupName vaccine \u003d new GroupName(\"Test Vaccine\");","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    private final Boolean isCompleted \u003d false;","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    private Appointment appointment;","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    void setUp() {","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public void getPatient() {","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getPatient(), patientId);","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"    public void getAppointmentTime() {","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getAppointmentTime(), startTime);","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    public void getAppointmentEndTime() {","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getAppointmentEndTime(), endTime);","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"    public void getVaccination() {","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getVaccination(), vaccine);","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    public void getStatus() {","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getStatus(), isCompleted);","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    public void setVaccination() {","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        GroupName newVaccine \u003d new GroupName(\"new Vaccine\");","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        Appointment newAppointment \u003d appointment.setVaccination(newVaccine);","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(newAppointment.getVaccination(), newVaccine);","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"    public void mark() {","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        Appointment newAppointment \u003d new Appointment(patientId, startTime, endTime, vaccine, false);","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(newAppointment.mark().getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"    public void unmark() {","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"        Appointment newAppointment \u003d new Appointment(patientId, startTime, endTime, vaccine, true);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(newAppointment.unmark().getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"    public void isInvalidAppointmentTime() {","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"        // startTime now -\u003e returns true","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(Appointment.isInvalidAppointmentTime(LocalDateTime.now()));","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"nusE0726844"},"content":"        // startTime now + 1s -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(Appointment.isInvalidAppointmentTime(LocalDateTime.now().plusSeconds(1)));","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"nusE0726844"},"content":"        // startTime now - 1s -\u003e returns true","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(Appointment.isInvalidAppointmentTime(LocalDateTime.now().minusSeconds(1)));","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"nusE0726844"},"content":"    public void isValidDuration() {","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"nusE0726844"},"content":"        // startTime is after endTime -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(Appointment.isValidDuration(LocalDateTime.now().plusHours(1), LocalDateTime.now()));","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"nusE0726844"},"content":"        // startTime is before endTime -\u003e returns true","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(Appointment.isValidDuration(LocalDateTime.now(), LocalDateTime.now().plusHours(1)));","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"    public void equals() {","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointmentCopy \u003d new Appointment(appointment.getPatient(),","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentEndTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"nusE0726844"},"content":"                appointment.getVaccination(),","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"nusE0726844"},"content":"                appointment.getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"nusE0726844"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(appointment.equals(appointment));","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"nusE0726844"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(appointment.equals(appointmentCopy));","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"nusE0726844"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(appointment.equals(null));","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointmentCopyDiff;","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"nusE0726844"},"content":"        // different patientId -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"nusE0726844"},"content":"        appointmentCopyDiff \u003d new Appointment(Index.fromOneBased(appointment.getPatient().getOneBased() + 1),","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentEndTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"nusE0726844"},"content":"                appointment.getVaccination(),","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"nusE0726844"},"content":"                appointment.getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(appointment.equals(appointmentCopyDiff));","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"nusE0726844"},"content":"        // different startTime -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"nusE0726844"},"content":"        appointmentCopyDiff \u003d new Appointment(appointment.getPatient(),","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentTime().minusHours(1),","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentEndTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"nusE0726844"},"content":"                appointment.getVaccination(),","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"nusE0726844"},"content":"                appointment.getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(appointment.equals(appointmentCopyDiff));","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"nusE0726844"},"content":"        // different endTime -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"        appointmentCopyDiff \u003d new Appointment(appointment.getPatient(),","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentEndTime().plusHours(1),","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"                appointment.getVaccination(),","lastModifiedDate":"2023-04-08"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"                appointment.getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(appointment.equals(appointmentCopyDiff));","lastModifiedDate":"2023-04-08"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"nusE0726844"},"content":"        // different vaccine -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"nusE0726844"},"content":"        appointmentCopyDiff \u003d new Appointment(appointment.getPatient(),","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentEndTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"nusE0726844"},"content":"                new GroupName(appointment.getVaccination().getName() + \"Test\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"nusE0726844"},"content":"                appointment.getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(appointment.equals(appointmentCopyDiff));","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"        // different isCompleted -\u003e returns false","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"        appointmentCopyDiff \u003d new Appointment(appointment.getPatient(),","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"nusE0726844"},"content":"                appointment.getAppointmentEndTime(),","lastModifiedDate":"2023-04-08"},{"lineNumber":154,"author":{"gitId":"nusE0726844"},"content":"                appointment.getVaccination(),","lastModifiedDate":"2023-04-08"},{"lineNumber":155,"author":{"gitId":"nusE0726844"},"content":"                !appointment.getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(appointment.equals(appointmentCopyDiff));","lastModifiedDate":"2023-04-08"},{"lineNumber":157,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"nusE0726844":158}},{"path":"src/test/java/seedu/vms/model/appointment/predicates/EndTimePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment.predicates;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"class EndTimePredicateTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private LocalDateTime now;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private EndTimePredicate endTimePredicate;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    void setUp() {","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        now \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        endTimePredicate \u003d new EndTimePredicate(now.plusHours(1));","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    void test() {","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime startTime \u003d now.plusMinutes(5);","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime endTime \u003d now.plusHours(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        GroupName vaccine \u003d new GroupName(\"Test Vaccine\");","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        Boolean isCompleted \u003d false;","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(endTimePredicate.test(appointment));","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        endTime \u003d endTime.plusMinutes(5);","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(endTimePredicate.test(appointment));","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    void equals() {","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(endTimePredicate, endTimePredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        assertNotEquals(null, endTimePredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        EndTimePredicate otherStartTimePredicate;","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        otherStartTimePredicate \u003d new EndTimePredicate(now.plusHours(1));","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(endTimePredicate, otherStartTimePredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        otherStartTimePredicate \u003d new EndTimePredicate(now.plusMinutes(5));","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        assertNotEquals(endTimePredicate, otherStartTimePredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nusE0726844":58}},{"path":"src/test/java/seedu/vms/model/appointment/predicates/IndexPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment.predicates;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"class IndexPredicateTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private IndexPredicate indexPredicate;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    void setUp() {","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"        indexPredicate \u003d new IndexPredicate(Index.fromOneBased(1));","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"    void test() {","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime startTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime endTime \u003d LocalDateTime.now().plusHours(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        GroupName vaccine \u003d new GroupName(\"Test Vaccine\");","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        Boolean isCompleted \u003d false;","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(indexPredicate.test(appointment));","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        patientId \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(indexPredicate.test(appointment));","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    void equals() {","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(indexPredicate, indexPredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        assertNotEquals(null, indexPredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        IndexPredicate otherIndexPredicate;","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        otherIndexPredicate \u003d new IndexPredicate(Index.fromOneBased(1));","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(indexPredicate, otherIndexPredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        otherIndexPredicate \u003d new IndexPredicate(Index.fromOneBased(2));","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        assertNotEquals(indexPredicate, otherIndexPredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nusE0726844":56}},{"path":"src/test/java/seedu/vms/model/appointment/predicates/StartTimePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment.predicates;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"class StartTimePredicateTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private LocalDateTime now;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private StartTimePredicate startTimePredicate;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    void setUp() {","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        now \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        startTimePredicate \u003d new StartTimePredicate(now);","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    void test() {","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        Index patientId \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime startTime \u003d now.plusMinutes(5);","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime endTime \u003d now.plusHours(1);","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        GroupName vaccine \u003d new GroupName(\"Test Vaccine\");","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        Boolean isCompleted \u003d false;","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        assertTrue(startTimePredicate.test(appointment));","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        startTime \u003d now.minusMinutes(5);","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        assertFalse(startTimePredicate.test(appointment));","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"    void equals() {","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(startTimePredicate, startTimePredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        assertNotEquals(null, startTimePredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        StartTimePredicate otherStartTimePredicate;","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"        otherStartTimePredicate \u003d new StartTimePredicate(now);","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(startTimePredicate, otherStartTimePredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"        otherStartTimePredicate \u003d new StartTimePredicate(now.plusMinutes(5));","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        assertNotEquals(startTimePredicate, otherStartTimePredicate);","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nusE0726844":58}},{"path":"src/test/java/seedu/vms/model/patient/BloodTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"public class BloodTypeTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BloodType(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public void constructor_invalidBloodType_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        String invalidBloodType \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BloodType(invalidBloodType));","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public void isValidBloodType() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        // invalid blood types","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"B\")); // Random","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"C\")); // Random","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"A\")); // Random","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"A++\")); // Random","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        // valid blood types","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"A-\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"A+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"B-\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"B+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"AB-\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"AB+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"O-\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"O+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"francisyzy":42}},{"path":"src/test/java/seedu/vms/model/patient/DobTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class DobTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void constructor_invalidDob_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        String invalidDob \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Dob(invalidDob));","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public void isValidDob() {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        // invalid dobs","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Dob.isValidDob(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Dob.isValidDob(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Dob.isValidDob(LocalDateTime.now().plusDays(1))); // future dob","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Dob.isValidDob(\"2020-22-01\")); // Invalid format","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        // valid dobs","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Dob.isValidDob(LocalDateTime.now().minusDays(1))); // yesterday dob","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Dob.isValidDob(\"2020-02-29\")); // Leap","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Dob.isValidDob(\"1903-05-29\")); // Very old person","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Dob.isValidDob(\"2000-01-01\")); // Y2k","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public void constructor_validDobString() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        final String expected \u003d \"2020-03-19\";","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expected, new Dob(expected).toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public void constructor_validDobLocalDateTime() {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime expected \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        String expectedString \u003d expected.format(ISO_LOCAL_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedString, new Dob(expected).toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public void isEqualsDob() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime expected \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        String expectedString \u003d expected.format(ISO_LOCAL_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        Dob equalOne \u003d new Dob(expected);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        Dob equalTwo \u003d new Dob(expected);","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        Dob equalThree \u003d new Dob(expectedString);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        Dob notEqual \u003d new Dob(\"2020-03-23\");","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        // Equal Dobs","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        assertTrue(equalOne.equals(equalTwo));","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        assertTrue(equalOne.equals(equalThree));","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        // Not Equal Dobs","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        assertFalse(notEqual.equals(equalOne));","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        assertFalse(notEqual.equals(equalThree));","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        assertFalse(equalOne.equals(notEqual));","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        assertFalse(equalThree.equals(notEqual));","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"francisyzy":72}},{"path":"src/test/java/seedu/vms/model/patient/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        // Keywords match phone, bloodType and DOB, but does not match name","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"2001-02-24\", \"A+\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"                .withDob(\"2001-02-24\").withBloodType(\"A+\").build()));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"francisyzy":13,"-":59}},{"path":"src/test/java/seedu/vms/model/patient/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":1,"-":38}},{"path":"src/test/java/seedu/vms/model/patient/PatientManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class PatientManagerTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    private final PatientManager patientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"        Map\u003c?, ?\u003e map \u003d patientManager.getMapView();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        assertEquals(true, map.isEmpty());","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e patientManager.resetData(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public void resetData_withValidReadOnlyPatientManager_replacesData() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        PatientManager newData \u003d getTypicalPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        patientManager.resetData(newData);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        assertEquals(newData, patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public void getPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e getTypicalPatientManager().getMapView().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"francisyzy":38}},{"path":"src/test/java/seedu/vms/model/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.TestUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"public class PatientTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getAllergy().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public void isSamePatient() {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        assertTrue(ALICE.isSamePatient(ALICE));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        assertFalse(ALICE.isSamePatient(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withDob(VALID_DOB_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"                .withBloodType(VALID_BLOODTYPE_BOB).withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        assertTrue(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        assertFalse(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        Patient editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withDob(VALID_DOB_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        // different bloodType -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withBloodType(VALID_BLOODTYPE_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        // different allergies -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"    public void valueAboveLimitThrowException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        HashSet\u003cGroupName\u003e allergyOverLimitSet \u003d TestUtil.generateGroupSet(Patient.LIMIT_ALLERGIES + 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"                () -\u003e new PatientBuilder().withName(\"Alice\").withAllergies(TestUtil.toStringArr(allergyOverLimitSet))","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"                        .build());","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        HashSet\u003cGroupName\u003e vaccineOverLimitSet \u003d TestUtil.generateGroupSet(Patient.LIMIT_VACCINES + 1);","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"                () -\u003e new PatientBuilder().withName(\"Bob\").withVaccines(TestUtil.toStringArr(vaccineOverLimitSet))","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"                        .build());","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"daitenshionyan":2,"francisyzy":56,"-":52}},{"path":"src/test/java/seedu/vms/model/patient/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":1,"-":38}},{"path":"src/test/java/seedu/vms/model/vaccination/RequirementTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement.RequirementType;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.TestUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class RequirementTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_1_A \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_1_B \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_3_A \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi3\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_3_B \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana3\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_3_C \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_4_A \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi3\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi4\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    public void construction_nullReqType_exceptionThrown() {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e new Requirement(null, SET_1_A));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public void construction_invalidReqSet_exceptionThrown() {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        // empty requirement set","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e new Requirement(RequirementType.ALL, new HashSet\u003c\u003e()));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        // null requirement set","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e new Requirement(RequirementType.ALL, null));","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        // requirement set over limit","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e new Requirement(","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                        RequirementType.ALL,","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                        TestUtil.generateGroupSet(Requirement.LIMIT + 1)));","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    void construction_validSet_requirementConstructed() {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        // check if any exception is thrown","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        new Requirement(RequirementType.ALL, TestUtil.generateGroupSet(Requirement.LIMIT - 1));","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        new Requirement(RequirementType.ALL, TestUtil.generateGroupSet(Requirement.LIMIT));","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    public void check_all() {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 0 | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                .check(new HashSet\u003c\u003e()),","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 0 | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_3_B)","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req 1 | S \u003e R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_C),","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | Some matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_4_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_4_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"    public void check_any() {","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 0 | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"                .check(new HashSet\u003c\u003e()),","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 0 | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_3_B)","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req 1 | S \u003e R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_C),","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | Some matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_4_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_4_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"    public void check_none() {","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 0 | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"                .check(new HashSet\u003c\u003e()),","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 0 | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_3_B)","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req 1 | S \u003e R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_C),","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | Some matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_4_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_4_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req1 \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req1a \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req2 \u003d new Requirement(RequirementType.ANY, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req3 \u003d new Requirement(RequirementType.ALL, SET_1_B);","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"        Integer unrelated \u003d Integer.valueOf(0);","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(req1.equals(req1), \"Same instance\");","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(req1.equals(req1a), \"Same but different instance\");","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(req1.equals(req2), \"Different type\");","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(req1.equals(req3), \"Different sets\");","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(req1.equals(unrelated), \"Unrelated\");","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"    public void copy_single() {","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"        Requirement copy \u003d req.copy();","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(req, copy);","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"    public void copy_list() {","lastModifiedDate":"2023-03-03"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cRequirement\u003e refReqs \u003d List.of(new Requirement(RequirementType.ALL, SET_1_A));","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cRequirement\u003e reqs \u003d new ArrayList\u003c\u003e(refReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cRequirement\u003e copyReqs \u003d Requirement.copy(reqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(refReqs, copyReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"        // immutability","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"        reqs.remove(0);","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(refReqs, copyReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req1 \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req2 \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"        // assume equals to work from above","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cRequirement\u003e reqs \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"        reqs.add(req1);","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(reqs.contains(req2));","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"    public void getReqSetTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(SET_1_A, req.getReqSet());","lastModifiedDate":"2023-03-03"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"        // immutability","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"        req.getReqSet().addAll(SET_1_B);","lastModifiedDate":"2023-03-03"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(SET_1_A, req.getReqSet());","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":308}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement.RequirementType;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class VaxCheckerTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age MIN_AGE \u003d new Age(5);","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age MAX_AGE \u003d new Age(35);","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_NONE \u003d new HashSet\u003c\u003e(List.of());","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_ONE_A_1 \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_ONE_A_2 \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI2\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_ONE_B \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"BANANA1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_TWO_A \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI2\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_NONE \u003d new VaxType(new GroupName(\"TYPE_1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            List.of());","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_ONE_A_1 \u003d new VaxType(new GroupName(\"TYPE_1_A_2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            GRP_ONE_A_1,","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.NONE, GRP_ONE_A_1)));","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_ONE_A_2 \u003d new VaxType(new GroupName(\"TYPE_1_A_2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            GRP_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            List.of());","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_ONE_B \u003d new VaxType(new GroupName(\"TYPE_1_B\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            GRP_ONE_B,","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            List.of());","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_TWO_A \u003d new VaxType(new GroupName(\"TYPE_TWO_A\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            GRP_TWO_A,","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            List.of());","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_ONE_A_REQ \u003d new VaxType(new GroupName(\"TYPE_ONE_A_REQ\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.ALL, GRP_ONE_A_1)));","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_TWO_A_REQ \u003d new VaxType(new GroupName(\"TYPE_ONE_A_REQ\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.ALL, GRP_TWO_A)));","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_TWO_A_SUB \u003d new VaxType(new GroupName(\"TYPE_TWO_A_SUB\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            new HashSet\u003c\u003e(),","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.ANY, GRP_TWO_A)));","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_COMBI_REQ \u003d new VaxType(new GroupName(\"TYPE_TWO_A_SUB\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            GRP_TWO_A,","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.ALL, GRP_TWO_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                    new Requirement(RequirementType.ANY, GRP_ONE_B)));","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxType\u003e RECORDS_NONE_1 \u003d List.of();","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxType\u003e RECORDS_ONE_A_2 \u003d List.of(","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_ONE_A_1);","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxType\u003e RECORDS_ONE_B_2 \u003d List.of(","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_ONE_B);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxType\u003e RECORDS_SEP_A \u003d List.of(","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_ONE_A_2,","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_ONE_A_1);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxType\u003e RECORDS_TWO_A \u003d List.of(","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_TWO_A);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxType\u003e RECORDS_COMBI \u003d List.of(","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_ONE_B,","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_TWO_A);","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    public void check_age() {","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        // Min age","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_1),","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"                \"Min age\");","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        // Max age","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"                MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_1),","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"                \"Max age\");","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        // Min age - 1","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"                new Age(MIN_AGE.getValue() - 1),","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_1),","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                \"Min age - 1\");","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        // Max age + 1","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                new Age(MAX_AGE.getValue() + 1),","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_1),","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                \"Max age - 1\");","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyNoReq() {","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        // Vax no req | Rec 1 group","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"            RECORDS_ONE_A_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"        // Vax one negative req | Rec 1 group | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_ONE_A_1,","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"            RECORDS_ONE_A_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyOneReq() {","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        // Vax one non-sub req | Rec 1 group | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_ONE_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_A_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        // Vax one non-sub req | Rec 1 group | Not matching","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_ONE_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_B_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyTwoNonSubReq() {","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two non-sub req | Rec 1 group | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_A_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two non-sub req | Rec 2 separate group | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_SEP_A));","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two non-sub req | Rec 2 groups 1 set | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_TWO_A));","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyTwoSub() {","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two sub | Rec 1 group | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_SUB,","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_A_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two sub | Rec 2 separate group | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_SUB,","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_SEP_A));","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two sub | Rec 2 groups 1 set | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_SUB,","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_TWO_A));","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two sub | Rec 1 group | Not matching","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_SUB,","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_B_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyCombiReq() {","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"        // Vax combi | Rec 1 group | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_COMBI_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_B_2));","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"        // Vax combi | Rec 2 group sets | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_COMBI_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_COMBI));","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"    public void check_allergy() {","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two | Allergy one | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_COMBI_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"                GRP_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_COMBI));","lastModifiedDate":"2023-03-15"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two | Allergy one | No matching","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_COMBI_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"                GRP_ONE_B,","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_COMBI));","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":253}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxTypeManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeManagerTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_1 \u003d new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.INGREDIENTS_1,","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.HISTORY_REQS_1);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public void asUnmodifiableObservableMapTest() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        ObservableMap\u003cString, VaxType\u003e mapView \u003d storage.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        // addition link","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        storage.add(TYPE_1);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(mapView.containsKey(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(TYPE_1, mapView.get(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        // deletion link","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        storage.remove(TYPE_1.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(mapView.containsKey(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(null, mapView.get(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        // immutability","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            mapView.put(TYPE_1.getName(), TYPE_1);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        } catch (UnsupportedOperationException unsupEx) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        fail(\"Exception not thrown\");","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    public void add_limitReached_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        int setLimit \u003d 5;","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager manager \u003d new VaxTypeManager(setLimit);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        addToManager(manager, setLimit);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class, () -\u003e manager.add(new VaxType(","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                new GroupName(String.valueOf(setLimit)),","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_1,","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1)));","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    public void resetData_validReset() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        int setLimit \u003d 5;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager manager \u003d new VaxTypeManager(setLimit);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        addToManager(manager, setLimit);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager otherManager \u003d new VaxTypeManager(setLimit);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        otherManager.resetData(manager);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(manager.asUnmodifiableObservableMap(), otherManager.asUnmodifiableObservableMap());","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public void resetData_limitReached_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        int setLimit \u003d 5;","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager manager \u003d new VaxTypeManager(setLimit);","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        addToManager(manager, setLimit);","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class,","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e new VaxTypeManager(setLimit - 1).resetData(manager));","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    public void containsCheck() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(storage.contains(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        storage.add(TYPE_1);","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(storage.contains(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        storage.remove(TYPE_1.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(storage.contains(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    public void getTest() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(storage.get(TYPE_1.getName()).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        storage.add(TYPE_1);","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(TYPE_1, storage.get(TYPE_1.getName()).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        storage.remove(TYPE_1.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(storage.get(TYPE_1.getName()).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    private void addToManager(VaxTypeManager manager, int number) throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c number; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"            manager.add(new VaxType(","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(String.valueOf(i)),","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"                    SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                    SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"                    SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"                    SampleVaxTypeData.INGREDIENTS_1,","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"                    SampleVaxTypeData.HISTORY_REQS_1));","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":130}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age INVALID_MIN_AGE \u003d new Age(100);","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age INVALID_MAX_AGE \u003d new Age(99);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public void constructor_invalidAge_throwsException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"                INVALID_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"                INVALID_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_1,","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1));","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public void compareToTest() {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        // test already done in GroupName so this test is to check if","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        // the comparator is correctly set","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t1 \u003d new VaxType(","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                new GroupName(\"aZ\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t2 \u003d new VaxType(","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"                new GroupName(\"Aa\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(t1.compareTo(t2) \u003e 0);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        VaxType testing \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cVaxType\u003e vaxTypes \u003d permutateVaxType();","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(testing.equals(testing));","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(testing.equals(vaxTypes.get(0)));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 1; i \u003c vaxTypes.size(); i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            assertFalse(testing.equals(vaxTypes.get(i)));","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(testing.equals(Integer.valueOf(0)));","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cVaxType\u003e vaxTypes \u003d permutateVaxType();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cVaxType\u003e vaxTypeSet \u003d new HashSet\u003c\u003e(vaxTypes);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeSet.addAll(vaxTypes);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(vaxTypeSet.size() \u003d\u003d vaxTypes.size());","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003cVaxType\u003e permutateVaxType() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t1 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t2 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t3 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t4 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t5 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t6 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_1,","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t7 \u003d new VaxType(","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1);","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        return List.of(t1, t2, t3, t4, t5, t6, t7);","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"daitenshionyan":138}},{"path":"src/test/java/seedu/vms/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private UserPrefs readUserPrefs(String userPrefsFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e readUserPrefs(\"NonExistentFile.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"    public void saveUserPrefs_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":17,"-":102}},{"path":"src/test/java/seedu/vms/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.storage.appointment.JsonAppointmentStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"slackernoob"},"content":"import seedu.vms.storage.keyword.JsonKeywordStorage;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.patient.JsonPatientManagerStorage;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.JsonVaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        JsonPatientManagerStorage patientManagerStorage \u003d new JsonPatientManagerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        JsonVaxTypeStorage vaxTypeStorage \u003d new JsonVaxTypeStorage();","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        JsonAppointmentStorage appointmentStorage \u003d new JsonAppointmentStorage();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"slackernoob"},"content":"        JsonKeywordStorage keywordStorage \u003d new JsonKeywordStorage();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        storageManager \u003d new StorageManager(patientManagerStorage, vaxTypeStorage,","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"slackernoob"},"content":"                appointmentStorage, userPrefsStorage, keywordStorage);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    public void patientManagerReadSave() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"         * {@link JsonPatientManagerStorage} class.","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPatientManagerStorageTest} class.","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        PatientManager original \u003d getTypicalPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        storageManager.savePatientManager(original);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        ReadOnlyPatientManager retrieved \u003d storageManager.readPatientManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        assertEquals(original, new PatientManager(retrieved));","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public void loadDefaultVaxTypes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        /*","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"         * This is an integration test to verify that VaxTypeManager has been integrated properly.","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"         */","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        Optional\u003cVaxType\u003e data \u003d storageManager","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                .loadDefaultVaxTypes()","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                .get(SampleVaxTypeData.NAME_REAL.getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(data.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":23,"slackernoob":3,"-":46,"francisyzy":10,"nusE0726844":3}},{"path":"src/test/java/seedu/vms/storage/appointment/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.storage.appointment;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.storage.JsonAdaptedGroupName;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"class JsonAdaptedAppointmentTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private final Index patientId \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime startTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    private final LocalDateTime endTime \u003d LocalDateTime.now().plusHours(1);","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    private final GroupName vaccine \u003d new GroupName(\"Test Vaccine\");","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    private final Boolean isCompleted \u003d false;","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    private Appointment appointment;","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    private JsonAdaptedAppointment jsonAdaptedAppointment;","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    void setUp() {","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        appointment \u003d new Appointment(patientId, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(appointment);","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    void toModelType() throws IllegalValueException {","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"        Appointment loadedAppointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getPatient(), loadedAppointment.getPatient());","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getAppointmentTime(), loadedAppointment.getAppointmentTime());","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getAppointmentEndTime(), loadedAppointment.getAppointmentEndTime());","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getVaccination(), loadedAppointment.getVaccination());","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        assertEquals(appointment.getStatus(), loadedAppointment.getStatus());","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        Integer patientId \u003d this.patientId.getOneBased();","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime startTime \u003d this.startTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime endTime \u003d this.endTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        JsonAdaptedGroupName vaccine \u003d new JsonAdaptedGroupName(this.vaccine.getName());","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        Boolean isCompleted \u003d this.isCompleted;","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(null, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAppointment::toModelType);","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(0, startTime, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAppointment::toModelType);","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(patientId, null, endTime, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAppointment::toModelType);","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"        jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(patientId, startTime, null, vaccine, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAppointment::toModelType);","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(patientId, startTime, endTime, null, isCompleted);","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAppointment::toModelType);","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"nusE0726844"},"content":"        jsonAdaptedAppointment \u003d new JsonAdaptedAppointment(patientId, startTime, endTime, vaccine, null);","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(IllegalValueException.class, jsonAdaptedAppointment::toModelType);","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"nusE0726844":68}},{"path":"src/test/java/seedu/vms/storage/appointment/JsonAppointmentStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.storage.appointment;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"class JsonAppointmentStorageTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private static final Path APPOINTMENT_FILEPATH \u003d Paths.get(\"src\", \"test\", \"data\", \"appointment\");","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    private static final Path VALID_APPOINTMENT_FILE \u003d APPOINTMENT_FILEPATH.resolve(\"validAppointmentManager.json\");","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    private static final Path INVALID_APPOINTMENT_FILE \u003d APPOINTMENT_FILEPATH.resolve(\"invalidAppointmentManager.json\");","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    private static final Path INVALID_FILEPATH \u003d APPOINTMENT_FILEPATH.resolve(\"invalidFilepath\");","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    @TempDir","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    public Path testFolder;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"    void loadAppointments() {","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        JsonAppointmentStorage storage;","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        storage \u003d new JsonAppointmentStorage(VALID_APPOINTMENT_FILE);","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        assertDoesNotThrow(storage::loadAppointments);","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"        storage \u003d new JsonAppointmentStorage(INVALID_APPOINTMENT_FILE);","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(IllegalArgumentException.class, storage::loadAppointments);","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        storage \u003d new JsonAppointmentStorage(null);","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(NullPointerException.class, storage::loadAppointments);","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        storage \u003d new JsonAppointmentStorage(INVALID_FILEPATH);","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(FileNotFoundException.class, storage::loadAppointments);","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    void saveAppointments() throws IOException {","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        JsonAppointmentStorage storage \u003d new JsonAppointmentStorage(VALID_APPOINTMENT_FILE);","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"        assertDoesNotThrow(storage::loadAppointments);","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"        JsonAppointmentStorage tempStorage \u003d new JsonAppointmentStorage(testFolder","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"                .resolve(\"testSaveAppointmentManager.json\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        assertDoesNotThrow(() -\u003e tempStorage.saveAppointments(storage.loadAppointments()));","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nusE0726844":50}},{"path":"src/test/java/seedu/vms/storage/appointment/JsonSerializableAppointmentManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.storage.appointment;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"class JsonSerializableAppointmentManagerTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    private static final Path APPOINTMENT_FILEPATH \u003d Paths.get(\"src\", \"test\", \"data\", \"appointment\");","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    private static final Path VALID_APPOINTMENT_FILE \u003d APPOINTMENT_FILEPATH.resolve(\"validAppointmentManager.json\");","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    private static final Path INVALID_APPOINTMENT_FILE \u003d APPOINTMENT_FILEPATH.resolve(\"invalidAppointmentManager.json\");","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"    void toModelType() throws IOException {","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        JsonSerializableAppointmentManager dataFromFile;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"        dataFromFile \u003d JsonUtil.deserializeFromFile(VALID_APPOINTMENT_FILE,","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"                JsonSerializableAppointmentManager.class);","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"        assertDoesNotThrow(dataFromFile::toModelType);","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"        dataFromFile \u003d JsonUtil.deserializeFromFile(INVALID_APPOINTMENT_FILE,","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"                JsonSerializableAppointmentManager.class);","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        assertThrows(IllegalArgumentException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"nusE0726844":32}},{"path":"src/test/java/seedu/vms/storage/patient/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.storage.patient.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonAdaptedGroupName;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    private static final LocalDateTime INVALID_DOB \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_ALLERGY \u003d \"#friend\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    private static final LocalDateTime VALID_DOB \u003d BENSON.getDob().value;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_BLOODTYPE \u003d BENSON.getBloodType().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    private static final List\u003cJsonAdaptedGroupName\u003e VALID_ALLERGIES \u003d BENSON.getAllergy().stream()","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            .map(JsonAdaptedGroupName::fromModelType)","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    private static final List\u003cJsonAdaptedGroupName\u003e VALID_VACCINES \u003d BENSON.getVaccine().stream()","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            .map(JsonAdaptedGroupName::fromModelType)","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_validPatientDetails_returnsPatient() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(BENSON);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        assertEquals(BENSON, patient.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(INVALID_NAME, VALID_PHONE, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(null, VALID_PHONE, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, INVALID_PHONE, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, null, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_invalidDob_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, INVALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d Dob.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_nullDob_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, null, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Dob.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_invalidBloodType_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_DOB, INVALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d BloodType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_nullBloodType_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_DOB, null, VALID_ALLERGIES,","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"                VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BloodType.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_invalidAllergies_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        List\u003cJsonAdaptedGroupName\u003e invalidAllergies \u003d new ArrayList\u003c\u003e(VALID_ALLERGIES);","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        invalidAllergies.add(new JsonAdaptedGroupName(INVALID_ALLERGY));","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"                invalidAllergies, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"daitenshionyan":5,"-":55,"francisyzy":59}},{"path":"src/test/java/seedu/vms/storage/patient/JsonPatientManagerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.HOON;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.IDA;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"public class JsonPatientManagerStorageTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"src/test/data/JsonPatientManagerStorageTest/\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public void readPatientManager_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPatientManager(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private ReadOnlyPatientManager readPatientManager(String filePath) throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        return new JsonPatientManagerStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"                .readPatientManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class,","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e readPatientManager(TEST_DATA_FOLDER + \"NonExistentFile.json\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class,","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e readPatientManager(TEST_DATA_FOLDER + \"notJsonFormatPatientManager.json\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    public void readPatientManager_invalidPatientPatientManager_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        // TODO: Check for proper exception","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class,","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e readPatientManager(TEST_DATA_FOLDER + \"invalidPatientPatientManager.json\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    public void readPatientManager_invalidAndValidPatientPatientManager_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        // TODO: Check for proper exception","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class,","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e readPatientManager(TEST_DATA_FOLDER + \"invalidAndValidPatientPatientManager.json\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    public void readAndSavePatientManager_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPatientManager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        PatientManager original \u003d getTypicalPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        JsonPatientManagerStorage jsonPatientManagerStorage \u003d new JsonPatientManagerStorage(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        jsonPatientManagerStorage.savePatientManager(original);","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        ReadOnlyPatientManager readBack \u003d jsonPatientManagerStorage.readPatientManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        assertEquals(original, new PatientManager(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        original.add(HOON);","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        original.remove(0);","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        jsonPatientManagerStorage.savePatientManager(original);","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        readBack \u003d jsonPatientManagerStorage.readPatientManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        assertEquals(original, new PatientManager(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        original.add(IDA);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        jsonPatientManagerStorage.savePatientManager(original); // file path not specified","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        readBack \u003d jsonPatientManagerStorage.readPatientManager(); // file path not specified","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        assertEquals(original, new PatientManager(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager_nullPatientManager_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePatientManager(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     * Saves {@code patientManager} at the specified {@code filePath}.","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    private void savePatientManager(ReadOnlyPatientManager patientManager, String filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            new JsonPatientManagerStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"                    .savePatientManager(patientManager);","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePatientManager(new PatientManager(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":20,"francisyzy":88}},{"path":"src/test/java/seedu/vms/storage/patient/JsonSerializablePatientManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.patient;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.TypicalPatients;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"public class JsonSerializablePatientManagerTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePatientManagerTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    private static final Path TYPICAL_PATIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatientsPatientManager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    private static final Path INVALID_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatientPatientManager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private static final Path DUPLICATE_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatientPatientManager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_typicalPatientsFile_success() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        JsonSerializablePatientManager dataFromFile \u003d JsonUtil.deserializeFromFile(TYPICAL_PATIENTS_FILE,","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"                JsonSerializablePatientManager.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        PatientManager patientManagerFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        PatientManager typicalPatientsPatientManager \u003d TypicalPatients.getTypicalPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        assertEquals(patientManagerFromFile, typicalPatientsPatientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_invalidPatientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        JsonSerializablePatientManager dataFromFile \u003d JsonUtil.deserializeFromFile(INVALID_PATIENT_FILE,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                JsonSerializablePatientManager.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    public void toModelType_duplicateId_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        JsonSerializablePatientManager dataFromFile \u003d JsonUtil.deserializeFromFile(DUPLICATE_PATIENT_FILE,","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                JsonSerializablePatientManager.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePatientManager.DUPLICATE_ID,","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"daitenshionyan":11,"-":23,"francisyzy":13}},{"path":"src/test/java/seedu/vms/storage/vaccination/VaxTypeLoaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.VaxTestingUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeLoaderTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final String TEST_FOLDER_PATH \u003d \"src/test/data/JsonVaxTypeTest/\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_DEFAULT_VALUES \u003d \"DefaultTypeValues.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private static final GroupName DEFAULT_NAME \u003d new GroupName(\"UNCHI\");","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age UNCHI_MAX_AGE \u003d new Age(100);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_MISSING_NAME \u003d \"MissingName.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_EMPTY_REQ \u003d \"EmptyReqSet.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_MISSING_REQ \u003d \"MissingReqSet.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_MISSING_REQ_TYPE \u003d \"MissingReqType.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_NON_STRING_IN_REQ \u003d \"NonStringInReqSet.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_UNKNOWN_REQ_TYPE \u003d \"UnknownReqType.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_NON_JSON_FORMAT \u003d \"NonJsonFormat.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_VALID_MULTIPLE \u003d \"ValidMultipleTypes.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_EMPTY \u003d \"ZeroTypes.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    private static final String TEST_SAVE_FILE \u003d \"VAX_TYPE_TEST_FILE.json\";","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    @TempDir","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public void load_resource() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d VaxTypeLoader.load();","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        VaxType vaxType \u003d storage.get(SampleVaxTypeData.NAME_REAL.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        VaxTestingUtil.assertVaxType(vaxType,","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL);","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    public void load_fileDefaultValues() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_DEFAULT_VALUES));","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        VaxType vaxType \u003d storage.get(DEFAULT_NAME.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        VaxTestingUtil.assertVaxType(vaxType,","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                DEFAULT_NAME,","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS,","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public void load_multipleTypes() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_VALID_MULTIPLE));","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        VaxType vaxType \u003d storage.get(DEFAULT_NAME.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        VaxTestingUtil.assertVaxType(vaxType,","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                DEFAULT_NAME,","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"                UNCHI_MAX_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS,","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_INGREDIENTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        vaxType \u003d storage.get(SampleVaxTypeData.NAME_REAL.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        VaxTestingUtil.assertVaxType(vaxType,","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.INGREDIENTS_REAL);","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    public void load_emptyList() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_EMPTY));","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(storage.asUnmodifiableObservableMap().isEmpty());","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    void load_fileMissingName_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_MISSING_NAME));","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    void load_emptyReq_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_EMPTY_REQ));","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"    void load_missingReq_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_MISSING_REQ));","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    void load_missingReqType_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_MISSING_REQ_TYPE));","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"    void load_nonStringInReqList_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_NON_STRING_IN_REQ));","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"    void load_unknownReqType_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_UNKNOWN_REQ_TYPE));","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"    void load_nonJsonFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_NON_JSON_FORMAT));","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"    public void write() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"        // empty manager","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        testSaveMethod(new VaxTypeManager());","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        // filled manager","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"        // assuming default loading works","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        testSaveMethod(VaxTypeLoader.load());","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"    private void testSaveMethod(VaxTypeManager manager) throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"        Path saveFile \u003d testFolder.resolve(TEST_SAVE_FILE);","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeLoader.fromModelType(manager).write(saveFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager loaded \u003d VaxTypeLoader.load(saveFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(manager.asUnmodifiableObservableMap(), loaded.asUnmodifiableObservableMap());","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":196}},{"path":"src/test/java/seedu/vms/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"daitenshionyan":1,"-":33}},{"path":"src/test/java/seedu/vms/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private EditPatientDescriptor descriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        descriptor.setDob(patient.getDob());","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        descriptor.setBloodType(patient.getBloodType());","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        descriptor.setAllergies(patient.getAllergy());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        descriptor.setVaccines(patient.getVaccine());","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Dob} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withDob(String dateOfBirth) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        descriptor.setDob(new Dob(dateOfBirth));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code BloodType} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withBloodType(String bloodType) {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        descriptor.setBloodType(new BloodType(bloodType));","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cGroupName\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withAllergies(String... allergies) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e allergySet \u003d Stream.of(allergies).map(GroupName::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        descriptor.setAllergies(allergySet);","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code vaccines} into a {@code Set\u003cGroupName\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     * that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withVaccines(String... vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e vaccineSet \u003d Stream.of(vaccines).map(GroupName::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        descriptor.setVaccines(vaccineSet);","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        return descriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":101}},{"path":"src/test/java/seedu/vms/testutil/FindPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.FindCommand.FindPatientDescriptor;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":" * A utility class to help with building FindPatientDescriptor objects.","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"public class FindPatientDescriptorBuilder {","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    private FindPatientDescriptor descriptor;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder() {","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new FindPatientDescriptor();","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder(FindPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        this.descriptor \u003d new FindPatientDescriptor(descriptor);","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * Returns an {@code FindPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new FindPatientDescriptor();","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        descriptor.setNameSearch(patient.getName().toString());","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        descriptor.setDob(patient.getDob());","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        descriptor.setBloodType(patient.getBloodType());","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        descriptor.setAllergies(patient.getAllergy());","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        descriptor.setVaccines(patient.getVaccine());","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Name} of the {@code FindPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        descriptor.setNameSearch(name);","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Phone} of the {@code FindPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Dob} of the {@code FindPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder withDob(String dateOfBirth) {","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        descriptor.setDob(new Dob(dateOfBirth));","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code BloodType} of the {@code FindPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder withBloodType(String bloodType) {","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        descriptor.setBloodType(new BloodType(bloodType));","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cGroupName\u003e} and set it to the {@code FindPatientDescriptor}","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     * that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder withAllergies(String... allergies) {","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e allergySet \u003d Stream.of(allergies).map(GroupName::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        descriptor.setAllergies(allergySet);","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code vaccines} into a {@code Set\u003cGroupName\u003e} and set it to the {@code FindPatientDescriptor}","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptorBuilder withVaccines(String... vaccines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        Set\u003cGroupName\u003e vaccineSet \u003d Stream.of(vaccines).map(GroupName::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        descriptor.setVaccines(vaccineSet);","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"    public FindPatientDescriptor build() {","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        return descriptor;","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"francisyzy":100}},{"path":"src/test/java/seedu/vms/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public static final String DEFAULT_DOB \u003d \"1998-05-22\";","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public static final String DEFAULT_BLOODTYPE \u003d \"A-\";","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    private Name name;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    private Dob dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    private BloodType bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    private Set\u003cGroupName\u003e allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    private Set\u003cGroupName\u003e vaccines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        dateOfBirth \u003d new Dob(DEFAULT_DOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        bloodType \u003d new BloodType(DEFAULT_BLOODTYPE);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        vaccines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        dateOfBirth \u003d patientToCopy.getDob();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        bloodType \u003d patientToCopy.getBloodType();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        allergies \u003d new HashSet\u003c\u003e(patientToCopy.getAllergy());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        vaccines \u003d new HashSet\u003c\u003e(patientToCopy.getVaccine());","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cAllergy\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withAllergies(String... allergies) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        this.allergies \u003d SampleDataUtil.getAllergySet(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code vaccines} into a {@code Set\u003cVaccine\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withVaccines(String... vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        this.vaccines \u003d SampleDataUtil.getVaccineSet(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code BloodType} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withBloodType(String bloodType) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        this.bloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Dob} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withDob(String dateOfBirth) {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        this.dateOfBirth \u003d new Dob(dateOfBirth);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    public Patient build() {","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        return new Patient(name, phone, dateOfBirth, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":107}},{"path":"src/test/java/seedu/vms/testutil/PatientManagerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" *     {@code PatientManager pm \u003d new PatientManagerBuilder().withPatient(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class PatientManagerBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    private PatientManager patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public PatientManagerBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        patientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public PatientManagerBuilder(PatientManager patientManager) {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        this.patientManager \u003d patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Adds a new {@code Patient} to the {@code PatientManager} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public PatientManagerBuilder withPatient(Patient patient) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        patientManager.add(patient);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public PatientManager build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        return patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"francisyzy":34}},{"path":"src/test/java/seedu/vms/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class PatientUtil {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private static final String PREFIX_BLOODTYPE \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_BLOODTYPE + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private static final String PREFIX_DOB \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_DOB + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PREFIX_NAME \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_NAME + \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PREFIX_PHONE \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_PHONE + \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    private static final String PREFIX_ALLERGY \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_ALLERGY + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    private static final String PREFIX_VACCINATION \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_VACCINATION + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * Returns an add command string for adding the {@code patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        sb.append(PREFIX_DOB + patient.getDob().value + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        sb.append(PREFIX_BLOODTYPE + patient.getBloodType().toString() + \" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        patient.getAllergy().stream().forEach(","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                s -\u003e sb.append(PREFIX_ALLERGY + s.toString() + \" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        patient.getVaccine().stream().forEach(","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"                s -\u003e sb.append(PREFIX_VACCINATION + s.toString() + \" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        descriptor.getDob().ifPresent(dob -\u003e sb.append(PREFIX_DOB).append(dob.value).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        descriptor.getBloodType()","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"                .ifPresent(bloodType -\u003e sb.append(PREFIX_BLOODTYPE).append(bloodType.toString()).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        if (descriptor.getAllergies().isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            Set\u003cGroupName\u003e allergies \u003d descriptor.getAllergies().get();","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            if (allergies.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"                sb.append(PREFIX_ALLERGY);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"                allergies.forEach(s -\u003e sb.append(PREFIX_ALLERGY).append(s.toString()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        if (descriptor.getVaccines().isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"            Set\u003cGroupName\u003e vaccines \u003d descriptor.getVaccines().get();","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            if (vaccines.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"                sb.append(PREFIX_VACCINATION);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"                vaccines.forEach(s -\u003e sb.append(PREFIX_VACCINATION).append(s.toString()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"daitenshionyan":5,"-":23,"francisyzy":45}},{"path":"src/test/java/seedu/vms/testutil/SampleVaxTypeData.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement.RequirementType;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** Utility class to store sample vaccination type data for tests. */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class SampleVaxTypeData {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final GroupName NAME_REAL \u003d new GroupName(\"Dose 1 (Pfizer)\");","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e GROUPS_REAL \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"DOSE 1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"Pfizer\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"Vaccination\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MIN_AGE_REAL \u003d new Age(5);","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MAX_AGE_REAL \u003d Age.MAX_AGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e HISTORY_REQS_REAL \u003d List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(RequirementType.NONE, new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"DOSE 1\")))));","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e INGREDIENTS_REAL \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"ALC-0315\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"ALC-0159\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"DSPC\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Cholesterol\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Sucrose\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Phosphate\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Tromethamine\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Tromethamine hydrochloride\")));","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public static final VaxType TYPE_REAL \u003d new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            NAME_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            GROUPS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            INGREDIENTS_REAL,","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_NAME_REAL \u003d \"Dose 1 (Pfizer)\";","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_GROUPS_REAL \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_VAX_GROUPS.getPrefix() + \" \"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            + \"DOSE 1,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            + \"Pfizer,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            + \"Vaccination\"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            + \" --set true\";","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_MIN_AGE_REAL \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_MIN_AGE.getPrefix() + \" 5\";","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_MAX_AGE_REAL \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_INGREDIENTS_REAL \u003d CliSyntax.DELIMITER","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            + CliSyntax.PREFIX_INGREDIENTS.getPrefix() + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            + \"ALC-0315,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            + \"ALC-0159,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            + \"DSPC,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            + \"Cholesterol,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            + \"Sucrose,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            + \"Phosphate,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            + \"Tromethamine,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            + \"Tromethamine hydrochloride\"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            + \" --set true\";","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_HISTORY_REQS_REAL \u003d CliSyntax.DELIMITER","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            + CliSyntax.PREFIX_HISTORY_REQ.getPrefix()","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            + \" none::DOSE 1 --set true\";","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    public static final GroupName NAME_1 \u003d new GroupName(\"UNCHI\");","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e GROUPS_1 \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MIN_AGE_1 \u003d new Age(35);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MAX_AGE_1 \u003d new Age(45);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e HISTORY_REQS_1 \u003d List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(RequirementType.NONE, new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"UNCHI\")))));","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e INGREDIENTS_1 \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"UNCHI\")));","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    public static final VaxType TYPE_1 \u003d new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            INGREDIENTS_1,","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"            HISTORY_REQS_1);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_NAME_1 \u003d \"UNCHI\";","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_GROUPS_1 \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_VAX_GROUPS.getPrefix()","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            + \" UNCHI --set true\";","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_MIN_AGE_1 \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_MIN_AGE.getPrefix() + \" 35\";","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_MAX_AGE_1 \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_MAX_AGE.getPrefix() + \" 45\";","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_INGREDIENTS_1 \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_INGREDIENTS.getPrefix()","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            + \" UNCHI --set true\";","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    public static final String CMD_HISTORY_REQS_1 \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_HISTORY_REQ.getPrefix()","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            + \" none::UNCHI --set true\";","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"daitenshionyan":79,"francisyzy":11}},{"path":"src/test/java/seedu/vms/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":71}},{"path":"src/test/java/seedu/vms/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.Prefix;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     * Returns the middle index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size() / 2);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * Returns the last index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * Returns the patient in the {@code model}\u0027s patient list at {@code index}.","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    public static Patient getPatient(Model model, Index index) {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        return model.getFilteredPatientList().get(index.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     * Returns a set of {@code GroupName} of the specified size.","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    public static HashSet\u003cGroupName\u003e generateGroupSet(int size) {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e grpSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            grpSet.add(new GroupName(String.valueOf(i)));","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        return grpSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the command String to generate the given group set.","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public static String toCommandString(HashSet\u003cGroupName\u003e groupSet) {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        return groupSet.toString().replaceAll(\"[\\\\[\\\\]]\", \"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * Returns the String[] to generate the given group set.","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public static String[] toStringArr(HashSet\u003cGroupName\u003e groupSet) {","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        return groupSet.stream()","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"                .map(GroupName::toString)","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * Returns the String with prefix to generate a command to test.","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"    public static String toParseStrings(HashSet\u003cGroupName\u003e groupSet, Prefix prefix) {","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        for (GroupName groupName : groupSet) {","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"            sb.append(DELIMITER);","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"            sb.append(prefix.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"            sb.append(\" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            sb.append(groupName.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"            sb.append(\" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":23,"-":44,"francisyzy":35}},{"path":"src/test/java/seedu/vms/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    public static final Index INDEX_FIRST_PATIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    public static final Index INDEX_SECOND_PATIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    public static final Index INDEX_THIRD_PATIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public static final Index INDEX_NINE_NINE_PATIENT \u003d Index.fromOneBased(99);","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"daitenshionyan":2,"-":7,"francisyzy":4}},{"path":"src/test/java/seedu/vms/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"public class TypicalPatients {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public static final Patient ALICE \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"2020-07-09\")","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"A+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            .withAllergies(\"seafood\", \"gluten\")","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public static final Patient BENSON \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"2011-10-11\")","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"A-\")","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            .withAllergies(\"seafood\")","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    public static final Patient CARL \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1999-12-30\")","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"B+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            .withAllergies(\"seafood\", \"gluten\")","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            .withVaccines(\"Moderna\", \"Pfizer\")","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1994-02-27\")","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"B-\")","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            .withAllergies(\"seafood\")","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            .withVaccines(\"Moderna\")","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public static final Patient ELLE \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1989-09-19\")","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"AB+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            .withVaccines(\"Moderna\", \"Pfizer\")","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    public static final Patient FIONA \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1988-04-30\")","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"AB-\")","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"            .withVaccines(\"Moderna\")","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1981-09-20\")","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"O+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    public static final Patient HOON \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1991-02-20\")","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"O-\")","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public static final Patient IDA \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1995-03-23\")","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"A+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    public static final Patient AMY \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"            .withDob(VALID_DOB_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    public static final Patient BOB \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"            .withDob(VALID_DOB_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(VALID_BLOODTYPE_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    private TypicalPatients() {} // prevents instantiation","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"     * Returns an {@code PatientManager} with all the typical patients.","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"    public static PatientManager getTypicalPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"        PatientManager pm \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"            pm.add(patient);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        return pm;","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"daitenshionyan":5,"-":27,"francisyzy":89}},{"path":"src/test/java/seedu/vms/testutil/VaxTestingUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"/** Testing utility class for vaccinations. */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTestingUtil {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * Asserts if the given vaccination type is of the expected state.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the {@code VaxType} to check.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the expected name.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @param groups - the expected groups.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param minAge - the expected min age.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param maxAge - the expected max age.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param historyReqs - the expected history requirements.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param ingredients - the expected ingredients.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public static void assertVaxType(VaxType vaxType,","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            GroupName name, HashSet\u003cGroupName\u003e groups, Age minAge, Age maxAge,","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            List\u003cRequirement\u003e historyReqs, HashSet\u003cGroupName\u003e ingredients) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(name, vaxType.getGroupName(), \"Name\");","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(groups, vaxType.getGroups(), \"Groups\");","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(minAge, vaxType.getMinAge(), \"Min age\");","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(maxAge, vaxType.getMaxAge(), \"Max age\");","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(historyReqs, vaxType.getHistoryReqs(), \"History requirements\");","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(ingredients, vaxType.getIngredients(), \"Ingredients\");","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":37}},{"path":"src/test/java/seedu/vms/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"daitenshionyan":1,"-":34}},{"path":"src/test/java/seedu/vms/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.MainApp;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"daitenshionyan":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import seedu.vms.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"daitenshionyan":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003cfx:root type\u003d\"seedu.vms.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"daitenshionyan":1,"-":5}}]
